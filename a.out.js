// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  Module['arguments'] = process['argv'].slice(2);

  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    code = Pointer_stringify(code);
    if (code[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (code.indexOf('"', 1) === code.length-1) {
        code = code.substr(1, code.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + code + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + code + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;

// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    var i = 3;
    // params, etc.
    var basicTypes = {
      'v': 'void',
      'b': 'bool',
      'c': 'char',
      's': 'short',
      'i': 'int',
      'l': 'long',
      'f': 'float',
      'd': 'double',
      'w': 'wchar_t',
      'a': 'signed char',
      'h': 'unsigned char',
      't': 'unsigned short',
      'j': 'unsigned int',
      'm': 'unsigned long',
      'x': 'long long',
      'y': 'unsigned long long',
      'z': '...'
    };
    function dump(x) {
      //return;
      if (x) Module.print(x);
      Module.print(func);
      var pre = '';
      for (var a = 0; a < i; a++) pre += ' ';
      Module.print (pre + '^');
    }
    var subs = [];
    function parseNested() {
      i++;
      if (func[i] === 'K') i++; // ignore const
      var parts = [];
      while (func[i] !== 'E') {
        if (func[i] === 'S') { // substitution
          i++;
          var next = func.indexOf('_', i);
          var num = func.substring(i, next) || 0;
          parts.push(subs[num] || '?');
          i = next+1;
          continue;
        }
        if (func[i] === 'C') { // constructor
          parts.push(parts[parts.length-1]);
          i += 2;
          continue;
        }
        var size = parseInt(func.substr(i));
        var pre = size.toString().length;
        if (!size || !pre) { i--; break; } // counter i++ below us
        var curr = func.substr(i + pre, size);
        parts.push(curr);
        subs.push(curr);
        i += pre + size;
      }
      i++; // skip E
      return parts;
    }
    var first = true;
    function parse(rawList, limit, allowVoid) { // main parser
      limit = limit || Infinity;
      var ret = '', list = [];
      function flushList() {
        return '(' + list.join(', ') + ')';
      }
      var name;
      if (func[i] === 'N') {
        // namespaced N-E
        name = parseNested().join('::');
        limit--;
        if (limit === 0) return rawList ? [name] : name;
      } else {
        // not namespaced
        if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
        var size = parseInt(func.substr(i));
        if (size) {
          var pre = size.toString().length;
          name = func.substr(i + pre, size);
          i += pre + size;
        }
      }
      first = false;
      if (func[i] === 'I') {
        i++;
        var iList = parse(true);
        var iRet = parse(true, 1, true);
        ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
      } else {
        ret = name;
      }
      paramLoop: while (i < func.length && limit-- > 0) {
        //dump('paramLoop');
        var c = func[i++];
        if (c in basicTypes) {
          list.push(basicTypes[c]);
        } else {
          switch (c) {
            case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
            case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
            case 'L': { // literal
              i++; // skip basic type
              var end = func.indexOf('E', i);
              var size = end - i;
              list.push(func.substr(i, size));
              i += size + 2; // size + 'EE'
              break;
            }
            case 'A': { // array
              var size = parseInt(func.substr(i));
              i += size.toString().length;
              if (func[i] !== '_') throw '?';
              i++; // skip _
              list.push(parse(true, 1, true)[0] + ' [' + size + ']');
              break;
            }
            case 'E': break paramLoop;
            default: ret += '?' + c; break paramLoop;
          }
        }
      }
      if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
      return rawList ? list : ret + flushList();
    }
    return parse();
  } catch(e) {
    return func;
  }
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', or (2) set Module.TOTAL_MEMORY before the program runs.');
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 1192;


/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } });








/* memory initializer */ allocate([0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,1,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,8,64,2,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,3,0,0,0,1,0,0,0,10,0,0,0,0,0,0,0,154,153,153,153,153,153,185,63,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,6,0,0,0,2,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,7,0,0,0,1,0,0,0,10,0,0,0,0,0,0,0,154,153,153,153,153,153,185,63,8,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,154,153,153,153,153,153,201,63,9,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,51,51,51,51,51,51,227,63,10,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,154,153,153,153,153,153,169,63,24,1,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);



var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  var _acos=Math_acos;

  var _fabs=Math_abs;

  var _asin=Math_asin;

  var _atan=Math_atan;

  
   
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  
   
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i64=_memset;

  var _ceil=Math_ceil;

  
   
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  var _sqrt=Math_sqrt;

  var _cos=Math_cos;

  function _cosh(x) {
      var p = Math.pow(Math.E, x);
      return (p + (1 / p)) / 2;
    }

  var _exp=Math_exp;

  var _floor=Math_floor;

  var _sin=Math_sin;

  var _llvm_memset_p0i8_i32=_memset;

  var _log=Math_log;

  function _log10(x) {
      return Math.log(x) / Math.LN10;
    }

  function _sinh(x) {
      var p = Math.pow(Math.E, x);
      return (p - (1 / p)) / 2;
    }

  var _tan=Math_tan;

  function _tanh(x) {
      return _sinh(x) / _cosh(x);
    }

  function _abort() {
      Module['abort']();
    }

  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }function ___errno_location() {
      return ___errno_state;
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }





   
  Module["_strlen"] = _strlen;

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 0777, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 0777 | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = {};
        for (var key in src.files) {
          if (!src.files.hasOwnProperty(key)) continue;
          var e = src.files[key];
          var e2 = dst.files[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create[key] = e;
            total++;
          }
        }
  
        var remove = {};
        for (var key in dst.files) {
          if (!dst.files.hasOwnProperty(key)) continue;
          var e = dst.files[key];
          var e2 = src.files[key];
          if (!e2) {
            remove[key] = e;
            total++;
          }
        }
  
        if (!total) {
          // early out
          return callback(null);
        }
  
        var completed = 0;
        function done(err) {
          if (err) return callback(err);
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        // create a single transaction to handle and IDB reads / writes we'll need to do
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        transaction.onerror = function transaction_onerror() { callback(this.error); };
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        for (var path in create) {
          if (!create.hasOwnProperty(path)) continue;
          var entry = create[path];
  
          if (dst.type === 'local') {
            // save file to local
            try {
              if (FS.isDir(entry.mode)) {
                FS.mkdir(path, entry.mode);
              } else if (FS.isFile(entry.mode)) {
                var stream = FS.open(path, 'w+', 0666);
                FS.write(stream, entry.contents, 0, entry.contents.length, 0, true /* canOwn */);
                FS.close(stream);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // save file to IDB
            var req = store.put(entry, path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
  
        for (var path in remove) {
          if (!remove.hasOwnProperty(path)) continue;
          var entry = remove[path];
  
          if (dst.type === 'local') {
            // delete file from local
            try {
              if (FS.isDir(entry.mode)) {
                // TODO recursive delete?
                FS.rmdir(path);
              } else if (FS.isFile(entry.mode)) {
                FS.unlink(path);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // delete file from IDB
            var req = store.delete(path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
      },getLocalSet:function (mount, callback) {
        var files = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint)
          .filter(isRealDir)
          .map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat, node;
  
          try {
            var lookup = FS.lookupPath(path);
            node = lookup.node;
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path)
              .filter(isRealDir)
              .map(toAbsolute(path)));
  
            files[path] = { mode: stat.mode, timestamp: stat.mtime };
          } else if (FS.isFile(stat.mode)) {
            files[path] = { contents: node.contents, mode: stat.mode, timestamp: stat.mtime };
          } else {
            return callback(new Error('node type not supported'));
          }
        }
  
        return callback(null, { type: 'local', files: files });
      },getDB:function (name, callback) {
        // look it up in the cache
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        req.onupgradeneeded = function req_onupgradeneeded() {
          db = req.result;
          db.createObjectStore(IDBFS.DB_STORE_NAME);
        };
        req.onsuccess = function req_onsuccess() {
          db = req.result;
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function req_onerror() {
          callback(this.error);
        };
      },getRemoteSet:function (mount, callback) {
        var files = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function transaction_onerror() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          store.openCursor().onsuccess = function store_openCursor_onsuccess(event) {
            var cursor = event.target.result;
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, files: files });
            }
  
            files[cursor.key] = cursor.value;
            cursor.continue();
          };
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          stream.position = position;
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[null],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || { recurse_count: 0 };
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            current = current.mount.root;
          }
  
          // follow symlinks
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
            this.parent = null;
            this.mount = null;
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            FS.hashAddNode(this);
          };
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          FS.FSNode.prototype = {};
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
        return new FS.FSNode(parent, name, mode, rdev);
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 1;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var completed = 0;
        var total = FS.mounts.length;
        function done(err) {
          if (err) {
            return callback(err);
          }
          if (++completed >= total) {
            callback(null);
          }
        };
  
        // sync all mounts
        for (var i = 0; i < FS.mounts.length; i++) {
          var mount = FS.mounts[i];
          if (!mount.type.syncfs) {
            done(null);
            continue;
          }
          mount.type.syncfs(mount, populate, done);
        }
      },mount:function (type, opts, mountpoint) {
        var lookup;
        if (mountpoint) {
          lookup = FS.lookupPath(mountpoint, { follow: false });
          mountpoint = lookup.path;  // use the absolute path
        }
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          root: null
        };
        // create a root node for the fs
        var root = type.mount(mount);
        root.mount = mount;
        mount.root = root;
        // assign the mount info to the mountpoint's node
        if (lookup) {
          lookup.node.mount = mount;
          lookup.node.mounted = true;
          // compatibility update FS.root if we mount to /
          if (mountpoint === '/') {
            FS.root = mount.root;
          }
        }
        // add to our cached list of mounts
        FS.mounts.push(mount);
        return root;
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 0666;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 0777;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 0666;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path, { follow: false });
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 0666 : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0);
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=stdin.fd;
        assert(stdin.fd === 1, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=stdout.fd;
        assert(stdout.fd === 2, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=stderr.fd;
        assert(stderr.fd === 3, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.root = FS.createNode(null, '/', 16384 | 0777, 0);
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
  
              if (!hasByteServing) chunkSize = datalength;
  
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
  
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
  
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
  
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
  
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
  
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
  
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
  
  
            var errorInfo = '?';
            function onContextCreationError(event) {
              errorInfo = event.statusMessage || errorInfo;
            }
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
  
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
  
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (scrollX + rect.left);
              y = t.pageY - (scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (scrollX + rect.left);
            y = event.pageY - (scrollY + rect.top);
          }
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + 5242880;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");


var Math_min = Math.min;
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var NaN=+env.NaN;
  var Infinity=+env.Infinity;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var abort=env.abort;
  var assert=env.assert;
  var asmPrintInt=env.asmPrintInt;
  var asmPrintFloat=env.asmPrintFloat;
  var Math_min=env.min;
  var invoke_ii=env.invoke_ii;
  var invoke_v=env.invoke_v;
  var invoke_iii=env.invoke_iii;
  var invoke_vi=env.invoke_vi;
  var _sysconf=env._sysconf;
  var _cosh=env._cosh;
  var _abort=env._abort;
  var _tan=env._tan;
  var _fflush=env._fflush;
  var _asin=env._asin;
  var _log=env._log;
  var _fabs=env._fabs;
  var _floor=env._floor;
  var ___setErrNo=env.___setErrNo;
  var _sqrt=env._sqrt;
  var _log10=env._log10;
  var _sin=env._sin;
  var _atan=env._atan;
  var _ceil=env._ceil;
  var _sinh=env._sinh;
  var _cos=env._cos;
  var _sbrk=env._sbrk;
  var _tanh=env._tanh;
  var ___errno_location=env.___errno_location;
  var _exp=env._exp;
  var _time=env._time;
  var _acos=env._acos;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
STACKTOP = (STACKTOP + 7)&-8;
  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1|0] = HEAP8[ptr+1|0];
  HEAP8[tempDoublePtr+2|0] = HEAP8[ptr+2|0];
  HEAP8[tempDoublePtr+3|0] = HEAP8[ptr+3|0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1|0] = HEAP8[ptr+1|0];
  HEAP8[tempDoublePtr+2|0] = HEAP8[ptr+2|0];
  HEAP8[tempDoublePtr+3|0] = HEAP8[ptr+3|0];
  HEAP8[tempDoublePtr+4|0] = HEAP8[ptr+4|0];
  HEAP8[tempDoublePtr+5|0] = HEAP8[ptr+5|0];
  HEAP8[tempDoublePtr+6|0] = HEAP8[ptr+6|0];
  HEAP8[tempDoublePtr+7|0] = HEAP8[ptr+7|0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}

function setTempRet1(value) {
  value = value|0;
  tempRet1 = value;
}

function setTempRet2(value) {
  value = value|0;
  tempRet2 = value;
}

function setTempRet3(value) {
  value = value|0;
  tempRet3 = value;
}

function setTempRet4(value) {
  value = value|0;
  tempRet4 = value;
}

function setTempRet5(value) {
  value = value|0;
  tempRet5 = value;
}

function setTempRet6(value) {
  value = value|0;
  tempRet6 = value;
}

function setTempRet7(value) {
  value = value|0;
  tempRet7 = value;
}

function setTempRet8(value) {
  value = value|0;
  tempRet8 = value;
}

function setTempRet9(value) {
  value = value|0;
  tempRet9 = value;
}
function runPostSets() {


}

function _TA_ACCBANDS($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInTimePeriod,$outBegIdx,$outNBElement,$outRealUpperBand,$outRealMiddleBand,$outRealLowerBand){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outRealUpperBand=($outRealUpperBand)|0;
 $outRealMiddleBand=($outRealMiddleBand)|0;
 $outRealLowerBand=($outRealLowerBand)|0;
 var $outBegIdxDummy=0,$outNbElementDummy=0,$1=0,$3=0,$4=0,$or_cond10=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInTimePeriod_off=0,$12=0,$_09=0,$14=0,$15=0,$or_cond17=0,$16=0,$or_cond18=0;
 var $18=0,$19=0,$_startIdx=0,$20=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$32=0,$33=0,$34=0,$37=0,$38=0,$j_020=0,$i_019=0,$39=0,$40=.0;
 var $41=0,$42=.0,$43=.0,$44=0,$45=0,$or_cond7=0,$47=.0,$48=.0,$49=.0,$50=.0,$51=.0,$52=0,$53=.0,$54=.0,$55=.0,$56=0,$58=0,$59=.0,$60=0,$62=0;
 var $63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$or_cond12=0,$71=0,$72=0,$73=0,$74=0,$75=0,$or_cond14=0,$78=0,$79=0,$80=0,$81=0,$or_cond16=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $outBegIdxDummy=((sp)|0);
 $outNbElementDummy=(((sp)+(8))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond10=$3|$4;
 if ($or_cond10) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $10=($optInTimePeriod|0)==-2147483648;
 do {
  if ($10) {
   $_09=20;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $12=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_09=$optInTimePeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $14=($outRealUpperBand|0)==0;
 $15=($outRealMiddleBand|0)==0;
 $or_cond17=$14|$15;
 $16=($outRealLowerBand|0)==0;
 $or_cond18=$or_cond17|$16;
 if ($or_cond18) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $18=((_TA_SMA_Lookback($_09))|0);
 $19=($18|0)>($startIdx|0);
 $_startIdx=($19?$18:$startIdx);
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $23=((($endIdx)-($_startIdx))|0);
 $24=((($23)+(1))|0);
 $25=((($24)+($18))|0);
 $26=$25<<3;
 $27=((_malloc($26))|0);
 $28=$27;
 $29=($27|0)==0;
 if ($29) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=3;

  STACKTOP=sp;return (($_0)|0);
 }
 $32=((_malloc($26))|0);
 $33=$32;
 $34=($32|0)==0;
 if ($34) {
  _free($27);
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=3;

  STACKTOP=sp;return (($_0)|0);
 }
 $37=((($_startIdx)-($18))|0);
 $38=($37|0)>($endIdx|0);
 if (!($38)) {
  $i_019=$37;$j_020=0;
  while(1) {


   $39=(($inHigh+($i_019<<3))|0);
   $40=(+(HEAPF64[(($39)>>3)]));
   $41=(($inLow+($i_019<<3))|0);
   $42=(+(HEAPF64[(($41)>>3)]));
   $43=($40)+($42);
   $44=$43>(-1.0e-14);
   $45=$43<(1.0e-14);
   $or_cond7=$44&$45;
   if ($or_cond7) {
    $58=(($28+($j_020<<3))|0);
    HEAPF64[(($58)>>3)]=$40;
    $59=(+(HEAPF64[(($41)>>3)]));
    $60=(($33+($j_020<<3))|0);
    HEAPF64[(($60)>>3)]=$59;
   } else {
    $47=($40)-($42);
    $48=($47)*((4.0));
    $49=($48)/($43);
    $50=($49)+((1.0));
    $51=($40)*($50);
    $52=(($28+($j_020<<3))|0);
    HEAPF64[(($52)>>3)]=$51;
    $53=(+(HEAPF64[(($41)>>3)]));
    $54=((1.0))-($49);
    $55=($53)*($54);
    $56=(($33+($j_020<<3))|0);
    HEAPF64[(($56)>>3)]=$55;
   }
   $62=((($i_019)+(1))|0);
   $63=((($j_020)+(1))|0);
   $64=($i_019|0)<($endIdx|0);
   if ($64) {
    $i_019=$62;$j_020=$63;
   } else {
    break;
   }
  }
 }
 $65=((_TA_SMA($_startIdx,$endIdx,$inClose,$_09,$outBegIdxDummy,$outNbElementDummy,$outRealMiddleBand))|0);
 $66=($65|0)==0;
 $67=((HEAP32[(($outNbElementDummy)>>2)])|0);
 $68=($67|0)==($24|0);
 $or_cond12=$66&$68;
 if (!($or_cond12)) {
  _free($27);
  _free($32);
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=$65;

  STACKTOP=sp;return (($_0)|0);
 }
 $71=((($23)+($18))|0);
 $72=((_TA_SMA(0,$71,$28,$_09,$outBegIdxDummy,$outNbElementDummy,$outRealUpperBand))|0);
 $73=($72|0)==0;
 $74=((HEAP32[(($outNbElementDummy)>>2)])|0);
 $75=($74|0)==($24|0);
 $or_cond14=$73&$75;
 if (!($or_cond14)) {
  _free($27);
  _free($32);
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=$72;

  STACKTOP=sp;return (($_0)|0);
 }
 $78=((_TA_SMA(0,$71,$33,$_09,$outBegIdxDummy,$outNbElementDummy,$outRealLowerBand))|0);
 _free($27);
 _free($32);
 $79=($78|0)==0;
 $80=((HEAP32[(($outNbElementDummy)>>2)])|0);
 $81=($80|0)==($24|0);
 $or_cond16=$79&$81;
 if ($or_cond16) {
  HEAP32[(($outBegIdx)>>2)]=$_startIdx;
  HEAP32[(($outNBElement)>>2)]=$24;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 } else {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=$78;

  STACKTOP=sp;return (($_0)|0);
 }
  return 0;
}


function _TA_ACOS($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(Math_acos($13)));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_AD($startIdx,$endIdx,$inHigh,$inLow,$inClose,$inVolume,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $inVolume=($inVolume)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond7=0,$12=0,$13=0,$14=0,$ad_011=.0,$nbBar_010=0,$currentBar_09=0;
 var $outIdx_08=0,$15=0,$16=.0,$17=0,$18=.0,$19=.0,$20=0,$21=.0,$22=0,$24=.0,$25=.0,$26=.0,$27=.0,$28=0,$29=.0,$30=.0,$31=.0,$ad_1=.0,$33=0,$34=0;
 var $35=0,$36=0,$37=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inVolume|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outReal|0)==0;
 $or_cond7=$10|$or_cond5_not;
 if ($or_cond7) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((($endIdx)-($startIdx))|0);
 $13=((($12)+(1))|0);
 HEAP32[(($outNBElement)>>2)]=$13;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $14=($13|0)==0;
 if ($14) {
  $_0=0;

  return (($_0)|0);
 } else {
  $outIdx_08=0;$currentBar_09=$startIdx;$nbBar_010=$13;$ad_011=0.0;
 }
 while(1) {




  $15=(($inHigh+($currentBar_09<<3))|0);
  $16=(+(HEAPF64[(($15)>>3)]));
  $17=(($inLow+($currentBar_09<<3))|0);
  $18=(+(HEAPF64[(($17)>>3)]));
  $19=($16)-($18);
  $20=(($inClose+($currentBar_09<<3))|0);
  $21=(+(HEAPF64[(($20)>>3)]));
  $22=$19>(0.0);
  if ($22) {
   $24=($21)-($18);
   $25=($16)-($21);
   $26=($24)-($25);
   $27=($26)/($19);
   $28=(($inVolume+($currentBar_09<<3))|0);
   $29=(+(HEAPF64[(($28)>>3)]));
   $30=($27)*($29);
   $31=($ad_011)+($30);
   $ad_1=$31;
  } else {
   $ad_1=$ad_011;
  }

  $33=((($outIdx_08)+(1))|0);
  $34=(($outReal+($outIdx_08<<3))|0);
  HEAPF64[(($34)>>3)]=$ad_1;
  $35=((($currentBar_09)+(1))|0);
  $36=((($nbBar_010)-(1))|0);
  $37=($36|0)==0;
  if ($37) {
   $_0=0;
   break;
  } else {
   $outIdx_08=$33;$currentBar_09=$35;$nbBar_010=$36;$ad_011=$ad_1;
  }
 }

 return (($_0)|0);
}


function _TA_ADD($startIdx,$endIdx,$inReal0,$inReal1,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal0=($inReal0)|0;
 $inReal1=($inReal1)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$or_cond2=0,$9=0,$10=0,$smax=0,$11=0,$i_04=0,$outIdx_03=0,$13=0,$14=.0,$15=0,$16=.0,$17=.0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal0|0)==0;
 $7=($inReal1|0)==0;
 $or_cond1=$6|$7;
 $8=($outReal|0)==0;
 $or_cond2=$or_cond1|$8;
 if ($or_cond2) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($startIdx|0)>($endIdx|0);
 if ($9) {
  $outIdx_0_lcssa=0;
 } else {
  $10=($endIdx|0)>($startIdx|0);
  $smax=($10?$endIdx:$startIdx);
  $11=((($smax)+(1))|0);
  $outIdx_03=0;$i_04=$startIdx;
  while(1) {


   $13=(($inReal0+($i_04<<3))|0);
   $14=(+(HEAPF64[(($13)>>3)]));
   $15=(($inReal1+($i_04<<3))|0);
   $16=(+(HEAPF64[(($15)>>3)]));
   $17=($14)+($16);
   $18=(($outReal+($outIdx_03<<3))|0);
   HEAPF64[(($18)>>3)]=$17;
   $19=((($i_04)+(1))|0);
   $20=((($outIdx_03)+(1))|0);
   $21=($i_04|0)<($endIdx|0);
   if ($21) {
    $outIdx_03=$20;$i_04=$19;
   } else {
    break;
   }
  }
  $22=((($11)-($startIdx))|0);
  $outIdx_0_lcssa=$22;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_ADOSC($startIdx,$endIdx,$inHigh,$inLow,$inClose,$inVolume,$optInFastPeriod,$optInSlowPeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $inVolume=($inVolume)|0;
 $optInFastPeriod=($optInFastPeriod)|0;
 $optInSlowPeriod=($optInSlowPeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond13=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$11=0,$optInFastPeriod_off=0,$13=0,$_011=0,$15=0,$optInSlowPeriod_off=0,$17=0,$_012=0,$19=0;
 var $21=0,$_012__011=0,$22=0,$23=0,$_010=0,$24=0,$27=0,$28=0,$29=.0,$30=.0,$31=.0,$32=0,$33=.0,$34=.0,$35=.0,$36=0,$37=.0,$38=0,$39=.0,$40=.0;
 var $41=0,$42=.0,$43=0,$45=.0,$46=.0,$47=.0,$48=.0,$49=0,$50=.0,$51=.0,$52=.0,$slowEMA_0_ph=.0,$today_020=0,$53=0,$54=0,$smax32=0,$today_0_lcssa=0,$ad_1_lcssa=.0,$fastEMA_0_lcssa=.0,$slowEMA_0_lcssa=.0;
 var $55=0,$56=0,$smax=0,$57=0,$today_024=0,$ad_123=.0,$fastEMA_022=.0,$slowEMA_021=.0,$59=0,$60=.0,$61=0,$62=.0,$63=.0,$64=0,$65=.0,$66=0,$68=.0,$69=.0,$70=.0,$71=.0;
 var $72=0,$73=.0,$74=.0,$75=.0,$ad_2=.0,$77=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=.0,$today_0=0,$83=0,$ad_318=.0,$fastEMA_117=.0,$slowEMA_116=.0,$today_115=0,$outIdx_014=0,$85=0,$86=.0;
 var $87=0,$88=.0,$89=.0,$90=0,$91=.0,$92=0,$94=.0,$95=.0,$96=.0,$97=.0,$98=0,$99=.0,$100=.0,$101=.0,$ad_4=.0,$103=0,$104=.0,$105=.0,$106=.0,$107=.0;
 var $108=.0,$109=.0,$110=.0,$111=0,$112=0,$113=0,$114=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond13=$3|$4;
 if ($or_cond13) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inVolume|0)!=0;
 $or_cond5=$or_cond3&$9;
 if (!($or_cond5)) {
  $_0=2;

  return (($_0)|0);
 }
 $11=($optInFastPeriod|0)==-2147483648;
 do {
  if ($11) {
   $_011=3;
  } else {
   $optInFastPeriod_off=((($optInFastPeriod)-(2))|0);
   $13=($optInFastPeriod_off>>>0)>((99998)>>>0);
   if ($13) {
    $_0=2;
   } else {
    $_011=$optInFastPeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $15=($optInSlowPeriod|0)==-2147483648;
 do {
  if ($15) {
   $_012=10;
  } else {
   $optInSlowPeriod_off=((($optInSlowPeriod)-(2))|0);
   $17=($optInSlowPeriod_off>>>0)>((99998)>>>0);
   if ($17) {
    $_0=2;
   } else {
    $_012=$optInSlowPeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $19=($outReal|0)==0;
 if ($19) {
  $_0=2;

  return (($_0)|0);
 }
 $21=($_011|0)<($_012|0);
 $_012__011=($21?$_012:$_011);
 $22=((_TA_EMA_Lookback($_012__011))|0);
 $23=($22|0)>($startIdx|0);
 $_010=($23?$22:$startIdx);
 $24=($_010|0)>($endIdx|0);
 if ($24) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_010;
 $27=((($_010)-($22))|0);
 $28=((($_011)+(1))|0);
 $29=(+((($28|0))|0));
 $30=((2.0))/($29);
 $31=((1.0))-($30);
 $32=((($_012)+(1))|0);
 $33=(+((($32|0))|0));
 $34=((2.0))/($33);
 $35=((1.0))-($34);
 $36=(($inHigh+($27<<3))|0);
 $37=(+(HEAPF64[(($36)>>3)]));
 $38=(($inLow+($27<<3))|0);
 $39=(+(HEAPF64[(($38)>>3)]));
 $40=($37)-($39);
 $41=(($inClose+($27<<3))|0);
 $42=(+(HEAPF64[(($41)>>3)]));
 $43=$40>(0.0);
 if ($43) {
  $45=($42)-($39);
  $46=($37)-($42);
  $47=($45)-($46);
  $48=($47)/($40);
  $49=(($inVolume+($27<<3))|0);
  $50=(+(HEAPF64[(($49)>>3)]));
  $51=($48)*($50);
  $52=($51)+((0.0));
  $slowEMA_0_ph=$52;
 } else {
  $slowEMA_0_ph=0.0;
 }

 $today_020=((($27)+(1))|0);
 $53=($today_020|0)<($_010|0);
 if ($53) {
  $54=($22|0)>($startIdx|0);
  $slowEMA_021=$slowEMA_0_ph;$fastEMA_022=$slowEMA_0_ph;$ad_123=$slowEMA_0_ph;$today_024=$today_020;
  while(1) {




   $59=(($inHigh+($today_024<<3))|0);
   $60=(+(HEAPF64[(($59)>>3)]));
   $61=(($inLow+($today_024<<3))|0);
   $62=(+(HEAPF64[(($61)>>3)]));
   $63=($60)-($62);
   $64=(($inClose+($today_024<<3))|0);
   $65=(+(HEAPF64[(($64)>>3)]));
   $66=$63>(0.0);
   if ($66) {
    $68=($65)-($62);
    $69=($60)-($65);
    $70=($68)-($69);
    $71=($70)/($63);
    $72=(($inVolume+($today_024<<3))|0);
    $73=(+(HEAPF64[(($72)>>3)]));
    $74=($71)*($73);
    $75=($ad_123)+($74);
    $ad_2=$75;
   } else {
    $ad_2=$ad_123;
   }

   $77=($30)*($ad_2);
   $78=($31)*($fastEMA_022);
   $79=($78)+($77);
   $80=($34)*($ad_2);
   $81=($35)*($slowEMA_021);
   $82=($81)+($80);
   $today_0=((($today_024)+(1))|0);
   $83=($today_0|0)<($_010|0);
   if ($83) {
    $slowEMA_021=$82;$fastEMA_022=$79;$ad_123=$ad_2;$today_024=$today_0;
   } else {
    break;
   }
  }
  $smax32=($54?$22:$startIdx);
  $slowEMA_0_lcssa=$82;$fastEMA_0_lcssa=$79;$ad_1_lcssa=$ad_2;$today_0_lcssa=$smax32;
 } else {
  $slowEMA_0_lcssa=$slowEMA_0_ph;$fastEMA_0_lcssa=$slowEMA_0_ph;$ad_1_lcssa=$slowEMA_0_ph;$today_0_lcssa=$today_020;
 }




 $55=($today_0_lcssa|0)>($endIdx|0);
 if ($55) {
  $outIdx_0_lcssa=0;
 } else {
  $56=($today_0_lcssa|0)>($endIdx|0);
  $smax=($56?$today_0_lcssa:$endIdx);
  $57=((($smax)+(1))|0);
  $outIdx_014=0;$today_115=$today_0_lcssa;$slowEMA_116=$slowEMA_0_lcssa;$fastEMA_117=$fastEMA_0_lcssa;$ad_318=$ad_1_lcssa;
  while(1) {





   $85=(($inHigh+($today_115<<3))|0);
   $86=(+(HEAPF64[(($85)>>3)]));
   $87=(($inLow+($today_115<<3))|0);
   $88=(+(HEAPF64[(($87)>>3)]));
   $89=($86)-($88);
   $90=(($inClose+($today_115<<3))|0);
   $91=(+(HEAPF64[(($90)>>3)]));
   $92=$89>(0.0);
   if ($92) {
    $94=($91)-($88);
    $95=($86)-($91);
    $96=($94)-($95);
    $97=($96)/($89);
    $98=(($inVolume+($today_115<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=($97)*($99);
    $101=($ad_318)+($100);
    $ad_4=$101;
   } else {
    $ad_4=$ad_318;
   }

   $103=((($today_115)+(1))|0);
   $104=($30)*($ad_4);
   $105=($31)*($fastEMA_117);
   $106=($105)+($104);
   $107=($34)*($ad_4);
   $108=($35)*($slowEMA_116);
   $109=($108)+($107);
   $110=($106)-($109);
   $111=((($outIdx_014)+(1))|0);
   $112=(($outReal+($outIdx_014<<3))|0);
   HEAPF64[(($112)>>3)]=$110;
   $113=($today_115|0)<($endIdx|0);
   if ($113) {
    $outIdx_014=$111;$today_115=$103;$slowEMA_116=$109;$fastEMA_117=$106;$ad_318=$ad_4;
   } else {
    break;
   }
  }
  $114=((($57)-($today_0_lcssa))|0);
  $outIdx_0_lcssa=$114;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_ADX_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=$_0<<1;
 $6=((HEAP32[((272)>>2)])|0);
 $7=(($6+60)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((($5)-(1))|0);
 $10=((($9)+($8))|0);
 $_02=$10;

 return (($_02)|0);
}


function _TA_ADX($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond20=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInTimePeriod_off=0,$12=0,$_019=0,$14=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0;
 var $22=0,$_startIdx=0,$23=0,$26=0,$27=0,$28=.0,$29=0,$30=.0,$31=0,$prevClose_0_in104=0,$prevClose_0105=.0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$smax=0,$39=0;
 var $prevClose_0_lcssa=.0,$prevTR_0_lcssa=.0,$prevPlusDM_0_lcssa=.0,$prevMinusDM_0_lcssa=.0,$prevLow_0_lcssa=.0,$prevHigh_0_lcssa=.0,$today_0_lcssa=0,$40=0,$41=.0,$43=0,$prevClose_0112=.0,$prevTR_0111=.0,$prevPlusDM_0110=.0,$prevMinusDM_0109=.0,$prevLow_0108=.0,$prevHigh_0107=.0,$today_0106=0,$44=0,$45=0,$46=.0;
 var $47=.0,$48=0,$49=.0,$50=.0,$51=0,$52=0,$or_cond21=0,$54=.0,$56=0,$57=0,$or_cond22=0,$59=.0,$prevMinusDM_1=.0,$prevPlusDM_1=.0,$61=.0,$62=.0,$63=.0,$64=0,$tempReal_0=.0,$65=.0;
 var $66=.0,$67=0,$tempReal_1=.0,$68=.0,$prevClose_0_in=0,$prevClose_0=.0,$69=0,$70=0,$_in175=0,$prevTR_194=.0,$prevPlusDM_293=.0,$prevMinusDM_292=.0,$prevClose_191=.0,$prevLow_190=.0,$prevHigh_189=.0,$today_188=0,$72=0,$73=0,$74=0,$75=.0;
 var $76=.0,$77=0,$78=.0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=0,$85=0,$or_cond23=0,$87=.0,$89=0,$90=0,$or_cond24=0,$92=.0,$prevMinusDM_3=.0,$prevPlusDM_3=.0,$94=.0,$95=.0;
 var $96=.0,$97=0,$tempReal_2=.0,$98=.0,$99=.0,$100=0,$tempReal_3=.0,$101=.0,$102=.0,$103=.0,$104=0,$105=.0,$106=0,$107=0,$or_cond7=0,$109=.0,$110=.0,$111=.0,$112=.0,$113=.0;
 var $114=0,$115=0,$or_cond9=0,$116=0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$122=0,$_in174=0,$sumDX_0_ph164=.0,$prevTR_1_ph163=.0,$prevPlusDM_2_ph162=.0,$prevMinusDM_2_ph161=.0,$prevClose_1_ph160=.0,$prevLow_1_ph159=.0,$prevHigh_1_ph158=.0,$today_1_ph157=0,$sumDX_0_ph156=.0;
 var $prevTR_1_lcssa=.0,$prevPlusDM_2_lcssa=.0,$prevMinusDM_2_lcssa=.0,$prevClose_1_lcssa=.0,$prevLow_1_lcssa=.0,$prevHigh_1_lcssa=.0,$today_1_lcssa=0,$123=.0,$124=.0,$125=0,$126=0,$127=0,$128=0,$129=.0,$_in=0,$prevADX_0_ph138=.0,$prevTR_2_ph137=.0,$prevPlusDM_4_ph136=.0,$prevMinusDM_4_ph135=.0,$prevClose_2_ph134=.0;
 var $prevLow_2_ph133=.0,$prevHigh_2_ph132=.0,$today_2_ph131=0,$_in173=0,$prevTR_259=.0,$prevPlusDM_458=.0,$prevMinusDM_457=.0,$prevClose_256=.0,$prevLow_255=.0,$prevHigh_254=.0,$today_253=0,$131=0,$132=0,$133=0,$134=.0,$135=.0,$136=0,$137=.0,$138=.0,$139=.0;
 var $140=.0,$141=.0,$142=.0,$143=0,$144=0,$or_cond25=0,$146=.0,$148=0,$149=0,$or_cond26=0,$151=.0,$prevMinusDM_5=.0,$prevPlusDM_5=.0,$153=.0,$154=.0,$155=.0,$156=0,$tempReal_4=.0,$157=.0,$158=.0;
 var $159=0,$tempReal_5=.0,$160=.0,$161=.0,$162=.0,$163=0,$164=.0,$165=0,$166=0,$or_cond11=0,$168=.0,$169=.0,$170=.0,$171=.0,$172=.0,$173=0,$174=0,$or_cond13=0,$175=0,$176=.0;
 var $177=.0,$178=.0,$179=.0,$180=.0,$181=.0,$182=.0,$183=0,$prevADX_0_ph130=.0,$prevTR_2_lcssa=.0,$prevPlusDM_4_lcssa=.0,$prevMinusDM_4_lcssa=.0,$prevClose_2_lcssa=.0,$prevLow_2_lcssa=.0,$prevHigh_2_lcssa=.0,$today_2_lcssa=0,$184=0,$185=.0,$186=0,$prevADX_137=.0,$prevTR_336=.0;
 var $prevPlusDM_635=.0,$prevMinusDM_634=.0,$prevClose_333=.0,$prevLow_332=.0,$prevHigh_331=.0,$outIdx_030=0,$today_329=0,$188=0,$189=0,$190=.0,$191=.0,$192=0,$193=.0,$194=.0,$195=.0,$196=.0,$197=.0,$198=.0,$199=0,$200=0;
 var $or_cond27=0,$202=.0,$204=0,$205=0,$or_cond28=0,$207=.0,$prevMinusDM_7=.0,$prevPlusDM_7=.0,$209=.0,$210=.0,$211=.0,$212=0,$tempReal_6=.0,$213=.0,$214=.0,$215=0,$tempReal_7=.0,$216=.0,$217=.0,$218=.0;
 var $219=0,$220=.0,$221=0,$222=0,$or_cond15=0,$224=.0,$225=.0,$226=.0,$227=.0,$228=.0,$229=0,$230=0,$or_cond17=0,$232=.0,$233=.0,$234=.0,$235=.0,$236=.0,$237=.0,$238=.0;
 var $prevADX_2=.0,$240=0,$241=0,$242=0,$243=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond20=$3|$4;
 if ($or_cond20) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  return (($_0)|0);
 }
 $10=($optInTimePeriod|0)==-2147483648;
 do {
  if ($10) {
   $_019=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $12=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_019=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $14=($outReal|0)==0;
 if ($14) {
  $_0=2;

  return (($_0)|0);
 }
 $16=$_019<<1;
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+60)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($16)-(1))|0);
 $21=((($20)+($19))|0);
 $22=($21|0)>($startIdx|0);
 $_startIdx=($22?$21:$startIdx);
 $23=($_startIdx|0)>($endIdx|0);
 if ($23) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $26=((($_startIdx)-($21))|0);
 $27=(($inHigh+($26<<3))|0);
 $28=(+(HEAPF64[(($27)>>3)]));
 $29=(($inLow+($26<<3))|0);
 $30=(+(HEAPF64[(($29)>>3)]));
 $31=((($_019)-(1))|0);
 $prevClose_0_in104=(($inClose+($26<<3))|0);
 $prevClose_0105=(+(HEAPF64[(($prevClose_0_in104)>>3)]));
 $32=($31|0)>0;
 if ($32) {
  $33=((($_019)-(2))|0);
  $34=$_019<<1;
  $35=((($19)+($34))|0);
  $36=((($35)-(1))|0);
  $37=($36|0)<($startIdx|0);
  $38=((($_019)+($19))|0);
  $today_0106=$26;$prevHigh_0107=$28;$prevLow_0108=$30;$prevMinusDM_0109=0.0;$prevPlusDM_0110=0.0;$prevTR_0111=0.0;$prevClose_0112=$prevClose_0105;$43=$33;
  while(1) {








   $44=((($today_0106)+(1))|0);
   $45=(($inHigh+($44<<3))|0);
   $46=(+(HEAPF64[(($45)>>3)]));
   $47=($46)-($prevHigh_0107);
   $48=(($inLow+($44<<3))|0);
   $49=(+(HEAPF64[(($48)>>3)]));
   $50=($prevLow_0108)-($49);
   $51=$50>(0.0);
   $52=$47<$50;
   $or_cond21=$51&$52;
   do {
    if ($or_cond21) {
     $54=($prevMinusDM_0109)+($50);
     $prevPlusDM_1=$prevPlusDM_0110;$prevMinusDM_1=$54;
    } else {
     $56=$47>(0.0);
     $57=$47>$50;
     $or_cond22=$56&$57;
     if (!($or_cond22)) {
      $prevPlusDM_1=$prevPlusDM_0110;$prevMinusDM_1=$prevMinusDM_0109;
      break;
     }
     $59=($prevPlusDM_0110)+($47);
     $prevPlusDM_1=$59;$prevMinusDM_1=$prevMinusDM_0109;
    }
   } while(0);


   $61=($46)-($49);
   $62=($46)-($prevClose_0112);
   $63=(+(Math_abs((+($62)))));
   $64=$63>$61;
   $tempReal_0=($64?$63:$61);
   $65=($49)-($prevClose_0112);
   $66=(+(Math_abs((+($65)))));
   $67=$66>$tempReal_0;
   $tempReal_1=($67?$66:$tempReal_0);
   $68=($prevTR_0111)+($tempReal_1);
   $prevClose_0_in=(($inClose+($44<<3))|0);
   $prevClose_0=(+(HEAPF64[(($prevClose_0_in)>>3)]));
   $69=((($43)-(1))|0);
   $70=($43|0)>0;
   if ($70) {
    $today_0106=$44;$prevHigh_0107=$46;$prevLow_0108=$49;$prevMinusDM_0109=$prevMinusDM_1;$prevPlusDM_0110=$prevPlusDM_1;$prevTR_0111=$68;$prevClose_0112=$prevClose_0;$43=$69;
   } else {
    break;
   }
  }
  $smax=($37?$startIdx:$36);
  $39=((($smax)-($38))|0);
  $today_0_lcssa=$39;$prevHigh_0_lcssa=$46;$prevLow_0_lcssa=$49;$prevMinusDM_0_lcssa=$prevMinusDM_1;$prevPlusDM_0_lcssa=$prevPlusDM_1;$prevTR_0_lcssa=$68;$prevClose_0_lcssa=$prevClose_0;
 } else {
  $today_0_lcssa=$26;$prevHigh_0_lcssa=$28;$prevLow_0_lcssa=$30;$prevMinusDM_0_lcssa=0.0;$prevPlusDM_0_lcssa=0.0;$prevTR_0_lcssa=0.0;$prevClose_0_lcssa=$prevClose_0105;
 }







 $40=($_019|0)>0;
 L32: do {
  if ($40) {
   $41=(+((($_019|0))|0));
   $today_1_ph157=$today_0_lcssa;$prevHigh_1_ph158=$prevHigh_0_lcssa;$prevLow_1_ph159=$prevLow_0_lcssa;$prevClose_1_ph160=$prevClose_0_lcssa;$prevMinusDM_2_ph161=$prevMinusDM_0_lcssa;$prevPlusDM_2_ph162=$prevPlusDM_0_lcssa;$prevTR_1_ph163=$prevTR_0_lcssa;$sumDX_0_ph164=0.0;$_in174=$_019;
   while(1) {









    $today_188=$today_1_ph157;$prevHigh_189=$prevHigh_1_ph158;$prevLow_190=$prevLow_1_ph159;$prevClose_191=$prevClose_1_ph160;$prevMinusDM_292=$prevMinusDM_2_ph161;$prevPlusDM_293=$prevPlusDM_2_ph162;$prevTR_194=$prevTR_1_ph163;$_in175=$_in174;
    while(1) {








     $72=((($_in175)-(1))|0);
     $73=((($today_188)+(1))|0);
     $74=(($inHigh+($73<<3))|0);
     $75=(+(HEAPF64[(($74)>>3)]));
     $76=($75)-($prevHigh_189);
     $77=(($inLow+($73<<3))|0);
     $78=(+(HEAPF64[(($77)>>3)]));
     $79=($prevLow_190)-($78);
     $80=($prevMinusDM_292)/($41);
     $81=($prevMinusDM_292)-($80);
     $82=($prevPlusDM_293)/($41);
     $83=($prevPlusDM_293)-($82);
     $84=$79>(0.0);
     $85=$76<$79;
     $or_cond23=$84&$85;
     do {
      if ($or_cond23) {
       $87=($79)+($81);
       $prevPlusDM_3=$83;$prevMinusDM_3=$87;
      } else {
       $89=$76>(0.0);
       $90=$76>$79;
       $or_cond24=$89&$90;
       if (!($or_cond24)) {
        $prevPlusDM_3=$83;$prevMinusDM_3=$81;
        break;
       }
       $92=($76)+($83);
       $prevPlusDM_3=$92;$prevMinusDM_3=$81;
      }
     } while(0);


     $94=($75)-($78);
     $95=($75)-($prevClose_191);
     $96=(+(Math_abs((+($95)))));
     $97=$96>$94;
     $tempReal_2=($97?$96:$94);
     $98=($78)-($prevClose_191);
     $99=(+(Math_abs((+($98)))));
     $100=$99>$tempReal_2;
     $tempReal_3=($100?$99:$tempReal_2);
     $101=($prevTR_194)/($41);
     $102=($prevTR_194)-($101);
     $103=($102)+($tempReal_3);
     $104=(($inClose+($73<<3))|0);
     $105=(+(HEAPF64[(($104)>>3)]));
     $106=$103>(-1.0e-14);
     $107=$103<(1.0e-14);
     $or_cond7=$106&$107;
     if (!($or_cond7)) {
      $109=($prevMinusDM_3)/($103);
      $110=($109)*((100.0));
      $111=($prevPlusDM_3)/($103);
      $112=($111)*((100.0));
      $113=($110)+($112);
      $114=$113>(-1.0e-14);
      $115=$113<(1.0e-14);
      $or_cond9=$114&$115;
      if (!($or_cond9)) {
       break;
      }
     }
     $116=($72|0)>0;
     if ($116) {
      $today_188=$73;$prevHigh_189=$75;$prevLow_190=$78;$prevClose_191=$105;$prevMinusDM_292=$prevMinusDM_3;$prevPlusDM_293=$prevPlusDM_3;$prevTR_194=$103;$_in175=$72;
     } else {
      $today_1_lcssa=$73;$prevHigh_1_lcssa=$75;$prevLow_1_lcssa=$78;$prevClose_1_lcssa=$105;$prevMinusDM_2_lcssa=$prevMinusDM_3;$prevPlusDM_2_lcssa=$prevPlusDM_3;$prevTR_1_lcssa=$103;$sumDX_0_ph156=$sumDX_0_ph164;
      break L32;
     }
    }
    $117=($110)-($112);
    $118=(+(Math_abs((+($117)))));
    $119=($118)/($113);
    $120=($119)*((100.0));
    $121=($sumDX_0_ph164)+($120);
    $122=($72|0)>0;
    if ($122) {
     $today_1_ph157=$73;$prevHigh_1_ph158=$75;$prevLow_1_ph159=$78;$prevClose_1_ph160=$105;$prevMinusDM_2_ph161=$prevMinusDM_3;$prevPlusDM_2_ph162=$prevPlusDM_3;$prevTR_1_ph163=$103;$sumDX_0_ph164=$121;$_in174=$72;
    } else {
     $today_1_lcssa=$73;$prevHigh_1_lcssa=$75;$prevLow_1_lcssa=$78;$prevClose_1_lcssa=$105;$prevMinusDM_2_lcssa=$prevMinusDM_3;$prevPlusDM_2_lcssa=$prevPlusDM_3;$prevTR_1_lcssa=$103;$sumDX_0_ph156=$121;
     break;
    }
   }
  } else {
   $today_1_lcssa=$today_0_lcssa;$prevHigh_1_lcssa=$prevHigh_0_lcssa;$prevLow_1_lcssa=$prevLow_0_lcssa;$prevClose_1_lcssa=$prevClose_0_lcssa;$prevMinusDM_2_lcssa=$prevMinusDM_0_lcssa;$prevPlusDM_2_lcssa=$prevPlusDM_0_lcssa;$prevTR_1_lcssa=$prevTR_0_lcssa;$sumDX_0_ph156=0.0;
  }
 } while(0);








 $123=(+((($_019|0))|0));
 $124=($sumDX_0_ph156)/($123);
 $125=((HEAP32[((272)>>2)])|0);
 $126=(($125+60)|0);
 $127=((HEAP32[(($126)>>2)])|0);
 $128=($127|0)>0;
 L48: do {
  if ($128) {
   $129=(+((($31|0))|0));
   $today_2_ph131=$today_1_lcssa;$prevHigh_2_ph132=$prevHigh_1_lcssa;$prevLow_2_ph133=$prevLow_1_lcssa;$prevClose_2_ph134=$prevClose_1_lcssa;$prevMinusDM_4_ph135=$prevMinusDM_2_lcssa;$prevPlusDM_4_ph136=$prevPlusDM_2_lcssa;$prevTR_2_ph137=$prevTR_1_lcssa;$prevADX_0_ph138=$124;$_in=$127;
   while(1) {









    $today_253=$today_2_ph131;$prevHigh_254=$prevHigh_2_ph132;$prevLow_255=$prevLow_2_ph133;$prevClose_256=$prevClose_2_ph134;$prevMinusDM_457=$prevMinusDM_4_ph135;$prevPlusDM_458=$prevPlusDM_4_ph136;$prevTR_259=$prevTR_2_ph137;$_in173=$_in;
    while(1) {








     $131=((($_in173)-(1))|0);
     $132=((($today_253)+(1))|0);
     $133=(($inHigh+($132<<3))|0);
     $134=(+(HEAPF64[(($133)>>3)]));
     $135=($134)-($prevHigh_254);
     $136=(($inLow+($132<<3))|0);
     $137=(+(HEAPF64[(($136)>>3)]));
     $138=($prevLow_255)-($137);
     $139=($prevMinusDM_457)/($123);
     $140=($prevMinusDM_457)-($139);
     $141=($prevPlusDM_458)/($123);
     $142=($prevPlusDM_458)-($141);
     $143=$138>(0.0);
     $144=$135<$138;
     $or_cond25=$143&$144;
     do {
      if ($or_cond25) {
       $146=($138)+($140);
       $prevPlusDM_5=$142;$prevMinusDM_5=$146;
      } else {
       $148=$135>(0.0);
       $149=$135>$138;
       $or_cond26=$148&$149;
       if (!($or_cond26)) {
        $prevPlusDM_5=$142;$prevMinusDM_5=$140;
        break;
       }
       $151=($135)+($142);
       $prevPlusDM_5=$151;$prevMinusDM_5=$140;
      }
     } while(0);


     $153=($134)-($137);
     $154=($134)-($prevClose_256);
     $155=(+(Math_abs((+($154)))));
     $156=$155>$153;
     $tempReal_4=($156?$155:$153);
     $157=($137)-($prevClose_256);
     $158=(+(Math_abs((+($157)))));
     $159=$158>$tempReal_4;
     $tempReal_5=($159?$158:$tempReal_4);
     $160=($prevTR_259)/($123);
     $161=($prevTR_259)-($160);
     $162=($161)+($tempReal_5);
     $163=(($inClose+($132<<3))|0);
     $164=(+(HEAPF64[(($163)>>3)]));
     $165=$162>(-1.0e-14);
     $166=$162<(1.0e-14);
     $or_cond11=$165&$166;
     if (!($or_cond11)) {
      $168=($prevMinusDM_5)/($162);
      $169=($168)*((100.0));
      $170=($prevPlusDM_5)/($162);
      $171=($170)*((100.0));
      $172=($169)+($171);
      $173=$172>(-1.0e-14);
      $174=$172<(1.0e-14);
      $or_cond13=$173&$174;
      if (!($or_cond13)) {
       break;
      }
     }
     $175=($131|0)>0;
     if ($175) {
      $today_253=$132;$prevHigh_254=$134;$prevLow_255=$137;$prevClose_256=$164;$prevMinusDM_457=$prevMinusDM_5;$prevPlusDM_458=$prevPlusDM_5;$prevTR_259=$162;$_in173=$131;
     } else {
      $today_2_lcssa=$132;$prevHigh_2_lcssa=$134;$prevLow_2_lcssa=$137;$prevClose_2_lcssa=$164;$prevMinusDM_4_lcssa=$prevMinusDM_5;$prevPlusDM_4_lcssa=$prevPlusDM_5;$prevTR_2_lcssa=$162;$prevADX_0_ph130=$prevADX_0_ph138;
      break L48;
     }
    }
    $176=($169)-($171);
    $177=(+(Math_abs((+($176)))));
    $178=($177)/($172);
    $179=($178)*((100.0));
    $180=($129)*($prevADX_0_ph138);
    $181=($180)+($179);
    $182=($181)/($123);
    $183=($131|0)>0;
    if ($183) {
     $today_2_ph131=$132;$prevHigh_2_ph132=$134;$prevLow_2_ph133=$137;$prevClose_2_ph134=$164;$prevMinusDM_4_ph135=$prevMinusDM_5;$prevPlusDM_4_ph136=$prevPlusDM_5;$prevTR_2_ph137=$162;$prevADX_0_ph138=$182;$_in=$131;
    } else {
     $today_2_lcssa=$132;$prevHigh_2_lcssa=$134;$prevLow_2_lcssa=$137;$prevClose_2_lcssa=$164;$prevMinusDM_4_lcssa=$prevMinusDM_5;$prevPlusDM_4_lcssa=$prevPlusDM_5;$prevTR_2_lcssa=$162;$prevADX_0_ph130=$182;
     break;
    }
   }
  } else {
   $today_2_lcssa=$today_1_lcssa;$prevHigh_2_lcssa=$prevHigh_1_lcssa;$prevLow_2_lcssa=$prevLow_1_lcssa;$prevClose_2_lcssa=$prevClose_1_lcssa;$prevMinusDM_4_lcssa=$prevMinusDM_2_lcssa;$prevPlusDM_4_lcssa=$prevPlusDM_2_lcssa;$prevTR_2_lcssa=$prevTR_1_lcssa;$prevADX_0_ph130=$124;
  }
 } while(0);








 HEAPF64[(($outReal)>>3)]=$prevADX_0_ph130;
 $184=($today_2_lcssa|0)<($endIdx|0);
 if ($184) {
  $185=(+((($31|0))|0));
  $186=((($endIdx)+(1))|0);
  $today_329=$today_2_lcssa;$outIdx_030=1;$prevHigh_331=$prevHigh_2_lcssa;$prevLow_332=$prevLow_2_lcssa;$prevClose_333=$prevClose_2_lcssa;$prevMinusDM_634=$prevMinusDM_4_lcssa;$prevPlusDM_635=$prevPlusDM_4_lcssa;$prevTR_336=$prevTR_2_lcssa;$prevADX_137=$prevADX_0_ph130;
  while(1) {









   $188=((($today_329)+(1))|0);
   $189=(($inHigh+($188<<3))|0);
   $190=(+(HEAPF64[(($189)>>3)]));
   $191=($190)-($prevHigh_331);
   $192=(($inLow+($188<<3))|0);
   $193=(+(HEAPF64[(($192)>>3)]));
   $194=($prevLow_332)-($193);
   $195=($prevMinusDM_634)/($123);
   $196=($prevMinusDM_634)-($195);
   $197=($prevPlusDM_635)/($123);
   $198=($prevPlusDM_635)-($197);
   $199=$194>(0.0);
   $200=$191<$194;
   $or_cond27=$199&$200;
   do {
    if ($or_cond27) {
     $202=($194)+($196);
     $prevPlusDM_7=$198;$prevMinusDM_7=$202;
    } else {
     $204=$191>(0.0);
     $205=$191>$194;
     $or_cond28=$204&$205;
     if (!($or_cond28)) {
      $prevPlusDM_7=$198;$prevMinusDM_7=$196;
      break;
     }
     $207=($191)+($198);
     $prevPlusDM_7=$207;$prevMinusDM_7=$196;
    }
   } while(0);


   $209=($190)-($193);
   $210=($190)-($prevClose_333);
   $211=(+(Math_abs((+($210)))));
   $212=$211>$209;
   $tempReal_6=($212?$211:$209);
   $213=($193)-($prevClose_333);
   $214=(+(Math_abs((+($213)))));
   $215=$214>$tempReal_6;
   $tempReal_7=($215?$214:$tempReal_6);
   $216=($prevTR_336)/($123);
   $217=($prevTR_336)-($216);
   $218=($217)+($tempReal_7);
   $219=(($inClose+($188<<3))|0);
   $220=(+(HEAPF64[(($219)>>3)]));
   $221=$218>(-1.0e-14);
   $222=$218<(1.0e-14);
   $or_cond15=$221&$222;
   do {
    if ($or_cond15) {
     $prevADX_2=$prevADX_137;
    } else {
     $224=($prevMinusDM_7)/($218);
     $225=($224)*((100.0));
     $226=($prevPlusDM_7)/($218);
     $227=($226)*((100.0));
     $228=($225)+($227);
     $229=$228>(-1.0e-14);
     $230=$228<(1.0e-14);
     $or_cond17=$229&$230;
     if ($or_cond17) {
      $prevADX_2=$prevADX_137;
      break;
     }
     $232=($225)-($227);
     $233=(+(Math_abs((+($232)))));
     $234=($233)/($228);
     $235=($234)*((100.0));
     $236=($185)*($prevADX_137);
     $237=($236)+($235);
     $238=($237)/($123);
     $prevADX_2=$238;
    }
   } while(0);

   $240=((($outIdx_030)+(1))|0);
   $241=(($outReal+($outIdx_030<<3))|0);
   HEAPF64[(($241)>>3)]=$prevADX_2;
   $242=($188|0)<($endIdx|0);
   if ($242) {
    $today_329=$188;$outIdx_030=$240;$prevHigh_331=$190;$prevLow_332=$193;$prevClose_333=$220;$prevMinusDM_634=$prevMinusDM_7;$prevPlusDM_635=$prevPlusDM_7;$prevTR_336=$218;$prevADX_137=$prevADX_2;
   } else {
    break;
   }
  }
  $243=((($186)-($today_2_lcssa))|0);
  $outIdx_0_lcssa=$243;
 } else {
  $outIdx_0_lcssa=1;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_ADXR_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$5=0,$_03=0,$6=0,$7=0,$8=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_03=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;

    return (($_02)|0);
   }
   $5=($optInTimePeriod|0)>1;
   if ($5) {
    $_03=$optInTimePeriod;
    break;
   } else {
    $_02=3;
   }

   return (($_02)|0);
  }
 } while(0);

 $6=((_TA_ADX_Lookback($_03))|0);
 $7=((($_03)-(1))|0);
 $8=((($7)+($6))|0);
 $_02=$8;

 return (($_02)|0);
}


function _TA_ADXR($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInTimePeriod_off=0,$12=0,$_07=0,$14=0,$16=0,$17=0,$_startIdx=0,$18=0,$21=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$34=0,$35=0,$36=0,$smax=0,$38=0,$outIdx_011=0,$i_09=0,$39=0,$40=0,$41=.0,$42=0,$43=0;
 var $44=.0,$45=.0,$46=.0,$47=0,$48=0,$49=0,$50=0,$51=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  return (($_0)|0);
 }
 $10=($optInTimePeriod|0)==-2147483648;
 do {
  if ($10) {
   $_07=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $12=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_07=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $14=($outReal|0)==0;
 if ($14) {
  $_0=2;

  return (($_0)|0);
 }
 $16=((_TA_ADXR_Lookback($_07))|0);
 $17=($16|0)>($startIdx|0);
 $_startIdx=($17?$16:$startIdx);
 $18=($_startIdx|0)>($endIdx|0);
 if ($18) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $21=((($endIdx)-($_startIdx))|0);
 $22=((($21)+($_07))|0);
 $23=$22<<3;
 $24=((_malloc($23))|0);
 $25=$24;
 $26=($24|0)==0;
 if ($26) {
  $_0=3;

  return (($_0)|0);
 }
 $28=((($_07)-(1))|0);
 $29=((($_startIdx)-($28))|0);
 $30=((_TA_ADX($29,$endIdx,$inHigh,$inLow,$inClose,$_07,$outBegIdx,$outNBElement,$25))|0);
 $31=($30|0)==0;
 if (!($31)) {
  _free($24);
  $_0=$30;

  return (($_0)|0);
 }
 $34=((($21)+(1))|0);
 $35=($34|0)==0;
 if ($35) {
  $outIdx_0_lcssa=0;
 } else {
  $36=($16|0)>($startIdx|0);
  $smax=($36?$16:$startIdx);
  $i_09=$28;$outIdx_011=0;$38=$34;
  while(1) {



   $39=((($i_09)+(1))|0);
   $40=(($25+($i_09<<3))|0);
   $41=(+(HEAPF64[(($40)>>3)]));
   $42=((($outIdx_011)+(1))|0);
   $43=(($25+($outIdx_011<<3))|0);
   $44=(+(HEAPF64[(($43)>>3)]));
   $45=($41)+($44);
   $46=($45)*((0.5));
   $47=(($outReal+($outIdx_011<<3))|0);
   HEAPF64[(($47)>>3)]=$46;
   $48=((($38)-(1))|0);
   $49=($48|0)==0;
   if ($49) {
    break;
   } else {
    $i_09=$39;$outIdx_011=$42;$38=$48;
   }
  }
  $50=((($endIdx)+(1))|0);
  $51=((($50)-($smax))|0);
  $outIdx_0_lcssa=$51;
 }

 _free($24);
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_APO($startIdx,$endIdx,$inReal,$optInFastPeriod,$optInSlowPeriod,$optInMAType,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInFastPeriod=($optInFastPeriod)|0;
 $optInSlowPeriod=($optInSlowPeriod)|0;
 $optInMAType=($optInMAType)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInFastPeriod_off=0,$10=0,$_06=0,$12=0,$optInSlowPeriod_off=0,$14=0,$_07=0,$16=0,$18=0,$_08=0,$20=0,$22=0,$23=0,$24=0;
 var $25=0,$26=0,$28=0,$29=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 do {
  if ($1) {
   $_0=12;
  } else {
   $3=($endIdx|0)<0;
   $4=($endIdx|0)<($startIdx|0);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_0=13;
    break;
   }
   $6=($inReal|0)==0;
   if ($6) {
    $_0=2;
    break;
   }
   $8=($optInFastPeriod|0)==-2147483648;
   if ($8) {
    $_06=12;
   } else {
    $optInFastPeriod_off=((($optInFastPeriod)-(2))|0);
    $10=($optInFastPeriod_off>>>0)>((99998)>>>0);
    if ($10) {
     $_0=2;
     break;
    } else {
     $_06=$optInFastPeriod;
    }
   }

   $12=($optInSlowPeriod|0)==-2147483648;
   if ($12) {
    $_07=26;
   } else {
    $optInSlowPeriod_off=((($optInSlowPeriod)-(2))|0);
    $14=($optInSlowPeriod_off>>>0)>((99998)>>>0);
    if ($14) {
     $_0=2;
     break;
    } else {
     $_07=$optInSlowPeriod;
    }
   }

   $16=($optInMAType|0)==-2147483648;
   if ($16) {
    $_08=0;
   } else {
    $18=($optInMAType>>>0)>((8)>>>0);
    if ($18) {
     $_0=2;
     break;
    } else {
     $_08=$optInMAType;
    }
   }

   $20=($outReal|0)==0;
   if ($20) {
    $_0=2;
    break;
   }
   $22=((($endIdx)-($startIdx))|0);
   $23=$22<<3;
   $24=((($23)+(8))|0);
   $25=((_malloc($24))|0);
   $26=($25|0)==0;
   if ($26) {
    $_0=3;
    break;
   }
   $28=$25;
   $29=((_TA_INT_PO($startIdx,$endIdx,$inReal,$_06,$_07,$_08,$outBegIdx,$outNBElement,$outReal,$28,0))|0);
   _free($25);
   $_0=$29;
  }
 } while(0);

 return (($_0)|0);
}


function _TA_INT_PO($startIdx,$endIdx,$inReal,$optInFastPeriod,$optInSlowPeriod,$optInMethod_2,$outBegIdx,$outNBElement,$outReal,$tempBuffer,$doPercentageOutput){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInFastPeriod=($optInFastPeriod)|0;
 $optInSlowPeriod=($optInSlowPeriod)|0;
 $optInMethod_2=($optInMethod_2)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 $tempBuffer=($tempBuffer)|0;
 $doPercentageOutput=($doPercentageOutput)|0;
 var $outBegIdx1=0,$outNbElement1=0,$outBegIdx2=0,$outNbElement2=0,$1=0,$optInSlowPeriod_optInFastPeriod=0,$2=0,$3=0,$optInFastPeriod_optInSlowPeriod=0,$5=0,$6=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0;
 var $17=0,$j_010=0,$i_09=0,$19=0,$20=.0,$21=0,$22=0,$or_cond=0,$24=0,$25=.0,$26=.0,$27=.0,$28=.0,$storemerge=.0,$30=0,$31=0,$32=0,$j_16=0,$i_15=0,$34=0;
 var $35=.0,$36=0,$37=.0,$38=.0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$retCode_03=0,$retCode_04=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $outBegIdx1=((sp)|0);
 $outNbElement1=(((sp)+(8))|0);
 $outBegIdx2=(((sp)+(16))|0);
 $outNbElement2=(((sp)+(24))|0);
 $1=($optInSlowPeriod|0)<($optInFastPeriod|0);
 $optInSlowPeriod_optInFastPeriod=($1?$optInSlowPeriod:$optInFastPeriod);
 $2=((_TA_MA($startIdx,$endIdx,$inReal,$optInSlowPeriod_optInFastPeriod,$optInMethod_2,$outBegIdx2,$outNbElement2,$tempBuffer))|0);
 $3=($2|0)==0;
 do {
  if ($3) {
   $optInFastPeriod_optInSlowPeriod=($1?$optInFastPeriod:$optInSlowPeriod);
   $5=((_TA_MA($startIdx,$endIdx,$inReal,$optInFastPeriod_optInSlowPeriod,$optInMethod_2,$outBegIdx1,$outNbElement1,$outReal))|0);
   $6=($5|0)==0;
   if (!($6)) {
    $retCode_03=$5;
    break;
   }
   $8=((HEAP32[(($outBegIdx1)>>2)])|0);
   $9=((HEAP32[(($outBegIdx2)>>2)])|0);
   $10=((($8)-($9))|0);
   $11=($doPercentageOutput|0)==0;
   $12=((HEAP32[(($outNbElement1)>>2)])|0);
   $13=($12|0)>0;
   do {
    if ($11) {
     if ($13) {
      $17=((HEAP32[(($outNbElement1)>>2)])|0);
      $i_15=0;$j_16=$10;
      while(1) {


       $34=(($tempBuffer+($j_16<<3))|0);
       $35=(+(HEAPF64[(($34)>>3)]));
       $36=(($outReal+($i_15<<3))|0);
       $37=(+(HEAPF64[(($36)>>3)]));
       $38=($35)-($37);
       HEAPF64[(($36)>>3)]=$38;
       $39=((($i_15)+(1))|0);
       $40=((($j_16)+(1))|0);
       $41=($39|0)<($17|0);
       if ($41) {
        $i_15=$39;$j_16=$40;
       } else {
        break;
       }
      }
     } else {
      $15=((HEAP32[(($outBegIdx1)>>2)])|0);
      HEAP32[(($outBegIdx)>>2)]=$15;
      $16=((HEAP32[(($outNbElement1)>>2)])|0);
      HEAP32[(($outNBElement)>>2)]=$16;
      $retCode_04=0;

      STACKTOP=sp;return (($retCode_04)|0);
     }
    } else {
     if (!($13)) {
      break;
     }
     $14=((HEAP32[(($outNbElement1)>>2)])|0);
     $i_09=0;$j_010=$10;
     while(1) {


      $19=(($outReal+($i_09<<3))|0);
      $20=(+(HEAPF64[(($19)>>3)]));
      $21=$20>(-1.0e-14);
      $22=$20<(1.0e-14);
      $or_cond=$21&$22;
      if ($or_cond) {
       $storemerge=0.0;
      } else {
       $24=(($tempBuffer+($j_010<<3))|0);
       $25=(+(HEAPF64[(($24)>>3)]));
       $26=($25)-($20);
       $27=($26)/($20);
       $28=($27)*((100.0));
       $storemerge=$28;
      }

      HEAPF64[(($19)>>3)]=$storemerge;
      $30=((($i_09)+(1))|0);
      $31=((($j_010)+(1))|0);
      $32=($30|0)<($14|0);
      if ($32) {
       $i_09=$30;$j_010=$31;
      } else {
       break;
      }
     }
    }
   } while(0);
   $42=((HEAP32[(($outBegIdx1)>>2)])|0);
   HEAP32[(($outBegIdx)>>2)]=$42;
   $43=((HEAP32[(($outNbElement1)>>2)])|0);
   HEAP32[(($outNBElement)>>2)]=$43;
   $44=($5|0)==0;
   if ($44) {
    $retCode_04=0;
   } else {
    $retCode_03=$5;
    break;
   }

   STACKTOP=sp;return (($retCode_04)|0);
  } else {
   $retCode_03=$2;
  }
 } while(0);

 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $retCode_04=$retCode_03;

 STACKTOP=sp;return (($retCode_04)|0);
}


function _TA_AROON($startIdx,$endIdx,$inHigh,$inLow,$optInTimePeriod,$outBegIdx,$outNBElement,$outAroonDown,$outAroonUp){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outAroonDown=($outAroonDown)|0;
 $outAroonUp=($outAroonUp)|0;
 var $1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond=0,$9=0,$optInTimePeriod_off=0,$11=0,$_05=0,$13=0,$14=0,$or_cond7=0,$16=0,$_05_startIdx=0,$17=0,$20=.0,$21=.0,$22=0;
 var $23=0,$24=0,$smax=0,$25=0,$smax29=0,$26=0,$smax30=0,$today_021=0,$highestIdx_020=0,$lowestIdx_019=0,$trailingIdx_018=0,$outIdx_017=0,$highest_016=.0,$lowest_015=.0,$28=0,$29=.0,$30=0,$32=0,$33=.0,$lowest_1_ph=.0;
 var $lowestIdx_1_ph=0,$i_0=0,$35=0,$36=0,$38=0,$39=.0,$40=0,$42=0,$lowest_2=.0,$lowestIdx_2=0,$44=0,$45=.0,$46=0,$48=0,$49=.0,$highest_1_ph=.0,$highestIdx_1_ph=0,$i_1=0,$51=0,$52=0;
 var $54=0,$55=.0,$56=0,$58=0,$highest_2=.0,$highestIdx_2=0,$60=0,$61=0,$62=.0,$63=.0,$64=0,$65=0,$66=0,$67=.0,$68=.0,$69=0,$70=0,$71=0,$72=0,$73=0;
 var $74=0,$75=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 if (!($or_cond)) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($optInTimePeriod|0)==-2147483648;
 do {
  if ($9) {
   $_05=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $11=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($11) {
    $_0=2;
   } else {
    $_05=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $13=($outAroonDown|0)==0;
 $14=($outAroonUp|0)==0;
 $or_cond7=$13|$14;
 if ($or_cond7) {
  $_0=2;

  return (($_0)|0);
 }
 $16=($_05|0)>($startIdx|0);
 $_05_startIdx=($16?$_05:$startIdx);
 $17=($_05_startIdx|0)>($endIdx|0);
 if ($17) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $20=(+((($_05|0))|0));
 $21=((100.0))/($20);
 $22=($_05_startIdx|0)>($endIdx|0);
 if ($22) {
  $outIdx_0_lcssa=0;
 } else {
  $23=((($_05_startIdx)-($_05))|0);
  $24=($_05|0)>($endIdx|0);
  $smax=($24?$_05:$endIdx);
  $25=($smax|0)>($startIdx|0);
  $smax29=($25?$smax:$startIdx);
  $26=($_05|0)>($startIdx|0);
  $smax30=($26?$_05:$startIdx);
  $lowest_015=0.0;$highest_016=0.0;$outIdx_017=0;$trailingIdx_018=$23;$lowestIdx_019=-1;$highestIdx_020=-1;$today_021=$_05_startIdx;
  while(1) {







   $28=(($inLow+($today_021<<3))|0);
   $29=(+(HEAPF64[(($28)>>3)]));
   $30=($lowestIdx_019|0)<($trailingIdx_018|0);
   L25: do {
    if ($30) {
     $32=(($inLow+($trailingIdx_018<<3))|0);
     $33=(+(HEAPF64[(($32)>>3)]));
     $lowestIdx_1_ph=$trailingIdx_018;$lowest_1_ph=$33;
     L27: while(1) {


      $i_0=$lowestIdx_1_ph;
      while(1) {

       $35=((($i_0)+(1))|0);
       $36=($i_0|0)<($today_021|0);
       if (!($36)) {
        $lowestIdx_2=$lowestIdx_1_ph;$lowest_2=$lowest_1_ph;
        break L25;
       }
       $38=(($inLow+($35<<3))|0);
       $39=(+(HEAPF64[(($38)>>3)]));
       $40=$39>$lowest_1_ph;
       if ($40) {
        $i_0=$35;
       } else {
        $lowestIdx_1_ph=$35;$lowest_1_ph=$39;
        continue L27;
       }
      }
     }
    } else {
     $42=$29>$lowest_015;
     if ($42) {
      $lowestIdx_2=$lowestIdx_019;$lowest_2=$lowest_015;
      break;
     }
     $lowestIdx_2=$today_021;$lowest_2=$29;
    }
   } while(0);


   $44=(($inHigh+($today_021<<3))|0);
   $45=(+(HEAPF64[(($44)>>3)]));
   $46=($highestIdx_020|0)<($trailingIdx_018|0);
   L35: do {
    if ($46) {
     $48=(($inHigh+($trailingIdx_018<<3))|0);
     $49=(+(HEAPF64[(($48)>>3)]));
     $highestIdx_1_ph=$trailingIdx_018;$highest_1_ph=$49;
     L37: while(1) {


      $i_1=$highestIdx_1_ph;
      while(1) {

       $51=((($i_1)+(1))|0);
       $52=($i_1|0)<($today_021|0);
       if (!($52)) {
        $highestIdx_2=$highestIdx_1_ph;$highest_2=$highest_1_ph;
        break L35;
       }
       $54=(($inHigh+($51<<3))|0);
       $55=(+(HEAPF64[(($54)>>3)]));
       $56=$55<$highest_1_ph;
       if ($56) {
        $i_1=$51;
       } else {
        $highestIdx_1_ph=$51;$highest_1_ph=$55;
        continue L37;
       }
      }
     }
    } else {
     $58=$45<$highest_016;
     if ($58) {
      $highestIdx_2=$highestIdx_020;$highest_2=$highest_016;
      break;
     }
     $highestIdx_2=$today_021;$highest_2=$45;
    }
   } while(0);


   $60=((($_05)-($today_021))|0);
   $61=((($60)+($highestIdx_2))|0);
   $62=(+((($61|0))|0));
   $63=($21)*($62);
   $64=(($outAroonUp+($outIdx_017<<3))|0);
   HEAPF64[(($64)>>3)]=$63;
   $65=((($_05)-($today_021))|0);
   $66=((($65)+($lowestIdx_2))|0);
   $67=(+((($66|0))|0));
   $68=($21)*($67);
   $69=(($outAroonDown+($outIdx_017<<3))|0);
   HEAPF64[(($69)>>3)]=$68;
   $70=((($outIdx_017)+(1))|0);
   $71=((($trailingIdx_018)+(1))|0);
   $72=((($today_021)+(1))|0);
   $73=($today_021|0)<($endIdx|0);
   if ($73) {
    $lowest_015=$lowest_2;$highest_016=$highest_2;$outIdx_017=$70;$trailingIdx_018=$71;$lowestIdx_019=$lowestIdx_2;$highestIdx_020=$highestIdx_2;$today_021=$72;
   } else {
    break;
   }
  }
  $74=((($smax29)+(1))|0);
  $75=((($74)-($smax30))|0);
  $outIdx_0_lcssa=$75;
 }

 HEAP32[(($outBegIdx)>>2)]=$_05_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_AROONOSC($startIdx,$endIdx,$inHigh,$inLow,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond=0,$9=0,$optInTimePeriod_off=0,$11=0,$_05=0,$13=0,$15=0,$_05_startIdx=0,$16=0,$19=.0,$20=.0,$21=0,$22=0,$23=0;
 var $smax=0,$24=0,$smax26=0,$25=0,$smax27=0,$today_019=0,$highestIdx_018=0,$lowestIdx_017=0,$trailingIdx_016=0,$outIdx_015=0,$highest_014=.0,$lowest_013=.0,$27=0,$28=.0,$29=0,$31=0,$32=.0,$lowest_1_ph=.0,$lowestIdx_1_ph=0,$i_0=0;
 var $34=0,$35=0,$37=0,$38=.0,$39=0,$41=0,$lowest_2=.0,$lowestIdx_2=0,$43=0,$44=.0,$45=0,$47=0,$48=.0,$highest_1_ph=.0,$highestIdx_1_ph=0,$i_1=0,$50=0,$51=0,$53=0,$54=.0;
 var $55=0,$57=0,$highest_2=.0,$highestIdx_2=0,$59=0,$60=.0,$61=.0,$62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 if (!($or_cond)) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($optInTimePeriod|0)==-2147483648;
 do {
  if ($9) {
   $_05=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $11=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($11) {
    $_0=2;
   } else {
    $_05=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $13=($outReal|0)==0;
 if ($13) {
  $_0=2;

  return (($_0)|0);
 }
 $15=($_05|0)>($startIdx|0);
 $_05_startIdx=($15?$_05:$startIdx);
 $16=($_05_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=(+((($_05|0))|0));
 $20=((100.0))/($19);
 $21=($_05_startIdx|0)>($endIdx|0);
 if ($21) {
  $outIdx_0_lcssa=0;
 } else {
  $22=((($_05_startIdx)-($_05))|0);
  $23=($_05|0)>($endIdx|0);
  $smax=($23?$_05:$endIdx);
  $24=($smax|0)>($startIdx|0);
  $smax26=($24?$smax:$startIdx);
  $25=($_05|0)>($startIdx|0);
  $smax27=($25?$_05:$startIdx);
  $lowest_013=0.0;$highest_014=0.0;$outIdx_015=0;$trailingIdx_016=$22;$lowestIdx_017=-1;$highestIdx_018=-1;$today_019=$_05_startIdx;
  while(1) {







   $27=(($inLow+($today_019<<3))|0);
   $28=(+(HEAPF64[(($27)>>3)]));
   $29=($lowestIdx_017|0)<($trailingIdx_016|0);
   L25: do {
    if ($29) {
     $31=(($inLow+($trailingIdx_016<<3))|0);
     $32=(+(HEAPF64[(($31)>>3)]));
     $lowestIdx_1_ph=$trailingIdx_016;$lowest_1_ph=$32;
     L27: while(1) {


      $i_0=$lowestIdx_1_ph;
      while(1) {

       $34=((($i_0)+(1))|0);
       $35=($i_0|0)<($today_019|0);
       if (!($35)) {
        $lowestIdx_2=$lowestIdx_1_ph;$lowest_2=$lowest_1_ph;
        break L25;
       }
       $37=(($inLow+($34<<3))|0);
       $38=(+(HEAPF64[(($37)>>3)]));
       $39=$38>$lowest_1_ph;
       if ($39) {
        $i_0=$34;
       } else {
        $lowestIdx_1_ph=$34;$lowest_1_ph=$38;
        continue L27;
       }
      }
     }
    } else {
     $41=$28>$lowest_013;
     if ($41) {
      $lowestIdx_2=$lowestIdx_017;$lowest_2=$lowest_013;
      break;
     }
     $lowestIdx_2=$today_019;$lowest_2=$28;
    }
   } while(0);


   $43=(($inHigh+($today_019<<3))|0);
   $44=(+(HEAPF64[(($43)>>3)]));
   $45=($highestIdx_018|0)<($trailingIdx_016|0);
   L35: do {
    if ($45) {
     $47=(($inHigh+($trailingIdx_016<<3))|0);
     $48=(+(HEAPF64[(($47)>>3)]));
     $highestIdx_1_ph=$trailingIdx_016;$highest_1_ph=$48;
     L37: while(1) {


      $i_1=$highestIdx_1_ph;
      while(1) {

       $50=((($i_1)+(1))|0);
       $51=($i_1|0)<($today_019|0);
       if (!($51)) {
        $highestIdx_2=$highestIdx_1_ph;$highest_2=$highest_1_ph;
        break L35;
       }
       $53=(($inHigh+($50<<3))|0);
       $54=(+(HEAPF64[(($53)>>3)]));
       $55=$54<$highest_1_ph;
       if ($55) {
        $i_1=$50;
       } else {
        $highestIdx_1_ph=$50;$highest_1_ph=$54;
        continue L37;
       }
      }
     }
    } else {
     $57=$44<$highest_014;
     if ($57) {
      $highestIdx_2=$highestIdx_018;$highest_2=$highest_014;
      break;
     }
     $highestIdx_2=$today_019;$highest_2=$44;
    }
   } while(0);


   $59=((($highestIdx_2)-($lowestIdx_2))|0);
   $60=(+((($59|0))|0));
   $61=($20)*($60);
   $62=(($outReal+($outIdx_015<<3))|0);
   HEAPF64[(($62)>>3)]=$61;
   $63=((($outIdx_015)+(1))|0);
   $64=((($trailingIdx_016)+(1))|0);
   $65=((($today_019)+(1))|0);
   $66=($today_019|0)<($endIdx|0);
   if ($66) {
    $lowest_013=$lowest_2;$highest_014=$highest_2;$outIdx_015=$63;$trailingIdx_016=$64;$lowestIdx_017=$lowestIdx_2;$highestIdx_018=$highestIdx_2;$today_019=$65;
   } else {
    break;
   }
  }
  $67=((($smax26)+(1))|0);
  $68=((($67)-($smax27))|0);
  $outIdx_0_lcssa=$68;
 }

 HEAP32[(($outBegIdx)>>2)]=$_05_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_ASIN($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(Math_asin($13)));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_ATAN($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(Math_atan($13)));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_ATR_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$6=0,$7=0,$8=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $3=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((HEAP32[((272)>>2)])|0);
 $6=(($5+68)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=((($7)+($_0))|0);
 $_02=$8;

 return (($_02)|0);
}


function _TA_ATR($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $outBegIdx1=0,$outNbElement1=0,$prevATRTemp=0,$1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInTimePeriod_off=0,$12=0,$_07=0,$14=0,$16=0,$17=0,$_startIdx=0;
 var $18=0,$20=0,$22=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$36=0,$37=0,$38=0,$39=0,$42=.0,$43=0,$44=0;
 var $45=0,$46=0,$47=.0,$48=.0,$prevATR_014=.0,$today_013=0,$outIdx_012=0,$50=.0,$51=0,$52=0,$53=.0,$54=.0,$55=.0,$56=0,$57=0,$58=0,$prevATR_0_lcssa=.0,$today_0_lcssa=0,$60=0,$61=.0;
 var $62=.0,$63=0,$smax=0,$65=0,$prevATR_111=.0,$today_110=0,$outIdx_19=0,$66=.0,$67=0,$68=0,$69=.0,$70=.0,$71=.0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$outIdx_1_lcssa=0;
 var $_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $outBegIdx1=((sp)|0);
 $outNbElement1=(((sp)+(8))|0);
 $prevATRTemp=(((sp)+(16))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $10=($optInTimePeriod|0)==-2147483648;
 do {
  if ($10) {
   $_07=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $12=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_07=$optInTimePeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $14=($outReal|0)==0;
 if ($14) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $16=((_TA_ATR_Lookback($_07))|0);
 $17=($16|0)>($startIdx|0);
 $_startIdx=($17?$16:$startIdx);
 $18=($_startIdx|0)>($endIdx|0);
 if ($18) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $20=($_07|0)<2;
 if ($20) {
  $22=((_TA_TRANGE($_startIdx,$endIdx,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outReal))|0);
  $_0=$22;

  STACKTOP=sp;return (($_0)|0);
 }
 $24=((($endIdx)-($_startIdx))|0);
 $25=((($24)+($16))|0);
 $26=$25<<3;
 $27=((($26)+(8))|0);
 $28=((_malloc($27))|0);
 $29=$28;
 $30=(((1)-($16))|0);
 $31=((($30)+($_startIdx))|0);
 $32=((_TA_TRANGE($31,$endIdx,$inHigh,$inLow,$inClose,$outBegIdx1,$outNbElement1,$29))|0);
 $33=($32|0)==0;
 if (!($33)) {
  _free($28);
  $_0=$32;

  STACKTOP=sp;return (($_0)|0);
 }
 $36=((($_07)-(1))|0);
 $37=(($prevATRTemp)|0);
 $38=((_TA_INT_SMA($36,$36,$29,$_07,$outBegIdx1,$outNbElement1,$37))|0);
 $39=($38|0)==0;
 if (!($39)) {
  _free($28);
  $_0=$38;

  STACKTOP=sp;return (($_0)|0);
 }
 $42=(+(HEAPF64[(($37)>>3)]));
 $43=((HEAP32[((272)>>2)])|0);
 $44=(($43+68)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 $46=($45|0)==0;
 if ($46) {
  $today_0_lcssa=$_07;$prevATR_0_lcssa=$42;
 } else {
  $47=(+((($36|0))|0));
  $48=(+((($_07|0))|0));
  $outIdx_012=$45;$today_013=$_07;$prevATR_014=$42;
  while(1) {



   $50=($47)*($prevATR_014);
   $51=((($today_013)+(1))|0);
   $52=(($29+($today_013<<3))|0);
   $53=(+(HEAPF64[(($52)>>3)]));
   $54=($50)+($53);
   $55=($54)/($48);
   $56=((($outIdx_012)-(1))|0);
   $57=($56|0)==0;
   if ($57) {
    break;
   } else {
    $outIdx_012=$56;$today_013=$51;$prevATR_014=$55;
   }
  }
  $58=((($_07)+($45))|0);
  $today_0_lcssa=$58;$prevATR_0_lcssa=$55;
 }


 HEAPF64[(($outReal)>>3)]=$prevATR_0_lcssa;
 $60=($_startIdx|0)==($endIdx|0);
 if ($60) {
  $outIdx_1_lcssa=1;
 } else {
  $61=(+((($36|0))|0));
  $62=(+((($_07|0))|0));
  $63=($16|0)>($startIdx|0);
  $smax=($63?$16:$startIdx);
  $outIdx_19=1;$today_110=$today_0_lcssa;$prevATR_111=$prevATR_0_lcssa;$65=$24;
  while(1) {




   $66=($61)*($prevATR_111);
   $67=((($today_110)+(1))|0);
   $68=(($29+($today_110<<3))|0);
   $69=(+(HEAPF64[(($68)>>3)]));
   $70=($66)+($69);
   $71=($70)/($62);
   $72=((($outIdx_19)+(1))|0);
   $73=(($outReal+($outIdx_19<<3))|0);
   HEAPF64[(($73)>>3)]=$71;
   $74=((($65)-(1))|0);
   $75=($74|0)==0;
   if ($75) {
    break;
   } else {
    $outIdx_19=$72;$today_110=$67;$prevATR_111=$71;$65=$74;
   }
  }
  $76=((($endIdx)+(1))|0);
  $77=((($76)-($smax))|0);
  $outIdx_1_lcssa=$77;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_1_lcssa;
 _free($28);
 $_0=$38;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_AVGDEV($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=0,$22=.0,$23=.0,$24=0;
 var $smax=0,$25=0,$26=0,$smax16=0,$27=0,$smax17=0,$outIdx_011=0,$today_010=0,$i_05=0,$todaySum_04=.0,$28=0,$29=0,$30=.0,$31=.0,$32=0,$33=0,$todaySum_0_lcssa=.0,$34=.0,$i_17=0,$todayDev_06=.0;
 var $36=0,$37=0,$38=.0,$39=.0,$40=.0,$41=.0,$42=0,$43=0,$todayDev_0_lcssa=.0,$44=.0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((($_03)-(1))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $19=($_startIdx|0)>($endIdx|0);
 if ($19) {
  $outIdx_0_lcssa=0;
 } else {
  $20=($_03|0)>0;
  $21=($_03|0)>0;
  $22=(+((($_03|0))|0));
  $23=(+((($_03|0))|0));
  $24=($endIdx|0)>($startIdx|0);
  $smax=($24?$endIdx:$startIdx);
  $25=((($_03)-(1))|0);
  $26=($smax|0)>($25|0);
  $smax16=($26?$smax:$25);
  $27=($25|0)<($startIdx|0);
  $smax17=($27?$startIdx:$25);
  $today_010=$_startIdx;$outIdx_011=0;
  while(1) {


   if ($20) {
    $todaySum_04=0.0;$i_05=0;
    while(1) {


     $28=((($today_010)-($i_05))|0);
     $29=(($inReal+($28<<3))|0);
     $30=(+(HEAPF64[(($29)>>3)]));
     $31=($todaySum_04)+($30);
     $32=((($i_05)+(1))|0);
     $33=($32|0)<($_03|0);
     if ($33) {
      $todaySum_04=$31;$i_05=$32;
     } else {
      $todaySum_0_lcssa=$31;
      break;
     }
    }
   } else {
    $todaySum_0_lcssa=0.0;
   }

   if ($21) {
    $34=($todaySum_0_lcssa)/($23);
    $todayDev_06=0.0;$i_17=0;
    while(1) {


     $36=((($today_010)-($i_17))|0);
     $37=(($inReal+($36<<3))|0);
     $38=(+(HEAPF64[(($37)>>3)]));
     $39=($38)-($34);
     $40=(+(Math_abs((+($39)))));
     $41=($todayDev_06)+($40);
     $42=((($i_17)+(1))|0);
     $43=($42|0)<($_03|0);
     if ($43) {
      $todayDev_06=$41;$i_17=$42;
     } else {
      $todayDev_0_lcssa=$41;
      break;
     }
    }
   } else {
    $todayDev_0_lcssa=0.0;
   }

   $44=($todayDev_0_lcssa)/($22);
   $45=(($outReal+($outIdx_011<<3))|0);
   HEAPF64[(($45)>>3)]=$44;
   $46=((($outIdx_011)+(1))|0);
   $47=((($today_010)+(1))|0);
   $48=($today_010|0)<($endIdx|0);
   if ($48) {
    $today_010=$47;$outIdx_011=$46;
   } else {
    break;
   }
  }
  $49=((($smax16)+(1))|0);
  $50=((($49)-($smax17))|0);
  $outIdx_0_lcssa=$50;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_AVGPRICE($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond7=0,$11=0,$12=0,$smax=0,$13=0,$i_09=0,$outIdx_08=0;
 var $15=0,$16=.0,$17=0,$18=.0,$19=.0,$20=0,$21=.0,$22=.0,$23=0,$24=.0,$25=.0,$26=.0,$27=0,$28=0,$29=0,$30=0,$31=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outReal|0)==0;
 $or_cond7=$10|$or_cond5_not;
 if ($or_cond7) {
  $_0=2;

  return (($_0)|0);
 }
 $11=($startIdx|0)>($endIdx|0);
 if ($11) {
  $outIdx_0_lcssa=0;
 } else {
  $12=($endIdx|0)>($startIdx|0);
  $smax=($12?$endIdx:$startIdx);
  $13=((($smax)+(1))|0);
  $outIdx_08=0;$i_09=$startIdx;
  while(1) {


   $15=(($inHigh+($i_09<<3))|0);
   $16=(+(HEAPF64[(($15)>>3)]));
   $17=(($inLow+($i_09<<3))|0);
   $18=(+(HEAPF64[(($17)>>3)]));
   $19=($16)+($18);
   $20=(($inClose+($i_09<<3))|0);
   $21=(+(HEAPF64[(($20)>>3)]));
   $22=($19)+($21);
   $23=(($inOpen+($i_09<<3))|0);
   $24=(+(HEAPF64[(($23)>>3)]));
   $25=($22)+($24);
   $26=($25)*((0.25));
   $27=((($outIdx_08)+(1))|0);
   $28=(($outReal+($outIdx_08<<3))|0);
   HEAPF64[(($28)>>3)]=$26;
   $29=((($i_09)+(1))|0);
   $30=($i_09|0)<($endIdx|0);
   if ($30) {
    $outIdx_08=$27;$i_09=$29;
   } else {
    break;
   }
  }
  $31=((($13)-($startIdx))|0);
  $outIdx_0_lcssa=$31;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_BBANDS($startIdx,$endIdx,$inReal,$optInTimePeriod,$optInNbDevUp,$optInNbDevDn,$optInMAType,$outBegIdx,$outNBElement,$outRealUpperBand,$outRealMiddleBand,$outRealLowerBand){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $optInNbDevUp=+($optInNbDevUp);
 $optInNbDevDn=+($optInNbDevDn);
 $optInMAType=($optInMAType)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outRealUpperBand=($outRealUpperBand)|0;
 $outRealMiddleBand=($outRealMiddleBand)|0;
 $outRealLowerBand=($outRealLowerBand)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_08=0,$12=0,$14=0,$15=0,$or_cond3=0,$_09=.0,$17=0,$19=0,$20=0,$or_cond5=0,$_010=.0,$22=0;
 var $24=0,$_011=0,$26=0,$27=0,$or_cond13=0,$28=0,$or_cond14=0,$30=0,$32=0,$34=0,$outRealLowerBand_outRealMiddleBand=0,$tempBuffer1_0=0,$tempBuffer2_0=0,$36=0,$37=0,$or_cond12=0,$39=0,$40=0,$42=0,$43=0;
 var $46=0,$47=0,$50=0,$51=0,$54=0,$56=0,$57=0,$58=0,$59=0,$61=0,$62=0,$64=0,$65=0,$i_015=0,$66=0,$67=.0,$68=0,$69=.0,$70=.0,$71=0;
 var $72=.0,$73=0,$74=0,$75=0,$76=0,$i_118=0,$77=0,$78=.0,$79=.0,$80=0,$81=.0,$82=.0,$83=0,$84=.0,$85=0,$86=0,$87=0,$88=0,$90=0,$91=0;
 var $i_222=0,$92=0,$93=.0,$94=0,$95=.0,$96=.0,$97=0,$98=.0,$99=.0,$100=0,$101=0,$102=0,$103=0,$105=0,$106=0,$107=0,$i_326=0,$108=0,$109=.0,$110=0;
 var $111=.0,$112=.0,$113=0,$114=.0,$115=.0,$116=0,$117=0,$118=0,$119=0,$i_430=0,$120=0,$121=.0,$122=0,$123=.0,$124=.0,$125=.0,$126=0,$127=.0,$128=.0,$129=0;
 var $130=0,$131=0,$132=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_08=5;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_08=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=$optInNbDevUp==(-4.0e+37);
 do {
  if ($12) {
   $_09=2.0;
  } else {
   $14=$optInNbDevUp<(-3.0e+37);
   $15=$optInNbDevUp>(3.0e+37);
   $or_cond3=$14|$15;
   if ($or_cond3) {
    $_0=2;
   } else {
    $_09=$optInNbDevUp;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $17=$optInNbDevDn==(-4.0e+37);
 do {
  if ($17) {
   $_010=2.0;
  } else {
   $19=$optInNbDevDn<(-3.0e+37);
   $20=$optInNbDevDn>(3.0e+37);
   $or_cond5=$19|$20;
   if ($or_cond5) {
    $_0=2;
   } else {
    $_010=$optInNbDevDn;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $22=($optInMAType|0)==-2147483648;
 do {
  if ($22) {
   $_011=0;
  } else {
   $24=($optInMAType>>>0)>((8)>>>0);
   if ($24) {
    $_0=2;
   } else {
    $_011=$optInMAType;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $26=($outRealUpperBand|0)==0;
 $27=($outRealMiddleBand|0)==0;
 $or_cond13=$26|$27;
 $28=($outRealLowerBand|0)==0;
 $or_cond14=$or_cond13|$28;
 if ($or_cond14) {
  $_0=2;

  return (($_0)|0);
 }
 $30=($inReal|0)==($outRealUpperBand|0);
 do {
  if ($30) {
   $tempBuffer2_0=$outRealLowerBand;$tempBuffer1_0=$outRealMiddleBand;
  } else {
   $32=($inReal|0)==($outRealLowerBand|0);
   if ($32) {
    $tempBuffer2_0=$outRealUpperBand;$tempBuffer1_0=$outRealMiddleBand;
    break;
   }
   $34=($inReal|0)==($outRealMiddleBand|0);
   $outRealLowerBand_outRealMiddleBand=($34?$outRealLowerBand:$outRealMiddleBand);
   $tempBuffer2_0=$outRealUpperBand;$tempBuffer1_0=$outRealLowerBand_outRealMiddleBand;
  }
 } while(0);


 $36=($tempBuffer1_0|0)==($inReal|0);
 $37=($tempBuffer2_0|0)==($inReal|0);
 $or_cond12=$36|$37;
 if ($or_cond12) {
  $_0=2;

  return (($_0)|0);
 }
 $39=((_TA_MA($startIdx,$endIdx,$inReal,$_08,$_011,$outBegIdx,$outNBElement,$tempBuffer1_0))|0);
 $40=($39|0)==0;
 do {
  if ($40) {
   $42=((HEAP32[(($outNBElement)>>2)])|0);
   $43=($42|0)==0;
   if ($43) {
    break;
   }
   $46=($_011|0)==0;
   $47=((HEAP32[(($outBegIdx)>>2)])|0);
   do {
    if ($46) {
     _TA_INT_stddev_using_precalc_ma($inReal,$tempBuffer1_0,$47,$42,$_08,$tempBuffer2_0);
    } else {
     $50=((_TA_STDDEV($47,$endIdx,$inReal,$_08,1.0,$outBegIdx,$outNBElement,$tempBuffer2_0))|0);
     $51=($50|0)==0;
     if ($51) {
      break;
     }
     HEAP32[(($outNBElement)>>2)]=0;
     $_0=$50;

     return (($_0)|0);
    }
   } while(0);
   $54=($tempBuffer1_0|0)==($outRealMiddleBand|0);
   if (!($54)) {
    $56=$outRealMiddleBand;
    $57=$tempBuffer1_0;
    $58=((HEAP32[(($outNBElement)>>2)])|0);
    $59=$58<<3;
    (_memcpy((($56)|0), (($57)|0), $59)|0);
   }
   $61=$_09==$_010;
   $62=$_09==(1.0);
   if ($61) {
    $64=((HEAP32[(($outNBElement)>>2)])|0);
    $65=($64|0)>0;
    if ($62) {
     if ($65) {
      $i_015=0;
     } else {
      $_0=0;

      return (($_0)|0);
     }
     while(1) {

      $66=(($tempBuffer2_0+($i_015<<3))|0);
      $67=(+(HEAPF64[(($66)>>3)]));
      $68=(($outRealMiddleBand+($i_015<<3))|0);
      $69=(+(HEAPF64[(($68)>>3)]));
      $70=($67)+($69);
      $71=(($outRealUpperBand+($i_015<<3))|0);
      HEAPF64[(($71)>>3)]=$70;
      $72=($69)-($67);
      $73=(($outRealLowerBand+($i_015<<3))|0);
      HEAPF64[(($73)>>3)]=$72;
      $74=((($i_015)+(1))|0);
      $75=((HEAP32[(($outNBElement)>>2)])|0);
      $76=($74|0)<($75|0);
      if ($76) {
       $i_015=$74;
      } else {
       $_0=0;
       break;
      }
     }

     return (($_0)|0);
    } else {
     if ($65) {
      $i_118=0;
     } else {
      $_0=0;

      return (($_0)|0);
     }
     while(1) {

      $77=(($tempBuffer2_0+($i_118<<3))|0);
      $78=(+(HEAPF64[(($77)>>3)]));
      $79=($_09)*($78);
      $80=(($outRealMiddleBand+($i_118<<3))|0);
      $81=(+(HEAPF64[(($80)>>3)]));
      $82=($81)+($79);
      $83=(($outRealUpperBand+($i_118<<3))|0);
      HEAPF64[(($83)>>3)]=$82;
      $84=($81)-($79);
      $85=(($outRealLowerBand+($i_118<<3))|0);
      HEAPF64[(($85)>>3)]=$84;
      $86=((($i_118)+(1))|0);
      $87=((HEAP32[(($outNBElement)>>2)])|0);
      $88=($86|0)<($87|0);
      if ($88) {
       $i_118=$86;
      } else {
       $_0=0;
       break;
      }
     }

     return (($_0)|0);
    }
   }
   if ($62) {
    $90=((HEAP32[(($outNBElement)>>2)])|0);
    $91=($90|0)>0;
    if ($91) {
     $i_222=0;
    } else {
     $_0=0;

     return (($_0)|0);
    }
    while(1) {

     $92=(($tempBuffer2_0+($i_222<<3))|0);
     $93=(+(HEAPF64[(($92)>>3)]));
     $94=(($outRealMiddleBand+($i_222<<3))|0);
     $95=(+(HEAPF64[(($94)>>3)]));
     $96=($93)+($95);
     $97=(($outRealUpperBand+($i_222<<3))|0);
     HEAPF64[(($97)>>3)]=$96;
     $98=($_010)*($93);
     $99=($95)-($98);
     $100=(($outRealLowerBand+($i_222<<3))|0);
     HEAPF64[(($100)>>3)]=$99;
     $101=((($i_222)+(1))|0);
     $102=((HEAP32[(($outNBElement)>>2)])|0);
     $103=($101|0)<($102|0);
     if ($103) {
      $i_222=$101;
     } else {
      $_0=0;
      break;
     }
    }

    return (($_0)|0);
   }
   $105=$_010==(1.0);
   $106=((HEAP32[(($outNBElement)>>2)])|0);
   $107=($106|0)>0;
   if ($105) {
    if ($107) {
     $i_326=0;
    } else {
     $_0=0;

     return (($_0)|0);
    }
    while(1) {

     $108=(($tempBuffer2_0+($i_326<<3))|0);
     $109=(+(HEAPF64[(($108)>>3)]));
     $110=(($outRealMiddleBand+($i_326<<3))|0);
     $111=(+(HEAPF64[(($110)>>3)]));
     $112=($111)-($109);
     $113=(($outRealLowerBand+($i_326<<3))|0);
     HEAPF64[(($113)>>3)]=$112;
     $114=($_09)*($109);
     $115=($111)+($114);
     $116=(($outRealUpperBand+($i_326<<3))|0);
     HEAPF64[(($116)>>3)]=$115;
     $117=((($i_326)+(1))|0);
     $118=((HEAP32[(($outNBElement)>>2)])|0);
     $119=($117|0)<($118|0);
     if ($119) {
      $i_326=$117;
     } else {
      $_0=0;
      break;
     }
    }

    return (($_0)|0);
   } else {
    if ($107) {
     $i_430=0;
    } else {
     $_0=0;

     return (($_0)|0);
    }
    while(1) {

     $120=(($tempBuffer2_0+($i_430<<3))|0);
     $121=(+(HEAPF64[(($120)>>3)]));
     $122=(($outRealMiddleBand+($i_430<<3))|0);
     $123=(+(HEAPF64[(($122)>>3)]));
     $124=($_09)*($121);
     $125=($123)+($124);
     $126=(($outRealUpperBand+($i_430<<3))|0);
     HEAPF64[(($126)>>3)]=$125;
     $127=($_010)*($121);
     $128=($123)-($127);
     $129=(($outRealLowerBand+($i_430<<3))|0);
     HEAPF64[(($129)>>3)]=$128;
     $130=((($i_430)+(1))|0);
     $131=((HEAP32[(($outNBElement)>>2)])|0);
     $132=($130|0)<($131|0);
     if ($132) {
      $i_430=$130;
     } else {
      $_0=0;
      break;
     }
    }

    return (($_0)|0);
   }
  }
 } while(0);
 HEAP32[(($outNBElement)>>2)]=0;
 $_0=$39;

 return (($_0)|0);
}


function _TA_BETA($startIdx,$endIdx,$inReal0,$inReal1,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal0=($inReal0)|0;
 $inReal1=($inReal1)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond18=0,$9=0,$optInTimePeriod_off=0,$11=0,$_017=0,$13=0,$15=0,$_017_startIdx=0,$16=0,$19=0,$20=0,$21=.0,$22=0,$23=.0;
 var $24=0,$25=0,$26=0,$i_025=0,$last_price_y_024=.0,$last_price_x_023=.0,$S_y_022=.0,$S_x_021=.0,$S_xy_020=.0,$S_xx_019=.0,$28=0,$29=.0,$30=0,$31=0,$or_cond3=0,$33=.0,$34=.0,$x_0=.0,$36=0,$37=0;
 var $38=.0,$39=0,$40=0,$or_cond5=0,$42=.0,$43=.0,$y_0=.0,$45=.0,$46=.0,$47=.0,$48=.0,$49=.0,$50=.0,$51=0,$smax38=0,$i_0_lcssa=0,$last_price_y_0_lcssa=.0,$last_price_x_0_lcssa=.0,$S_y_0_lcssa=.0,$S_x_0_lcssa=.0;
 var $S_xy_0_lcssa=.0,$S_xx_0_lcssa=.0,$53=.0,$54=0,$smax=0,$55=0,$S_xx_1=.0,$S_xy_1=.0,$S_x_1=.0,$S_y_1=.0,$last_price_x_1=.0,$last_price_y_1=.0,$trailing_last_price_x_0=.0,$trailing_last_price_y_0=.0,$i_1=0,$outIdx_0=0,$trailingIdx_0=0,$57=0,$58=.0,$59=0;
 var $60=0,$or_cond7=0,$62=.0,$63=.0,$x_1=.0,$65=0,$66=0,$67=.0,$68=0,$69=0,$or_cond9=0,$71=.0,$72=.0,$y_1=.0,$74=.0,$75=.0,$76=.0,$77=.0,$78=.0,$79=.0;
 var $80=0,$81=.0,$82=0,$83=0,$or_cond11=0,$85=.0,$86=.0,$x_2=.0,$88=0,$89=0,$90=.0,$91=0,$92=0,$or_cond13=0,$94=.0,$95=.0,$y_2=.0,$97=.0,$98=.0,$99=.0;
 var $100=0,$101=0,$or_cond15=0,$103=.0,$104=.0,$105=.0,$106=.0,$107=0,$109=0,$outIdx_1=0,$111=.0,$112=.0,$113=.0,$114=.0,$115=.0,$116=.0,$117=0,$119=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal0|0)==0;
 $7=($inReal1|0)==0;
 $or_cond18=$6|$7;
 if ($or_cond18) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($optInTimePeriod|0)==-2147483648;
 do {
  if ($9) {
   $_017=5;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $11=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($11) {
    $_0=2;
   } else {
    $_017=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $13=($outReal|0)==0;
 if ($13) {
  $_0=2;

  return (($_0)|0);
 }
 $15=($_017|0)>($startIdx|0);
 $_017_startIdx=($15?$_017:$startIdx);
 $16=($_017_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=((($_017_startIdx)-($_017))|0);
 $20=(($inReal0+($19<<3))|0);
 $21=(+(HEAPF64[(($20)>>3)]));
 $22=(($inReal1+($19<<3))|0);
 $23=(+(HEAPF64[(($22)>>3)]));
 $24=((($19)+(1))|0);
 $25=($24|0)<($_017_startIdx|0);
 if ($25) {
  $26=($_017|0)>($startIdx|0);
  $S_xx_019=0.0;$S_xy_020=0.0;$S_x_021=0.0;$S_y_022=0.0;$last_price_x_023=$21;$last_price_y_024=$23;$i_025=$24;
  while(1) {







   $28=(($inReal0+($i_025<<3))|0);
   $29=(+(HEAPF64[(($28)>>3)]));
   $30=$last_price_x_023>(-1.0e-14);
   $31=$last_price_x_023<(1.0e-14);
   $or_cond3=$30&$31;
   if ($or_cond3) {
    $x_0=0.0;
   } else {
    $33=($29)-($last_price_x_023);
    $34=($33)/($last_price_x_023);
    $x_0=$34;
   }

   $36=((($i_025)+(1))|0);
   $37=(($inReal1+($i_025<<3))|0);
   $38=(+(HEAPF64[(($37)>>3)]));
   $39=$last_price_y_024>(-1.0e-14);
   $40=$last_price_y_024<(1.0e-14);
   $or_cond5=$39&$40;
   if ($or_cond5) {
    $y_0=0.0;
   } else {
    $42=($38)-($last_price_y_024);
    $43=($42)/($last_price_y_024);
    $y_0=$43;
   }

   $45=($x_0)*($x_0);
   $46=($S_xx_019)+($45);
   $47=($x_0)*($y_0);
   $48=($S_xy_020)+($47);
   $49=($S_x_021)+($x_0);
   $50=($S_y_022)+($y_0);
   $51=($36|0)<($_017_startIdx|0);
   if ($51) {
    $S_xx_019=$46;$S_xy_020=$48;$S_x_021=$49;$S_y_022=$50;$last_price_x_023=$29;$last_price_y_024=$38;$i_025=$36;
   } else {
    break;
   }
  }
  $smax38=($26?$_017:$startIdx);
  $S_xx_0_lcssa=$46;$S_xy_0_lcssa=$48;$S_x_0_lcssa=$49;$S_y_0_lcssa=$50;$last_price_x_0_lcssa=$29;$last_price_y_0_lcssa=$38;$i_0_lcssa=$smax38;
 } else {
  $S_xx_0_lcssa=0.0;$S_xy_0_lcssa=0.0;$S_x_0_lcssa=0.0;$S_y_0_lcssa=0.0;$last_price_x_0_lcssa=$21;$last_price_y_0_lcssa=$23;$i_0_lcssa=$24;
 }







 $53=(+((($_017|0))|0));
 $54=($i_0_lcssa|0)>($endIdx|0);
 $smax=($54?$i_0_lcssa:$endIdx);
 $55=((($smax)+(1))|0);
 $trailingIdx_0=$24;$outIdx_0=0;$i_1=$i_0_lcssa;$trailing_last_price_y_0=$23;$trailing_last_price_x_0=$21;$last_price_y_1=$last_price_y_0_lcssa;$last_price_x_1=$last_price_x_0_lcssa;$S_y_1=$S_y_0_lcssa;$S_x_1=$S_x_0_lcssa;$S_xy_1=$S_xy_0_lcssa;$S_xx_1=$S_xx_0_lcssa;
 while(1) {











  $57=(($inReal0+($i_1<<3))|0);
  $58=(+(HEAPF64[(($57)>>3)]));
  $59=$last_price_x_1>(-1.0e-14);
  $60=$last_price_x_1<(1.0e-14);
  $or_cond7=$59&$60;
  if ($or_cond7) {
   $x_1=0.0;
  } else {
   $62=($58)-($last_price_x_1);
   $63=($62)/($last_price_x_1);
   $x_1=$63;
  }

  $65=((($i_1)+(1))|0);
  $66=(($inReal1+($i_1<<3))|0);
  $67=(+(HEAPF64[(($66)>>3)]));
  $68=$last_price_y_1>(-1.0e-14);
  $69=$last_price_y_1<(1.0e-14);
  $or_cond9=$68&$69;
  if ($or_cond9) {
   $y_1=0.0;
  } else {
   $71=($67)-($last_price_y_1);
   $72=($71)/($last_price_y_1);
   $y_1=$72;
  }

  $74=($x_1)*($x_1);
  $75=($S_xx_1)+($74);
  $76=($x_1)*($y_1);
  $77=($S_xy_1)+($76);
  $78=($S_x_1)+($x_1);
  $79=($S_y_1)+($y_1);
  $80=(($inReal0+($trailingIdx_0<<3))|0);
  $81=(+(HEAPF64[(($80)>>3)]));
  $82=$trailing_last_price_x_0>(-1.0e-14);
  $83=$trailing_last_price_x_0<(1.0e-14);
  $or_cond11=$82&$83;
  if ($or_cond11) {
   $x_2=0.0;
  } else {
   $85=($81)-($trailing_last_price_x_0);
   $86=($85)/($trailing_last_price_x_0);
   $x_2=$86;
  }

  $88=((($trailingIdx_0)+(1))|0);
  $89=(($inReal1+($trailingIdx_0<<3))|0);
  $90=(+(HEAPF64[(($89)>>3)]));
  $91=$trailing_last_price_y_0>(-1.0e-14);
  $92=$trailing_last_price_y_0<(1.0e-14);
  $or_cond13=$91&$92;
  if ($or_cond13) {
   $y_2=0.0;
  } else {
   $94=($90)-($trailing_last_price_y_0);
   $95=($94)/($trailing_last_price_y_0);
   $y_2=$95;
  }

  $97=($53)*($75);
  $98=($78)*($78);
  $99=($97)-($98);
  $100=$99>(-1.0e-14);
  $101=$99<(1.0e-14);
  $or_cond15=$100&$101;
  if ($or_cond15) {
   $109=(($outReal+($outIdx_0<<3))|0);
   HEAPF64[(($109)>>3)]=0.0;
  } else {
   $103=($53)*($77);
   $104=($78)*($79);
   $105=($103)-($104);
   $106=($105)/($99);
   $107=(($outReal+($outIdx_0<<3))|0);
   HEAPF64[(($107)>>3)]=$106;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $111=($x_2)*($x_2);
  $112=($75)-($111);
  $113=($x_2)*($y_2);
  $114=($77)-($113);
  $115=($78)-($x_2);
  $116=($79)-($y_2);
  $117=($i_1|0)<($endIdx|0);
  if ($117) {
   $trailingIdx_0=$88;$outIdx_0=$outIdx_1;$i_1=$65;$trailing_last_price_y_0=$90;$trailing_last_price_x_0=$81;$last_price_y_1=$67;$last_price_x_1=$58;$S_y_1=$116;$S_x_1=$115;$S_xy_1=$114;$S_xx_1=$112;
  } else {
   break;
  }
 }
 $119=((($55)-($i_0_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$119;
 HEAP32[(($outBegIdx)>>2)]=$_017_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_BOP($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond7=0,$11=0,$12=0,$smax=0,$13=0,$i_09=0,$outIdx_08=0;
 var $15=0,$16=.0,$17=0,$18=.0,$19=.0,$20=0,$22=0,$24=0,$25=.0,$26=0,$27=.0,$28=.0,$29=.0,$30=0,$outIdx_1=0,$32=0,$33=0,$34=0,$outIdx_0_lcssa=0,$_0=0;
 var label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outReal|0)==0;
 $or_cond7=$10|$or_cond5_not;
 if ($or_cond7) {
  $_0=2;

  return (($_0)|0);
 }
 $11=($startIdx|0)>($endIdx|0);
 if ($11) {
  $outIdx_0_lcssa=0;
 } else {
  $12=($endIdx|0)>($startIdx|0);
  $smax=($12?$endIdx:$startIdx);
  $13=((($smax)+(1))|0);
  $outIdx_08=0;$i_09=$startIdx;
  while(1) {


   $15=(($inHigh+($i_09<<3))|0);
   $16=(+(HEAPF64[(($15)>>3)]));
   $17=(($inLow+($i_09<<3))|0);
   $18=(+(HEAPF64[(($17)>>3)]));
   $19=($16)-($18);
   $20=$19<(1.0e-14);
   if ($20) {
    $22=(($outReal+($outIdx_08<<3))|0);
    HEAPF64[(($22)>>3)]=0.0;
   } else {
    $24=(($inClose+($i_09<<3))|0);
    $25=(+(HEAPF64[(($24)>>3)]));
    $26=(($inOpen+($i_09<<3))|0);
    $27=(+(HEAPF64[(($26)>>3)]));
    $28=($25)-($27);
    $29=($28)/($19);
    $30=(($outReal+($outIdx_08<<3))|0);
    HEAPF64[(($30)>>3)]=$29;
   }
   $outIdx_1=((($outIdx_08)+(1))|0);
   $32=((($i_09)+(1))|0);
   $33=($i_09|0)<($endIdx|0);
   if ($33) {
    $outIdx_08=$outIdx_1;$i_09=$32;
   } else {
    break;
   }
  }
  $34=((($13)-($startIdx))|0);
  $outIdx_0_lcssa=$34;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CCI($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $local_circBuffer=0,$1=0,$3=0,$4=0,$or_cond11=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInTimePeriod_off=0,$12=0,$_010=0,$14=0,$16=0,$17=0,$_startIdx=0,$18=0,$21=0;
 var $23=0,$25=0,$26=0,$27=0,$28=0,$30=0,$circBuffer_0=0,$32=0,$33=0,$34=0,$or_cond32=0,$35=0,$36=0,$smax28=0,$37=0,$38=0,$39=0,$smax29=0,$40=0,$smax30=0;
 var $i_2_ph=0,$circBuffer_Idx_2_ph=0,$41=0,$42=.0,$43=0,$44=0,$smax=0,$45=0,$circBuffer_Idx_022=0,$i_021=0,$47=0,$48=.0,$49=0,$50=.0,$51=.0,$52=0,$53=.0,$54=.0,$55=.0,$56=0;
 var $57=0,$58=0,$59=0,$_=0,$60=0,$i_2=0,$outIdx_0=0,$circBuffer_Idx_2=0,$62=0,$63=.0,$64=0,$65=.0,$66=.0,$67=0,$68=.0,$69=.0,$70=.0,$71=0,$j_013=0,$theAverage_012=.0;
 var $72=0,$73=.0,$74=.0,$75=0,$76=0,$theAverage_0_lcssa=.0,$77=.0,$j_115=0,$tempReal2_014=.0,$78=0,$79=.0,$80=.0,$81=.0,$82=.0,$83=0,$84=0,$85=.0,$86=0,$87=0,$or_cond7=0;
 var $89=.0,$90=.0,$91=.0,$92=0,$93=0,$outIdx_1=0,$95=0,$96=0,$_8=0,$97=0,$98=0,$100=0,$101=0,$102=0,$104=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+240)|0;
 $local_circBuffer=((sp)|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond11=$3|$4;
 if ($or_cond11) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $10=($optInTimePeriod|0)==-2147483648;
 do {
  if ($10) {
   $_010=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $12=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_010=$optInTimePeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $14=($outReal|0)==0;
 if ($14) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $16=((($_010)-(1))|0);
 $17=($16|0)>($startIdx|0);
 $_startIdx=($17?$16:$startIdx);
 $18=($_startIdx|0)>($endIdx|0);
 if ($18) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $21=($_010|0)<1;
 if ($21) {
  $_0=5137;

  STACKTOP=sp;return (($_0)|0);
 }
 $23=($_010|0)>30;
 do {
  if ($23) {
   $25=$_010<<3;
   $26=((_malloc($25))|0);
   $27=$26;
   $28=($26|0)==0;
   if ($28) {
    $_0=3;
   } else {
    $circBuffer_0=$27;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  } else {
   $30=(($local_circBuffer)|0);
   $circBuffer_0=$30;
  }
 } while(0);

 $32=((($_startIdx)-($16))|0);
 $33=($_010|0)>1;
 $34=($16|0)>0;
 $or_cond32=$33&$34;
 if ($or_cond32) {
  $35=((($_010)-(1))|0);
  $36=($35|0)<($startIdx|0);
  $smax28=($36?$startIdx:$35);
  $37=((($smax28)+(2))|0);
  $38=((($37)-($_010))|0);
  $39=($38|0)<($startIdx|0);
  $smax29=($39?$startIdx:$38);
  $40=($smax29|0)>($35|0);
  $i_021=$32;$circBuffer_Idx_022=0;
  while(1) {


   $47=(($inHigh+($i_021<<3))|0);
   $48=(+(HEAPF64[(($47)>>3)]));
   $49=(($inLow+($i_021<<3))|0);
   $50=(+(HEAPF64[(($49)>>3)]));
   $51=($48)+($50);
   $52=(($inClose+($i_021<<3))|0);
   $53=(+(HEAPF64[(($52)>>3)]));
   $54=($51)+($53);
   $55=($54)/((3.0));
   $56=(($circBuffer_0+($circBuffer_Idx_022<<3))|0);
   HEAPF64[(($56)>>3)]=$55;
   $57=((($i_021)+(1))|0);
   $58=((($circBuffer_Idx_022)+(1))|0);
   $59=($circBuffer_Idx_022|0)>=($16|0);
   $_=($59?0:$58);
   $60=($57|0)<($_startIdx|0);
   if ($60) {
    $i_021=$57;$circBuffer_Idx_022=$_;
   } else {
    break;
   }
  }
  $smax30=($40?$smax29:$35);
  $circBuffer_Idx_2_ph=$_;$i_2_ph=$smax30;
 } else {
  $circBuffer_Idx_2_ph=0;$i_2_ph=$32;
 }


 $41=($_010|0)>0;
 $42=(+((($_010|0))|0));
 $43=($_010|0)>0;
 $44=($i_2_ph|0)>($endIdx|0);
 $smax=($44?$i_2_ph:$endIdx);
 $45=((($smax)+(1))|0);
 $circBuffer_Idx_2=$circBuffer_Idx_2_ph;$outIdx_0=0;$i_2=$i_2_ph;
 while(1) {



  $62=(($inHigh+($i_2<<3))|0);
  $63=(+(HEAPF64[(($62)>>3)]));
  $64=(($inLow+($i_2<<3))|0);
  $65=(+(HEAPF64[(($64)>>3)]));
  $66=($63)+($65);
  $67=(($inClose+($i_2<<3))|0);
  $68=(+(HEAPF64[(($67)>>3)]));
  $69=($66)+($68);
  $70=($69)/((3.0));
  $71=(($circBuffer_0+($circBuffer_Idx_2<<3))|0);
  HEAPF64[(($71)>>3)]=$70;
  if ($41) {
   $theAverage_012=0.0;$j_013=0;
   while(1) {


    $72=(($circBuffer_0+($j_013<<3))|0);
    $73=(+(HEAPF64[(($72)>>3)]));
    $74=($theAverage_012)+($73);
    $75=((($j_013)+(1))|0);
    $76=($75|0)<($_010|0);
    if ($76) {
     $theAverage_012=$74;$j_013=$75;
    } else {
     $theAverage_0_lcssa=$74;
     break;
    }
   }
  } else {
   $theAverage_0_lcssa=0.0;
  }

  $77=($theAverage_0_lcssa)/($42);
  do {
   if ($43) {
    $tempReal2_014=0.0;$j_115=0;
    while(1) {


     $78=(($circBuffer_0+($j_115<<3))|0);
     $79=(+(HEAPF64[(($78)>>3)]));
     $80=($79)-($77);
     $81=(+(Math_abs((+($80)))));
     $82=($tempReal2_014)+($81);
     $83=((($j_115)+(1))|0);
     $84=($83|0)<($_010|0);
     if ($84) {
      $tempReal2_014=$82;$j_115=$83;
     } else {
      break;
     }
    }
    $85=($70)-($77);
    $86=$85!=(0.0);
    $87=$82!=(0.0);
    $or_cond7=$86&$87;
    if (!($or_cond7)) {
     label = 24;
     break;
    }
    $89=($82)/($42);
    $90=($89)*((0.015));
    $91=($85)/($90);
    $92=(($outReal+($outIdx_0<<3))|0);
    HEAPF64[(($92)>>3)]=$91;
   } else {
    label = 24;
   }
  } while(0);
  if ((label|0) == 24) {
   label = 0;
   $93=(($outReal+($outIdx_0<<3))|0);
   HEAPF64[(($93)>>3)]=0.0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $95=((($circBuffer_Idx_2)+(1))|0);
  $96=($circBuffer_Idx_2|0)>=($16|0);
  $_8=($96?0:$95);
  $97=((($i_2)+(1))|0);
  $98=($i_2|0)<($endIdx|0);
  if ($98) {
   $circBuffer_Idx_2=$_8;$outIdx_0=$outIdx_1;$i_2=$97;
  } else {
   break;
  }
 }
 $100=((($45)-($i_2_ph))|0);
 HEAP32[(($outNBElement)>>2)]=$100;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $101=(($local_circBuffer)|0);
 $102=($circBuffer_0|0)==($101|0);
 if ($102) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $104=$circBuffer_0;
 _free($104);
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDL2CROWS_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+168)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((($3)+(2))|0);
 return (($4)|0);
}


function _TA_CDL2CROWS($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond13=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$BodyLongPeriodTotal_0_lcssa=.0,$26=0,$smax=0,$27=0,$smax20=0,$28=0,$smax21=0,$i_019=0,$BodyLongPeriodTotal_018=.0,$31=0,$32=.0,$33=0,$34=.0;
 var $35=.0,$36=.0,$38=0,$39=.0,$40=0,$41=.0,$42=.0,$44=0,$45=.0,$46=0,$47=.0,$48=0,$49=.0,$50=0,$_=.0,$51=.0,$52=.0,$53=0,$54=.0,$55=.0;
 var $56=.0,$58=.0,$59=.0,$60=0,$61=0,$BodyLongPeriodTotal_1=.0,$i_1=0,$outIdx_0=0,$BodyLongTrailingIdx_0=0,$63=0,$64=0,$65=.0,$66=0,$67=.0,$68=0,$70=.0,$71=.0,$72=0,$73=0,$74=.0;
 var $75=0,$76=0,$77=0,$79=.0,$80=.0,$82=0,$83=0,$85=0,$86=.0,$87=0,$88=.0,$89=.0,$91=0,$93=0,$94=.0,$_9=.0,$95=.0,$96=0,$97=.0,$98=0;
 var $99=.0,$100=.0,$101=.0,$103=.0,$104=.0,$105=0,$106=0,$107=0,$108=0,$109=.0,$110=.0,$111=0,$113=0,$114=0,$115=.0,$116=0,$117=.0,$not_=0,$119=0,$_10=.0;
 var $120=.0,$121=.0,$122=0,$123=.0,$124=0,$126=0,$127=.0,$128=0,$129=.0,$not_7=0,$130=0,$or_cond14=0,$131=0,$or_cond15=0,$132=0,$or_cond16=0,$133=0,$or_cond17=0,$135=0,$137=0;
 var $outIdx_1=0,$139=0,$140=0,$141=0,$143=.0,$144=.0,$145=.0,$146=.0,$148=0,$149=.0,$150=0,$151=.0,$152=.0,$154=0,$155=.0,$156=.0,$157=.0,$158=0,$_11=.0,$159=.0;
 var $160=.0,$161=0,$162=.0,$163=.0,$164=.0,$166=.0,$167=0,$168=0,$169=0,$171=0,$172=.0,$173=0,$174=.0,$175=.0,$176=.0,$178=0,$179=.0,$180=0,$181=.0,$182=.0;
 var $184=0,$185=.0,$186=0,$187=.0,$188=0,$189=.0,$190=0,$_12=.0,$191=.0,$192=.0,$193=0,$194=.0,$195=.0,$196=.0,$198=.0,$199=.0,$200=.0,$201=0,$202=0,$203=0;
 var $205=0,$206=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond13=$10|$or_cond5_not;
 if ($or_cond13) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDL2CROWS_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((($_startIdx)-(2))|0);
 $18=((HEAP32[((272)>>2)])|0);
 $19=(($18+168)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((($17)-($20))|0);
 $22=($20|0)>0;
 if ($22) {
  $23=((HEAP32[((272)>>2)])|0);
  $24=(($23+164)|0);
  $25=((HEAP32[(($24)>>2)])|0);
  $BodyLongPeriodTotal_018=0.0;$i_019=$21;
  while(1) {


   if (((($25|0))|0)==((1)|0)) {
    $38=(($inHigh+($i_019<<3))|0);
    $39=(+(HEAPF64[(($38)>>3)]));
    $40=(($inLow+($i_019<<3))|0);
    $41=(+(HEAPF64[(($40)>>3)]));
    $42=($39)-($41);
    $58=$42;
   } else if (((($25|0))|0)==((0)|0)) {
    $31=(($inClose+($i_019<<3))|0);
    $32=(+(HEAPF64[(($31)>>3)]));
    $33=(($inOpen+($i_019<<3))|0);
    $34=(+(HEAPF64[(($33)>>3)]));
    $35=($32)-($34);
    $36=(+(Math_abs((+($35)))));
    $58=$36;
   } else if (((($25|0))|0)==((2)|0)) {
    $44=(($inHigh+($i_019<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=(($inClose+($i_019<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inOpen+($i_019<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=$47<$49;
    $_=($50?$49:$47);
    $51=($45)-($_);
    $52=($50?$47:$49);
    $53=(($inLow+($i_019<<3))|0);
    $54=(+(HEAPF64[(($53)>>3)]));
    $55=($52)-($54);
    $56=($51)+($55);
    $58=$56;
   } else {
    $58=0.0;
   }

   $59=($BodyLongPeriodTotal_018)+($58);
   $60=((($i_019)+(1))|0);
   $61=($60|0)<($17|0);
   if ($61) {
    $BodyLongPeriodTotal_018=$59;$i_019=$60;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$59;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $26=($12|0)>($endIdx|0);
 $smax=($26?$12:$endIdx);
 $27=($smax|0)>($startIdx|0);
 $smax20=($27?$smax:$startIdx);
 $28=($12|0)>($startIdx|0);
 $smax21=($28?$12:$startIdx);
 $BodyLongTrailingIdx_0=$21;$outIdx_0=0;$i_1=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;
 while(1) {




  $63=((($i_1)-(2))|0);
  $64=(($inClose+($63<<3))|0);
  $65=(+(HEAPF64[(($64)>>3)]));
  $66=(($inOpen+($63<<3))|0);
  $67=(+(HEAPF64[(($66)>>3)]));
  $68=$65>=$67;
  do {
   if ($68) {
    $70=($65)-($67);
    $71=(+(Math_abs((+($70)))));
    $72=((HEAP32[((272)>>2)])|0);
    $73=(($72+176)|0);
    $74=(+(HEAPF64[(($73)>>3)]));
    $75=(($72+168)|0);
    $76=((HEAP32[(($75)>>2)])|0);
    $77=($76|0)==0;
    do {
     if ($77) {
      $82=(($72+164)|0);
      $83=((HEAP32[(($82)>>2)])|0);
      if (((($83|0))|0)==((0)|0)) {
       $103=$71;
       break;
      } else if (((($83|0))|0)==((1)|0)) {
       $85=(($inHigh+($63<<3))|0);
       $86=(+(HEAPF64[(($85)>>3)]));
       $87=(($inLow+($63<<3))|0);
       $88=(+(HEAPF64[(($87)>>3)]));
       $89=($86)-($88);
       $103=$89;
       break;
      }
      $91=($83|0)==2;
      if (!($91)) {
       $103=0.0;
       break;
      }
      $93=(($inHigh+($63<<3))|0);
      $94=(+(HEAPF64[(($93)>>3)]));
      $_9=($68?$65:$67);
      $95=($94)-($_9);
      $96=$65<$67;
      $97=($96?$65:$67);
      $98=(($inLow+($63<<3))|0);
      $99=(+(HEAPF64[(($98)>>3)]));
      $100=($97)-($99);
      $101=($95)+($100);
      $103=$101;
     } else {
      $79=(+((($76|0))|0));
      $80=($BodyLongPeriodTotal_1)/($79);
      $103=$80;
     }
    } while(0);

    $104=($74)*($103);
    $105=((HEAP32[((272)>>2)])|0);
    $106=(($105+164)|0);
    $107=((HEAP32[(($106)>>2)])|0);
    $108=($107|0)==2;
    $109=($108?(2.0):(1.0));
    $110=($104)/($109);
    $111=$71>$110;
    if (!($111)) {
     label = 26;
     break;
    }
    $113=((($i_1)-(1))|0);
    $114=(($inClose+($113<<3))|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $116=(($inOpen+($113<<3))|0);
    $117=(+(HEAPF64[(($116)>>3)]));
    $not_=$115<$117;
    if (!($not_)) {
     label = 26;
     break;
    }
    $119=$117<$115;
    $_10=($119?$117:$115);
    $120=(+(HEAPF64[(($66)>>3)]));
    $121=(+(HEAPF64[(($64)>>3)]));
    $122=$120>$121;
    $123=($122?$120:$121);
    $124=$_10>$123;
    if (!($124)) {
     label = 26;
     break;
    }
    $126=(($inClose+($i_1<<3))|0);
    $127=(+(HEAPF64[(($126)>>3)]));
    $128=(($inOpen+($i_1<<3))|0);
    $129=(+(HEAPF64[(($128)>>3)]));
    $not_7=$127<$129;
    $130=$129<$117;
    $or_cond14=$not_7&$130;
    $131=$129>$115;
    $or_cond15=$or_cond14&$131;
    $132=$127>$120;
    $or_cond16=$or_cond15&$132;
    $133=$127<$121;
    $or_cond17=$or_cond16&$133;
    if (!($or_cond17)) {
     label = 26;
     break;
    }
    $135=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($135)>>2)]=-100;
   } else {
    label = 26;
   }
  } while(0);
  if ((label|0) == 26) {
   label = 0;
   $137=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($137)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $139=((HEAP32[((272)>>2)])|0);
  $140=(($139+164)|0);
  $141=((HEAP32[(($140)>>2)])|0);
  if (((($141|0))|0)==((0)|0)) {
   $143=(+(HEAPF64[(($64)>>3)]));
   $144=(+(HEAPF64[(($66)>>3)]));
   $145=($143)-($144);
   $146=(+(Math_abs((+($145)))));
   $166=$146;
  } else if (((($141|0))|0)==((2)|0)) {
   $154=(($inHigh+($63<<3))|0);
   $155=(+(HEAPF64[(($154)>>3)]));
   $156=(+(HEAPF64[(($64)>>3)]));
   $157=(+(HEAPF64[(($66)>>3)]));
   $158=$156<$157;
   $_11=($158?$157:$156);
   $159=($155)-($_11);
   $160=($158?$156:$157);
   $161=(($inLow+($63<<3))|0);
   $162=(+(HEAPF64[(($161)>>3)]));
   $163=($160)-($162);
   $164=($159)+($163);
   $166=$164;
  } else if (((($141|0))|0)==((1)|0)) {
   $148=(($inHigh+($63<<3))|0);
   $149=(+(HEAPF64[(($148)>>3)]));
   $150=(($inLow+($63<<3))|0);
   $151=(+(HEAPF64[(($150)>>3)]));
   $152=($149)-($151);
   $166=$152;
  } else {
   $166=0.0;
  }

  $167=((HEAP32[((272)>>2)])|0);
  $168=(($167+164)|0);
  $169=((HEAP32[(($168)>>2)])|0);
  if (((($169|0))|0)==((0)|0)) {
   $171=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $172=(+(HEAPF64[(($171)>>3)]));
   $173=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $174=(+(HEAPF64[(($173)>>3)]));
   $175=($172)-($174);
   $176=(+(Math_abs((+($175)))));
   $198=$176;
  } else if (((($169|0))|0)==((1)|0)) {
   $178=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $179=(+(HEAPF64[(($178)>>3)]));
   $180=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $181=(+(HEAPF64[(($180)>>3)]));
   $182=($179)-($181);
   $198=$182;
  } else if (((($169|0))|0)==((2)|0)) {
   $184=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $185=(+(HEAPF64[(($184)>>3)]));
   $186=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $187=(+(HEAPF64[(($186)>>3)]));
   $188=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $189=(+(HEAPF64[(($188)>>3)]));
   $190=$187<$189;
   $_12=($190?$189:$187);
   $191=($185)-($_12);
   $192=($190?$187:$189);
   $193=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $194=(+(HEAPF64[(($193)>>3)]));
   $195=($192)-($194);
   $196=($191)+($195);
   $198=$196;
  } else {
   $198=0.0;
  }

  $199=($166)-($198);
  $200=($BodyLongPeriodTotal_1)+($199);
  $201=((($i_1)+(1))|0);
  $202=((($BodyLongTrailingIdx_0)+(1))|0);
  $203=($i_1|0)<($endIdx|0);
  if ($203) {
   $BodyLongTrailingIdx_0=$202;$outIdx_0=$outIdx_1;$i_1=$201;$BodyLongPeriodTotal_1=$200;
  } else {
   break;
  }
 }
 $205=((($smax20)+(1))|0);
 $206=((($205)-($smax21))|0);
 HEAP32[(($outNBElement)>>2)]=$206;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDL3BLACKCROWS_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+336)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((($3)+(3))|0);
 return (($4)|0);
}


function _TA_CDL3BLACKCROWS($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $ShadowVeryShortPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond9=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond21=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$_promoted=.0,$_promoted24=.0,$_promoted25=.0,$29=0,$smax=0,$30=0,$smax28=0,$31=0,$smax29=0;
 var $33=.0,$34=.0,$35=.0,$i_023=0,$36=0,$37=0,$38=.0,$39=0,$40=.0,$41=.0,$42=.0,$43=0,$44=0,$45=.0,$46=0,$47=.0,$48=.0,$49=.0,$50=0,$51=.0;
 var $52=0,$53=.0,$54=.0,$55=.0,$56=0,$57=0,$58=.0,$59=0,$60=.0,$61=.0,$62=0,$63=0,$64=.0,$65=0,$66=.0,$67=.0,$68=0,$69=.0,$70=0,$71=.0;
 var $72=.0,$73=0,$74=0,$75=.0,$76=0,$77=.0,$78=0,$79=.0,$80=0,$_=.0,$81=.0,$82=.0,$83=0,$84=.0,$85=.0,$86=.0,$87=0,$88=0,$89=.0,$90=0;
 var $91=.0,$92=0,$93=.0,$94=0,$_10=.0,$95=.0,$96=.0,$97=0,$98=.0,$99=.0,$100=.0,$101=0,$102=.0,$103=0,$104=.0,$105=0,$106=.0,$107=0,$_11=.0,$108=.0;
 var $109=.0,$110=0,$111=.0,$112=.0,$113=.0,$_pn=.0,$_pn40=.0,$116=.0,$117=.0,$118=.0,$119=.0,$120=0,$121=0,$i_1=0,$outIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$123=0,$124=0,$125=.0,$126=0;
 var $127=.0,$128=0,$130=0,$131=0,$132=.0,$133=0,$134=.0,$135=0,$137=0,$138=.0,$139=.0,$140=0,$141=0,$142=.0,$143=0,$144=0,$145=0,$147=.0,$148=.0,$149=.0;
 var $151=0,$152=0,$154=.0,$155=.0,$157=0,$158=.0,$159=.0,$161=0,$162=.0,$163=0,$_13=.0,$164=.0,$165=.0,$166=.0,$167=.0,$169=.0,$170=.0,$171=0,$172=0,$173=0;
 var $174=0,$175=.0,$176=.0,$177=0,$179=0,$180=0,$181=.0,$182=0,$183=.0,$184=0,$186=0,$187=.0,$188=.0,$189=0,$190=.0,$191=0,$192=0,$193=0,$195=.0,$196=.0;
 var $197=.0,$200=.0,$201=.0,$203=0,$204=.0,$205=.0,$207=0,$208=.0,$209=0,$_15=.0,$210=.0,$211=.0,$212=.0,$213=.0,$215=.0,$216=.0,$217=0,$218=0,$219=0,$220=0;
 var $221=.0,$222=.0,$223=0,$225=0,$226=.0,$227=0,$228=.0,$229=0,$231=0,$232=.0,$233=.0,$234=0,$235=.0,$236=0,$237=0,$238=0,$240=.0,$241=.0,$242=.0,$245=.0;
 var $246=.0,$248=0,$249=.0,$250=.0,$252=0,$253=.0,$254=0,$_17=.0,$255=.0,$256=.0,$257=.0,$258=.0,$260=.0,$261=.0,$262=0,$263=0,$264=0,$265=0,$266=.0,$267=.0;
 var $268=0,$270=.0,$271=.0,$272=0,$274=.0,$275=0,$277=.0,$278=0,$280=.0,$281=0,$283=0,$284=.0,$285=0,$286=0,$or_cond18=0,$288=.0,$289=0,$291=0,$293=0,$295=0;
 var $296=0,$297=0,$totIdx_022=0,$299=0,$300=0,$301=.0,$302=0,$303=.0,$304=.0,$305=.0,$306=0,$307=0,$308=.0,$309=0,$310=.0,$311=.0,$312=.0,$313=0,$314=0,$315=.0;
 var $316=0,$317=.0,$318=.0,$319=0,$320=0,$321=.0,$322=0,$323=.0,$324=.0,$325=0,$326=0,$327=.0,$328=0,$329=.0,$330=0,$331=.0,$332=0,$_19=.0,$333=.0,$334=.0;
 var $335=0,$336=.0,$337=.0,$338=.0,$339=0,$340=0,$341=.0,$342=0,$343=.0,$344=0,$345=.0,$346=0,$_20=.0,$347=.0,$348=.0,$349=0,$350=.0,$351=.0,$352=.0,$354=.0;
 var $355=.0,$356=.0,$357=0,$358=.0,$359=.0,$360=0,$361=0,$outIdx_1=0,$363=0,$364=0,$365=0,$367=0,$368=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $ShadowVeryShortPeriodTotal=((sp)|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond9=$3|$4;
 if ($or_cond9) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond21=$10|$or_cond5_not;
 if ($or_cond21) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDL3BLACKCROWS_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=(($ShadowVeryShortPeriodTotal+16)|0);
 $18=(($ShadowVeryShortPeriodTotal+8)|0);
 $19=(($ShadowVeryShortPeriodTotal)|0);
 $20=$ShadowVeryShortPeriodTotal;
 _memset((((($20)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $21=((HEAP32[((272)>>2)])|0);
 $22=(($21+336)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=((($_startIdx)-($23))|0);
 $25=($23|0)>0;
 if ($25) {
  $26=((HEAP32[((272)>>2)])|0);
  $27=(($26+332)|0);
  $28=((HEAP32[(($27)>>2)])|0);
  $_promoted=(+(HEAPF64[(($17)>>3)]));
  $_promoted24=(+(HEAPF64[(($18)>>3)]));
  $_promoted25=(+(HEAPF64[(($19)>>3)]));
  $i_023=$24;$35=$_promoted;$34=$_promoted24;$33=$_promoted25;
  while(1) {




   if (((($28|0))|0)==((2)|0)) {
    $73=((($i_023)-(2))|0);
    $74=(($inHigh+($73<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inClose+($73<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=(($inOpen+($73<<3))|0);
    $79=(+(HEAPF64[(($78)>>3)]));
    $80=$77<$79;
    $_=($80?$79:$77);
    $81=($75)-($_);
    $82=($80?$77:$79);
    $83=(($inLow+($73<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $86=($81)+($85);
    $87=((($i_023)-(1))|0);
    $88=(($inHigh+($87<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=(($inClose+($87<<3))|0);
    $91=(+(HEAPF64[(($90)>>3)]));
    $92=(($inOpen+($87<<3))|0);
    $93=(+(HEAPF64[(($92)>>3)]));
    $94=$91<$93;
    $_10=($94?$93:$91);
    $95=($89)-($_10);
    $96=($94?$91:$93);
    $97=(($inLow+($87<<3))|0);
    $98=(+(HEAPF64[(($97)>>3)]));
    $99=($96)-($98);
    $100=($95)+($99);
    $101=(($inHigh+($i_023<<3))|0);
    $102=(+(HEAPF64[(($101)>>3)]));
    $103=(($inClose+($i_023<<3))|0);
    $104=(+(HEAPF64[(($103)>>3)]));
    $105=(($inOpen+($i_023<<3))|0);
    $106=(+(HEAPF64[(($105)>>3)]));
    $107=$104<$106;
    $_11=($107?$106:$104);
    $108=($102)-($_11);
    $109=($107?$104:$106);
    $110=(($inLow+($i_023<<3))|0);
    $111=(+(HEAPF64[(($110)>>3)]));
    $112=($109)-($111);
    $113=($108)+($112);
    $116=$113;$_pn40=$86;$_pn=$100;
   } else if (((($28|0))|0)==((0)|0)) {
    $36=((($i_023)-(2))|0);
    $37=(($inClose+($36<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=(($inOpen+($36<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=($38)-($40);
    $42=(+(Math_abs((+($41)))));
    $43=((($i_023)-(1))|0);
    $44=(($inClose+($43<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=(($inOpen+($43<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=($45)-($47);
    $49=(+(Math_abs((+($48)))));
    $50=(($inClose+($i_023<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inOpen+($i_023<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=($51)-($53);
    $55=(+(Math_abs((+($54)))));
    $116=$55;$_pn40=$42;$_pn=$49;
   } else if (((($28|0))|0)==((1)|0)) {
    $56=((($i_023)-(2))|0);
    $57=(($inHigh+($56<<3))|0);
    $58=(+(HEAPF64[(($57)>>3)]));
    $59=(($inLow+($56<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=((($i_023)-(1))|0);
    $63=(($inHigh+($62<<3))|0);
    $64=(+(HEAPF64[(($63)>>3)]));
    $65=(($inLow+($62<<3))|0);
    $66=(+(HEAPF64[(($65)>>3)]));
    $67=($64)-($66);
    $68=(($inHigh+($i_023<<3))|0);
    $69=(+(HEAPF64[(($68)>>3)]));
    $70=(($inLow+($i_023<<3))|0);
    $71=(+(HEAPF64[(($70)>>3)]));
    $72=($69)-($71);
    $116=$72;$_pn40=$61;$_pn=$67;
   } else {
    $116=0.0;$_pn40=0.0;$_pn=0.0;
   }



   $117=($_pn40)+($35);
   $118=($_pn)+($34);
   $119=($116)+($33);
   $120=((($i_023)+(1))|0);
   $121=($120|0)<($_startIdx|0);
   if ($121) {
    $i_023=$120;$35=$117;$34=$118;$33=$119;
   } else {
    break;
   }
  }
  HEAPF64[(($17)>>3)]=$117;
  HEAPF64[(($18)>>3)]=$118;
  HEAPF64[(($19)>>3)]=$119;
 }
 $29=($12|0)>($endIdx|0);
 $smax=($29?$12:$endIdx);
 $30=($smax|0)>($startIdx|0);
 $smax28=($30?$smax:$startIdx);
 $31=($12|0)>($startIdx|0);
 $smax29=($31?$12:$startIdx);
 $ShadowVeryShortTrailingIdx_0=$24;$outIdx_0=0;$i_1=$_startIdx;
 while(1) {



  $123=((($i_1)-(3))|0);
  $124=(($inClose+($123<<3))|0);
  $125=(+(HEAPF64[(($124)>>3)]));
  $126=(($inOpen+($123<<3))|0);
  $127=(+(HEAPF64[(($126)>>3)]));
  $128=$125<$127;
  do {
   if ($128) {
    label = 48;
   } else {
    $130=((($i_1)-(2))|0);
    $131=(($inClose+($130<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=(($inOpen+($130<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=$132<$134;
    if (!($135)) {
     label = 48;
     break;
    }
    $137=(($inLow+($130<<3))|0);
    $138=(+(HEAPF64[(($137)>>3)]));
    $139=($132)-($138);
    $140=((HEAP32[((272)>>2)])|0);
    $141=(($140+344)|0);
    $142=(+(HEAPF64[(($141)>>3)]));
    $143=(($140+336)|0);
    $144=((HEAP32[(($143)>>2)])|0);
    $145=($144|0)==0;
    do {
     if ($145) {
      $151=(($140+332)|0);
      $152=((HEAP32[(($151)>>2)])|0);
      if (((($152|0))|0)==((0)|0)) {
       $154=($132)-($134);
       $155=(+(Math_abs((+($154)))));
       $169=$155;
       break;
      } else if (((($152|0))|0)==((2)|0)) {
       $161=(($inHigh+($130<<3))|0);
       $162=(+(HEAPF64[(($161)>>3)]));
       $163=$132<$134;
       $_13=($163?$134:$132);
       $164=($162)-($_13);
       $165=($163?$132:$134);
       $166=($165)-($138);
       $167=($166)+($164);
       $169=$167;
       break;
      } else if (((($152|0))|0)==((1)|0)) {
       $157=(($inHigh+($130<<3))|0);
       $158=(+(HEAPF64[(($157)>>3)]));
       $159=($158)-($138);
       $169=$159;
       break;
      } else {
       $169=0.0;
       break;
      }
     } else {
      $147=(+((($144|0))|0));
      $148=(+(HEAPF64[(($17)>>3)]));
      $149=($148)/($147);
      $169=$149;
     }
    } while(0);

    $170=($142)*($169);
    $171=((HEAP32[((272)>>2)])|0);
    $172=(($171+332)|0);
    $173=((HEAP32[(($172)>>2)])|0);
    $174=($173|0)==2;
    $175=($174?(2.0):(1.0));
    $176=($170)/($175);
    $177=$139<$176;
    if (!($177)) {
     label = 48;
     break;
    }
    $179=((($i_1)-(1))|0);
    $180=(($inClose+($179<<3))|0);
    $181=(+(HEAPF64[(($180)>>3)]));
    $182=(($inOpen+($179<<3))|0);
    $183=(+(HEAPF64[(($182)>>3)]));
    $184=$181<$183;
    if (!($184)) {
     label = 48;
     break;
    }
    $186=(($inLow+($179<<3))|0);
    $187=(+(HEAPF64[(($186)>>3)]));
    $188=($181)-($187);
    $189=(($171+344)|0);
    $190=(+(HEAPF64[(($189)>>3)]));
    $191=(($171+336)|0);
    $192=((HEAP32[(($191)>>2)])|0);
    $193=($192|0)==0;
    do {
     if ($193) {
      if (((($173|0))|0)==((2)|0)) {
       $207=(($inHigh+($179<<3))|0);
       $208=(+(HEAPF64[(($207)>>3)]));
       $209=$181<$183;
       $_15=($209?$183:$181);
       $210=($208)-($_15);
       $211=($209?$181:$183);
       $212=($211)-($187);
       $213=($212)+($210);
       $215=$213;
       break;
      } else if (((($173|0))|0)==((1)|0)) {
       $203=(($inHigh+($179<<3))|0);
       $204=(+(HEAPF64[(($203)>>3)]));
       $205=($204)-($187);
       $215=$205;
       break;
      } else if (((($173|0))|0)==((0)|0)) {
       $200=($181)-($183);
       $201=(+(Math_abs((+($200)))));
       $215=$201;
       break;
      } else {
       $215=0.0;
       break;
      }
     } else {
      $195=(+((($192|0))|0));
      $196=(+(HEAPF64[(($18)>>3)]));
      $197=($196)/($195);
      $215=$197;
     }
    } while(0);

    $216=($190)*($215);
    $217=((HEAP32[((272)>>2)])|0);
    $218=(($217+332)|0);
    $219=((HEAP32[(($218)>>2)])|0);
    $220=($219|0)==2;
    $221=($220?(2.0):(1.0));
    $222=($216)/($221);
    $223=$188<$222;
    if (!($223)) {
     label = 48;
     break;
    }
    $225=(($inClose+($i_1<<3))|0);
    $226=(+(HEAPF64[(($225)>>3)]));
    $227=(($inOpen+($i_1<<3))|0);
    $228=(+(HEAPF64[(($227)>>3)]));
    $229=$226<$228;
    if (!($229)) {
     label = 48;
     break;
    }
    $231=(($inLow+($i_1<<3))|0);
    $232=(+(HEAPF64[(($231)>>3)]));
    $233=($226)-($232);
    $234=(($217+344)|0);
    $235=(+(HEAPF64[(($234)>>3)]));
    $236=(($217+336)|0);
    $237=((HEAP32[(($236)>>2)])|0);
    $238=($237|0)==0;
    do {
     if ($238) {
      if (((($219|0))|0)==((0)|0)) {
       $245=($226)-($228);
       $246=(+(Math_abs((+($245)))));
       $260=$246;
       break;
      } else if (((($219|0))|0)==((1)|0)) {
       $248=(($inHigh+($i_1<<3))|0);
       $249=(+(HEAPF64[(($248)>>3)]));
       $250=($249)-($232);
       $260=$250;
       break;
      } else if (((($219|0))|0)==((2)|0)) {
       $252=(($inHigh+($i_1<<3))|0);
       $253=(+(HEAPF64[(($252)>>3)]));
       $254=$226<$228;
       $_17=($254?$228:$226);
       $255=($253)-($_17);
       $256=($254?$226:$228);
       $257=($256)-($232);
       $258=($257)+($255);
       $260=$258;
       break;
      } else {
       $260=0.0;
       break;
      }
     } else {
      $240=(+((($237|0))|0));
      $241=(+(HEAPF64[(($19)>>3)]));
      $242=($241)/($240);
      $260=$242;
     }
    } while(0);

    $261=($235)*($260);
    $262=((HEAP32[((272)>>2)])|0);
    $263=(($262+332)|0);
    $264=((HEAP32[(($263)>>2)])|0);
    $265=($264|0)==2;
    $266=($265?(2.0):(1.0));
    $267=($261)/($266);
    $268=$233<$267;
    if (!($268)) {
     label = 48;
     break;
    }
    $270=(+(HEAPF64[(($182)>>3)]));
    $271=(+(HEAPF64[(($133)>>3)]));
    $272=$270<$271;
    if (!($272)) {
     label = 48;
     break;
    }
    $274=(+(HEAPF64[(($131)>>3)]));
    $275=$270>$274;
    if (!($275)) {
     label = 48;
     break;
    }
    $277=(+(HEAPF64[(($227)>>3)]));
    $278=$277<$270;
    if (!($278)) {
     label = 48;
     break;
    }
    $280=(+(HEAPF64[(($180)>>3)]));
    $281=$277>$280;
    if (!($281)) {
     label = 48;
     break;
    }
    $283=(($inHigh+($123<<3))|0);
    $284=(+(HEAPF64[(($283)>>3)]));
    $285=$284>$274;
    $286=$274>$280;
    $or_cond18=$285&$286;
    if (!($or_cond18)) {
     label = 48;
     break;
    }
    $288=(+(HEAPF64[(($225)>>3)]));
    $289=$280>$288;
    if (!($289)) {
     label = 48;
     break;
    }
    $291=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($291)>>2)]=-100;
   }
  } while(0);
  if ((label|0) == 48) {
   label = 0;
   $293=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($293)>>2)]=0;
  }
  $295=((HEAP32[((272)>>2)])|0);
  $296=(($295+332)|0);
  $297=((HEAP32[(($296)>>2)])|0);
  $totIdx_022=2;
  while(1) {

   if (((($297|0))|0)==((0)|0)) {
    $299=((($i_1)-($totIdx_022))|0);
    $300=(($inClose+($299<<3))|0);
    $301=(+(HEAPF64[(($300)>>3)]));
    $302=(($inOpen+($299<<3))|0);
    $303=(+(HEAPF64[(($302)>>3)]));
    $304=($301)-($303);
    $305=(+(Math_abs((+($304)))));
    $306=((($ShadowVeryShortTrailingIdx_0)-($totIdx_022))|0);
    $307=(($inClose+($306<<3))|0);
    $308=(+(HEAPF64[(($307)>>3)]));
    $309=(($inOpen+($306<<3))|0);
    $310=(+(HEAPF64[(($309)>>3)]));
    $311=($308)-($310);
    $312=(+(Math_abs((+($311)))));
    $355=$312;$354=$305;
   } else if (((($297|0))|0)==((1)|0)) {
    $313=((($i_1)-($totIdx_022))|0);
    $314=(($inHigh+($313<<3))|0);
    $315=(+(HEAPF64[(($314)>>3)]));
    $316=(($inLow+($313<<3))|0);
    $317=(+(HEAPF64[(($316)>>3)]));
    $318=($315)-($317);
    $319=((($ShadowVeryShortTrailingIdx_0)-($totIdx_022))|0);
    $320=(($inHigh+($319<<3))|0);
    $321=(+(HEAPF64[(($320)>>3)]));
    $322=(($inLow+($319<<3))|0);
    $323=(+(HEAPF64[(($322)>>3)]));
    $324=($321)-($323);
    $355=$324;$354=$318;
   } else if (((($297|0))|0)==((2)|0)) {
    $325=((($i_1)-($totIdx_022))|0);
    $326=(($inHigh+($325<<3))|0);
    $327=(+(HEAPF64[(($326)>>3)]));
    $328=(($inClose+($325<<3))|0);
    $329=(+(HEAPF64[(($328)>>3)]));
    $330=(($inOpen+($325<<3))|0);
    $331=(+(HEAPF64[(($330)>>3)]));
    $332=$329<$331;
    $_19=($332?$331:$329);
    $333=($327)-($_19);
    $334=($332?$329:$331);
    $335=(($inLow+($325<<3))|0);
    $336=(+(HEAPF64[(($335)>>3)]));
    $337=($334)-($336);
    $338=($333)+($337);
    $339=((($ShadowVeryShortTrailingIdx_0)-($totIdx_022))|0);
    $340=(($inHigh+($339<<3))|0);
    $341=(+(HEAPF64[(($340)>>3)]));
    $342=(($inClose+($339<<3))|0);
    $343=(+(HEAPF64[(($342)>>3)]));
    $344=(($inOpen+($339<<3))|0);
    $345=(+(HEAPF64[(($344)>>3)]));
    $346=$343<$345;
    $_20=($346?$345:$343);
    $347=($341)-($_20);
    $348=($346?$343:$345);
    $349=(($inLow+($339<<3))|0);
    $350=(+(HEAPF64[(($349)>>3)]));
    $351=($348)-($350);
    $352=($347)+($351);
    $355=$352;$354=$338;
   } else {
    $355=0.0;$354=0.0;
   }


   $356=($354)-($355);
   $357=(($ShadowVeryShortPeriodTotal+($totIdx_022<<3))|0);
   $358=(+(HEAPF64[(($357)>>3)]));
   $359=($358)+($356);
   HEAPF64[(($357)>>3)]=$359;
   $360=((($totIdx_022)-(1))|0);
   $361=($totIdx_022|0)>0;
   if ($361) {
    $totIdx_022=$360;
   } else {
    break;
   }
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $363=((($i_1)+(1))|0);
  $364=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $365=($i_1|0)<($endIdx|0);
  if ($365) {
   $ShadowVeryShortTrailingIdx_0=$364;$outIdx_0=$outIdx_1;$i_1=$363;
  } else {
   break;
  }
 }
 $367=((($smax28)+(1))|0);
 $368=((($367)-($smax29))|0);
 HEAP32[(($outNBElement)>>2)]=$368;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDL3INSIDE_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(2))|0);
 return (($7)|0);
}


function _TA_CDL3INSIDE($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond20=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$BodyLongPeriodTotal_0_lcssa=.0,$30=0,$31=0,$32=0,$33=0,$i_025=0,$BodyLongPeriodTotal_024=.0,$36=0,$37=.0;
 var $38=0,$39=.0,$40=.0,$41=.0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$49=0,$50=.0,$51=0,$52=.0,$53=0,$54=.0,$55=0,$_=.0,$56=.0,$57=.0,$58=0;
 var $59=.0,$60=.0,$61=.0,$63=.0,$64=.0,$65=0,$66=0,$BodyShortPeriodTotal_0_lcssa=.0,$67=0,$smax=0,$68=0,$smax28=0,$69=0,$smax29=0,$i_123=0,$BodyShortPeriodTotal_022=.0,$72=0,$73=.0,$74=0,$75=.0;
 var $76=.0,$77=.0,$79=0,$80=.0,$81=0,$82=.0,$83=.0,$85=0,$86=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$_9=.0,$92=.0,$93=.0,$94=0,$95=.0,$96=.0;
 var $97=.0,$99=.0,$100=.0,$101=0,$102=0,$BodyShortPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$104=0,$105=0,$106=.0,$107=0,$108=.0,$109=.0,$110=.0,$111=0,$112=0;
 var $113=.0,$114=0,$115=0,$116=0,$118=.0,$119=.0,$121=0,$122=0,$124=0,$125=.0,$126=0,$127=.0,$128=.0,$130=0,$132=0,$133=.0,$134=0,$_10=.0,$135=.0,$136=.0;
 var $137=0,$138=.0,$139=.0,$140=.0,$142=.0,$143=.0,$144=0,$145=0,$146=0,$147=0,$148=.0,$149=.0,$150=0,$152=0,$153=0,$154=.0,$155=0,$156=.0,$157=.0,$158=.0;
 var $159=0,$160=.0,$161=0,$162=0,$163=0,$165=.0,$166=.0,$168=0,$169=0,$171=0,$172=.0,$173=0,$174=.0,$175=.0,$177=0,$179=0,$180=.0,$181=0,$_11=.0,$182=.0;
 var $183=.0,$184=0,$185=.0,$186=.0,$187=.0,$189=.0,$190=.0,$191=0,$192=0,$193=0,$194=0,$195=.0,$196=.0,$197=0,$199=.0,$200=.0,$201=0,$_12=.0,$202=.0,$203=.0;
 var $204=0,$205=.0,$206=0,$208=0,$_13=.0,$209=0,$210=.0,$211=0,$213=0,$215=0,$216=.0,$217=0,$218=.0,$not_7=0,$219=0,$or_cond14=0,$221=.0,$222=.0,$not_=0,$224=0;
 var $225=.0,$226=0,$227=.0,$228=0,$229=0,$or_cond15=0,$231=.0,$232=.0,$233=0,$234=0,$235=0,$237=0,$outIdx_1=0,$239=0,$240=0,$241=0,$243=.0,$244=.0,$245=.0,$246=.0;
 var $248=0,$249=.0,$250=0,$251=.0,$252=.0,$254=0,$255=.0,$256=.0,$257=.0,$258=0,$_16=.0,$259=.0,$260=.0,$261=0,$262=.0,$263=.0,$264=.0,$266=.0,$267=0,$268=0;
 var $269=0,$271=0,$272=.0,$273=0,$274=.0,$275=.0,$276=.0,$278=0,$279=.0,$280=0,$281=.0,$282=.0,$284=0,$285=.0,$286=0,$287=.0,$288=0,$289=.0,$290=0,$_17=.0;
 var $291=.0,$292=.0,$293=0,$294=.0,$295=.0,$296=.0,$298=.0,$299=.0,$300=.0,$301=0,$302=0,$303=0,$305=0,$306=0,$307=.0,$308=0,$309=.0,$310=.0,$311=.0,$313=0;
 var $314=0,$315=.0,$316=0,$317=.0,$318=.0,$320=0,$321=0,$322=.0,$323=0,$324=.0,$325=0,$326=.0,$327=0,$_18=.0,$328=.0,$329=.0,$330=0,$331=.0,$332=.0,$333=.0;
 var $335=.0,$336=0,$337=0,$338=0,$340=0,$341=.0,$342=0,$343=.0,$344=.0,$345=.0,$347=0,$348=.0,$349=0,$350=.0,$351=.0,$353=0,$354=.0,$355=0,$356=.0,$357=0;
 var $358=.0,$359=0,$_19=.0,$360=.0,$361=.0,$362=0,$363=.0,$364=.0,$365=.0,$367=.0,$368=.0,$369=.0,$370=0,$371=0,$372=0,$373=0,$375=0,$376=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond20=$10|$or_cond5_not;
 if ($or_cond20) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDL3INSIDE_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((($_startIdx)-(2))|0);
 $18=((HEAP32[((272)>>2)])|0);
 $19=(($18+168)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((($17)-($20))|0);
 $22=((($_startIdx)-(1))|0);
 $23=(($18+216)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=((($22)-($24))|0);
 $26=($20|0)>0;
 if ($26) {
  $27=((HEAP32[((272)>>2)])|0);
  $28=(($27+164)|0);
  $29=((HEAP32[(($28)>>2)])|0);
  $BodyLongPeriodTotal_024=0.0;$i_025=$21;
  while(1) {


   if (((($29|0))|0)==((1)|0)) {
    $43=(($inHigh+($i_025<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=(($inLow+($i_025<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=($44)-($46);
    $63=$47;
   } else if (((($29|0))|0)==((0)|0)) {
    $36=(($inClose+($i_025<<3))|0);
    $37=(+(HEAPF64[(($36)>>3)]));
    $38=(($inOpen+($i_025<<3))|0);
    $39=(+(HEAPF64[(($38)>>3)]));
    $40=($37)-($39);
    $41=(+(Math_abs((+($40)))));
    $63=$41;
   } else if (((($29|0))|0)==((2)|0)) {
    $49=(($inHigh+($i_025<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=(($inClose+($i_025<<3))|0);
    $52=(+(HEAPF64[(($51)>>3)]));
    $53=(($inOpen+($i_025<<3))|0);
    $54=(+(HEAPF64[(($53)>>3)]));
    $55=$52<$54;
    $_=($55?$54:$52);
    $56=($50)-($_);
    $57=($55?$52:$54);
    $58=(($inLow+($i_025<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=($57)-($59);
    $61=($56)+($60);
    $63=$61;
   } else {
    $63=0.0;
   }

   $64=($BodyLongPeriodTotal_024)+($63);
   $65=((($i_025)+(1))|0);
   $66=($65|0)<($17|0);
   if ($66) {
    $BodyLongPeriodTotal_024=$64;$i_025=$65;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$64;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $30=($24|0)>0;
 if ($30) {
  $31=((HEAP32[((272)>>2)])|0);
  $32=(($31+212)|0);
  $33=((HEAP32[(($32)>>2)])|0);
  $BodyShortPeriodTotal_022=0.0;$i_123=$25;
  while(1) {


   if (((($33|0))|0)==((1)|0)) {
    $79=(($inHigh+($i_123<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=(($inLow+($i_123<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=($80)-($82);
    $99=$83;
   } else if (((($33|0))|0)==((0)|0)) {
    $72=(($inClose+($i_123<<3))|0);
    $73=(+(HEAPF64[(($72)>>3)]));
    $74=(($inOpen+($i_123<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=($73)-($75);
    $77=(+(Math_abs((+($76)))));
    $99=$77;
   } else if (((($33|0))|0)==((2)|0)) {
    $85=(($inHigh+($i_123<<3))|0);
    $86=(+(HEAPF64[(($85)>>3)]));
    $87=(($inClose+($i_123<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inOpen+($i_123<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=$88<$90;
    $_9=($91?$90:$88);
    $92=($86)-($_9);
    $93=($91?$88:$90);
    $94=(($inLow+($i_123<<3))|0);
    $95=(+(HEAPF64[(($94)>>3)]));
    $96=($93)-($95);
    $97=($92)+($96);
    $99=$97;
   } else {
    $99=0.0;
   }

   $100=($BodyShortPeriodTotal_022)+($99);
   $101=((($i_123)+(1))|0);
   $102=($101|0)<($22|0);
   if ($102) {
    $BodyShortPeriodTotal_022=$100;$i_123=$101;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$100;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;
 }

 $67=($12|0)>($endIdx|0);
 $smax=($67?$12:$endIdx);
 $68=($smax|0)>($startIdx|0);
 $smax28=($68?$smax:$startIdx);
 $69=($12|0)>($startIdx|0);
 $smax29=($69?$12:$startIdx);
 $BodyLongTrailingIdx_0=$21;$BodyShortTrailingIdx_0=$25;$outIdx_0=0;$i_2=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;
 while(1) {






  $104=((($i_2)-(2))|0);
  $105=(($inClose+($104<<3))|0);
  $106=(+(HEAPF64[(($105)>>3)]));
  $107=(($inOpen+($104<<3))|0);
  $108=(+(HEAPF64[(($107)>>3)]));
  $109=($106)-($108);
  $110=(+(Math_abs((+($109)))));
  $111=((HEAP32[((272)>>2)])|0);
  $112=(($111+176)|0);
  $113=(+(HEAPF64[(($112)>>3)]));
  $114=(($111+168)|0);
  $115=((HEAP32[(($114)>>2)])|0);
  $116=($115|0)==0;
  do {
   if ($116) {
    $121=(($111+164)|0);
    $122=((HEAP32[(($121)>>2)])|0);
    if (((($122|0))|0)==((0)|0)) {
     $142=$110;
     break;
    } else if (((($122|0))|0)==((1)|0)) {
     $124=(($inHigh+($104<<3))|0);
     $125=(+(HEAPF64[(($124)>>3)]));
     $126=(($inLow+($104<<3))|0);
     $127=(+(HEAPF64[(($126)>>3)]));
     $128=($125)-($127);
     $142=$128;
     break;
    }
    $130=($122|0)==2;
    if (!($130)) {
     $142=0.0;
     break;
    }
    $132=(($inHigh+($104<<3))|0);
    $133=(+(HEAPF64[(($132)>>3)]));
    $134=$106<$108;
    $_10=($134?$108:$106);
    $135=($133)-($_10);
    $136=($134?$106:$108);
    $137=(($inLow+($104<<3))|0);
    $138=(+(HEAPF64[(($137)>>3)]));
    $139=($136)-($138);
    $140=($135)+($139);
    $142=$140;
   } else {
    $118=(+((($115|0))|0));
    $119=($BodyLongPeriodTotal_1)/($118);
    $142=$119;
   }
  } while(0);

  $143=($113)*($142);
  $144=((HEAP32[((272)>>2)])|0);
  $145=(($144+164)|0);
  $146=((HEAP32[(($145)>>2)])|0);
  $147=($146|0)==2;
  $148=($147?(2.0):(1.0));
  $149=($143)/($148);
  $150=$110>$149;
  do {
   if ($150) {
    $152=((($i_2)-(1))|0);
    $153=(($inClose+($152<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=(($inOpen+($152<<3))|0);
    $156=(+(HEAPF64[(($155)>>3)]));
    $157=($154)-($156);
    $158=(+(Math_abs((+($157)))));
    $159=(($144+224)|0);
    $160=(+(HEAPF64[(($159)>>3)]));
    $161=(($144+216)|0);
    $162=((HEAP32[(($161)>>2)])|0);
    $163=($162|0)==0;
    do {
     if ($163) {
      $168=(($144+212)|0);
      $169=((HEAP32[(($168)>>2)])|0);
      if (((($169|0))|0)==((1)|0)) {
       $171=(($inHigh+($152<<3))|0);
       $172=(+(HEAPF64[(($171)>>3)]));
       $173=(($inLow+($152<<3))|0);
       $174=(+(HEAPF64[(($173)>>3)]));
       $175=($172)-($174);
       $189=$175;
       break;
      } else if (((($169|0))|0)==((0)|0)) {
       $189=$158;
       break;
      }
      $177=($169|0)==2;
      if (!($177)) {
       $189=0.0;
       break;
      }
      $179=(($inHigh+($152<<3))|0);
      $180=(+(HEAPF64[(($179)>>3)]));
      $181=$154<$156;
      $_11=($181?$156:$154);
      $182=($180)-($_11);
      $183=($181?$154:$156);
      $184=(($inLow+($152<<3))|0);
      $185=(+(HEAPF64[(($184)>>3)]));
      $186=($183)-($185);
      $187=($182)+($186);
      $189=$187;
     } else {
      $165=(+((($162|0))|0));
      $166=($BodyShortPeriodTotal_1)/($165);
      $189=$166;
     }
    } while(0);

    $190=($160)*($189);
    $191=((HEAP32[((272)>>2)])|0);
    $192=(($191+212)|0);
    $193=((HEAP32[(($192)>>2)])|0);
    $194=($193|0)==2;
    $195=($194?(2.0):(1.0));
    $196=($190)/($195);
    $197=$158>$196;
    if ($197) {
     label = 42;
     break;
    }
    $199=(+(HEAPF64[(($153)>>3)]));
    $200=(+(HEAPF64[(($155)>>3)]));
    $201=$199>$200;
    $_12=($201?$199:$200);
    $202=(+(HEAPF64[(($105)>>3)]));
    $203=(+(HEAPF64[(($107)>>3)]));
    $204=$202>$203;
    $205=($204?$202:$203);
    $206=$_12<$205;
    if (!($206)) {
     label = 42;
     break;
    }
    $208=$199<$200;
    $_13=($208?$199:$200);
    $209=$202<$203;
    $210=($209?$202:$203);
    $211=$_13>$210;
    if (!($211)) {
     label = 42;
     break;
    }
    $213=$202<$203;
    if ($213) {
     label = 39;
    } else {
     $215=(($inClose+($i_2<<3))|0);
     $216=(+(HEAPF64[(($215)>>3)]));
     $217=(($inOpen+($i_2<<3))|0);
     $218=(+(HEAPF64[(($217)>>3)]));
     $not_7=$216<$218;
     $219=$216<$203;
     $or_cond14=$not_7&$219;
     if (!($or_cond14)) {
      label = 39;
     }
    }
    if ((label|0) == 39) {
     label = 0;
     $221=(+(HEAPF64[(($105)>>3)]));
     $222=(+(HEAPF64[(($107)>>3)]));
     $not_=$221<$222;
     if (!($not_)) {
      label = 42;
      break;
     }
     $224=(($inClose+($i_2<<3))|0);
     $225=(+(HEAPF64[(($224)>>3)]));
     $226=(($inOpen+($i_2<<3))|0);
     $227=(+(HEAPF64[(($226)>>3)]));
     $228=$225>=$227;
     $229=$225>$222;
     $or_cond15=$228&$229;
     if (!($or_cond15)) {
      label = 42;
      break;
     }
    }
    $231=(+(HEAPF64[(($105)>>3)]));
    $232=(+(HEAPF64[(($107)>>3)]));
    $233=$231>=$232;
    $234=($233?-100:100);
    $235=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($235)>>2)]=$234;
   } else {
    label = 42;
   }
  } while(0);
  if ((label|0) == 42) {
   label = 0;
   $237=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($237)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $239=((HEAP32[((272)>>2)])|0);
  $240=(($239+164)|0);
  $241=((HEAP32[(($240)>>2)])|0);
  if (((($241|0))|0)==((2)|0)) {
   $254=(($inHigh+($104<<3))|0);
   $255=(+(HEAPF64[(($254)>>3)]));
   $256=(+(HEAPF64[(($105)>>3)]));
   $257=(+(HEAPF64[(($107)>>3)]));
   $258=$256<$257;
   $_16=($258?$257:$256);
   $259=($255)-($_16);
   $260=($258?$256:$257);
   $261=(($inLow+($104<<3))|0);
   $262=(+(HEAPF64[(($261)>>3)]));
   $263=($260)-($262);
   $264=($259)+($263);
   $266=$264;
  } else if (((($241|0))|0)==((0)|0)) {
   $243=(+(HEAPF64[(($105)>>3)]));
   $244=(+(HEAPF64[(($107)>>3)]));
   $245=($243)-($244);
   $246=(+(Math_abs((+($245)))));
   $266=$246;
  } else if (((($241|0))|0)==((1)|0)) {
   $248=(($inHigh+($104<<3))|0);
   $249=(+(HEAPF64[(($248)>>3)]));
   $250=(($inLow+($104<<3))|0);
   $251=(+(HEAPF64[(($250)>>3)]));
   $252=($249)-($251);
   $266=$252;
  } else {
   $266=0.0;
  }

  $267=((HEAP32[((272)>>2)])|0);
  $268=(($267+164)|0);
  $269=((HEAP32[(($268)>>2)])|0);
  if (((($269|0))|0)==((1)|0)) {
   $278=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $279=(+(HEAPF64[(($278)>>3)]));
   $280=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $281=(+(HEAPF64[(($280)>>3)]));
   $282=($279)-($281);
   $298=$282;
  } else if (((($269|0))|0)==((2)|0)) {
   $284=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $285=(+(HEAPF64[(($284)>>3)]));
   $286=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $287=(+(HEAPF64[(($286)>>3)]));
   $288=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $289=(+(HEAPF64[(($288)>>3)]));
   $290=$287<$289;
   $_17=($290?$289:$287);
   $291=($285)-($_17);
   $292=($290?$287:$289);
   $293=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $294=(+(HEAPF64[(($293)>>3)]));
   $295=($292)-($294);
   $296=($291)+($295);
   $298=$296;
  } else if (((($269|0))|0)==((0)|0)) {
   $271=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $272=(+(HEAPF64[(($271)>>3)]));
   $273=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $274=(+(HEAPF64[(($273)>>3)]));
   $275=($272)-($274);
   $276=(+(Math_abs((+($275)))));
   $298=$276;
  } else {
   $298=0.0;
  }

  $299=($266)-($298);
  $300=($BodyLongPeriodTotal_1)+($299);
  $301=((HEAP32[((272)>>2)])|0);
  $302=(($301+212)|0);
  $303=((HEAP32[(($302)>>2)])|0);
  if (((($303|0))|0)==((1)|0)) {
   $313=((($i_2)-(1))|0);
   $314=(($inHigh+($313<<3))|0);
   $315=(+(HEAPF64[(($314)>>3)]));
   $316=(($inLow+($313<<3))|0);
   $317=(+(HEAPF64[(($316)>>3)]));
   $318=($315)-($317);
   $335=$318;
  } else if (((($303|0))|0)==((2)|0)) {
   $320=((($i_2)-(1))|0);
   $321=(($inHigh+($320<<3))|0);
   $322=(+(HEAPF64[(($321)>>3)]));
   $323=(($inClose+($320<<3))|0);
   $324=(+(HEAPF64[(($323)>>3)]));
   $325=(($inOpen+($320<<3))|0);
   $326=(+(HEAPF64[(($325)>>3)]));
   $327=$324<$326;
   $_18=($327?$326:$324);
   $328=($322)-($_18);
   $329=($327?$324:$326);
   $330=(($inLow+($320<<3))|0);
   $331=(+(HEAPF64[(($330)>>3)]));
   $332=($329)-($331);
   $333=($328)+($332);
   $335=$333;
  } else if (((($303|0))|0)==((0)|0)) {
   $305=((($i_2)-(1))|0);
   $306=(($inClose+($305<<3))|0);
   $307=(+(HEAPF64[(($306)>>3)]));
   $308=(($inOpen+($305<<3))|0);
   $309=(+(HEAPF64[(($308)>>3)]));
   $310=($307)-($309);
   $311=(+(Math_abs((+($310)))));
   $335=$311;
  } else {
   $335=0.0;
  }

  $336=((HEAP32[((272)>>2)])|0);
  $337=(($336+212)|0);
  $338=((HEAP32[(($337)>>2)])|0);
  if (((($338|0))|0)==((1)|0)) {
   $347=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $348=(+(HEAPF64[(($347)>>3)]));
   $349=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $350=(+(HEAPF64[(($349)>>3)]));
   $351=($348)-($350);
   $367=$351;
  } else if (((($338|0))|0)==((2)|0)) {
   $353=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $354=(+(HEAPF64[(($353)>>3)]));
   $355=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $356=(+(HEAPF64[(($355)>>3)]));
   $357=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $358=(+(HEAPF64[(($357)>>3)]));
   $359=$356<$358;
   $_19=($359?$358:$356);
   $360=($354)-($_19);
   $361=($359?$356:$358);
   $362=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $363=(+(HEAPF64[(($362)>>3)]));
   $364=($361)-($363);
   $365=($360)+($364);
   $367=$365;
  } else if (((($338|0))|0)==((0)|0)) {
   $340=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $341=(+(HEAPF64[(($340)>>3)]));
   $342=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $343=(+(HEAPF64[(($342)>>3)]));
   $344=($341)-($343);
   $345=(+(Math_abs((+($344)))));
   $367=$345;
  } else {
   $367=0.0;
  }

  $368=($335)-($367);
  $369=($BodyShortPeriodTotal_1)+($368);
  $370=((($i_2)+(1))|0);
  $371=((($BodyLongTrailingIdx_0)+(1))|0);
  $372=((($BodyShortTrailingIdx_0)+(1))|0);
  $373=($i_2|0)<($endIdx|0);
  if ($373) {
   $BodyLongTrailingIdx_0=$371;$BodyShortTrailingIdx_0=$372;$outIdx_0=$outIdx_1;$i_2=$370;$BodyLongPeriodTotal_1=$300;$BodyShortPeriodTotal_1=$369;
  } else {
   break;
  }
 }
 $375=((($smax28)+(1))|0);
 $376=((($375)-($smax29))|0);
 HEAP32[(($outNBElement)>>2)]=$376;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDL3LINESTRIKE_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+360)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((($3)+(3))|0);
 return (($4)|0);
}


function _TA_CDL3LINESTRIKE($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $NearPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond19=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$_promoted=.0,$_promoted22=.0,$28=0,$smax=0,$29=0,$smax24=0,$30=0,$smax25=0,$32=.0,$33=.0;
 var $i_021=0,$34=0,$35=0,$36=.0,$37=0,$38=.0,$39=.0,$40=.0,$41=0,$42=0,$43=.0,$44=0,$45=.0,$46=.0,$47=.0,$48=0,$49=0,$50=.0,$51=0,$52=.0;
 var $53=.0,$54=0,$55=0,$56=.0,$57=0,$58=.0,$59=.0,$60=0,$61=0,$62=.0,$63=0,$64=.0,$65=0,$66=.0,$67=0,$_=.0,$68=.0,$69=.0,$70=0,$71=.0;
 var $72=.0,$73=.0,$74=0,$75=0,$76=.0,$77=0,$78=.0,$79=0,$80=.0,$81=0,$_8=.0,$82=.0,$83=.0,$84=0,$85=.0,$86=.0,$87=.0,$_pn=.0,$90=.0,$91=.0;
 var $92=.0,$93=0,$94=0,$i_1=0,$outIdx_0=0,$NearTrailingIdx_0=0,$96=0,$97=0,$98=.0,$99=0,$100=.0,$101=0,$102=0,$103=0,$104=0,$105=.0,$106=0,$107=.0,$108=0,$109=0;
 var $110=0,$112=0,$113=0,$114=.0,$115=0,$116=.0,$117=0,$118=0,$119=0,$121=0,$122=.0,$123=0,$124=.0,$125=0,$126=0,$127=0,$128=0,$130=0,$_9=.0,$131=0;
 var $132=0,$133=.0,$134=0,$135=0,$136=0,$138=.0,$139=.0,$140=.0,$142=0,$143=0,$145=.0,$146=.0,$148=0,$149=.0,$150=0,$151=.0,$152=.0,$154=0,$155=.0,$156=0;
 var $_10=.0,$157=.0,$158=.0,$159=0,$160=.0,$161=.0,$162=.0,$164=.0,$165=.0,$166=0,$167=0,$168=0,$169=0,$170=.0,$171=.0,$172=.0,$173=0,$175=.0,$176=.0,$177=.0;
 var $178=0,$_11=.0,$179=0,$180=.0,$181=0,$182=0,$183=0,$185=.0,$186=.0,$187=.0,$190=.0,$191=.0,$193=0,$194=.0,$195=0,$196=.0,$197=.0,$199=0,$200=.0,$201=0;
 var $_12=.0,$202=.0,$203=.0,$204=0,$205=.0,$206=.0,$207=.0,$209=.0,$210=.0,$211=0,$212=0,$213=0,$214=0,$215=.0,$216=.0,$217=.0,$218=0,$220=.0,$221=.0,$222=.0;
 var $223=0,$_13=.0,$224=0,$225=.0,$226=0,$227=0,$228=0,$230=.0,$231=.0,$232=.0,$235=.0,$236=.0,$238=0,$239=.0,$240=0,$241=.0,$242=.0,$244=0,$245=.0,$246=0;
 var $_14=.0,$247=.0,$248=.0,$249=0,$250=.0,$251=.0,$252=.0,$254=.0,$255=.0,$256=0,$257=0,$258=0,$259=0,$260=.0,$261=.0,$262=.0,$263=0,$265=.0,$266=.0,$267=.0;
 var $268=0,$_15=.0,$269=0,$270=.0,$271=0,$272=0,$273=0,$275=.0,$276=.0,$277=.0,$280=.0,$281=.0,$283=0,$284=.0,$285=0,$286=.0,$287=.0,$289=0,$290=.0,$291=0;
 var $_16=.0,$292=.0,$293=.0,$294=0,$295=.0,$296=.0,$297=.0,$299=.0,$300=.0,$301=0,$302=0,$303=0,$304=0,$305=.0,$306=.0,$307=.0,$308=0,$310=.0,$311=.0,$312=0;
 var $314=.0,$315=0,$317=.0,$318=0,$320=.0,$321=0,$323=.0,$324=.0,$325=0,$327=.0,$328=.0,$not_=0,$330=.0,$331=0,$333=.0,$334=0,$336=.0,$337=0,$339=.0,$340=.0;
 var $341=0,$343=.0,$344=.0,$345=0,$346=0,$347=0,$349=0,$351=0,$352=0,$353=0,$354=0,$355=0,$356=.0,$357=0,$358=.0,$359=.0,$360=.0,$361=0,$362=0,$363=.0;
 var $364=0,$365=.0,$366=.0,$367=.0,$368=0,$369=0,$370=.0,$371=0,$372=.0,$373=.0,$374=0,$375=0,$376=.0,$377=0,$378=.0,$379=.0,$380=0,$381=0,$382=.0,$383=0;
 var $384=.0,$385=0,$386=.0,$387=0,$_17=.0,$388=.0,$389=.0,$390=0,$391=.0,$392=.0,$393=.0,$394=0,$395=0,$396=.0,$397=0,$398=.0,$399=0,$400=.0,$401=0,$_18=.0;
 var $402=.0,$403=.0,$404=0,$405=.0,$406=.0,$407=.0,$409=.0,$410=.0,$411=.0,$412=0,$413=.0,$414=.0,$416=0,$417=0,$_0=0,$419=0,$420=0,$421=.0,$422=0,$423=.0;
 var $424=0,$425=.0,$426=0,$_17_1=.0,$427=.0,$428=.0,$429=0,$430=.0,$431=.0,$432=.0,$433=0,$434=0,$435=.0,$436=0,$437=.0,$438=0,$439=.0,$440=0,$_18_1=.0,$441=.0;
 var $442=.0,$443=0,$444=.0,$445=.0,$446=.0,$447=0,$448=0,$449=.0,$450=0,$451=.0,$452=.0,$453=0,$454=0,$455=.0,$456=0,$457=.0,$458=.0,$459=0,$460=0,$461=.0;
 var $462=0,$463=.0,$464=.0,$465=.0,$466=0,$467=0,$468=.0,$469=0,$470=.0,$471=.0,$472=.0,$474=.0,$475=.0,$476=.0,$477=0,$478=.0,$479=.0,$outIdx_1=0,$480=0,$481=0;
 var $482=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $NearPeriodTotal=((sp)|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond19=$10|$or_cond5_not;
 if ($or_cond19) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDL3LINESTRIKE_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=(($NearPeriodTotal+24)|0);
 $18=(($NearPeriodTotal+16)|0);
 $19=$18;
 _memset((((($19)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 $20=((HEAP32[((272)>>2)])|0);
 $21=(($20+360)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($22|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+356)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $_promoted=(+(HEAPF64[(($17)>>3)]));
  $_promoted22=(+(HEAPF64[(($18)>>3)]));
  $i_021=$23;$33=$_promoted;$32=$_promoted22;
  while(1) {



   if (((($27|0))|0)==((1)|0)) {
    $48=((($i_021)-(3))|0);
    $49=(($inHigh+($48<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=(($inLow+($48<<3))|0);
    $52=(+(HEAPF64[(($51)>>3)]));
    $53=($50)-($52);
    $54=((($i_021)-(2))|0);
    $55=(($inHigh+($54<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=(($inLow+($54<<3))|0);
    $58=(+(HEAPF64[(($57)>>3)]));
    $59=($56)-($58);
    $90=$59;$_pn=$53;
   } else if (((($27|0))|0)==((0)|0)) {
    $34=((($i_021)-(3))|0);
    $35=(($inClose+($34<<3))|0);
    $36=(+(HEAPF64[(($35)>>3)]));
    $37=(($inOpen+($34<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=($36)-($38);
    $40=(+(Math_abs((+($39)))));
    $41=((($i_021)-(2))|0);
    $42=(($inClose+($41<<3))|0);
    $43=(+(HEAPF64[(($42)>>3)]));
    $44=(($inOpen+($41<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=($43)-($45);
    $47=(+(Math_abs((+($46)))));
    $90=$47;$_pn=$40;
   } else if (((($27|0))|0)==((2)|0)) {
    $60=((($i_021)-(3))|0);
    $61=(($inHigh+($60<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=(($inClose+($60<<3))|0);
    $64=(+(HEAPF64[(($63)>>3)]));
    $65=(($inOpen+($60<<3))|0);
    $66=(+(HEAPF64[(($65)>>3)]));
    $67=$64<$66;
    $_=($67?$66:$64);
    $68=($62)-($_);
    $69=($67?$64:$66);
    $70=(($inLow+($60<<3))|0);
    $71=(+(HEAPF64[(($70)>>3)]));
    $72=($69)-($71);
    $73=($68)+($72);
    $74=((($i_021)-(2))|0);
    $75=(($inHigh+($74<<3))|0);
    $76=(+(HEAPF64[(($75)>>3)]));
    $77=(($inClose+($74<<3))|0);
    $78=(+(HEAPF64[(($77)>>3)]));
    $79=(($inOpen+($74<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=$78<$80;
    $_8=($81?$80:$78);
    $82=($76)-($_8);
    $83=($81?$78:$80);
    $84=(($inLow+($74<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=($83)-($85);
    $87=($82)+($86);
    $90=$87;$_pn=$73;
   } else {
    $90=0.0;$_pn=0.0;
   }


   $91=($_pn)+($33);
   $92=($90)+($32);
   $93=((($i_021)+(1))|0);
   $94=($93|0)<($_startIdx|0);
   if ($94) {
    $i_021=$93;$33=$91;$32=$92;
   } else {
    break;
   }
  }
  HEAPF64[(($17)>>3)]=$91;
  HEAPF64[(($18)>>3)]=$92;
 }
 $28=($12|0)>($endIdx|0);
 $smax=($28?$12:$endIdx);
 $29=($smax|0)>($startIdx|0);
 $smax24=($29?$smax:$startIdx);
 $30=($12|0)>($startIdx|0);
 $smax25=($30?$12:$startIdx);
 $NearTrailingIdx_0=$23;$outIdx_0=0;$i_1=$_startIdx;
 while(1) {



  $96=((($i_1)-(3))|0);
  $97=(($inClose+($96<<3))|0);
  $98=(+(HEAPF64[(($97)>>3)]));
  $99=(($inOpen+($96<<3))|0);
  $100=(+(HEAPF64[(($99)>>3)]));
  $101=$98>=$100;
  $102=($101?1:-1);
  $103=((($i_1)-(2))|0);
  $104=(($inClose+($103<<3))|0);
  $105=(+(HEAPF64[(($104)>>3)]));
  $106=(($inOpen+($103<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=$105>=$107;
  $109=($108?1:-1);
  $110=($102|0)==($109|0);
  do {
   if ($110) {
    $112=((($i_1)-(1))|0);
    $113=(($inClose+($112<<3))|0);
    $114=(+(HEAPF64[(($113)>>3)]));
    $115=(($inOpen+($112<<3))|0);
    $116=(+(HEAPF64[(($115)>>3)]));
    $117=$114>=$116;
    $118=($117?1:-1);
    $119=($109|0)==($118|0);
    if (!($119)) {
     label = 58;
     break;
    }
    $121=(($inClose+($i_1<<3))|0);
    $122=(+(HEAPF64[(($121)>>3)]));
    $123=(($inOpen+($i_1<<3))|0);
    $124=(+(HEAPF64[(($123)>>3)]));
    $125=$122>=$124;
    $126=($125?1:-1);
    $127=(((-$118))|0);
    $128=($126|0)==($127|0);
    if (!($128)) {
     label = 58;
     break;
    }
    $130=$100<$98;
    $_9=($130?$100:$98);
    $131=((HEAP32[((272)>>2)])|0);
    $132=(($131+368)|0);
    $133=(+(HEAPF64[(($132)>>3)]));
    $134=(($131+360)|0);
    $135=((HEAP32[(($134)>>2)])|0);
    $136=($135|0)==0;
    do {
     if ($136) {
      $142=(($131+356)|0);
      $143=((HEAP32[(($142)>>2)])|0);
      if (((($143|0))|0)==((0)|0)) {
       $145=($98)-($100);
       $146=(+(Math_abs((+($145)))));
       $164=$146;
       break;
      } else if (((($143|0))|0)==((2)|0)) {
       $154=(($inHigh+($96<<3))|0);
       $155=(+(HEAPF64[(($154)>>3)]));
       $156=$98<$100;
       $_10=($156?$100:$98);
       $157=($155)-($_10);
       $158=($156?$98:$100);
       $159=(($inLow+($96<<3))|0);
       $160=(+(HEAPF64[(($159)>>3)]));
       $161=($158)-($160);
       $162=($157)+($161);
       $164=$162;
       break;
      } else if (((($143|0))|0)==((1)|0)) {
       $148=(($inHigh+($96<<3))|0);
       $149=(+(HEAPF64[(($148)>>3)]));
       $150=(($inLow+($96<<3))|0);
       $151=(+(HEAPF64[(($150)>>3)]));
       $152=($149)-($151);
       $164=$152;
       break;
      } else {
       $164=0.0;
       break;
      }
     } else {
      $138=(+((($135|0))|0));
      $139=(+(HEAPF64[(($17)>>3)]));
      $140=($139)/($138);
      $164=$140;
     }
    } while(0);

    $165=($133)*($164);
    $166=((HEAP32[((272)>>2)])|0);
    $167=(($166+356)|0);
    $168=((HEAP32[(($167)>>2)])|0);
    $169=($168|0)==2;
    $170=($169?(2.0):(1.0));
    $171=($165)/($170);
    $172=($_9)-($171);
    $173=$107<$172;
    if ($173) {
     label = 58;
     break;
    }
    $175=(+(HEAPF64[(($106)>>3)]));
    $176=(+(HEAPF64[(($99)>>3)]));
    $177=(+(HEAPF64[(($97)>>3)]));
    $178=$176>$177;
    $_11=($178?$176:$177);
    $179=(($166+368)|0);
    $180=(+(HEAPF64[(($179)>>3)]));
    $181=(($166+360)|0);
    $182=((HEAP32[(($181)>>2)])|0);
    $183=($182|0)==0;
    do {
     if ($183) {
      if (((($168|0))|0)==((1)|0)) {
       $193=(($inHigh+($96<<3))|0);
       $194=(+(HEAPF64[(($193)>>3)]));
       $195=(($inLow+($96<<3))|0);
       $196=(+(HEAPF64[(($195)>>3)]));
       $197=($194)-($196);
       $209=$197;
       break;
      } else if (((($168|0))|0)==((2)|0)) {
       $199=(($inHigh+($96<<3))|0);
       $200=(+(HEAPF64[(($199)>>3)]));
       $201=$177<$176;
       $_12=($201?$176:$177);
       $202=($200)-($_12);
       $203=($201?$177:$176);
       $204=(($inLow+($96<<3))|0);
       $205=(+(HEAPF64[(($204)>>3)]));
       $206=($203)-($205);
       $207=($202)+($206);
       $209=$207;
       break;
      } else if (((($168|0))|0)==((0)|0)) {
       $190=($177)-($176);
       $191=(+(Math_abs((+($190)))));
       $209=$191;
       break;
      } else {
       $209=0.0;
       break;
      }
     } else {
      $185=(+((($182|0))|0));
      $186=(+(HEAPF64[(($17)>>3)]));
      $187=($186)/($185);
      $209=$187;
     }
    } while(0);

    $210=($180)*($209);
    $211=((HEAP32[((272)>>2)])|0);
    $212=(($211+356)|0);
    $213=((HEAP32[(($212)>>2)])|0);
    $214=($213|0)==2;
    $215=($214?(2.0):(1.0));
    $216=($210)/($215);
    $217=($_11)+($216);
    $218=$175>$217;
    if ($218) {
     label = 58;
     break;
    }
    $220=(+(HEAPF64[(($115)>>3)]));
    $221=(+(HEAPF64[(($106)>>3)]));
    $222=(+(HEAPF64[(($104)>>3)]));
    $223=$221<$222;
    $_13=($223?$221:$222);
    $224=(($211+368)|0);
    $225=(+(HEAPF64[(($224)>>3)]));
    $226=(($211+360)|0);
    $227=((HEAP32[(($226)>>2)])|0);
    $228=($227|0)==0;
    do {
     if ($228) {
      if (((($213|0))|0)==((0)|0)) {
       $235=($222)-($221);
       $236=(+(Math_abs((+($235)))));
       $254=$236;
       break;
      } else if (((($213|0))|0)==((1)|0)) {
       $238=(($inHigh+($103<<3))|0);
       $239=(+(HEAPF64[(($238)>>3)]));
       $240=(($inLow+($103<<3))|0);
       $241=(+(HEAPF64[(($240)>>3)]));
       $242=($239)-($241);
       $254=$242;
       break;
      } else if (((($213|0))|0)==((2)|0)) {
       $244=(($inHigh+($103<<3))|0);
       $245=(+(HEAPF64[(($244)>>3)]));
       $246=$222<$221;
       $_14=($246?$221:$222);
       $247=($245)-($_14);
       $248=($246?$222:$221);
       $249=(($inLow+($103<<3))|0);
       $250=(+(HEAPF64[(($249)>>3)]));
       $251=($248)-($250);
       $252=($247)+($251);
       $254=$252;
       break;
      } else {
       $254=0.0;
       break;
      }
     } else {
      $230=(+((($227|0))|0));
      $231=(+(HEAPF64[(($18)>>3)]));
      $232=($231)/($230);
      $254=$232;
     }
    } while(0);

    $255=($225)*($254);
    $256=((HEAP32[((272)>>2)])|0);
    $257=(($256+356)|0);
    $258=((HEAP32[(($257)>>2)])|0);
    $259=($258|0)==2;
    $260=($259?(2.0):(1.0));
    $261=($255)/($260);
    $262=($_13)-($261);
    $263=$220<$262;
    if ($263) {
     label = 58;
     break;
    }
    $265=(+(HEAPF64[(($115)>>3)]));
    $266=(+(HEAPF64[(($106)>>3)]));
    $267=(+(HEAPF64[(($104)>>3)]));
    $268=$266>$267;
    $_15=($268?$266:$267);
    $269=(($256+368)|0);
    $270=(+(HEAPF64[(($269)>>3)]));
    $271=(($256+360)|0);
    $272=((HEAP32[(($271)>>2)])|0);
    $273=($272|0)==0;
    do {
     if ($273) {
      if (((($258|0))|0)==((0)|0)) {
       $280=($267)-($266);
       $281=(+(Math_abs((+($280)))));
       $299=$281;
       break;
      } else if (((($258|0))|0)==((1)|0)) {
       $283=(($inHigh+($103<<3))|0);
       $284=(+(HEAPF64[(($283)>>3)]));
       $285=(($inLow+($103<<3))|0);
       $286=(+(HEAPF64[(($285)>>3)]));
       $287=($284)-($286);
       $299=$287;
       break;
      } else if (((($258|0))|0)==((2)|0)) {
       $289=(($inHigh+($103<<3))|0);
       $290=(+(HEAPF64[(($289)>>3)]));
       $291=$267<$266;
       $_16=($291?$266:$267);
       $292=($290)-($_16);
       $293=($291?$267:$266);
       $294=(($inLow+($103<<3))|0);
       $295=(+(HEAPF64[(($294)>>3)]));
       $296=($293)-($295);
       $297=($292)+($296);
       $299=$297;
       break;
      } else {
       $299=0.0;
       break;
      }
     } else {
      $275=(+((($272|0))|0));
      $276=(+(HEAPF64[(($18)>>3)]));
      $277=($276)/($275);
      $299=$277;
     }
    } while(0);

    $300=($270)*($299);
    $301=((HEAP32[((272)>>2)])|0);
    $302=(($301+356)|0);
    $303=((HEAP32[(($302)>>2)])|0);
    $304=($303|0)==2;
    $305=($304?(2.0):(1.0));
    $306=($300)/($305);
    $307=($_15)+($306);
    $308=$265>$307;
    if ($308) {
     label = 58;
     break;
    }
    $310=(+(HEAPF64[(($113)>>3)]));
    $311=(+(HEAPF64[(($115)>>3)]));
    $312=$310<$311;
    do {
     if ($312) {
      label = 52;
     } else {
      $314=(+(HEAPF64[(($104)>>3)]));
      $315=$310>$314;
      if (!($315)) {
       label = 52;
       break;
      }
      $317=(+(HEAPF64[(($97)>>3)]));
      $318=$314>$317;
      if (!($318)) {
       label = 52;
       break;
      }
      $320=(+(HEAPF64[(($123)>>3)]));
      $321=$320>$310;
      if (!($321)) {
       label = 52;
       break;
      }
      $323=(+(HEAPF64[(($121)>>3)]));
      $324=(+(HEAPF64[(($99)>>3)]));
      $325=$323<$324;
      if (!($325)) {
       label = 52;
      }
     }
    } while(0);
    if ((label|0) == 52) {
     label = 0;
     $327=(+(HEAPF64[(($113)>>3)]));
     $328=(+(HEAPF64[(($115)>>3)]));
     $not_=$327<$328;
     if (!($not_)) {
      label = 58;
      break;
     }
     $330=(+(HEAPF64[(($104)>>3)]));
     $331=$327<$330;
     if (!($331)) {
      label = 58;
      break;
     }
     $333=(+(HEAPF64[(($97)>>3)]));
     $334=$330<$333;
     if (!($334)) {
      label = 58;
      break;
     }
     $336=(+(HEAPF64[(($123)>>3)]));
     $337=$336<$327;
     if (!($337)) {
      label = 58;
      break;
     }
     $339=(+(HEAPF64[(($121)>>3)]));
     $340=(+(HEAPF64[(($99)>>3)]));
     $341=$339>$340;
     if (!($341)) {
      label = 58;
      break;
     }
    }
    $343=(+(HEAPF64[(($113)>>3)]));
    $344=(+(HEAPF64[(($115)>>3)]));
    $345=$343>=$344;
    $346=($345?100:-100);
    $347=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($347)>>2)]=$346;
   } else {
    label = 58;
   }
  } while(0);
  if ((label|0) == 58) {
   label = 0;
   $349=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($349)>>2)]=0;
  }
  $351=((HEAP32[((272)>>2)])|0);
  $352=(($351+356)|0);
  $353=((HEAP32[(($352)>>2)])|0);
  if (((($353|0))|0)==((0)|0)) {
   $354=((($i_1)-(3))|0);
   $355=(($inClose+($354<<3))|0);
   $356=(+(HEAPF64[(($355)>>3)]));
   $357=(($inOpen+($354<<3))|0);
   $358=(+(HEAPF64[(($357)>>3)]));
   $359=($356)-($358);
   $360=(+(Math_abs((+($359)))));
   $361=((($NearTrailingIdx_0)-(3))|0);
   $362=(($inClose+($361<<3))|0);
   $363=(+(HEAPF64[(($362)>>3)]));
   $364=(($inOpen+($361<<3))|0);
   $365=(+(HEAPF64[(($364)>>3)]));
   $366=($363)-($365);
   $367=(+(Math_abs((+($366)))));
   $410=$367;$409=$360;
  } else if (((($353|0))|0)==((1)|0)) {
   $368=((($i_1)-(3))|0);
   $369=(($inHigh+($368<<3))|0);
   $370=(+(HEAPF64[(($369)>>3)]));
   $371=(($inLow+($368<<3))|0);
   $372=(+(HEAPF64[(($371)>>3)]));
   $373=($370)-($372);
   $374=((($NearTrailingIdx_0)-(3))|0);
   $375=(($inHigh+($374<<3))|0);
   $376=(+(HEAPF64[(($375)>>3)]));
   $377=(($inLow+($374<<3))|0);
   $378=(+(HEAPF64[(($377)>>3)]));
   $379=($376)-($378);
   $410=$379;$409=$373;
  } else if (((($353|0))|0)==((2)|0)) {
   $380=((($i_1)-(3))|0);
   $381=(($inHigh+($380<<3))|0);
   $382=(+(HEAPF64[(($381)>>3)]));
   $383=(($inClose+($380<<3))|0);
   $384=(+(HEAPF64[(($383)>>3)]));
   $385=(($inOpen+($380<<3))|0);
   $386=(+(HEAPF64[(($385)>>3)]));
   $387=$384<$386;
   $_17=($387?$386:$384);
   $388=($382)-($_17);
   $389=($387?$384:$386);
   $390=(($inLow+($380<<3))|0);
   $391=(+(HEAPF64[(($390)>>3)]));
   $392=($389)-($391);
   $393=($388)+($392);
   $394=((($NearTrailingIdx_0)-(3))|0);
   $395=(($inHigh+($394<<3))|0);
   $396=(+(HEAPF64[(($395)>>3)]));
   $397=(($inClose+($394<<3))|0);
   $398=(+(HEAPF64[(($397)>>3)]));
   $399=(($inOpen+($394<<3))|0);
   $400=(+(HEAPF64[(($399)>>3)]));
   $401=$398<$400;
   $_18=($401?$400:$398);
   $402=($396)-($_18);
   $403=($401?$398:$400);
   $404=(($inLow+($394<<3))|0);
   $405=(+(HEAPF64[(($404)>>3)]));
   $406=($403)-($405);
   $407=($402)+($406);
   $410=$407;$409=$393;
  } else {
   $410=0.0;$409=0.0;
  }


  $411=($409)-($410);
  $412=(($NearPeriodTotal+24)|0);
  $413=(+(HEAPF64[(($412)>>3)]));
  $414=($413)+($411);
  HEAPF64[(($412)>>3)]=$414;
  if (((($353|0))|0)==((1)|0)) {
   $447=((($i_1)-(2))|0);
   $448=(($inHigh+($447<<3))|0);
   $449=(+(HEAPF64[(($448)>>3)]));
   $450=(($inLow+($447<<3))|0);
   $451=(+(HEAPF64[(($450)>>3)]));
   $452=($449)-($451);
   $453=((($NearTrailingIdx_0)-(2))|0);
   $454=(($inHigh+($453<<3))|0);
   $455=(+(HEAPF64[(($454)>>3)]));
   $456=(($inLow+($453<<3))|0);
   $457=(+(HEAPF64[(($456)>>3)]));
   $458=($455)-($457);
   $475=$458;$474=$452;
  } else if (((($353|0))|0)==((0)|0)) {
   $459=((($i_1)-(2))|0);
   $460=(($inClose+($459<<3))|0);
   $461=(+(HEAPF64[(($460)>>3)]));
   $462=(($inOpen+($459<<3))|0);
   $463=(+(HEAPF64[(($462)>>3)]));
   $464=($461)-($463);
   $465=(+(Math_abs((+($464)))));
   $466=((($NearTrailingIdx_0)-(2))|0);
   $467=(($inClose+($466<<3))|0);
   $468=(+(HEAPF64[(($467)>>3)]));
   $469=(($inOpen+($466<<3))|0);
   $470=(+(HEAPF64[(($469)>>3)]));
   $471=($468)-($470);
   $472=(+(Math_abs((+($471)))));
   $475=$472;$474=$465;
  } else if (((($353|0))|0)==((2)|0)) {
   $419=((($i_1)-(2))|0);
   $420=(($inHigh+($419<<3))|0);
   $421=(+(HEAPF64[(($420)>>3)]));
   $422=(($inClose+($419<<3))|0);
   $423=(+(HEAPF64[(($422)>>3)]));
   $424=(($inOpen+($419<<3))|0);
   $425=(+(HEAPF64[(($424)>>3)]));
   $426=$423<$425;
   $_17_1=($426?$425:$423);
   $427=($421)-($_17_1);
   $428=($426?$423:$425);
   $429=(($inLow+($419<<3))|0);
   $430=(+(HEAPF64[(($429)>>3)]));
   $431=($428)-($430);
   $432=($427)+($431);
   $433=((($NearTrailingIdx_0)-(2))|0);
   $434=(($inHigh+($433<<3))|0);
   $435=(+(HEAPF64[(($434)>>3)]));
   $436=(($inClose+($433<<3))|0);
   $437=(+(HEAPF64[(($436)>>3)]));
   $438=(($inOpen+($433<<3))|0);
   $439=(+(HEAPF64[(($438)>>3)]));
   $440=$437<$439;
   $_18_1=($440?$439:$437);
   $441=($435)-($_18_1);
   $442=($440?$437:$439);
   $443=(($inLow+($433<<3))|0);
   $444=(+(HEAPF64[(($443)>>3)]));
   $445=($442)-($444);
   $446=($441)+($445);
   $475=$446;$474=$432;
  } else {
   $475=0.0;$474=0.0;
  }


  $476=($474)-($475);
  $477=(($NearPeriodTotal+16)|0);
  $478=(+(HEAPF64[(($477)>>3)]));
  $479=($478)+($476);
  HEAPF64[(($477)>>3)]=$479;
  $outIdx_1=((($outIdx_0)+(1))|0);
  $480=((($i_1)+(1))|0);
  $481=((($NearTrailingIdx_0)+(1))|0);
  $482=($i_1|0)<($endIdx|0);
  if ($482) {
   $NearTrailingIdx_0=$481;$outIdx_0=$outIdx_1;$i_1=$480;
  } else {
   break;
  }
 }
 $416=((($smax24)+(1))|0);
 $417=((($416)-($smax25))|0);
 HEAP32[(($outNBElement)>>2)]=$417;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDL3OUTSIDE($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond13=0,$12=0,$_startIdx=0,$13=0,$14=0,$smax=0,$i_0=0;
 var $outIdx_0=0,$17=0,$18=0,$19=.0,$20=0,$21=.0,$22=0,$24=0,$25=0,$26=.0,$27=0,$28=.0,$not_7=0,$29=0,$or_cond9=0,$30=0,$or_cond10=0,$32=0,$33=.0,$34=0;
 var $36=.0,$37=.0,$not_=0,$39=0,$40=0,$41=.0,$42=0,$43=.0,$44=0,$45=0,$or_cond11=0,$46=0,$or_cond12=0,$48=0,$49=.0,$50=0,$52=.0,$53=.0,$54=0,$55=0;
 var $56=0,$58=0,$outIdx_1=0,$60=0,$61=0,$63=0,$64=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond13=$10|$or_cond5_not;
 if ($or_cond13) {
  $_0=2;

  return (($_0)|0);
 }
 $12=($startIdx|0)<3;
 $_startIdx=($12?3:$startIdx);
 $13=($_startIdx|0)>($endIdx|0);
 if ($13) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $14=($startIdx|0)>3;
 $smax=($14?$startIdx:3);
 $outIdx_0=0;$i_0=$_startIdx;
 while(1) {


  $17=((($i_0)-(1))|0);
  $18=(($inClose+($17<<3))|0);
  $19=(+(HEAPF64[(($18)>>3)]));
  $20=(($inOpen+($17<<3))|0);
  $21=(+(HEAPF64[(($20)>>3)]));
  $22=$19<$21;
  do {
   if ($22) {
    label = 10;
   } else {
    $24=((($i_0)-(2))|0);
    $25=(($inClose+($24<<3))|0);
    $26=(+(HEAPF64[(($25)>>3)]));
    $27=(($inOpen+($24<<3))|0);
    $28=(+(HEAPF64[(($27)>>3)]));
    $not_7=$26<$28;
    $29=$19>$28;
    $or_cond9=$not_7&$29;
    $30=$21<$26;
    $or_cond10=$or_cond9&$30;
    if (!($or_cond10)) {
     label = 10;
     break;
    }
    $32=(($inClose+($i_0<<3))|0);
    $33=(+(HEAPF64[(($32)>>3)]));
    $34=$33>$19;
    if ($34) {
     label = 13;
    } else {
     label = 10;
    }
   }
  } while(0);
  L19: do {
   if ((label|0) == 10) {
    label = 0;
    $36=(+(HEAPF64[(($18)>>3)]));
    $37=(+(HEAPF64[(($20)>>3)]));
    $not_=$36<$37;
    do {
     if ($not_) {
      $39=((($i_0)-(2))|0);
      $40=(($inClose+($39<<3))|0);
      $41=(+(HEAPF64[(($40)>>3)]));
      $42=(($inOpen+($39<<3))|0);
      $43=(+(HEAPF64[(($42)>>3)]));
      $44=$41>=$43;
      $45=$37>$41;
      $or_cond11=$44&$45;
      $46=$36<$43;
      $or_cond12=$or_cond11&$46;
      if (!($or_cond12)) {
       break;
      }
      $48=(($inClose+($i_0<<3))|0);
      $49=(+(HEAPF64[(($48)>>3)]));
      $50=$49<$36;
      if ($50) {
       label = 13;
       break L19;
      }
     }
    } while(0);
    $58=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($58)>>2)]=0;
   }
  } while(0);
  if ((label|0) == 13) {
   label = 0;
   $52=(+(HEAPF64[(($18)>>3)]));
   $53=(+(HEAPF64[(($20)>>3)]));
   $54=$52>=$53;
   $55=($54?100:-100);
   $56=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($56)>>2)]=$55;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $60=((($i_0)+(1))|0);
  $61=($i_0|0)<($endIdx|0);
  if ($61) {
   $outIdx_0=$outIdx_1;$i_0=$60;
  } else {
   break;
  }
 }
 $63=((($endIdx)+(1))|0);
 $64=((($63)-($smax))|0);
 HEAP32[(($outNBElement)>>2)]=$64;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDL3STARSINSOUTH_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$__=0,$14=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+336)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+264)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=(($1+168)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($1+216)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)>($10|0);
 $12=($11?$8:$10);
 $13=($_|0)>($12|0);
 $__=($13?$_:$12);
 $14=((($__)+(2))|0);
 return (($14)|0);
}


function _TA_CDL3STARSINSOUTH($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $ShadowVeryShortPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond9=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond33=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0;
 var $BodyLongPeriodTotal_0_lcssa=.0,$38=0,$39=0,$40=0,$41=0,$i_050=0,$BodyLongPeriodTotal_049=.0,$44=0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0,$52=0,$53=0,$54=.0,$55=0,$56=.0,$57=.0;
 var $59=0,$60=0,$61=.0,$62=0,$63=.0,$64=0,$65=.0,$66=0,$_=.0,$67=.0,$68=.0,$69=0,$70=.0,$71=.0,$72=.0,$74=.0,$75=.0,$76=0,$77=0,$ShadowLongPeriodTotal_0_lcssa=.0;
 var $78=0,$79=0,$80=0,$81=0,$_promoted=.0,$_promoted41=.0,$i_146=0,$ShadowLongPeriodTotal_045=.0,$84=0,$85=0,$86=.0,$87=0,$88=.0,$89=.0,$90=.0,$92=0,$93=0,$94=.0,$95=0,$96=.0;
 var $97=.0,$99=0,$100=0,$101=.0,$102=0,$103=.0,$104=0,$105=.0,$106=0,$_10=.0,$107=.0,$108=.0,$109=0,$110=.0,$111=.0,$112=.0,$114=.0,$115=.0,$116=0,$117=0;
 var $118=0,$119=0,$120=0,$121=0,$123=.0,$124=.0,$i_239=0,$125=0,$126=0,$127=.0,$128=0,$129=.0,$130=.0,$131=.0,$132=0,$133=.0,$134=0,$135=.0,$136=.0,$137=.0;
 var $138=0,$139=0,$140=.0,$141=0,$142=.0,$143=.0,$144=0,$145=.0,$146=0,$147=.0,$148=.0,$149=0,$150=0,$151=.0,$152=0,$153=.0,$154=0,$155=.0,$156=0,$_11=.0;
 var $157=.0,$158=.0,$159=0,$160=.0,$161=.0,$162=.0,$163=0,$164=.0,$165=0,$166=.0,$167=0,$168=.0,$169=0,$_12=.0,$170=.0,$171=.0,$172=0,$173=.0,$174=.0,$175=.0;
 var $_pn=.0,$178=.0,$179=.0,$180=.0,$181=0,$182=0,$BodyShortPeriodTotal_0_lcssa=.0,$183=0,$smax=0,$184=0,$smax53=0,$185=0,$smax54=0,$i_337=0,$BodyShortPeriodTotal_036=.0,$188=0,$189=.0,$190=0,$191=.0,$192=.0;
 var $193=.0,$195=0,$196=.0,$197=0,$198=.0,$199=.0,$201=0,$202=.0,$203=0,$204=.0,$205=0,$206=.0,$207=0,$_13=.0,$208=.0,$209=.0,$210=0,$211=.0,$212=.0,$213=.0;
 var $215=.0,$216=.0,$217=0,$218=0,$BodyLongPeriodTotal_1=.0,$BodyShortPeriodTotal_1=.0,$ShadowLongPeriodTotal_1=.0,$i_4=0,$outIdx_0=0,$BodyLongTrailingIdx_0=0,$BodyShortTrailingIdx_0=0,$ShadowLongTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$220=0,$221=0,$222=.0,$223=0,$224=.0,$225=0,$227=0;
 var $228=0,$229=.0,$230=0,$231=.0,$not_7=0,$233=0,$234=.0,$235=0,$236=.0,$not_8=0,$238=.0,$239=.0,$240=0,$241=0,$242=.0,$243=0,$244=0,$245=0,$247=.0,$248=.0;
 var $250=0,$251=0,$253=0,$254=.0,$255=0,$256=.0,$257=.0,$259=0,$261=0,$262=.0,$_14=.0,$263=.0,$264=0,$265=.0,$266=0,$267=.0,$268=.0,$269=.0,$271=.0,$272=.0;
 var $273=0,$274=0,$275=0,$276=0,$277=.0,$278=.0,$279=0,$281=.0,$282=.0,$283=0,$_15=.0,$284=0,$285=.0,$286=.0,$287=0,$288=.0,$289=0,$290=0,$291=0,$293=.0;
 var $294=.0,$296=0,$297=0,$299=.0,$300=.0,$302=0,$303=.0,$304=.0,$306=0,$307=.0,$_16=.0,$308=.0,$309=.0,$311=.0,$312=.0,$313=0,$314=0,$315=0,$316=0,$317=.0;
 var $318=.0,$319=0,$321=.0,$322=.0,$323=.0,$324=.0,$325=.0,$326=.0,$327=.0,$328=.0,$329=0,$330=0,$or_cond17=0,$332=0,$333=.0,$334=0,$336=0,$337=.0,$338=0,$340=.0;
 var $341=0,$343=0,$_18=.0,$344=.0,$345=0,$346=.0,$347=0,$348=0,$349=0,$351=.0,$352=.0,$353=.0,$355=0,$356=0,$359=0,$360=.0,$361=.0,$363=0,$364=.0,$_19=.0;
 var $365=.0,$366=.0,$368=.0,$369=.0,$370=0,$371=0,$372=0,$373=0,$374=.0,$375=.0,$376=0,$378=.0,$379=.0,$380=.0,$381=.0,$382=0,$383=.0,$384=0,$385=0,$386=0;
 var $388=.0,$389=.0,$391=0,$392=0,$394=0,$395=.0,$396=0,$397=.0,$398=.0,$400=0,$402=0,$403=.0,$404=0,$_20=.0,$405=.0,$406=.0,$407=0,$408=.0,$409=.0,$410=.0;
 var $412=.0,$413=.0,$414=0,$415=0,$416=0,$417=0,$418=.0,$419=.0,$420=0,$422=.0,$423=.0,$424=0,$_21=.0,$425=0,$426=.0,$427=.0,$428=0,$429=.0,$430=0,$431=0;
 var $432=0,$434=.0,$435=.0,$436=.0,$438=0,$439=0,$441=.0,$442=.0,$444=0,$445=.0,$446=.0,$448=0,$449=.0,$_22=.0,$450=.0,$451=.0,$453=.0,$454=.0,$455=0,$456=0;
 var $457=0,$458=0,$459=.0,$460=.0,$461=0,$463=0,$464=.0,$465=.0,$466=.0,$467=0,$_23=.0,$468=.0,$469=0,$470=.0,$471=0,$472=0,$473=0,$475=.0,$476=.0,$477=.0;
 var $480=.0,$481=.0,$483=.0,$484=.0,$486=.0,$487=.0,$488=.0,$489=.0,$491=.0,$492=.0,$493=0,$494=0,$495=0,$496=0,$497=.0,$498=.0,$499=0,$501=.0,$502=.0,$503=0;
 var $505=.0,$506=0,$507=.0,$508=0,$510=0,$512=0,$outIdx_1=0,$514=0,$515=0,$516=0,$518=.0,$519=.0,$520=.0,$521=.0,$523=0,$524=.0,$525=0,$526=.0,$527=.0,$529=0;
 var $530=.0,$531=.0,$532=.0,$533=0,$_25=.0,$534=.0,$535=.0,$536=0,$537=.0,$538=.0,$539=.0,$541=.0,$542=0,$543=0,$544=0,$546=0,$547=0,$548=.0,$549=0,$550=.0;
 var $551=.0,$552=.0,$554=0,$555=0,$556=.0,$557=0,$558=.0,$559=.0,$561=0,$562=0,$563=.0,$564=0,$565=.0,$566=0,$567=.0,$568=0,$_26=.0,$569=.0,$570=.0,$571=0;
 var $572=.0,$573=.0,$574=.0,$576=.0,$577=.0,$578=.0,$579=0,$580=0,$581=0,$583=.0,$584=.0,$585=.0,$586=.0,$588=0,$589=.0,$590=0,$591=.0,$592=.0,$594=0,$595=.0;
 var $596=.0,$597=.0,$598=0,$_27=.0,$599=.0,$600=.0,$601=0,$602=.0,$603=.0,$604=.0,$606=.0,$607=0,$608=0,$609=0,$611=0,$612=0,$613=.0,$614=0,$615=.0,$616=.0;
 var $617=.0,$619=0,$620=0,$621=.0,$622=0,$623=.0,$624=.0,$626=0,$627=0,$628=.0,$629=0,$630=.0,$631=0,$632=.0,$633=0,$_28=.0,$634=.0,$635=.0,$636=0,$637=.0;
 var $638=.0,$639=.0,$641=.0,$642=.0,$643=0,$644=0,$645=0,$647=0,$648=0,$649=.0,$650=0,$651=.0,$652=.0,$653=.0,$655=0,$656=0,$657=.0,$658=0,$659=.0,$660=.0;
 var $662=0,$663=0,$664=.0,$665=0,$666=.0,$667=0,$668=.0,$669=0,$_29=.0,$670=.0,$671=.0,$672=0,$673=.0,$674=.0,$675=.0,$677=.0,$679=0,$680=0,$681=.0,$682=0;
 var $683=.0,$684=.0,$685=.0,$687=0,$688=0,$689=.0,$690=0,$691=.0,$692=.0,$694=0,$695=0,$696=.0,$697=0,$698=.0,$699=0,$700=.0,$701=0,$_30=.0,$702=.0,$703=.0;
 var $704=0,$705=.0,$706=.0,$707=.0,$709=.0,$710=.0,$711=0,$712=.0,$713=.0,$714=0,$715=0,$717=0,$718=.0,$719=0,$720=.0,$721=.0,$722=.0,$724=0,$725=.0,$726=0;
 var $727=.0,$728=.0,$730=0,$731=.0,$732=0,$733=.0,$734=0,$735=.0,$736=0,$_31=.0,$737=.0,$738=.0,$739=0,$740=.0,$741=.0,$742=.0,$744=.0,$745=0,$746=0,$747=0;
 var $749=0,$750=.0,$751=0,$752=.0,$753=.0,$754=.0,$756=0,$757=.0,$758=0,$759=.0,$760=.0,$762=0,$763=.0,$764=0,$765=.0,$766=0,$767=.0,$768=0,$_32=.0,$769=.0;
 var $770=.0,$771=0,$772=.0,$773=.0,$774=.0,$776=.0,$777=.0,$778=.0,$779=0,$780=0,$781=0,$782=0,$783=0,$784=0,$786=0,$787=0,$_0=0,$790=0,$791=.0,$792=0;
 var $793=.0,$794=0,$795=.0,$796=0,$_29_1=.0,$797=.0,$798=.0,$799=0,$800=.0,$801=.0,$802=.0,$804=0,$805=.0,$806=0,$807=.0,$808=.0,$810=0,$811=.0,$812=0,$813=.0;
 var $814=.0,$815=.0,$817=.0,$819=0,$820=.0,$821=0,$822=.0,$823=0,$824=.0,$825=0,$_30_1=.0,$826=.0,$827=.0,$828=0,$829=.0,$830=.0,$831=.0,$833=0,$834=.0,$835=0;
 var $836=.0,$837=.0,$839=0,$840=.0,$841=0,$842=.0,$843=.0,$844=.0,$846=.0,$847=.0,$848=0,$849=.0,$850=.0,$851=.0,$852=0,$853=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $ShadowVeryShortPeriodTotal=((sp)|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond9=$3|$4;
 if ($or_cond9) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond33=$10|$or_cond5_not;
 if ($or_cond33) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDL3STARSINSOUTH_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+168)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+264)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=(($ShadowVeryShortPeriodTotal+8)|0);
 $25=(($ShadowVeryShortPeriodTotal)|0);
 $26=$ShadowVeryShortPeriodTotal;
 _memset((((($26)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 $27=((HEAP32[((272)>>2)])|0);
 $28=(($27+336)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=((($_startIdx)-($29))|0);
 $31=(($27+216)|0);
 $32=((HEAP32[(($31)>>2)])|0);
 $33=((($_startIdx)-($32))|0);
 $34=($19|0)>0;
 if ($34) {
  $35=((HEAP32[((272)>>2)])|0);
  $36=(($35+164)|0);
  $37=((HEAP32[(($36)>>2)])|0);
  $BodyLongPeriodTotal_049=0.0;$i_050=$20;
  while(1) {


   if (((($37|0))|0)==((1)|0)) {
    $52=((($i_050)-(2))|0);
    $53=(($inHigh+($52<<3))|0);
    $54=(+(HEAPF64[(($53)>>3)]));
    $55=(($inLow+($52<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=($54)-($56);
    $74=$57;
   } else if (((($37|0))|0)==((2)|0)) {
    $59=((($i_050)-(2))|0);
    $60=(($inHigh+($59<<3))|0);
    $61=(+(HEAPF64[(($60)>>3)]));
    $62=(($inClose+($59<<3))|0);
    $63=(+(HEAPF64[(($62)>>3)]));
    $64=(($inOpen+($59<<3))|0);
    $65=(+(HEAPF64[(($64)>>3)]));
    $66=$63<$65;
    $_=($66?$65:$63);
    $67=($61)-($_);
    $68=($66?$63:$65);
    $69=(($inLow+($59<<3))|0);
    $70=(+(HEAPF64[(($69)>>3)]));
    $71=($68)-($70);
    $72=($67)+($71);
    $74=$72;
   } else if (((($37|0))|0)==((0)|0)) {
    $44=((($i_050)-(2))|0);
    $45=(($inClose+($44<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=(($inOpen+($44<<3))|0);
    $48=(+(HEAPF64[(($47)>>3)]));
    $49=($46)-($48);
    $50=(+(Math_abs((+($49)))));
    $74=$50;
   } else {
    $74=0.0;
   }

   $75=($BodyLongPeriodTotal_049)+($74);
   $76=((($i_050)+(1))|0);
   $77=($76|0)<($_startIdx|0);
   if ($77) {
    $BodyLongPeriodTotal_049=$75;$i_050=$76;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$75;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $38=($22|0)>0;
 if ($38) {
  $39=((HEAP32[((272)>>2)])|0);
  $40=(($39+260)|0);
  $41=((HEAP32[(($40)>>2)])|0);
  $ShadowLongPeriodTotal_045=0.0;$i_146=$23;
  while(1) {


   if (((($41|0))|0)==((1)|0)) {
    $92=((($i_146)-(2))|0);
    $93=(($inHigh+($92<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=(($inLow+($92<<3))|0);
    $96=(+(HEAPF64[(($95)>>3)]));
    $97=($94)-($96);
    $114=$97;
   } else if (((($41|0))|0)==((0)|0)) {
    $84=((($i_146)-(2))|0);
    $85=(($inClose+($84<<3))|0);
    $86=(+(HEAPF64[(($85)>>3)]));
    $87=(($inOpen+($84<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=($86)-($88);
    $90=(+(Math_abs((+($89)))));
    $114=$90;
   } else if (((($41|0))|0)==((2)|0)) {
    $99=((($i_146)-(2))|0);
    $100=(($inHigh+($99<<3))|0);
    $101=(+(HEAPF64[(($100)>>3)]));
    $102=(($inClose+($99<<3))|0);
    $103=(+(HEAPF64[(($102)>>3)]));
    $104=(($inOpen+($99<<3))|0);
    $105=(+(HEAPF64[(($104)>>3)]));
    $106=$103<$105;
    $_10=($106?$105:$103);
    $107=($101)-($_10);
    $108=($106?$103:$105);
    $109=(($inLow+($99<<3))|0);
    $110=(+(HEAPF64[(($109)>>3)]));
    $111=($108)-($110);
    $112=($107)+($111);
    $114=$112;
   } else {
    $114=0.0;
   }

   $115=($ShadowLongPeriodTotal_045)+($114);
   $116=((($i_146)+(1))|0);
   $117=($116|0)<($_startIdx|0);
   if ($117) {
    $ShadowLongPeriodTotal_045=$115;$i_146=$116;
   } else {
    $ShadowLongPeriodTotal_0_lcssa=$115;
    break;
   }
  }
 } else {
  $ShadowLongPeriodTotal_0_lcssa=0.0;
 }

 $78=($29|0)>0;
 if ($78) {
  $79=((HEAP32[((272)>>2)])|0);
  $80=(($79+332)|0);
  $81=((HEAP32[(($80)>>2)])|0);
  $_promoted=(+(HEAPF64[(($24)>>3)]));
  $_promoted41=(+(HEAPF64[(($25)>>3)]));
  $i_239=$30;$124=$_promoted;$123=$_promoted41;
  while(1) {



   if (((($81|0))|0)==((1)|0)) {
    $138=((($i_239)-(1))|0);
    $139=(($inHigh+($138<<3))|0);
    $140=(+(HEAPF64[(($139)>>3)]));
    $141=(($inLow+($138<<3))|0);
    $142=(+(HEAPF64[(($141)>>3)]));
    $143=($140)-($142);
    $144=(($inHigh+($i_239<<3))|0);
    $145=(+(HEAPF64[(($144)>>3)]));
    $146=(($inLow+($i_239<<3))|0);
    $147=(+(HEAPF64[(($146)>>3)]));
    $148=($145)-($147);
    $178=$148;$_pn=$143;
   } else if (((($81|0))|0)==((0)|0)) {
    $125=((($i_239)-(1))|0);
    $126=(($inClose+($125<<3))|0);
    $127=(+(HEAPF64[(($126)>>3)]));
    $128=(($inOpen+($125<<3))|0);
    $129=(+(HEAPF64[(($128)>>3)]));
    $130=($127)-($129);
    $131=(+(Math_abs((+($130)))));
    $132=(($inClose+($i_239<<3))|0);
    $133=(+(HEAPF64[(($132)>>3)]));
    $134=(($inOpen+($i_239<<3))|0);
    $135=(+(HEAPF64[(($134)>>3)]));
    $136=($133)-($135);
    $137=(+(Math_abs((+($136)))));
    $178=$137;$_pn=$131;
   } else if (((($81|0))|0)==((2)|0)) {
    $149=((($i_239)-(1))|0);
    $150=(($inHigh+($149<<3))|0);
    $151=(+(HEAPF64[(($150)>>3)]));
    $152=(($inClose+($149<<3))|0);
    $153=(+(HEAPF64[(($152)>>3)]));
    $154=(($inOpen+($149<<3))|0);
    $155=(+(HEAPF64[(($154)>>3)]));
    $156=$153<$155;
    $_11=($156?$155:$153);
    $157=($151)-($_11);
    $158=($156?$153:$155);
    $159=(($inLow+($149<<3))|0);
    $160=(+(HEAPF64[(($159)>>3)]));
    $161=($158)-($160);
    $162=($157)+($161);
    $163=(($inHigh+($i_239<<3))|0);
    $164=(+(HEAPF64[(($163)>>3)]));
    $165=(($inClose+($i_239<<3))|0);
    $166=(+(HEAPF64[(($165)>>3)]));
    $167=(($inOpen+($i_239<<3))|0);
    $168=(+(HEAPF64[(($167)>>3)]));
    $169=$166<$168;
    $_12=($169?$168:$166);
    $170=($164)-($_12);
    $171=($169?$166:$168);
    $172=(($inLow+($i_239<<3))|0);
    $173=(+(HEAPF64[(($172)>>3)]));
    $174=($171)-($173);
    $175=($170)+($174);
    $178=$175;$_pn=$162;
   } else {
    $178=0.0;$_pn=0.0;
   }


   $179=($_pn)+($124);
   $180=($178)+($123);
   $181=((($i_239)+(1))|0);
   $182=($181|0)<($_startIdx|0);
   if ($182) {
    $i_239=$181;$124=$179;$123=$180;
   } else {
    break;
   }
  }
  HEAPF64[(($24)>>3)]=$179;
  HEAPF64[(($25)>>3)]=$180;
 }
 $118=($32|0)>0;
 if ($118) {
  $119=((HEAP32[((272)>>2)])|0);
  $120=(($119+212)|0);
  $121=((HEAP32[(($120)>>2)])|0);
  $BodyShortPeriodTotal_036=0.0;$i_337=$33;
  while(1) {


   if (((($121|0))|0)==((1)|0)) {
    $195=(($inHigh+($i_337<<3))|0);
    $196=(+(HEAPF64[(($195)>>3)]));
    $197=(($inLow+($i_337<<3))|0);
    $198=(+(HEAPF64[(($197)>>3)]));
    $199=($196)-($198);
    $215=$199;
   } else if (((($121|0))|0)==((2)|0)) {
    $201=(($inHigh+($i_337<<3))|0);
    $202=(+(HEAPF64[(($201)>>3)]));
    $203=(($inClose+($i_337<<3))|0);
    $204=(+(HEAPF64[(($203)>>3)]));
    $205=(($inOpen+($i_337<<3))|0);
    $206=(+(HEAPF64[(($205)>>3)]));
    $207=$204<$206;
    $_13=($207?$206:$204);
    $208=($202)-($_13);
    $209=($207?$204:$206);
    $210=(($inLow+($i_337<<3))|0);
    $211=(+(HEAPF64[(($210)>>3)]));
    $212=($209)-($211);
    $213=($208)+($212);
    $215=$213;
   } else if (((($121|0))|0)==((0)|0)) {
    $188=(($inClose+($i_337<<3))|0);
    $189=(+(HEAPF64[(($188)>>3)]));
    $190=(($inOpen+($i_337<<3))|0);
    $191=(+(HEAPF64[(($190)>>3)]));
    $192=($189)-($191);
    $193=(+(Math_abs((+($192)))));
    $215=$193;
   } else {
    $215=0.0;
   }

   $216=($BodyShortPeriodTotal_036)+($215);
   $217=((($i_337)+(1))|0);
   $218=($217|0)<($_startIdx|0);
   if ($218) {
    $BodyShortPeriodTotal_036=$216;$i_337=$217;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$216;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;
 }

 $183=($12|0)>($endIdx|0);
 $smax=($183?$12:$endIdx);
 $184=($smax|0)>($startIdx|0);
 $smax53=($184?$smax:$startIdx);
 $185=($12|0)>($startIdx|0);
 $smax54=($185?$12:$startIdx);
 $ShadowVeryShortTrailingIdx_0=$30;$ShadowLongTrailingIdx_0=$23;$BodyShortTrailingIdx_0=$33;$BodyLongTrailingIdx_0=$20;$outIdx_0=0;$i_4=$_startIdx;$ShadowLongPeriodTotal_1=$ShadowLongPeriodTotal_0_lcssa;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;
 while(1) {









  $220=((($i_4)-(2))|0);
  $221=(($inClose+($220<<3))|0);
  $222=(+(HEAPF64[(($221)>>3)]));
  $223=(($inOpen+($220<<3))|0);
  $224=(+(HEAPF64[(($223)>>3)]));
  $225=$222>=$224;
  do {
   if ($225) {
    label = 89;
   } else {
    $227=((($i_4)-(1))|0);
    $228=(($inClose+($227<<3))|0);
    $229=(+(HEAPF64[(($228)>>3)]));
    $230=(($inOpen+($227<<3))|0);
    $231=(+(HEAPF64[(($230)>>3)]));
    $not_7=$229<$231;
    if (!($not_7)) {
     label = 89;
     break;
    }
    $233=(($inClose+($i_4<<3))|0);
    $234=(+(HEAPF64[(($233)>>3)]));
    $235=(($inOpen+($i_4<<3))|0);
    $236=(+(HEAPF64[(($235)>>3)]));
    $not_8=$234<$236;
    if (!($not_8)) {
     label = 89;
     break;
    }
    $238=($222)-($224);
    $239=(+(Math_abs((+($238)))));
    $240=((HEAP32[((272)>>2)])|0);
    $241=(($240+176)|0);
    $242=(+(HEAPF64[(($241)>>3)]));
    $243=(($240+168)|0);
    $244=((HEAP32[(($243)>>2)])|0);
    $245=($244|0)==0;
    do {
     if ($245) {
      $250=(($240+164)|0);
      $251=((HEAP32[(($250)>>2)])|0);
      if (((($251|0))|0)==((0)|0)) {
       $271=$239;
       break;
      } else if (((($251|0))|0)==((1)|0)) {
       $253=(($inHigh+($220<<3))|0);
       $254=(+(HEAPF64[(($253)>>3)]));
       $255=(($inLow+($220<<3))|0);
       $256=(+(HEAPF64[(($255)>>3)]));
       $257=($254)-($256);
       $271=$257;
       break;
      }
      $259=($251|0)==2;
      if (!($259)) {
       $271=0.0;
       break;
      }
      $261=(($inHigh+($220<<3))|0);
      $262=(+(HEAPF64[(($261)>>3)]));
      $_14=($225?$222:$224);
      $263=($262)-($_14);
      $264=$222<$224;
      $265=($264?$222:$224);
      $266=(($inLow+($220<<3))|0);
      $267=(+(HEAPF64[(($266)>>3)]));
      $268=($265)-($267);
      $269=($263)+($268);
      $271=$269;
     } else {
      $247=(+((($244|0))|0));
      $248=($BodyLongPeriodTotal_1)/($247);
      $271=$248;
     }
    } while(0);

    $272=($242)*($271);
    $273=((HEAP32[((272)>>2)])|0);
    $274=(($273+164)|0);
    $275=((HEAP32[(($274)>>2)])|0);
    $276=($275|0)==2;
    $277=($276?(2.0):(1.0));
    $278=($272)/($277);
    $279=$239>$278;
    if (!($279)) {
     label = 89;
     break;
    }
    $281=(+(HEAPF64[(($221)>>3)]));
    $282=(+(HEAPF64[(($223)>>3)]));
    $283=$281<$282;
    $_15=($283?$281:$282);
    $284=(($inLow+($220<<3))|0);
    $285=(+(HEAPF64[(($284)>>3)]));
    $286=($_15)-($285);
    $287=(($273+272)|0);
    $288=(+(HEAPF64[(($287)>>3)]));
    $289=(($273+264)|0);
    $290=((HEAP32[(($289)>>2)])|0);
    $291=($290|0)==0;
    do {
     if ($291) {
      $296=(($273+260)|0);
      $297=((HEAP32[(($296)>>2)])|0);
      if (((($297|0))|0)==((0)|0)) {
       $299=($281)-($282);
       $300=(+(Math_abs((+($299)))));
       $311=$300;
       break;
      } else if (((($297|0))|0)==((1)|0)) {
       $302=(($inHigh+($220<<3))|0);
       $303=(+(HEAPF64[(($302)>>3)]));
       $304=($303)-($285);
       $311=$304;
       break;
      } else if (((($297|0))|0)==((2)|0)) {
       $306=(($inHigh+($220<<3))|0);
       $307=(+(HEAPF64[(($306)>>3)]));
       $_16=($283?$282:$281);
       $308=($307)-($_16);
       $309=($286)+($308);
       $311=$309;
       break;
      } else {
       $311=0.0;
       break;
      }
     } else {
      $293=(+((($290|0))|0));
      $294=($ShadowLongPeriodTotal_1)/($293);
      $311=$294;
     }
    } while(0);

    $312=($288)*($311);
    $313=((HEAP32[((272)>>2)])|0);
    $314=(($313+260)|0);
    $315=((HEAP32[(($314)>>2)])|0);
    $316=($315|0)==2;
    $317=($316?(2.0):(1.0));
    $318=($312)/($317);
    $319=$286>$318;
    if (!($319)) {
     label = 89;
     break;
    }
    $321=(+(HEAPF64[(($228)>>3)]));
    $322=(+(HEAPF64[(($230)>>3)]));
    $323=($321)-($322);
    $324=(+(Math_abs((+($323)))));
    $325=(+(HEAPF64[(($221)>>3)]));
    $326=(+(HEAPF64[(($223)>>3)]));
    $327=($325)-($326);
    $328=(+(Math_abs((+($327)))));
    $329=$324<$328;
    $330=$322>$325;
    $or_cond17=$329&$330;
    if (!($or_cond17)) {
     label = 89;
     break;
    }
    $332=(($inHigh+($220<<3))|0);
    $333=(+(HEAPF64[(($332)>>3)]));
    $334=$322>$333;
    if ($334) {
     label = 89;
     break;
    }
    $336=(($inLow+($227<<3))|0);
    $337=(+(HEAPF64[(($336)>>3)]));
    $338=$337<$325;
    if (!($338)) {
     label = 89;
     break;
    }
    $340=(+(HEAPF64[(($284)>>3)]));
    $341=$337<$340;
    if ($341) {
     label = 89;
     break;
    }
    $343=$321<$322;
    $_18=($343?$321:$322);
    $344=($_18)-($337);
    $345=(($313+344)|0);
    $346=(+(HEAPF64[(($345)>>3)]));
    $347=(($313+336)|0);
    $348=((HEAP32[(($347)>>2)])|0);
    $349=($348|0)==0;
    do {
     if ($349) {
      $355=(($313+332)|0);
      $356=((HEAP32[(($355)>>2)])|0);
      if (((($356|0))|0)==((0)|0)) {
       $368=$324;
       break;
      } else if (((($356|0))|0)==((1)|0)) {
       $359=(($inHigh+($227<<3))|0);
       $360=(+(HEAPF64[(($359)>>3)]));
       $361=($360)-($337);
       $368=$361;
       break;
      } else if (((($356|0))|0)==((2)|0)) {
       $363=(($inHigh+($227<<3))|0);
       $364=(+(HEAPF64[(($363)>>3)]));
       $_19=($343?$322:$321);
       $365=($364)-($_19);
       $366=($344)+($365);
       $368=$366;
       break;
      } else {
       $368=0.0;
       break;
      }
     } else {
      $351=(+((($348|0))|0));
      $352=(+(HEAPF64[(($24)>>3)]));
      $353=($352)/($351);
      $368=$353;
     }
    } while(0);

    $369=($346)*($368);
    $370=((HEAP32[((272)>>2)])|0);
    $371=(($370+332)|0);
    $372=((HEAP32[(($371)>>2)])|0);
    $373=($372|0)==2;
    $374=($373?(2.0):(1.0));
    $375=($369)/($374);
    $376=$344>$375;
    if (!($376)) {
     label = 89;
     break;
    }
    $378=(+(HEAPF64[(($233)>>3)]));
    $379=(+(HEAPF64[(($235)>>3)]));
    $380=($378)-($379);
    $381=(+(Math_abs((+($380)))));
    $382=(($370+224)|0);
    $383=(+(HEAPF64[(($382)>>3)]));
    $384=(($370+216)|0);
    $385=((HEAP32[(($384)>>2)])|0);
    $386=($385|0)==0;
    do {
     if ($386) {
      $391=(($370+212)|0);
      $392=((HEAP32[(($391)>>2)])|0);
      if (((($392|0))|0)==((1)|0)) {
       $394=(($inHigh+($i_4<<3))|0);
       $395=(+(HEAPF64[(($394)>>3)]));
       $396=(($inLow+($i_4<<3))|0);
       $397=(+(HEAPF64[(($396)>>3)]));
       $398=($395)-($397);
       $412=$398;
       break;
      } else if (((($392|0))|0)==((0)|0)) {
       $412=$381;
       break;
      }
      $400=($392|0)==2;
      if (!($400)) {
       $412=0.0;
       break;
      }
      $402=(($inHigh+($i_4<<3))|0);
      $403=(+(HEAPF64[(($402)>>3)]));
      $404=$378<$379;
      $_20=($404?$379:$378);
      $405=($403)-($_20);
      $406=($404?$378:$379);
      $407=(($inLow+($i_4<<3))|0);
      $408=(+(HEAPF64[(($407)>>3)]));
      $409=($406)-($408);
      $410=($405)+($409);
      $412=$410;
     } else {
      $388=(+((($385|0))|0));
      $389=($BodyShortPeriodTotal_1)/($388);
      $412=$389;
     }
    } while(0);

    $413=($383)*($412);
    $414=((HEAP32[((272)>>2)])|0);
    $415=(($414+212)|0);
    $416=((HEAP32[(($415)>>2)])|0);
    $417=($416|0)==2;
    $418=($417?(2.0):(1.0));
    $419=($413)/($418);
    $420=$381<$419;
    if (!($420)) {
     label = 89;
     break;
    }
    $422=(+(HEAPF64[(($233)>>3)]));
    $423=(+(HEAPF64[(($235)>>3)]));
    $424=$422<$423;
    $_21=($424?$422:$423);
    $425=(($inLow+($i_4<<3))|0);
    $426=(+(HEAPF64[(($425)>>3)]));
    $427=($_21)-($426);
    $428=(($414+344)|0);
    $429=(+(HEAPF64[(($428)>>3)]));
    $430=(($414+336)|0);
    $431=((HEAP32[(($430)>>2)])|0);
    $432=($431|0)==0;
    do {
     if ($432) {
      $438=(($414+332)|0);
      $439=((HEAP32[(($438)>>2)])|0);
      if (((($439|0))|0)==((0)|0)) {
       $441=($422)-($423);
       $442=(+(Math_abs((+($441)))));
       $453=$442;
       break;
      } else if (((($439|0))|0)==((1)|0)) {
       $444=(($inHigh+($i_4<<3))|0);
       $445=(+(HEAPF64[(($444)>>3)]));
       $446=($445)-($426);
       $453=$446;
       break;
      } else if (((($439|0))|0)==((2)|0)) {
       $448=(($inHigh+($i_4<<3))|0);
       $449=(+(HEAPF64[(($448)>>3)]));
       $_22=($424?$423:$422);
       $450=($449)-($_22);
       $451=($427)+($450);
       $453=$451;
       break;
      } else {
       $453=0.0;
       break;
      }
     } else {
      $434=(+((($431|0))|0));
      $435=(+(HEAPF64[(($25)>>3)]));
      $436=($435)/($434);
      $453=$436;
     }
    } while(0);

    $454=($429)*($453);
    $455=((HEAP32[((272)>>2)])|0);
    $456=(($455+332)|0);
    $457=((HEAP32[(($456)>>2)])|0);
    $458=($457|0)==2;
    $459=($458?(2.0):(1.0));
    $460=($454)/($459);
    $461=$427<$460;
    if (!($461)) {
     label = 89;
     break;
    }
    $463=(($inHigh+($i_4<<3))|0);
    $464=(+(HEAPF64[(($463)>>3)]));
    $465=(+(HEAPF64[(($233)>>3)]));
    $466=(+(HEAPF64[(($235)>>3)]));
    $467=$465<$466;
    $_23=($467?$466:$465);
    $468=($464)-($_23);
    $469=(($455+344)|0);
    $470=(+(HEAPF64[(($469)>>3)]));
    $471=(($455+336)|0);
    $472=((HEAP32[(($471)>>2)])|0);
    $473=($472|0)==0;
    do {
     if ($473) {
      if (((($457|0))|0)==((0)|0)) {
       $480=($465)-($466);
       $481=(+(Math_abs((+($480)))));
       $491=$481;
       break;
      } else if (((($457|0))|0)==((1)|0)) {
       $483=(+(HEAPF64[(($425)>>3)]));
       $484=($464)-($483);
       $491=$484;
       break;
      } else if (((($457|0))|0)==((2)|0)) {
       $486=($467?$465:$466);
       $487=(+(HEAPF64[(($425)>>3)]));
       $488=($486)-($487);
       $489=($468)+($488);
       $491=$489;
       break;
      } else {
       $491=0.0;
       break;
      }
     } else {
      $475=(+((($472|0))|0));
      $476=(+(HEAPF64[(($25)>>3)]));
      $477=($476)/($475);
      $491=$477;
     }
    } while(0);

    $492=($470)*($491);
    $493=((HEAP32[((272)>>2)])|0);
    $494=(($493+332)|0);
    $495=((HEAP32[(($494)>>2)])|0);
    $496=($495|0)==2;
    $497=($496?(2.0):(1.0));
    $498=($492)/($497);
    $499=$468<$498;
    if (!($499)) {
     label = 89;
     break;
    }
    $501=(+(HEAPF64[(($425)>>3)]));
    $502=(+(HEAPF64[(($336)>>3)]));
    $503=$501>$502;
    if (!($503)) {
     label = 89;
     break;
    }
    $505=(+(HEAPF64[(($463)>>3)]));
    $506=(($inHigh+($227<<3))|0);
    $507=(+(HEAPF64[(($506)>>3)]));
    $508=$505<$507;
    if (!($508)) {
     label = 89;
     break;
    }
    $510=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($510)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 89) {
   label = 0;
   $512=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($512)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $514=((HEAP32[((272)>>2)])|0);
  $515=(($514+164)|0);
  $516=((HEAP32[(($515)>>2)])|0);
  if (((($516|0))|0)==((0)|0)) {
   $518=(+(HEAPF64[(($221)>>3)]));
   $519=(+(HEAPF64[(($223)>>3)]));
   $520=($518)-($519);
   $521=(+(Math_abs((+($520)))));
   $541=$521;
  } else if (((($516|0))|0)==((1)|0)) {
   $523=(($inHigh+($220<<3))|0);
   $524=(+(HEAPF64[(($523)>>3)]));
   $525=(($inLow+($220<<3))|0);
   $526=(+(HEAPF64[(($525)>>3)]));
   $527=($524)-($526);
   $541=$527;
  } else if (((($516|0))|0)==((2)|0)) {
   $529=(($inHigh+($220<<3))|0);
   $530=(+(HEAPF64[(($529)>>3)]));
   $531=(+(HEAPF64[(($221)>>3)]));
   $532=(+(HEAPF64[(($223)>>3)]));
   $533=$531<$532;
   $_25=($533?$532:$531);
   $534=($530)-($_25);
   $535=($533?$531:$532);
   $536=(($inLow+($220<<3))|0);
   $537=(+(HEAPF64[(($536)>>3)]));
   $538=($535)-($537);
   $539=($534)+($538);
   $541=$539;
  } else {
   $541=0.0;
  }

  $542=((HEAP32[((272)>>2)])|0);
  $543=(($542+164)|0);
  $544=((HEAP32[(($543)>>2)])|0);
  if (((($544|0))|0)==((0)|0)) {
   $546=((($BodyLongTrailingIdx_0)-(2))|0);
   $547=(($inClose+($546<<3))|0);
   $548=(+(HEAPF64[(($547)>>3)]));
   $549=(($inOpen+($546<<3))|0);
   $550=(+(HEAPF64[(($549)>>3)]));
   $551=($548)-($550);
   $552=(+(Math_abs((+($551)))));
   $576=$552;
  } else if (((($544|0))|0)==((1)|0)) {
   $554=((($BodyLongTrailingIdx_0)-(2))|0);
   $555=(($inHigh+($554<<3))|0);
   $556=(+(HEAPF64[(($555)>>3)]));
   $557=(($inLow+($554<<3))|0);
   $558=(+(HEAPF64[(($557)>>3)]));
   $559=($556)-($558);
   $576=$559;
  } else if (((($544|0))|0)==((2)|0)) {
   $561=((($BodyLongTrailingIdx_0)-(2))|0);
   $562=(($inHigh+($561<<3))|0);
   $563=(+(HEAPF64[(($562)>>3)]));
   $564=(($inClose+($561<<3))|0);
   $565=(+(HEAPF64[(($564)>>3)]));
   $566=(($inOpen+($561<<3))|0);
   $567=(+(HEAPF64[(($566)>>3)]));
   $568=$565<$567;
   $_26=($568?$567:$565);
   $569=($563)-($_26);
   $570=($568?$565:$567);
   $571=(($inLow+($561<<3))|0);
   $572=(+(HEAPF64[(($571)>>3)]));
   $573=($570)-($572);
   $574=($569)+($573);
   $576=$574;
  } else {
   $576=0.0;
  }

  $577=($541)-($576);
  $578=($BodyLongPeriodTotal_1)+($577);
  $579=((HEAP32[((272)>>2)])|0);
  $580=(($579+260)|0);
  $581=((HEAP32[(($580)>>2)])|0);
  if (((($581|0))|0)==((0)|0)) {
   $583=(+(HEAPF64[(($221)>>3)]));
   $584=(+(HEAPF64[(($223)>>3)]));
   $585=($583)-($584);
   $586=(+(Math_abs((+($585)))));
   $606=$586;
  } else if (((($581|0))|0)==((1)|0)) {
   $588=(($inHigh+($220<<3))|0);
   $589=(+(HEAPF64[(($588)>>3)]));
   $590=(($inLow+($220<<3))|0);
   $591=(+(HEAPF64[(($590)>>3)]));
   $592=($589)-($591);
   $606=$592;
  } else if (((($581|0))|0)==((2)|0)) {
   $594=(($inHigh+($220<<3))|0);
   $595=(+(HEAPF64[(($594)>>3)]));
   $596=(+(HEAPF64[(($221)>>3)]));
   $597=(+(HEAPF64[(($223)>>3)]));
   $598=$596<$597;
   $_27=($598?$597:$596);
   $599=($595)-($_27);
   $600=($598?$596:$597);
   $601=(($inLow+($220<<3))|0);
   $602=(+(HEAPF64[(($601)>>3)]));
   $603=($600)-($602);
   $604=($599)+($603);
   $606=$604;
  } else {
   $606=0.0;
  }

  $607=((HEAP32[((272)>>2)])|0);
  $608=(($607+260)|0);
  $609=((HEAP32[(($608)>>2)])|0);
  if (((($609|0))|0)==((0)|0)) {
   $611=((($ShadowLongTrailingIdx_0)-(2))|0);
   $612=(($inClose+($611<<3))|0);
   $613=(+(HEAPF64[(($612)>>3)]));
   $614=(($inOpen+($611<<3))|0);
   $615=(+(HEAPF64[(($614)>>3)]));
   $616=($613)-($615);
   $617=(+(Math_abs((+($616)))));
   $641=$617;
  } else if (((($609|0))|0)==((1)|0)) {
   $619=((($ShadowLongTrailingIdx_0)-(2))|0);
   $620=(($inHigh+($619<<3))|0);
   $621=(+(HEAPF64[(($620)>>3)]));
   $622=(($inLow+($619<<3))|0);
   $623=(+(HEAPF64[(($622)>>3)]));
   $624=($621)-($623);
   $641=$624;
  } else if (((($609|0))|0)==((2)|0)) {
   $626=((($ShadowLongTrailingIdx_0)-(2))|0);
   $627=(($inHigh+($626<<3))|0);
   $628=(+(HEAPF64[(($627)>>3)]));
   $629=(($inClose+($626<<3))|0);
   $630=(+(HEAPF64[(($629)>>3)]));
   $631=(($inOpen+($626<<3))|0);
   $632=(+(HEAPF64[(($631)>>3)]));
   $633=$630<$632;
   $_28=($633?$632:$630);
   $634=($628)-($_28);
   $635=($633?$630:$632);
   $636=(($inLow+($626<<3))|0);
   $637=(+(HEAPF64[(($636)>>3)]));
   $638=($635)-($637);
   $639=($634)+($638);
   $641=$639;
  } else {
   $641=0.0;
  }

  $642=($606)-($641);
  $643=((HEAP32[((272)>>2)])|0);
  $644=(($643+332)|0);
  $645=((HEAP32[(($644)>>2)])|0);
  if (((($645|0))|0)==((0)|0)) {
   $647=((($i_4)-(1))|0);
   $648=(($inClose+($647<<3))|0);
   $649=(+(HEAPF64[(($648)>>3)]));
   $650=(($inOpen+($647<<3))|0);
   $651=(+(HEAPF64[(($650)>>3)]));
   $652=($649)-($651);
   $653=(+(Math_abs((+($652)))));
   $677=$653;
  } else if (((($645|0))|0)==((1)|0)) {
   $655=((($i_4)-(1))|0);
   $656=(($inHigh+($655<<3))|0);
   $657=(+(HEAPF64[(($656)>>3)]));
   $658=(($inLow+($655<<3))|0);
   $659=(+(HEAPF64[(($658)>>3)]));
   $660=($657)-($659);
   $677=$660;
  } else if (((($645|0))|0)==((2)|0)) {
   $662=((($i_4)-(1))|0);
   $663=(($inHigh+($662<<3))|0);
   $664=(+(HEAPF64[(($663)>>3)]));
   $665=(($inClose+($662<<3))|0);
   $666=(+(HEAPF64[(($665)>>3)]));
   $667=(($inOpen+($662<<3))|0);
   $668=(+(HEAPF64[(($667)>>3)]));
   $669=$666<$668;
   $_29=($669?$668:$666);
   $670=($664)-($_29);
   $671=($669?$666:$668);
   $672=(($inLow+($662<<3))|0);
   $673=(+(HEAPF64[(($672)>>3)]));
   $674=($671)-($673);
   $675=($670)+($674);
   $677=$675;
  } else {
   $677=0.0;
  }

  if (((($645|0))|0)==((0)|0)) {
   $679=((($ShadowVeryShortTrailingIdx_0)-(1))|0);
   $680=(($inClose+($679<<3))|0);
   $681=(+(HEAPF64[(($680)>>3)]));
   $682=(($inOpen+($679<<3))|0);
   $683=(+(HEAPF64[(($682)>>3)]));
   $684=($681)-($683);
   $685=(+(Math_abs((+($684)))));
   $709=$685;
  } else if (((($645|0))|0)==((1)|0)) {
   $687=((($ShadowVeryShortTrailingIdx_0)-(1))|0);
   $688=(($inHigh+($687<<3))|0);
   $689=(+(HEAPF64[(($688)>>3)]));
   $690=(($inLow+($687<<3))|0);
   $691=(+(HEAPF64[(($690)>>3)]));
   $692=($689)-($691);
   $709=$692;
  } else if (((($645|0))|0)==((2)|0)) {
   $694=((($ShadowVeryShortTrailingIdx_0)-(1))|0);
   $695=(($inHigh+($694<<3))|0);
   $696=(+(HEAPF64[(($695)>>3)]));
   $697=(($inClose+($694<<3))|0);
   $698=(+(HEAPF64[(($697)>>3)]));
   $699=(($inOpen+($694<<3))|0);
   $700=(+(HEAPF64[(($699)>>3)]));
   $701=$698<$700;
   $_30=($701?$700:$698);
   $702=($696)-($_30);
   $703=($701?$698:$700);
   $704=(($inLow+($694<<3))|0);
   $705=(+(HEAPF64[(($704)>>3)]));
   $706=($703)-($705);
   $707=($702)+($706);
   $709=$707;
  } else {
   $709=0.0;
  }

  $710=($677)-($709);
  $711=(($ShadowVeryShortPeriodTotal+8)|0);
  $712=(+(HEAPF64[(($711)>>3)]));
  $713=($712)+($710);
  HEAPF64[(($711)>>3)]=$713;
  $714=(($643+332)|0);
  $715=((HEAP32[(($714)>>2)])|0);
  if (((($715|0))|0)==((2)|0)) {
   $790=(($inHigh+($i_4<<3))|0);
   $791=(+(HEAPF64[(($790)>>3)]));
   $792=(($inClose+($i_4<<3))|0);
   $793=(+(HEAPF64[(($792)>>3)]));
   $794=(($inOpen+($i_4<<3))|0);
   $795=(+(HEAPF64[(($794)>>3)]));
   $796=$793<$795;
   $_29_1=($796?$795:$793);
   $797=($791)-($_29_1);
   $798=($796?$793:$795);
   $799=(($inLow+($i_4<<3))|0);
   $800=(+(HEAPF64[(($799)>>3)]));
   $801=($798)-($800);
   $802=($797)+($801);
   $817=$802;
  } else if (((($715|0))|0)==((1)|0)) {
   $804=(($inHigh+($i_4<<3))|0);
   $805=(+(HEAPF64[(($804)>>3)]));
   $806=(($inLow+($i_4<<3))|0);
   $807=(+(HEAPF64[(($806)>>3)]));
   $808=($805)-($807);
   $817=$808;
  } else if (((($715|0))|0)==((0)|0)) {
   $810=(($inClose+($i_4<<3))|0);
   $811=(+(HEAPF64[(($810)>>3)]));
   $812=(($inOpen+($i_4<<3))|0);
   $813=(+(HEAPF64[(($812)>>3)]));
   $814=($811)-($813);
   $815=(+(Math_abs((+($814)))));
   $817=$815;
  } else {
   $817=0.0;
  }

  if (((($645|0))|0)==((2)|0)) {
   $819=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $820=(+(HEAPF64[(($819)>>3)]));
   $821=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $822=(+(HEAPF64[(($821)>>3)]));
   $823=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $824=(+(HEAPF64[(($823)>>3)]));
   $825=$822<$824;
   $_30_1=($825?$824:$822);
   $826=($820)-($_30_1);
   $827=($825?$822:$824);
   $828=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $829=(+(HEAPF64[(($828)>>3)]));
   $830=($827)-($829);
   $831=($826)+($830);
   $846=$831;
  } else if (((($645|0))|0)==((1)|0)) {
   $833=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $834=(+(HEAPF64[(($833)>>3)]));
   $835=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $836=(+(HEAPF64[(($835)>>3)]));
   $837=($834)-($836);
   $846=$837;
  } else if (((($645|0))|0)==((0)|0)) {
   $839=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $840=(+(HEAPF64[(($839)>>3)]));
   $841=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $842=(+(HEAPF64[(($841)>>3)]));
   $843=($840)-($842);
   $844=(+(Math_abs((+($843)))));
   $846=$844;
  } else {
   $846=0.0;
  }

  $847=($817)-($846);
  $848=(($ShadowVeryShortPeriodTotal)|0);
  $849=(+(HEAPF64[(($848)>>3)]));
  $850=($849)+($847);
  HEAPF64[(($848)>>3)]=$850;
  $851=($ShadowLongPeriodTotal_1)+($642);
  $852=(($643+212)|0);
  $853=((HEAP32[(($852)>>2)])|0);
  if (((($853|0))|0)==((0)|0)) {
   $717=(($inClose+($i_4<<3))|0);
   $718=(+(HEAPF64[(($717)>>3)]));
   $719=(($inOpen+($i_4<<3))|0);
   $720=(+(HEAPF64[(($719)>>3)]));
   $721=($718)-($720);
   $722=(+(Math_abs((+($721)))));
   $744=$722;
  } else if (((($853|0))|0)==((1)|0)) {
   $724=(($inHigh+($i_4<<3))|0);
   $725=(+(HEAPF64[(($724)>>3)]));
   $726=(($inLow+($i_4<<3))|0);
   $727=(+(HEAPF64[(($726)>>3)]));
   $728=($725)-($727);
   $744=$728;
  } else if (((($853|0))|0)==((2)|0)) {
   $730=(($inHigh+($i_4<<3))|0);
   $731=(+(HEAPF64[(($730)>>3)]));
   $732=(($inClose+($i_4<<3))|0);
   $733=(+(HEAPF64[(($732)>>3)]));
   $734=(($inOpen+($i_4<<3))|0);
   $735=(+(HEAPF64[(($734)>>3)]));
   $736=$733<$735;
   $_31=($736?$735:$733);
   $737=($731)-($_31);
   $738=($736?$733:$735);
   $739=(($inLow+($i_4<<3))|0);
   $740=(+(HEAPF64[(($739)>>3)]));
   $741=($738)-($740);
   $742=($737)+($741);
   $744=$742;
  } else {
   $744=0.0;
  }

  $745=((HEAP32[((272)>>2)])|0);
  $746=(($745+212)|0);
  $747=((HEAP32[(($746)>>2)])|0);
  if (((($747|0))|0)==((0)|0)) {
   $749=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $750=(+(HEAPF64[(($749)>>3)]));
   $751=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $752=(+(HEAPF64[(($751)>>3)]));
   $753=($750)-($752);
   $754=(+(Math_abs((+($753)))));
   $776=$754;
  } else if (((($747|0))|0)==((1)|0)) {
   $756=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $757=(+(HEAPF64[(($756)>>3)]));
   $758=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $759=(+(HEAPF64[(($758)>>3)]));
   $760=($757)-($759);
   $776=$760;
  } else if (((($747|0))|0)==((2)|0)) {
   $762=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $763=(+(HEAPF64[(($762)>>3)]));
   $764=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $765=(+(HEAPF64[(($764)>>3)]));
   $766=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $767=(+(HEAPF64[(($766)>>3)]));
   $768=$765<$767;
   $_32=($768?$767:$765);
   $769=($763)-($_32);
   $770=($768?$765:$767);
   $771=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $772=(+(HEAPF64[(($771)>>3)]));
   $773=($770)-($772);
   $774=($769)+($773);
   $776=$774;
  } else {
   $776=0.0;
  }

  $777=($744)-($776);
  $778=($BodyShortPeriodTotal_1)+($777);
  $779=((($i_4)+(1))|0);
  $780=((($BodyLongTrailingIdx_0)+(1))|0);
  $781=((($ShadowLongTrailingIdx_0)+(1))|0);
  $782=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $783=((($BodyShortTrailingIdx_0)+(1))|0);
  $784=($i_4|0)<($endIdx|0);
  if ($784) {
   $ShadowVeryShortTrailingIdx_0=$782;$ShadowLongTrailingIdx_0=$781;$BodyShortTrailingIdx_0=$783;$BodyLongTrailingIdx_0=$780;$outIdx_0=$outIdx_1;$i_4=$779;$ShadowLongPeriodTotal_1=$851;$BodyShortPeriodTotal_1=$778;$BodyLongPeriodTotal_1=$578;
  } else {
   break;
  }
 }
 $786=((($smax53)+(1))|0);
 $787=((($786)-($smax54))|0);
 HEAP32[(($outNBElement)>>2)]=$787;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDL3WHITESOLDIERS_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$__=0,$14=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+336)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+216)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=(($1+384)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($1+360)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)>($10|0);
 $12=($11?$8:$10);
 $13=($_|0)>($12|0);
 $__=($13?$_:$12);
 $14=((($__)+(2))|0);
 return (($14)|0);
}


function _TA_CDL3WHITESOLDIERS($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $ShadowVeryShortPeriodTotal=0,$NearPeriodTotal=0,$FarPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond34=0,$12=0,$13=0,$_startIdx=0;
 var $14=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0;
 var $36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$_promoted55=.0,$_promoted56=.0,$_promoted57=.0,$46=0,$47=0,$48=0,$49=0,$_promoted49=.0,$_promoted50=.0,$51=.0;
 var $52=.0,$53=.0,$i_053=0,$54=0,$55=0,$56=.0,$57=0,$58=.0,$59=.0,$60=.0,$61=0,$62=0,$63=.0,$64=0,$65=.0,$66=.0,$67=.0,$68=0,$69=.0,$70=0;
 var $71=.0,$72=.0,$73=.0,$74=0,$75=0,$76=.0,$77=0,$78=.0,$79=.0,$80=0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$86=0,$87=.0,$88=0,$89=.0,$90=.0;
 var $91=0,$92=0,$93=.0,$94=0,$95=.0,$96=0,$97=.0,$98=0,$_=.0,$99=.0,$100=.0,$101=0,$102=.0,$103=.0,$104=.0,$105=0,$106=0,$107=.0,$108=0,$109=.0;
 var $110=0,$111=.0,$112=0,$_8=.0,$113=.0,$114=.0,$115=0,$116=.0,$117=.0,$118=.0,$119=0,$120=.0,$121=0,$122=.0,$123=0,$124=.0,$125=0,$_9=.0,$126=.0,$127=.0;
 var $128=0,$129=.0,$130=.0,$131=.0,$_pn88=.0,$_pn89=.0,$134=.0,$135=.0,$136=.0,$137=.0,$138=0,$139=0,$140=0,$141=0,$142=0,$143=0,$_promoted=.0,$_promoted43=.0,$145=.0,$146=.0;
 var $i_147=0,$147=0,$148=0,$149=.0,$150=0,$151=.0,$152=.0,$153=.0,$154=0,$155=0,$156=.0,$157=0,$158=.0,$159=.0,$160=.0,$161=0,$162=0,$163=.0,$164=0,$165=.0;
 var $166=.0,$167=0,$168=0,$169=.0,$170=0,$171=.0,$172=.0,$173=0,$174=0,$175=.0,$176=0,$177=.0,$178=0,$179=.0,$180=0,$_10=.0,$181=.0,$182=.0,$183=0,$184=.0;
 var $185=.0,$186=.0,$187=0,$188=0,$189=.0,$190=0,$191=.0,$192=0,$193=.0,$194=0,$_11=.0,$195=.0,$196=.0,$197=0,$198=.0,$199=.0,$200=.0,$_pn87=.0,$203=.0,$204=.0;
 var $205=.0,$206=0,$207=0,$208=0,$209=0,$210=0,$211=0,$213=.0,$214=.0,$i_241=0,$215=0,$216=0,$217=.0,$218=0,$219=.0,$220=.0,$221=.0,$222=0,$223=0,$224=.0;
 var $225=0,$226=.0,$227=.0,$228=.0,$229=0,$230=0,$231=.0,$232=0,$233=.0,$234=.0,$235=0,$236=0,$237=.0,$238=0,$239=.0,$240=.0,$241=0,$242=0,$243=.0,$244=0;
 var $245=.0,$246=0,$247=.0,$248=0,$_12=.0,$249=.0,$250=.0,$251=0,$252=.0,$253=.0,$254=.0,$255=0,$256=0,$257=.0,$258=0,$259=.0,$260=0,$261=.0,$262=0,$_13=.0;
 var $263=.0,$264=.0,$265=0,$266=.0,$267=.0,$268=.0,$_pn=.0,$271=.0,$272=.0,$273=.0,$274=0,$275=0,$BodyShortPeriodTotal_0_lcssa=.0,$276=0,$smax=0,$277=0,$smax61=0,$278=0,$smax62=0,$i_339=0;
 var $BodyShortPeriodTotal_038=.0,$281=0,$282=.0,$283=0,$284=.0,$285=.0,$286=.0,$288=0,$289=.0,$290=0,$291=.0,$292=.0,$294=0,$295=.0,$296=0,$297=.0,$298=0,$299=.0,$300=0,$_14=.0;
 var $301=.0,$302=.0,$303=0,$304=.0,$305=.0,$306=.0,$308=.0,$309=.0,$310=0,$311=0,$BodyShortPeriodTotal_1=.0,$i_4=0,$outIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$NearTrailingIdx_0=0,$FarTrailingIdx_0=0,$BodyShortTrailingIdx_0=0,$313=0,$314=0,$315=.0;
 var $316=0,$317=.0,$318=0,$320=0,$321=.0,$322=.0,$323=0,$324=0,$325=.0,$326=0,$327=0,$328=0,$330=.0,$331=.0,$332=.0,$334=0,$335=0,$337=.0,$338=.0,$340=0;
 var $341=.0,$342=.0,$344=0,$_16=.0,$345=.0,$346=.0,$347=0,$348=.0,$349=.0,$350=.0,$352=.0,$353=.0,$354=0,$355=0,$356=0,$357=0,$358=.0,$359=.0,$360=0,$362=0;
 var $363=0,$364=.0,$365=0,$366=.0,$367=0,$369=0,$370=.0,$371=.0,$372=0,$373=.0,$374=0,$375=0,$376=0,$378=.0,$379=.0,$380=.0,$383=.0,$384=.0,$386=0,$387=.0;
 var $388=.0,$390=0,$_18=.0,$391=.0,$392=.0,$393=0,$394=.0,$395=.0,$396=.0,$398=.0,$399=.0,$400=0,$401=0,$402=0,$403=0,$404=.0,$405=.0,$406=0,$408=0,$409=.0;
 var $410=0,$411=.0,$412=0,$414=0,$415=.0,$416=.0,$417=0,$418=.0,$419=0,$420=0,$421=0,$423=.0,$424=.0,$425=.0,$428=.0,$429=.0,$431=0,$432=.0,$433=.0,$435=0;
 var $_20=.0,$436=.0,$437=.0,$438=0,$439=.0,$440=.0,$441=.0,$443=.0,$444=.0,$445=0,$446=0,$447=0,$448=0,$449=.0,$450=.0,$451=0,$453=.0,$454=.0,$455=0,$457=.0;
 var $458=0,$460=.0,$461=.0,$462=0,$464=0,$465=.0,$466=0,$467=0,$468=0,$470=.0,$471=.0,$472=.0,$474=0,$475=0,$477=.0,$478=.0,$480=.0,$481=0,$482=.0,$483=.0;
 var $485=.0,$486=0,$_21=.0,$487=.0,$488=.0,$489=0,$490=.0,$491=.0,$492=.0,$494=.0,$495=.0,$496=0,$497=0,$498=0,$499=0,$500=.0,$501=.0,$502=.0,$503=0,$505=.0;
 var $506=.0,$507=0,$509=.0,$510=0,$511=.0,$512=0,$513=0,$514=0,$516=.0,$517=.0,$518=.0,$521=.0,$522=.0,$524=.0,$525=0,$526=.0,$527=.0,$530=.0,$531=0,$_22=.0;
 var $532=.0,$533=.0,$534=0,$535=.0,$536=.0,$537=.0,$539=.0,$540=.0,$541=0,$542=0,$543=0,$544=0,$545=.0,$546=.0,$547=.0,$548=0,$550=.0,$551=.0,$552=.0,$553=.0;
 var $554=.0,$555=.0,$556=.0,$557=.0,$558=0,$559=.0,$560=0,$561=0,$562=0,$564=.0,$565=.0,$566=.0,$568=0,$569=0,$571=.0,$572=0,$573=.0,$574=.0,$576=0,$578=.0;
 var $579=0,$_23=.0,$580=.0,$581=.0,$582=0,$583=.0,$584=.0,$585=.0,$587=.0,$588=.0,$589=0,$590=0,$591=0,$592=0,$593=.0,$594=.0,$595=.0,$596=0,$598=.0,$599=.0;
 var $600=.0,$601=.0,$602=.0,$603=.0,$604=.0,$605=.0,$606=0,$607=.0,$608=0,$609=0,$610=0,$612=.0,$613=.0,$614=.0,$617=.0,$618=0,$619=.0,$620=.0,$623=.0,$624=0;
 var $_24=.0,$625=.0,$626=.0,$627=0,$628=.0,$629=.0,$630=.0,$632=.0,$633=.0,$634=0,$635=0,$636=0,$637=0,$638=.0,$639=.0,$640=.0,$641=0,$643=.0,$644=.0,$645=.0;
 var $646=.0,$647=0,$648=.0,$649=0,$650=0,$651=0,$653=.0,$654=.0,$656=0,$657=0,$659=.0,$660=0,$661=.0,$662=.0,$664=0,$666=.0,$667=0,$_25=.0,$668=.0,$669=.0;
 var $670=0,$671=.0,$672=.0,$673=.0,$675=.0,$676=.0,$677=0,$678=0,$679=0,$680=0,$681=.0,$682=.0,$683=0,$685=0,$687=0,$689=0,$690=0,$691=0,$totIdx_035=0,$693=0;
 var $694=0,$695=.0,$696=0,$697=.0,$698=.0,$699=.0,$700=0,$701=0,$702=.0,$703=0,$704=.0,$705=.0,$706=.0,$707=0,$708=0,$709=.0,$710=0,$711=.0,$712=.0,$713=0;
 var $714=0,$715=.0,$716=0,$717=.0,$718=.0,$719=0,$720=0,$721=.0,$722=0,$723=.0,$724=0,$725=.0,$726=0,$_26=.0,$727=.0,$728=.0,$729=0,$730=.0,$731=.0,$732=.0;
 var $733=0,$734=0,$735=.0,$736=0,$737=.0,$738=0,$739=.0,$740=0,$_27=.0,$741=.0,$742=.0,$743=0,$744=.0,$745=.0,$746=.0,$748=.0,$749=.0,$750=.0,$751=0,$752=.0;
 var $753=.0,$754=0,$755=0,$756=0,$757=0,$758=0,$759=0,$760=0,$totIdx_136=0,$762=0,$763=0,$765=0,$766=0,$767=.0,$768=0,$769=.0,$770=.0,$771=.0,$773=0,$774=0;
 var $775=.0,$776=0,$777=.0,$778=.0,$780=0,$781=0,$782=.0,$783=0,$784=.0,$785=0,$786=.0,$787=0,$_28=.0,$788=.0,$789=.0,$790=0,$791=.0,$792=.0,$793=.0,$795=.0;
 var $797=0,$798=0,$799=.0,$800=0,$801=.0,$802=.0,$803=.0,$805=0,$806=0,$807=.0,$808=0,$809=.0,$810=.0,$812=0,$813=0,$814=.0,$815=0,$816=.0,$817=0,$818=.0;
 var $819=0,$_29=.0,$820=.0,$821=.0,$822=0,$823=.0,$824=.0,$825=.0,$827=.0,$828=.0,$829=0,$830=.0,$831=.0,$832=0,$833=0,$834=.0,$835=0,$836=.0,$837=.0,$838=.0;
 var $839=0,$840=0,$841=.0,$842=0,$843=.0,$844=.0,$845=.0,$846=0,$847=0,$848=.0,$849=0,$850=.0,$851=.0,$852=0,$853=0,$854=.0,$855=0,$856=.0,$857=.0,$858=0;
 var $859=0,$860=.0,$861=0,$862=.0,$863=0,$864=.0,$865=0,$_30=.0,$866=.0,$867=.0,$868=0,$869=.0,$870=.0,$871=.0,$872=0,$873=0,$874=.0,$875=0,$876=.0,$877=0;
 var $878=.0,$879=0,$_31=.0,$880=.0,$881=.0,$882=0,$883=.0,$884=.0,$885=.0,$887=.0,$888=.0,$889=.0,$890=0,$891=.0,$892=.0,$893=0,$894=0,$outIdx_1=0,$896=0,$897=0;
 var $899=0,$900=.0,$901=0,$902=.0,$903=.0,$904=.0,$906=0,$907=.0,$908=0,$909=.0,$910=.0,$912=0,$913=.0,$914=0,$915=.0,$916=0,$917=.0,$918=0,$_32=.0,$919=.0;
 var $920=.0,$921=0,$922=.0,$923=.0,$924=.0,$926=.0,$927=0,$928=0,$929=0,$931=0,$932=.0,$933=0,$934=.0,$935=.0,$936=.0,$938=0,$939=.0,$940=0,$941=.0,$942=.0;
 var $944=0,$945=.0,$946=0,$947=.0,$948=0,$949=.0,$950=0,$_33=.0,$951=.0,$952=.0,$953=0,$954=.0,$955=.0,$956=.0,$958=.0,$959=.0,$960=.0,$961=0,$962=0,$963=0;
 var $964=0,$965=0,$966=0,$968=0,$969=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+72)|0;
 $ShadowVeryShortPeriodTotal=((sp)|0);
 $NearPeriodTotal=(((sp)+(24))|0);
 $FarPeriodTotal=(((sp)+(48))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond34=$10|$or_cond5_not;
 if ($or_cond34) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDL3WHITESOLDIERS_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=(($ShadowVeryShortPeriodTotal+16)|0);
 $18=(($ShadowVeryShortPeriodTotal+8)|0);
 $19=(($ShadowVeryShortPeriodTotal)|0);
 $20=$ShadowVeryShortPeriodTotal;
 _memset((((($20)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $21=((HEAP32[((272)>>2)])|0);
 $22=(($21+336)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=((($_startIdx)-($23))|0);
 $25=(($NearPeriodTotal+16)|0);
 $26=(($NearPeriodTotal+8)|0);
 $27=$NearPeriodTotal;
 _memset((((($27)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $28=((HEAP32[((272)>>2)])|0);
 $29=(($28+360)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=((($_startIdx)-($30))|0);
 $32=(($FarPeriodTotal+16)|0);
 $33=(($FarPeriodTotal+8)|0);
 $34=$FarPeriodTotal;
 _memset((((($34)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $35=((HEAP32[((272)>>2)])|0);
 $36=(($35+384)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 $38=((($_startIdx)-($37))|0);
 $39=(($35+216)|0);
 $40=((HEAP32[(($39)>>2)])|0);
 $41=((($_startIdx)-($40))|0);
 $42=($23|0)>0;
 if ($42) {
  $43=((HEAP32[((272)>>2)])|0);
  $44=(($43+332)|0);
  $45=((HEAP32[(($44)>>2)])|0);
  $_promoted55=(+(HEAPF64[(($17)>>3)]));
  $_promoted56=(+(HEAPF64[(($18)>>3)]));
  $_promoted57=(+(HEAPF64[(($19)>>3)]));
  $i_053=$24;$53=$_promoted55;$52=$_promoted56;$51=$_promoted57;
  while(1) {




   if (((($45|0))|0)==((1)|0)) {
    $74=((($i_053)-(2))|0);
    $75=(($inHigh+($74<<3))|0);
    $76=(+(HEAPF64[(($75)>>3)]));
    $77=(($inLow+($74<<3))|0);
    $78=(+(HEAPF64[(($77)>>3)]));
    $79=($76)-($78);
    $80=((($i_053)-(1))|0);
    $81=(($inHigh+($80<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($80<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $86=(($inHigh+($i_053<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=(($inLow+($i_053<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=($87)-($89);
    $134=$90;$_pn89=$79;$_pn88=$85;
   } else if (((($45|0))|0)==((0)|0)) {
    $54=((($i_053)-(2))|0);
    $55=(($inClose+($54<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=(($inOpen+($54<<3))|0);
    $58=(+(HEAPF64[(($57)>>3)]));
    $59=($56)-($58);
    $60=(+(Math_abs((+($59)))));
    $61=((($i_053)-(1))|0);
    $62=(($inClose+($61<<3))|0);
    $63=(+(HEAPF64[(($62)>>3)]));
    $64=(($inOpen+($61<<3))|0);
    $65=(+(HEAPF64[(($64)>>3)]));
    $66=($63)-($65);
    $67=(+(Math_abs((+($66)))));
    $68=(($inClose+($i_053<<3))|0);
    $69=(+(HEAPF64[(($68)>>3)]));
    $70=(($inOpen+($i_053<<3))|0);
    $71=(+(HEAPF64[(($70)>>3)]));
    $72=($69)-($71);
    $73=(+(Math_abs((+($72)))));
    $134=$73;$_pn89=$60;$_pn88=$67;
   } else if (((($45|0))|0)==((2)|0)) {
    $91=((($i_053)-(2))|0);
    $92=(($inHigh+($91<<3))|0);
    $93=(+(HEAPF64[(($92)>>3)]));
    $94=(($inClose+($91<<3))|0);
    $95=(+(HEAPF64[(($94)>>3)]));
    $96=(($inOpen+($91<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=$95<$97;
    $_=($98?$97:$95);
    $99=($93)-($_);
    $100=($98?$95:$97);
    $101=(($inLow+($91<<3))|0);
    $102=(+(HEAPF64[(($101)>>3)]));
    $103=($100)-($102);
    $104=($99)+($103);
    $105=((($i_053)-(1))|0);
    $106=(($inHigh+($105<<3))|0);
    $107=(+(HEAPF64[(($106)>>3)]));
    $108=(($inClose+($105<<3))|0);
    $109=(+(HEAPF64[(($108)>>3)]));
    $110=(($inOpen+($105<<3))|0);
    $111=(+(HEAPF64[(($110)>>3)]));
    $112=$109<$111;
    $_8=($112?$111:$109);
    $113=($107)-($_8);
    $114=($112?$109:$111);
    $115=(($inLow+($105<<3))|0);
    $116=(+(HEAPF64[(($115)>>3)]));
    $117=($114)-($116);
    $118=($113)+($117);
    $119=(($inHigh+($i_053<<3))|0);
    $120=(+(HEAPF64[(($119)>>3)]));
    $121=(($inClose+($i_053<<3))|0);
    $122=(+(HEAPF64[(($121)>>3)]));
    $123=(($inOpen+($i_053<<3))|0);
    $124=(+(HEAPF64[(($123)>>3)]));
    $125=$122<$124;
    $_9=($125?$124:$122);
    $126=($120)-($_9);
    $127=($125?$122:$124);
    $128=(($inLow+($i_053<<3))|0);
    $129=(+(HEAPF64[(($128)>>3)]));
    $130=($127)-($129);
    $131=($126)+($130);
    $134=$131;$_pn89=$104;$_pn88=$118;
   } else {
    $134=0.0;$_pn89=0.0;$_pn88=0.0;
   }



   $135=($_pn89)+($53);
   $136=($_pn88)+($52);
   $137=($134)+($51);
   $138=((($i_053)+(1))|0);
   $139=($138|0)<($_startIdx|0);
   if ($139) {
    $i_053=$138;$53=$135;$52=$136;$51=$137;
   } else {
    break;
   }
  }
  HEAPF64[(($17)>>3)]=$135;
  HEAPF64[(($18)>>3)]=$136;
  HEAPF64[(($19)>>3)]=$137;
 }
 $46=($30|0)>0;
 if ($46) {
  $47=((HEAP32[((272)>>2)])|0);
  $48=(($47+356)|0);
  $49=((HEAP32[(($48)>>2)])|0);
  $_promoted49=(+(HEAPF64[(($25)>>3)]));
  $_promoted50=(+(HEAPF64[(($26)>>3)]));
  $i_147=$31;$146=$_promoted49;$145=$_promoted50;
  while(1) {



   if (((($49|0))|0)==((1)|0)) {
    $161=((($i_147)-(2))|0);
    $162=(($inHigh+($161<<3))|0);
    $163=(+(HEAPF64[(($162)>>3)]));
    $164=(($inLow+($161<<3))|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    $166=($163)-($165);
    $167=((($i_147)-(1))|0);
    $168=(($inHigh+($167<<3))|0);
    $169=(+(HEAPF64[(($168)>>3)]));
    $170=(($inLow+($167<<3))|0);
    $171=(+(HEAPF64[(($170)>>3)]));
    $172=($169)-($171);
    $203=$172;$_pn87=$166;
   } else if (((($49|0))|0)==((0)|0)) {
    $147=((($i_147)-(2))|0);
    $148=(($inClose+($147<<3))|0);
    $149=(+(HEAPF64[(($148)>>3)]));
    $150=(($inOpen+($147<<3))|0);
    $151=(+(HEAPF64[(($150)>>3)]));
    $152=($149)-($151);
    $153=(+(Math_abs((+($152)))));
    $154=((($i_147)-(1))|0);
    $155=(($inClose+($154<<3))|0);
    $156=(+(HEAPF64[(($155)>>3)]));
    $157=(($inOpen+($154<<3))|0);
    $158=(+(HEAPF64[(($157)>>3)]));
    $159=($156)-($158);
    $160=(+(Math_abs((+($159)))));
    $203=$160;$_pn87=$153;
   } else if (((($49|0))|0)==((2)|0)) {
    $173=((($i_147)-(2))|0);
    $174=(($inHigh+($173<<3))|0);
    $175=(+(HEAPF64[(($174)>>3)]));
    $176=(($inClose+($173<<3))|0);
    $177=(+(HEAPF64[(($176)>>3)]));
    $178=(($inOpen+($173<<3))|0);
    $179=(+(HEAPF64[(($178)>>3)]));
    $180=$177<$179;
    $_10=($180?$179:$177);
    $181=($175)-($_10);
    $182=($180?$177:$179);
    $183=(($inLow+($173<<3))|0);
    $184=(+(HEAPF64[(($183)>>3)]));
    $185=($182)-($184);
    $186=($181)+($185);
    $187=((($i_147)-(1))|0);
    $188=(($inHigh+($187<<3))|0);
    $189=(+(HEAPF64[(($188)>>3)]));
    $190=(($inClose+($187<<3))|0);
    $191=(+(HEAPF64[(($190)>>3)]));
    $192=(($inOpen+($187<<3))|0);
    $193=(+(HEAPF64[(($192)>>3)]));
    $194=$191<$193;
    $_11=($194?$193:$191);
    $195=($189)-($_11);
    $196=($194?$191:$193);
    $197=(($inLow+($187<<3))|0);
    $198=(+(HEAPF64[(($197)>>3)]));
    $199=($196)-($198);
    $200=($195)+($199);
    $203=$200;$_pn87=$186;
   } else {
    $203=0.0;$_pn87=0.0;
   }


   $204=($_pn87)+($146);
   $205=($203)+($145);
   $206=((($i_147)+(1))|0);
   $207=($206|0)<($_startIdx|0);
   if ($207) {
    $i_147=$206;$146=$204;$145=$205;
   } else {
    break;
   }
  }
  HEAPF64[(($25)>>3)]=$204;
  HEAPF64[(($26)>>3)]=$205;
 }
 $140=($37|0)>0;
 if ($140) {
  $141=((HEAP32[((272)>>2)])|0);
  $142=(($141+380)|0);
  $143=((HEAP32[(($142)>>2)])|0);
  $_promoted=(+(HEAPF64[(($32)>>3)]));
  $_promoted43=(+(HEAPF64[(($33)>>3)]));
  $i_241=$38;$214=$_promoted;$213=$_promoted43;
  while(1) {



   if (((($143|0))|0)==((1)|0)) {
    $229=((($i_241)-(2))|0);
    $230=(($inHigh+($229<<3))|0);
    $231=(+(HEAPF64[(($230)>>3)]));
    $232=(($inLow+($229<<3))|0);
    $233=(+(HEAPF64[(($232)>>3)]));
    $234=($231)-($233);
    $235=((($i_241)-(1))|0);
    $236=(($inHigh+($235<<3))|0);
    $237=(+(HEAPF64[(($236)>>3)]));
    $238=(($inLow+($235<<3))|0);
    $239=(+(HEAPF64[(($238)>>3)]));
    $240=($237)-($239);
    $271=$240;$_pn=$234;
   } else if (((($143|0))|0)==((0)|0)) {
    $215=((($i_241)-(2))|0);
    $216=(($inClose+($215<<3))|0);
    $217=(+(HEAPF64[(($216)>>3)]));
    $218=(($inOpen+($215<<3))|0);
    $219=(+(HEAPF64[(($218)>>3)]));
    $220=($217)-($219);
    $221=(+(Math_abs((+($220)))));
    $222=((($i_241)-(1))|0);
    $223=(($inClose+($222<<3))|0);
    $224=(+(HEAPF64[(($223)>>3)]));
    $225=(($inOpen+($222<<3))|0);
    $226=(+(HEAPF64[(($225)>>3)]));
    $227=($224)-($226);
    $228=(+(Math_abs((+($227)))));
    $271=$228;$_pn=$221;
   } else if (((($143|0))|0)==((2)|0)) {
    $241=((($i_241)-(2))|0);
    $242=(($inHigh+($241<<3))|0);
    $243=(+(HEAPF64[(($242)>>3)]));
    $244=(($inClose+($241<<3))|0);
    $245=(+(HEAPF64[(($244)>>3)]));
    $246=(($inOpen+($241<<3))|0);
    $247=(+(HEAPF64[(($246)>>3)]));
    $248=$245<$247;
    $_12=($248?$247:$245);
    $249=($243)-($_12);
    $250=($248?$245:$247);
    $251=(($inLow+($241<<3))|0);
    $252=(+(HEAPF64[(($251)>>3)]));
    $253=($250)-($252);
    $254=($249)+($253);
    $255=((($i_241)-(1))|0);
    $256=(($inHigh+($255<<3))|0);
    $257=(+(HEAPF64[(($256)>>3)]));
    $258=(($inClose+($255<<3))|0);
    $259=(+(HEAPF64[(($258)>>3)]));
    $260=(($inOpen+($255<<3))|0);
    $261=(+(HEAPF64[(($260)>>3)]));
    $262=$259<$261;
    $_13=($262?$261:$259);
    $263=($257)-($_13);
    $264=($262?$259:$261);
    $265=(($inLow+($255<<3))|0);
    $266=(+(HEAPF64[(($265)>>3)]));
    $267=($264)-($266);
    $268=($263)+($267);
    $271=$268;$_pn=$254;
   } else {
    $271=0.0;$_pn=0.0;
   }


   $272=($_pn)+($214);
   $273=($271)+($213);
   $274=((($i_241)+(1))|0);
   $275=($274|0)<($_startIdx|0);
   if ($275) {
    $i_241=$274;$214=$272;$213=$273;
   } else {
    break;
   }
  }
  HEAPF64[(($32)>>3)]=$272;
  HEAPF64[(($33)>>3)]=$273;
 }
 $208=($40|0)>0;
 if ($208) {
  $209=((HEAP32[((272)>>2)])|0);
  $210=(($209+212)|0);
  $211=((HEAP32[(($210)>>2)])|0);
  $BodyShortPeriodTotal_038=0.0;$i_339=$41;
  while(1) {


   if (((($211|0))|0)==((0)|0)) {
    $281=(($inClose+($i_339<<3))|0);
    $282=(+(HEAPF64[(($281)>>3)]));
    $283=(($inOpen+($i_339<<3))|0);
    $284=(+(HEAPF64[(($283)>>3)]));
    $285=($282)-($284);
    $286=(+(Math_abs((+($285)))));
    $308=$286;
   } else if (((($211|0))|0)==((1)|0)) {
    $288=(($inHigh+($i_339<<3))|0);
    $289=(+(HEAPF64[(($288)>>3)]));
    $290=(($inLow+($i_339<<3))|0);
    $291=(+(HEAPF64[(($290)>>3)]));
    $292=($289)-($291);
    $308=$292;
   } else if (((($211|0))|0)==((2)|0)) {
    $294=(($inHigh+($i_339<<3))|0);
    $295=(+(HEAPF64[(($294)>>3)]));
    $296=(($inClose+($i_339<<3))|0);
    $297=(+(HEAPF64[(($296)>>3)]));
    $298=(($inOpen+($i_339<<3))|0);
    $299=(+(HEAPF64[(($298)>>3)]));
    $300=$297<$299;
    $_14=($300?$299:$297);
    $301=($295)-($_14);
    $302=($300?$297:$299);
    $303=(($inLow+($i_339<<3))|0);
    $304=(+(HEAPF64[(($303)>>3)]));
    $305=($302)-($304);
    $306=($301)+($305);
    $308=$306;
   } else {
    $308=0.0;
   }

   $309=($BodyShortPeriodTotal_038)+($308);
   $310=((($i_339)+(1))|0);
   $311=($310|0)<($_startIdx|0);
   if ($311) {
    $BodyShortPeriodTotal_038=$309;$i_339=$310;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$309;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;
 }

 $276=($12|0)>($endIdx|0);
 $smax=($276?$12:$endIdx);
 $277=($smax|0)>($startIdx|0);
 $smax61=($277?$smax:$startIdx);
 $278=($12|0)>($startIdx|0);
 $smax62=($278?$12:$startIdx);
 $BodyShortTrailingIdx_0=$41;$FarTrailingIdx_0=$38;$NearTrailingIdx_0=$31;$ShadowVeryShortTrailingIdx_0=$24;$outIdx_0=0;$i_4=$_startIdx;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;
 while(1) {







  $313=((($i_4)-(2))|0);
  $314=(($inClose+($313<<3))|0);
  $315=(+(HEAPF64[(($314)>>3)]));
  $316=(($inOpen+($313<<3))|0);
  $317=(+(HEAPF64[(($316)>>3)]));
  $318=$315<$317;
  do {
   if ($318) {
    label = 106;
   } else {
    $320=(($inHigh+($313<<3))|0);
    $321=(+(HEAPF64[(($320)>>3)]));
    $322=($321)-($315);
    $323=((HEAP32[((272)>>2)])|0);
    $324=(($323+344)|0);
    $325=(+(HEAPF64[(($324)>>3)]));
    $326=(($323+336)|0);
    $327=((HEAP32[(($326)>>2)])|0);
    $328=($327|0)==0;
    do {
     if ($328) {
      $334=(($323+332)|0);
      $335=((HEAP32[(($334)>>2)])|0);
      if (((($335|0))|0)==((2)|0)) {
       $344=$315<$317;
       $_16=($344?$317:$315);
       $345=($321)-($_16);
       $346=($344?$315:$317);
       $347=(($inLow+($313<<3))|0);
       $348=(+(HEAPF64[(($347)>>3)]));
       $349=($346)-($348);
       $350=($345)+($349);
       $352=$350;
       break;
      } else if (((($335|0))|0)==((0)|0)) {
       $337=($315)-($317);
       $338=(+(Math_abs((+($337)))));
       $352=$338;
       break;
      } else if (((($335|0))|0)==((1)|0)) {
       $340=(($inLow+($313<<3))|0);
       $341=(+(HEAPF64[(($340)>>3)]));
       $342=($321)-($341);
       $352=$342;
       break;
      } else {
       $352=0.0;
       break;
      }
     } else {
      $330=(+((($327|0))|0));
      $331=(+(HEAPF64[(($17)>>3)]));
      $332=($331)/($330);
      $352=$332;
     }
    } while(0);

    $353=($325)*($352);
    $354=((HEAP32[((272)>>2)])|0);
    $355=(($354+332)|0);
    $356=((HEAP32[(($355)>>2)])|0);
    $357=($356|0)==2;
    $358=($357?(2.0):(1.0));
    $359=($353)/($358);
    $360=$322<$359;
    if (!($360)) {
     label = 106;
     break;
    }
    $362=((($i_4)-(1))|0);
    $363=(($inClose+($362<<3))|0);
    $364=(+(HEAPF64[(($363)>>3)]));
    $365=(($inOpen+($362<<3))|0);
    $366=(+(HEAPF64[(($365)>>3)]));
    $367=$364<$366;
    if ($367) {
     label = 106;
     break;
    }
    $369=(($inHigh+($362<<3))|0);
    $370=(+(HEAPF64[(($369)>>3)]));
    $371=($370)-($364);
    $372=(($354+344)|0);
    $373=(+(HEAPF64[(($372)>>3)]));
    $374=(($354+336)|0);
    $375=((HEAP32[(($374)>>2)])|0);
    $376=($375|0)==0;
    do {
     if ($376) {
      if (((($356|0))|0)==((0)|0)) {
       $383=($364)-($366);
       $384=(+(Math_abs((+($383)))));
       $398=$384;
       break;
      } else if (((($356|0))|0)==((1)|0)) {
       $386=(($inLow+($362<<3))|0);
       $387=(+(HEAPF64[(($386)>>3)]));
       $388=($370)-($387);
       $398=$388;
       break;
      } else if (((($356|0))|0)==((2)|0)) {
       $390=$364<$366;
       $_18=($390?$366:$364);
       $391=($370)-($_18);
       $392=($390?$364:$366);
       $393=(($inLow+($362<<3))|0);
       $394=(+(HEAPF64[(($393)>>3)]));
       $395=($392)-($394);
       $396=($391)+($395);
       $398=$396;
       break;
      } else {
       $398=0.0;
       break;
      }
     } else {
      $378=(+((($375|0))|0));
      $379=(+(HEAPF64[(($18)>>3)]));
      $380=($379)/($378);
      $398=$380;
     }
    } while(0);

    $399=($373)*($398);
    $400=((HEAP32[((272)>>2)])|0);
    $401=(($400+332)|0);
    $402=((HEAP32[(($401)>>2)])|0);
    $403=($402|0)==2;
    $404=($403?(2.0):(1.0));
    $405=($399)/($404);
    $406=$371<$405;
    if (!($406)) {
     label = 106;
     break;
    }
    $408=(($inClose+($i_4<<3))|0);
    $409=(+(HEAPF64[(($408)>>3)]));
    $410=(($inOpen+($i_4<<3))|0);
    $411=(+(HEAPF64[(($410)>>3)]));
    $412=$409<$411;
    if ($412) {
     label = 106;
     break;
    }
    $414=(($inHigh+($i_4<<3))|0);
    $415=(+(HEAPF64[(($414)>>3)]));
    $416=($415)-($409);
    $417=(($400+344)|0);
    $418=(+(HEAPF64[(($417)>>3)]));
    $419=(($400+336)|0);
    $420=((HEAP32[(($419)>>2)])|0);
    $421=($420|0)==0;
    do {
     if ($421) {
      if (((($402|0))|0)==((0)|0)) {
       $428=($409)-($411);
       $429=(+(Math_abs((+($428)))));
       $443=$429;
       break;
      } else if (((($402|0))|0)==((1)|0)) {
       $431=(($inLow+($i_4<<3))|0);
       $432=(+(HEAPF64[(($431)>>3)]));
       $433=($415)-($432);
       $443=$433;
       break;
      } else if (((($402|0))|0)==((2)|0)) {
       $435=$409<$411;
       $_20=($435?$411:$409);
       $436=($415)-($_20);
       $437=($435?$409:$411);
       $438=(($inLow+($i_4<<3))|0);
       $439=(+(HEAPF64[(($438)>>3)]));
       $440=($437)-($439);
       $441=($436)+($440);
       $443=$441;
       break;
      } else {
       $443=0.0;
       break;
      }
     } else {
      $423=(+((($420|0))|0));
      $424=(+(HEAPF64[(($19)>>3)]));
      $425=($424)/($423);
      $443=$425;
     }
    } while(0);

    $444=($418)*($443);
    $445=((HEAP32[((272)>>2)])|0);
    $446=(($445+332)|0);
    $447=((HEAP32[(($446)>>2)])|0);
    $448=($447|0)==2;
    $449=($448?(2.0):(1.0));
    $450=($444)/($449);
    $451=$416<$450;
    if (!($451)) {
     label = 106;
     break;
    }
    $453=(+(HEAPF64[(($408)>>3)]));
    $454=(+(HEAPF64[(($363)>>3)]));
    $455=$453>$454;
    if (!($455)) {
     label = 106;
     break;
    }
    $457=(+(HEAPF64[(($314)>>3)]));
    $458=$454>$457;
    if (!($458)) {
     label = 106;
     break;
    }
    $460=(+(HEAPF64[(($365)>>3)]));
    $461=(+(HEAPF64[(($316)>>3)]));
    $462=$460>$461;
    if (!($462)) {
     label = 106;
     break;
    }
    $464=(($445+368)|0);
    $465=(+(HEAPF64[(($464)>>3)]));
    $466=(($445+360)|0);
    $467=((HEAP32[(($466)>>2)])|0);
    $468=($467|0)==0;
    do {
     if ($468) {
      $474=(($445+356)|0);
      $475=((HEAP32[(($474)>>2)])|0);
      if (((($475|0))|0)==((0)|0)) {
       $477=($457)-($461);
       $478=(+(Math_abs((+($477)))));
       $494=$478;
       break;
      } else if (((($475|0))|0)==((1)|0)) {
       $480=(+(HEAPF64[(($320)>>3)]));
       $481=(($inLow+($313<<3))|0);
       $482=(+(HEAPF64[(($481)>>3)]));
       $483=($480)-($482);
       $494=$483;
       break;
      } else if (((($475|0))|0)==((2)|0)) {
       $485=(+(HEAPF64[(($320)>>3)]));
       $486=$457<$461;
       $_21=($486?$461:$457);
       $487=($485)-($_21);
       $488=($486?$457:$461);
       $489=(($inLow+($313<<3))|0);
       $490=(+(HEAPF64[(($489)>>3)]));
       $491=($488)-($490);
       $492=($487)+($491);
       $494=$492;
       break;
      } else {
       $494=0.0;
       break;
      }
     } else {
      $470=(+((($467|0))|0));
      $471=(+(HEAPF64[(($25)>>3)]));
      $472=($471)/($470);
      $494=$472;
     }
    } while(0);

    $495=($465)*($494);
    $496=((HEAP32[((272)>>2)])|0);
    $497=(($496+356)|0);
    $498=((HEAP32[(($497)>>2)])|0);
    $499=($498|0)==2;
    $500=($499?(2.0):(1.0));
    $501=($495)/($500);
    $502=($457)+($501);
    $503=$460>$502;
    if ($503) {
     label = 106;
     break;
    }
    $505=(+(HEAPF64[(($410)>>3)]));
    $506=(+(HEAPF64[(($365)>>3)]));
    $507=$505>$506;
    if (!($507)) {
     label = 106;
     break;
    }
    $509=(+(HEAPF64[(($363)>>3)]));
    $510=(($496+368)|0);
    $511=(+(HEAPF64[(($510)>>3)]));
    $512=(($496+360)|0);
    $513=((HEAP32[(($512)>>2)])|0);
    $514=($513|0)==0;
    do {
     if ($514) {
      if (((($498|0))|0)==((0)|0)) {
       $521=($509)-($506);
       $522=(+(Math_abs((+($521)))));
       $539=$522;
       break;
      } else if (((($498|0))|0)==((1)|0)) {
       $524=(+(HEAPF64[(($369)>>3)]));
       $525=(($inLow+($362<<3))|0);
       $526=(+(HEAPF64[(($525)>>3)]));
       $527=($524)-($526);
       $539=$527;
       break;
      } else {
       if (!($499)) {
        $539=0.0;
        break;
       }
       $530=(+(HEAPF64[(($369)>>3)]));
       $531=$509<$506;
       $_22=($531?$506:$509);
       $532=($530)-($_22);
       $533=($531?$509:$506);
       $534=(($inLow+($362<<3))|0);
       $535=(+(HEAPF64[(($534)>>3)]));
       $536=($533)-($535);
       $537=($532)+($536);
       $539=$537;
       break;
      }
     } else {
      $516=(+((($513|0))|0));
      $517=(+(HEAPF64[(($26)>>3)]));
      $518=($517)/($516);
      $539=$518;
     }
    } while(0);

    $540=($511)*($539);
    $541=((HEAP32[((272)>>2)])|0);
    $542=(($541+356)|0);
    $543=((HEAP32[(($542)>>2)])|0);
    $544=($543|0)==2;
    $545=($544?(2.0):(1.0));
    $546=($540)/($545);
    $547=($509)+($546);
    $548=$505>$547;
    if ($548) {
     label = 106;
     break;
    }
    $550=(+(HEAPF64[(($363)>>3)]));
    $551=(+(HEAPF64[(($365)>>3)]));
    $552=($550)-($551);
    $553=(+(Math_abs((+($552)))));
    $554=(+(HEAPF64[(($314)>>3)]));
    $555=(+(HEAPF64[(($316)>>3)]));
    $556=($554)-($555);
    $557=(+(Math_abs((+($556)))));
    $558=(($541+392)|0);
    $559=(+(HEAPF64[(($558)>>3)]));
    $560=(($541+384)|0);
    $561=((HEAP32[(($560)>>2)])|0);
    $562=($561|0)==0;
    do {
     if ($562) {
      $568=(($541+380)|0);
      $569=((HEAP32[(($568)>>2)])|0);
      if (((($569|0))|0)==((1)|0)) {
       $571=(+(HEAPF64[(($320)>>3)]));
       $572=(($inLow+($313<<3))|0);
       $573=(+(HEAPF64[(($572)>>3)]));
       $574=($571)-($573);
       $587=$574;
       break;
      } else if (((($569|0))|0)==((0)|0)) {
       $587=$557;
       break;
      }
      $576=($569|0)==2;
      if (!($576)) {
       $587=0.0;
       break;
      }
      $578=(+(HEAPF64[(($320)>>3)]));
      $579=$554<$555;
      $_23=($579?$555:$554);
      $580=($578)-($_23);
      $581=($579?$554:$555);
      $582=(($inLow+($313<<3))|0);
      $583=(+(HEAPF64[(($582)>>3)]));
      $584=($581)-($583);
      $585=($580)+($584);
      $587=$585;
     } else {
      $564=(+((($561|0))|0));
      $565=(+(HEAPF64[(($32)>>3)]));
      $566=($565)/($564);
      $587=$566;
     }
    } while(0);

    $588=($559)*($587);
    $589=((HEAP32[((272)>>2)])|0);
    $590=(($589+380)|0);
    $591=((HEAP32[(($590)>>2)])|0);
    $592=($591|0)==2;
    $593=($592?(2.0):(1.0));
    $594=($588)/($593);
    $595=($557)-($594);
    $596=$553>$595;
    if (!($596)) {
     label = 106;
     break;
    }
    $598=(+(HEAPF64[(($408)>>3)]));
    $599=(+(HEAPF64[(($410)>>3)]));
    $600=($598)-($599);
    $601=(+(Math_abs((+($600)))));
    $602=(+(HEAPF64[(($363)>>3)]));
    $603=(+(HEAPF64[(($365)>>3)]));
    $604=($602)-($603);
    $605=(+(Math_abs((+($604)))));
    $606=(($589+392)|0);
    $607=(+(HEAPF64[(($606)>>3)]));
    $608=(($589+384)|0);
    $609=((HEAP32[(($608)>>2)])|0);
    $610=($609|0)==0;
    do {
     if ($610) {
      if (((($591|0))|0)==((1)|0)) {
       $617=(+(HEAPF64[(($369)>>3)]));
       $618=(($inLow+($362<<3))|0);
       $619=(+(HEAPF64[(($618)>>3)]));
       $620=($617)-($619);
       $632=$620;
       break;
      } else if (((($591|0))|0)==((0)|0)) {
       $632=$605;
       break;
      }
      if (!($592)) {
       $632=0.0;
       break;
      }
      $623=(+(HEAPF64[(($369)>>3)]));
      $624=$602<$603;
      $_24=($624?$603:$602);
      $625=($623)-($_24);
      $626=($624?$602:$603);
      $627=(($inLow+($362<<3))|0);
      $628=(+(HEAPF64[(($627)>>3)]));
      $629=($626)-($628);
      $630=($625)+($629);
      $632=$630;
     } else {
      $612=(+((($609|0))|0));
      $613=(+(HEAPF64[(($33)>>3)]));
      $614=($613)/($612);
      $632=$614;
     }
    } while(0);

    $633=($607)*($632);
    $634=((HEAP32[((272)>>2)])|0);
    $635=(($634+380)|0);
    $636=((HEAP32[(($635)>>2)])|0);
    $637=($636|0)==2;
    $638=($637?(2.0):(1.0));
    $639=($633)/($638);
    $640=($605)-($639);
    $641=$601>$640;
    if (!($641)) {
     label = 106;
     break;
    }
    $643=(+(HEAPF64[(($408)>>3)]));
    $644=(+(HEAPF64[(($410)>>3)]));
    $645=($643)-($644);
    $646=(+(Math_abs((+($645)))));
    $647=(($634+224)|0);
    $648=(+(HEAPF64[(($647)>>3)]));
    $649=(($634+216)|0);
    $650=((HEAP32[(($649)>>2)])|0);
    $651=($650|0)==0;
    do {
     if ($651) {
      $656=(($634+212)|0);
      $657=((HEAP32[(($656)>>2)])|0);
      if (((($657|0))|0)==((1)|0)) {
       $659=(+(HEAPF64[(($414)>>3)]));
       $660=(($inLow+($i_4<<3))|0);
       $661=(+(HEAPF64[(($660)>>3)]));
       $662=($659)-($661);
       $675=$662;
       break;
      } else if (((($657|0))|0)==((0)|0)) {
       $675=$646;
       break;
      }
      $664=($657|0)==2;
      if (!($664)) {
       $675=0.0;
       break;
      }
      $666=(+(HEAPF64[(($414)>>3)]));
      $667=$643<$644;
      $_25=($667?$644:$643);
      $668=($666)-($_25);
      $669=($667?$643:$644);
      $670=(($inLow+($i_4<<3))|0);
      $671=(+(HEAPF64[(($670)>>3)]));
      $672=($669)-($671);
      $673=($668)+($672);
      $675=$673;
     } else {
      $653=(+((($650|0))|0));
      $654=($BodyShortPeriodTotal_1)/($653);
      $675=$654;
     }
    } while(0);

    $676=($648)*($675);
    $677=((HEAP32[((272)>>2)])|0);
    $678=(($677+212)|0);
    $679=((HEAP32[(($678)>>2)])|0);
    $680=($679|0)==2;
    $681=($680?(2.0):(1.0));
    $682=($676)/($681);
    $683=$646>$682;
    if (!($683)) {
     label = 106;
     break;
    }
    $685=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($685)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 106) {
   label = 0;
   $687=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($687)>>2)]=0;
  }
  $689=((HEAP32[((272)>>2)])|0);
  $690=(($689+332)|0);
  $691=((HEAP32[(($690)>>2)])|0);
  $totIdx_035=2;
  while(1) {

   if (((($691|0))|0)==((0)|0)) {
    $693=((($i_4)-($totIdx_035))|0);
    $694=(($inClose+($693<<3))|0);
    $695=(+(HEAPF64[(($694)>>3)]));
    $696=(($inOpen+($693<<3))|0);
    $697=(+(HEAPF64[(($696)>>3)]));
    $698=($695)-($697);
    $699=(+(Math_abs((+($698)))));
    $700=((($ShadowVeryShortTrailingIdx_0)-($totIdx_035))|0);
    $701=(($inClose+($700<<3))|0);
    $702=(+(HEAPF64[(($701)>>3)]));
    $703=(($inOpen+($700<<3))|0);
    $704=(+(HEAPF64[(($703)>>3)]));
    $705=($702)-($704);
    $706=(+(Math_abs((+($705)))));
    $749=$706;$748=$699;
   } else if (((($691|0))|0)==((1)|0)) {
    $707=((($i_4)-($totIdx_035))|0);
    $708=(($inHigh+($707<<3))|0);
    $709=(+(HEAPF64[(($708)>>3)]));
    $710=(($inLow+($707<<3))|0);
    $711=(+(HEAPF64[(($710)>>3)]));
    $712=($709)-($711);
    $713=((($ShadowVeryShortTrailingIdx_0)-($totIdx_035))|0);
    $714=(($inHigh+($713<<3))|0);
    $715=(+(HEAPF64[(($714)>>3)]));
    $716=(($inLow+($713<<3))|0);
    $717=(+(HEAPF64[(($716)>>3)]));
    $718=($715)-($717);
    $749=$718;$748=$712;
   } else if (((($691|0))|0)==((2)|0)) {
    $719=((($i_4)-($totIdx_035))|0);
    $720=(($inHigh+($719<<3))|0);
    $721=(+(HEAPF64[(($720)>>3)]));
    $722=(($inClose+($719<<3))|0);
    $723=(+(HEAPF64[(($722)>>3)]));
    $724=(($inOpen+($719<<3))|0);
    $725=(+(HEAPF64[(($724)>>3)]));
    $726=$723<$725;
    $_26=($726?$725:$723);
    $727=($721)-($_26);
    $728=($726?$723:$725);
    $729=(($inLow+($719<<3))|0);
    $730=(+(HEAPF64[(($729)>>3)]));
    $731=($728)-($730);
    $732=($727)+($731);
    $733=((($ShadowVeryShortTrailingIdx_0)-($totIdx_035))|0);
    $734=(($inHigh+($733<<3))|0);
    $735=(+(HEAPF64[(($734)>>3)]));
    $736=(($inClose+($733<<3))|0);
    $737=(+(HEAPF64[(($736)>>3)]));
    $738=(($inOpen+($733<<3))|0);
    $739=(+(HEAPF64[(($738)>>3)]));
    $740=$737<$739;
    $_27=($740?$739:$737);
    $741=($735)-($_27);
    $742=($740?$737:$739);
    $743=(($inLow+($733<<3))|0);
    $744=(+(HEAPF64[(($743)>>3)]));
    $745=($742)-($744);
    $746=($741)+($745);
    $749=$746;$748=$732;
   } else {
    $749=0.0;$748=0.0;
   }


   $750=($748)-($749);
   $751=(($ShadowVeryShortPeriodTotal+($totIdx_035<<3))|0);
   $752=(+(HEAPF64[(($751)>>3)]));
   $753=($752)+($750);
   HEAPF64[(($751)>>3)]=$753;
   $754=((($totIdx_035)-(1))|0);
   $755=($totIdx_035|0)>0;
   if ($755) {
    $totIdx_035=$754;
   } else {
    break;
   }
  }
  $756=((HEAP32[((272)>>2)])|0);
  $757=(($756+380)|0);
  $758=((HEAP32[(($757)>>2)])|0);
  $759=(($756+356)|0);
  $760=((HEAP32[(($759)>>2)])|0);
  $totIdx_136=2;
  while(1) {

   $762=(($756+380)|0);
   $763=((HEAP32[(($762)>>2)])|0);
   if (((($763|0))|0)==((0)|0)) {
    $765=((($i_4)-($totIdx_136))|0);
    $766=(($inClose+($765<<3))|0);
    $767=(+(HEAPF64[(($766)>>3)]));
    $768=(($inOpen+($765<<3))|0);
    $769=(+(HEAPF64[(($768)>>3)]));
    $770=($767)-($769);
    $771=(+(Math_abs((+($770)))));
    $795=$771;
   } else if (((($763|0))|0)==((1)|0)) {
    $773=((($i_4)-($totIdx_136))|0);
    $774=(($inHigh+($773<<3))|0);
    $775=(+(HEAPF64[(($774)>>3)]));
    $776=(($inLow+($773<<3))|0);
    $777=(+(HEAPF64[(($776)>>3)]));
    $778=($775)-($777);
    $795=$778;
   } else if (((($763|0))|0)==((2)|0)) {
    $780=((($i_4)-($totIdx_136))|0);
    $781=(($inHigh+($780<<3))|0);
    $782=(+(HEAPF64[(($781)>>3)]));
    $783=(($inClose+($780<<3))|0);
    $784=(+(HEAPF64[(($783)>>3)]));
    $785=(($inOpen+($780<<3))|0);
    $786=(+(HEAPF64[(($785)>>3)]));
    $787=$784<$786;
    $_28=($787?$786:$784);
    $788=($782)-($_28);
    $789=($787?$784:$786);
    $790=(($inLow+($780<<3))|0);
    $791=(+(HEAPF64[(($790)>>3)]));
    $792=($789)-($791);
    $793=($788)+($792);
    $795=$793;
   } else {
    $795=0.0;
   }

   if (((($758|0))|0)==((0)|0)) {
    $797=((($FarTrailingIdx_0)-($totIdx_136))|0);
    $798=(($inClose+($797<<3))|0);
    $799=(+(HEAPF64[(($798)>>3)]));
    $800=(($inOpen+($797<<3))|0);
    $801=(+(HEAPF64[(($800)>>3)]));
    $802=($799)-($801);
    $803=(+(Math_abs((+($802)))));
    $827=$803;
   } else if (((($758|0))|0)==((1)|0)) {
    $805=((($FarTrailingIdx_0)-($totIdx_136))|0);
    $806=(($inHigh+($805<<3))|0);
    $807=(+(HEAPF64[(($806)>>3)]));
    $808=(($inLow+($805<<3))|0);
    $809=(+(HEAPF64[(($808)>>3)]));
    $810=($807)-($809);
    $827=$810;
   } else if (((($758|0))|0)==((2)|0)) {
    $812=((($FarTrailingIdx_0)-($totIdx_136))|0);
    $813=(($inHigh+($812<<3))|0);
    $814=(+(HEAPF64[(($813)>>3)]));
    $815=(($inClose+($812<<3))|0);
    $816=(+(HEAPF64[(($815)>>3)]));
    $817=(($inOpen+($812<<3))|0);
    $818=(+(HEAPF64[(($817)>>3)]));
    $819=$816<$818;
    $_29=($819?$818:$816);
    $820=($814)-($_29);
    $821=($819?$816:$818);
    $822=(($inLow+($812<<3))|0);
    $823=(+(HEAPF64[(($822)>>3)]));
    $824=($821)-($823);
    $825=($820)+($824);
    $827=$825;
   } else {
    $827=0.0;
   }

   $828=($795)-($827);
   $829=(($FarPeriodTotal+($totIdx_136<<3))|0);
   $830=(+(HEAPF64[(($829)>>3)]));
   $831=($830)+($828);
   HEAPF64[(($829)>>3)]=$831;
   if (((($760|0))|0)==((0)|0)) {
    $832=((($i_4)-($totIdx_136))|0);
    $833=(($inClose+($832<<3))|0);
    $834=(+(HEAPF64[(($833)>>3)]));
    $835=(($inOpen+($832<<3))|0);
    $836=(+(HEAPF64[(($835)>>3)]));
    $837=($834)-($836);
    $838=(+(Math_abs((+($837)))));
    $839=((($NearTrailingIdx_0)-($totIdx_136))|0);
    $840=(($inClose+($839<<3))|0);
    $841=(+(HEAPF64[(($840)>>3)]));
    $842=(($inOpen+($839<<3))|0);
    $843=(+(HEAPF64[(($842)>>3)]));
    $844=($841)-($843);
    $845=(+(Math_abs((+($844)))));
    $888=$845;$887=$838;
   } else if (((($760|0))|0)==((1)|0)) {
    $846=((($i_4)-($totIdx_136))|0);
    $847=(($inHigh+($846<<3))|0);
    $848=(+(HEAPF64[(($847)>>3)]));
    $849=(($inLow+($846<<3))|0);
    $850=(+(HEAPF64[(($849)>>3)]));
    $851=($848)-($850);
    $852=((($NearTrailingIdx_0)-($totIdx_136))|0);
    $853=(($inHigh+($852<<3))|0);
    $854=(+(HEAPF64[(($853)>>3)]));
    $855=(($inLow+($852<<3))|0);
    $856=(+(HEAPF64[(($855)>>3)]));
    $857=($854)-($856);
    $888=$857;$887=$851;
   } else if (((($760|0))|0)==((2)|0)) {
    $858=((($i_4)-($totIdx_136))|0);
    $859=(($inHigh+($858<<3))|0);
    $860=(+(HEAPF64[(($859)>>3)]));
    $861=(($inClose+($858<<3))|0);
    $862=(+(HEAPF64[(($861)>>3)]));
    $863=(($inOpen+($858<<3))|0);
    $864=(+(HEAPF64[(($863)>>3)]));
    $865=$862<$864;
    $_30=($865?$864:$862);
    $866=($860)-($_30);
    $867=($865?$862:$864);
    $868=(($inLow+($858<<3))|0);
    $869=(+(HEAPF64[(($868)>>3)]));
    $870=($867)-($869);
    $871=($866)+($870);
    $872=((($NearTrailingIdx_0)-($totIdx_136))|0);
    $873=(($inHigh+($872<<3))|0);
    $874=(+(HEAPF64[(($873)>>3)]));
    $875=(($inClose+($872<<3))|0);
    $876=(+(HEAPF64[(($875)>>3)]));
    $877=(($inOpen+($872<<3))|0);
    $878=(+(HEAPF64[(($877)>>3)]));
    $879=$876<$878;
    $_31=($879?$878:$876);
    $880=($874)-($_31);
    $881=($879?$876:$878);
    $882=(($inLow+($872<<3))|0);
    $883=(+(HEAPF64[(($882)>>3)]));
    $884=($881)-($883);
    $885=($880)+($884);
    $888=$885;$887=$871;
   } else {
    $888=0.0;$887=0.0;
   }


   $889=($887)-($888);
   $890=(($NearPeriodTotal+($totIdx_136<<3))|0);
   $891=(+(HEAPF64[(($890)>>3)]));
   $892=($891)+($889);
   HEAPF64[(($890)>>3)]=$892;
   $893=((($totIdx_136)-(1))|0);
   $894=($893|0)>0;
   if ($894) {
    $totIdx_136=$893;
   } else {
    break;
   }
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $896=(($756+212)|0);
  $897=((HEAP32[(($896)>>2)])|0);
  if (((($897|0))|0)==((0)|0)) {
   $899=(($inClose+($i_4<<3))|0);
   $900=(+(HEAPF64[(($899)>>3)]));
   $901=(($inOpen+($i_4<<3))|0);
   $902=(+(HEAPF64[(($901)>>3)]));
   $903=($900)-($902);
   $904=(+(Math_abs((+($903)))));
   $926=$904;
  } else if (((($897|0))|0)==((1)|0)) {
   $906=(($inHigh+($i_4<<3))|0);
   $907=(+(HEAPF64[(($906)>>3)]));
   $908=(($inLow+($i_4<<3))|0);
   $909=(+(HEAPF64[(($908)>>3)]));
   $910=($907)-($909);
   $926=$910;
  } else if (((($897|0))|0)==((2)|0)) {
   $912=(($inHigh+($i_4<<3))|0);
   $913=(+(HEAPF64[(($912)>>3)]));
   $914=(($inClose+($i_4<<3))|0);
   $915=(+(HEAPF64[(($914)>>3)]));
   $916=(($inOpen+($i_4<<3))|0);
   $917=(+(HEAPF64[(($916)>>3)]));
   $918=$915<$917;
   $_32=($918?$917:$915);
   $919=($913)-($_32);
   $920=($918?$915:$917);
   $921=(($inLow+($i_4<<3))|0);
   $922=(+(HEAPF64[(($921)>>3)]));
   $923=($920)-($922);
   $924=($919)+($923);
   $926=$924;
  } else {
   $926=0.0;
  }

  $927=((HEAP32[((272)>>2)])|0);
  $928=(($927+212)|0);
  $929=((HEAP32[(($928)>>2)])|0);
  if (((($929|0))|0)==((0)|0)) {
   $931=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $932=(+(HEAPF64[(($931)>>3)]));
   $933=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $934=(+(HEAPF64[(($933)>>3)]));
   $935=($932)-($934);
   $936=(+(Math_abs((+($935)))));
   $958=$936;
  } else if (((($929|0))|0)==((1)|0)) {
   $938=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $939=(+(HEAPF64[(($938)>>3)]));
   $940=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $941=(+(HEAPF64[(($940)>>3)]));
   $942=($939)-($941);
   $958=$942;
  } else if (((($929|0))|0)==((2)|0)) {
   $944=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $945=(+(HEAPF64[(($944)>>3)]));
   $946=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $947=(+(HEAPF64[(($946)>>3)]));
   $948=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $949=(+(HEAPF64[(($948)>>3)]));
   $950=$947<$949;
   $_33=($950?$949:$947);
   $951=($945)-($_33);
   $952=($950?$947:$949);
   $953=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $954=(+(HEAPF64[(($953)>>3)]));
   $955=($952)-($954);
   $956=($951)+($955);
   $958=$956;
  } else {
   $958=0.0;
  }

  $959=($926)-($958);
  $960=($BodyShortPeriodTotal_1)+($959);
  $961=((($i_4)+(1))|0);
  $962=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $963=((($NearTrailingIdx_0)+(1))|0);
  $964=((($FarTrailingIdx_0)+(1))|0);
  $965=((($BodyShortTrailingIdx_0)+(1))|0);
  $966=($i_4|0)<($endIdx|0);
  if ($966) {
   $BodyShortTrailingIdx_0=$965;$FarTrailingIdx_0=$964;$NearTrailingIdx_0=$963;$ShadowVeryShortTrailingIdx_0=$962;$outIdx_0=$outIdx_1;$i_4=$961;$BodyShortPeriodTotal_1=$960;
  } else {
   break;
  }
 }
 $968=((($smax61)+(1))|0);
 $969=((($968)-($smax62))|0);
 HEAP32[(($outNBElement)>>2)]=$969;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDLABANDONEDBABY_Lookback($optInPenetration){
 $optInPenetration=+($optInPenetration);
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$_=0,$12=0,$13=0,$14=0,$__=0,$15=0,$_02=0,label=0;

 $1=$optInPenetration==(-4.0e+37);
 do {
  if (!($1)) {
   $3=$optInPenetration<(0.0);
   $4=$optInPenetration>(3.0e+37);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_02=-1;
   } else {
    break;
   }

   return (($_02)|0);
  }
 } while(0);
 $6=((HEAP32[((272)>>2)])|0);
 $7=(($6+240)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($6+168)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)>($10|0);
 $_=($11?$8:$10);
 $12=(($6+216)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=($_|0)>($13|0);
 $__=($14?$_:$13);
 $15=((($__)+(2))|0);
 $_02=$15;

 return (($_02)|0);
}


function _TA_CDLABANDONEDBABY($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$optInPenetration,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInPenetration=+($optInPenetration);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond11=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$11=0,$13=0,$14=0,$or_cond7=0,$_09=.0,$16=0,$18=0,$19=0,$_startIdx=0;
 var $20=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$BodyLongPeriodTotal_0_lcssa=.0,$39=0,$40=0;
 var $41=0,$42=0,$i_032=0,$BodyLongPeriodTotal_031=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=.0,$58=0,$59=.0,$60=0,$61=.0,$62=0;
 var $63=.0,$64=0,$_=.0,$65=.0,$66=.0,$67=0,$68=.0,$69=.0,$70=.0,$72=.0,$73=.0,$74=0,$75=0,$BodyDojiPeriodTotal_0_lcssa=.0,$76=0,$77=0,$78=0,$79=0,$i_128=0,$BodyDojiPeriodTotal_027=.0;
 var $82=0,$83=.0,$84=0,$85=.0,$86=.0,$87=.0,$89=0,$90=.0,$91=0,$92=.0,$93=.0,$95=0,$96=.0,$97=0,$98=.0,$99=0,$100=.0,$101=0,$_12=.0,$102=.0;
 var $103=.0,$104=0,$105=.0,$106=.0,$107=.0,$109=.0,$110=.0,$111=0,$112=0,$BodyShortPeriodTotal_0_lcssa=.0,$113=0,$smax=0,$114=0,$smax35=0,$115=0,$smax36=0,$i_225=0,$BodyShortPeriodTotal_024=.0,$118=0,$119=.0;
 var $120=0,$121=.0,$122=.0,$123=.0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$132=.0,$133=0,$134=.0,$135=0,$136=.0,$137=0,$_13=.0,$138=.0,$139=.0,$140=0;
 var $141=.0,$142=.0,$143=.0,$145=.0,$146=.0,$147=0,$148=0,$BodyDojiPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$BodyShortPeriodTotal_1=.0,$i_3=0,$outIdx_0=0,$BodyDojiTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$BodyShortTrailingIdx_0=0,$150=0,$151=0,$152=.0,$153=0,$154=.0;
 var $155=.0,$156=.0,$157=0,$158=0,$159=.0,$160=0,$161=0,$162=0,$164=.0,$165=.0,$167=0,$168=0,$170=0,$171=.0,$172=0,$173=.0,$174=.0,$176=0,$178=0,$179=.0;
 var $180=0,$_14=.0,$181=.0,$182=.0,$183=0,$184=.0,$185=.0,$186=.0,$188=.0,$189=.0,$190=0,$191=0,$192=0,$193=0,$194=.0,$195=.0,$196=0,$198=0,$199=0,$200=.0;
 var $201=0,$202=.0,$203=.0,$204=.0,$205=0,$206=.0,$207=0,$208=0,$209=0,$211=.0,$212=.0,$214=0,$215=0,$217=0,$218=.0,$219=0,$220=.0,$221=.0,$223=0,$225=0;
 var $226=.0,$227=0,$_15=.0,$228=.0,$229=.0,$230=0,$231=.0,$232=.0,$233=.0,$235=.0,$236=.0,$237=0,$238=0,$239=0,$240=0,$241=.0,$242=.0,$243=0,$245=0,$246=.0;
 var $247=0,$248=.0,$249=.0,$250=.0,$251=0,$252=.0,$253=0,$254=0,$255=0,$257=.0,$258=.0,$260=0,$261=0,$263=0,$264=.0,$265=0,$266=.0,$267=.0,$269=0,$271=0;
 var $272=.0,$273=0,$_16=.0,$274=.0,$275=.0,$276=0,$277=.0,$278=.0,$279=.0,$281=.0,$282=.0,$283=0,$284=0,$285=0,$286=0,$287=.0,$288=.0,$289=0,$291=.0,$292=.0;
 var $293=0,$295=.0,$296=.0,$not_10=0,$298=.0,$299=.0,$300=.0,$301=.0,$302=0,$304=0,$305=.0,$306=0,$307=.0,$308=0,$310=0,$311=.0,$312=0,$314=.0,$315=.0,$not_=0;
 var $317=.0,$318=.0,$319=0,$321=.0,$322=.0,$323=.0,$324=.0,$325=0,$327=0,$328=.0,$329=0,$330=.0,$331=0,$333=0,$334=.0,$335=0,$337=.0,$338=.0,$339=0,$340=0;
 var $341=0,$343=0,$outIdx_1=0,$345=0,$346=0,$347=0,$349=.0,$350=.0,$351=.0,$352=.0,$354=0,$355=.0,$356=0,$357=.0,$358=.0,$360=0,$361=.0,$362=.0,$363=.0,$364=0;
 var $_17=.0,$365=.0,$366=.0,$367=0,$368=.0,$369=.0,$370=.0,$372=.0,$373=0,$374=0,$375=0,$377=0,$378=.0,$379=0,$380=.0,$381=.0,$382=.0,$384=0,$385=.0,$386=0;
 var $387=.0,$388=.0,$390=0,$391=.0,$392=0,$393=.0,$394=0,$395=.0,$396=0,$_18=.0,$397=.0,$398=.0,$399=0,$400=.0,$401=.0,$402=.0,$404=.0,$405=.0,$406=.0,$407=0;
 var $408=0,$409=0,$411=0,$412=0,$413=.0,$414=0,$415=.0,$416=.0,$417=.0,$419=0,$420=0,$421=.0,$422=0,$423=.0,$424=.0,$426=0,$427=0,$428=.0,$429=0,$430=.0;
 var $431=0,$432=.0,$433=0,$_19=.0,$434=.0,$435=.0,$436=0,$437=.0,$438=.0,$439=.0,$441=.0,$442=0,$443=0,$444=0,$446=0,$447=.0,$448=0,$449=.0,$450=.0,$451=.0;
 var $453=0,$454=.0,$455=0,$456=.0,$457=.0,$459=0,$460=.0,$461=0,$462=.0,$463=0,$464=.0,$465=0,$_20=.0,$466=.0,$467=.0,$468=0,$469=.0,$470=.0,$471=.0,$473=.0;
 var $474=.0,$475=.0,$476=0,$477=0,$478=0,$480=0,$481=.0,$482=0,$483=.0,$484=.0,$485=.0,$487=0,$488=.0,$489=0,$490=.0,$491=.0,$493=0,$494=.0,$495=0,$496=.0;
 var $497=0,$498=.0,$499=0,$_21=.0,$500=.0,$501=.0,$502=0,$503=.0,$504=.0,$505=.0,$507=.0,$508=0,$509=0,$510=0,$512=0,$513=.0,$514=0,$515=.0,$516=.0,$517=.0;
 var $519=0,$520=.0,$521=0,$522=.0,$523=.0,$525=0,$526=.0,$527=0,$528=.0,$529=0,$530=.0,$531=0,$_22=.0,$532=.0,$533=.0,$534=0,$535=.0,$536=.0,$537=.0,$539=.0;
 var $540=.0,$541=.0,$542=0,$543=0,$544=0,$545=0,$546=0,$548=0,$549=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond11=$3|$4;
 if ($or_cond11) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 if (!($or_cond5)) {
  $_0=2;

  return (($_0)|0);
 }
 $11=$optInPenetration==(-4.0e+37);
 do {
  if ($11) {
   $_09=0.3;
  } else {
   $13=$optInPenetration<(0.0);
   $14=$optInPenetration>(3.0e+37);
   $or_cond7=$13|$14;
   if ($or_cond7) {
    $_0=2;
   } else {
    $_09=$optInPenetration;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $16=($outInteger|0)==0;
 if ($16) {
  $_0=2;

  return (($_0)|0);
 }
 $18=((_TA_CDLABANDONEDBABY_Lookback($_09))|0);
 $19=($18|0)>($startIdx|0);
 $_startIdx=($19?$18:$startIdx);
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $23=((($_startIdx)-(2))|0);
 $24=((HEAP32[((272)>>2)])|0);
 $25=(($24+168)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=((($23)-($26))|0);
 $28=((($_startIdx)-(1))|0);
 $29=(($24+240)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=((($28)-($30))|0);
 $32=(($24+216)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=((($_startIdx)-($33))|0);
 $35=($26|0)>0;
 if ($35) {
  $36=((HEAP32[((272)>>2)])|0);
  $37=(($36+164)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $BodyLongPeriodTotal_031=0.0;$i_032=$27;
  while(1) {


   if (((($38|0))|0)==((0)|0)) {
    $45=(($inClose+($i_032<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=(($inOpen+($i_032<<3))|0);
    $48=(+(HEAPF64[(($47)>>3)]));
    $49=($46)-($48);
    $50=(+(Math_abs((+($49)))));
    $72=$50;
   } else if (((($38|0))|0)==((2)|0)) {
    $58=(($inHigh+($i_032<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=(($inClose+($i_032<<3))|0);
    $61=(+(HEAPF64[(($60)>>3)]));
    $62=(($inOpen+($i_032<<3))|0);
    $63=(+(HEAPF64[(($62)>>3)]));
    $64=$61<$63;
    $_=($64?$63:$61);
    $65=($59)-($_);
    $66=($64?$61:$63);
    $67=(($inLow+($i_032<<3))|0);
    $68=(+(HEAPF64[(($67)>>3)]));
    $69=($66)-($68);
    $70=($65)+($69);
    $72=$70;
   } else if (((($38|0))|0)==((1)|0)) {
    $52=(($inHigh+($i_032<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inLow+($i_032<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=($53)-($55);
    $72=$56;
   } else {
    $72=0.0;
   }

   $73=($BodyLongPeriodTotal_031)+($72);
   $74=((($i_032)+(1))|0);
   $75=($74|0)<($23|0);
   if ($75) {
    $BodyLongPeriodTotal_031=$73;$i_032=$74;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$73;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $39=($30|0)>0;
 if ($39) {
  $40=((HEAP32[((272)>>2)])|0);
  $41=(($40+236)|0);
  $42=((HEAP32[(($41)>>2)])|0);
  $BodyDojiPeriodTotal_027=0.0;$i_128=$31;
  while(1) {


   if (((($42|0))|0)==((2)|0)) {
    $95=(($inHigh+($i_128<<3))|0);
    $96=(+(HEAPF64[(($95)>>3)]));
    $97=(($inClose+($i_128<<3))|0);
    $98=(+(HEAPF64[(($97)>>3)]));
    $99=(($inOpen+($i_128<<3))|0);
    $100=(+(HEAPF64[(($99)>>3)]));
    $101=$98<$100;
    $_12=($101?$100:$98);
    $102=($96)-($_12);
    $103=($101?$98:$100);
    $104=(($inLow+($i_128<<3))|0);
    $105=(+(HEAPF64[(($104)>>3)]));
    $106=($103)-($105);
    $107=($102)+($106);
    $109=$107;
   } else if (((($42|0))|0)==((1)|0)) {
    $89=(($inHigh+($i_128<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inLow+($i_128<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=($90)-($92);
    $109=$93;
   } else if (((($42|0))|0)==((0)|0)) {
    $82=(($inClose+($i_128<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inOpen+($i_128<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=($83)-($85);
    $87=(+(Math_abs((+($86)))));
    $109=$87;
   } else {
    $109=0.0;
   }

   $110=($BodyDojiPeriodTotal_027)+($109);
   $111=((($i_128)+(1))|0);
   $112=($111|0)<($28|0);
   if ($112) {
    $BodyDojiPeriodTotal_027=$110;$i_128=$111;
   } else {
    $BodyDojiPeriodTotal_0_lcssa=$110;
    break;
   }
  }
 } else {
  $BodyDojiPeriodTotal_0_lcssa=0.0;
 }

 $76=($33|0)>0;
 if ($76) {
  $77=((HEAP32[((272)>>2)])|0);
  $78=(($77+212)|0);
  $79=((HEAP32[(($78)>>2)])|0);
  $BodyShortPeriodTotal_024=0.0;$i_225=$34;
  while(1) {


   if (((($79|0))|0)==((0)|0)) {
    $118=(($inClose+($i_225<<3))|0);
    $119=(+(HEAPF64[(($118)>>3)]));
    $120=(($inOpen+($i_225<<3))|0);
    $121=(+(HEAPF64[(($120)>>3)]));
    $122=($119)-($121);
    $123=(+(Math_abs((+($122)))));
    $145=$123;
   } else if (((($79|0))|0)==((2)|0)) {
    $131=(($inHigh+($i_225<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=(($inClose+($i_225<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=(($inOpen+($i_225<<3))|0);
    $136=(+(HEAPF64[(($135)>>3)]));
    $137=$134<$136;
    $_13=($137?$136:$134);
    $138=($132)-($_13);
    $139=($137?$134:$136);
    $140=(($inLow+($i_225<<3))|0);
    $141=(+(HEAPF64[(($140)>>3)]));
    $142=($139)-($141);
    $143=($138)+($142);
    $145=$143;
   } else if (((($79|0))|0)==((1)|0)) {
    $125=(($inHigh+($i_225<<3))|0);
    $126=(+(HEAPF64[(($125)>>3)]));
    $127=(($inLow+($i_225<<3))|0);
    $128=(+(HEAPF64[(($127)>>3)]));
    $129=($126)-($128);
    $145=$129;
   } else {
    $145=0.0;
   }

   $146=($BodyShortPeriodTotal_024)+($145);
   $147=((($i_225)+(1))|0);
   $148=($147|0)<($_startIdx|0);
   if ($148) {
    $BodyShortPeriodTotal_024=$146;$i_225=$147;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$146;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;
 }

 $113=($18|0)>($endIdx|0);
 $smax=($113?$18:$endIdx);
 $114=($smax|0)>($startIdx|0);
 $smax35=($114?$smax:$startIdx);
 $115=($18|0)>($startIdx|0);
 $smax36=($115?$18:$startIdx);
 $BodyShortTrailingIdx_0=$34;$BodyLongTrailingIdx_0=$27;$BodyDojiTrailingIdx_0=$31;$outIdx_0=0;$i_3=$_startIdx;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyDojiPeriodTotal_1=$BodyDojiPeriodTotal_0_lcssa;
 while(1) {








  $150=((($i_3)-(2))|0);
  $151=(($inClose+($150<<3))|0);
  $152=(+(HEAPF64[(($151)>>3)]));
  $153=(($inOpen+($150<<3))|0);
  $154=(+(HEAPF64[(($153)>>3)]));
  $155=($152)-($154);
  $156=(+(Math_abs((+($155)))));
  $157=((HEAP32[((272)>>2)])|0);
  $158=(($157+176)|0);
  $159=(+(HEAPF64[(($158)>>3)]));
  $160=(($157+168)|0);
  $161=((HEAP32[(($160)>>2)])|0);
  $162=($161|0)==0;
  do {
   if ($162) {
    $167=(($157+164)|0);
    $168=((HEAP32[(($167)>>2)])|0);
    if (((($168|0))|0)==((1)|0)) {
     $170=(($inHigh+($150<<3))|0);
     $171=(+(HEAPF64[(($170)>>3)]));
     $172=(($inLow+($150<<3))|0);
     $173=(+(HEAPF64[(($172)>>3)]));
     $174=($171)-($173);
     $188=$174;
     break;
    } else if (((($168|0))|0)==((0)|0)) {
     $188=$156;
     break;
    }
    $176=($168|0)==2;
    if (!($176)) {
     $188=0.0;
     break;
    }
    $178=(($inHigh+($150<<3))|0);
    $179=(+(HEAPF64[(($178)>>3)]));
    $180=$152<$154;
    $_14=($180?$154:$152);
    $181=($179)-($_14);
    $182=($180?$152:$154);
    $183=(($inLow+($150<<3))|0);
    $184=(+(HEAPF64[(($183)>>3)]));
    $185=($182)-($184);
    $186=($181)+($185);
    $188=$186;
   } else {
    $164=(+((($161|0))|0));
    $165=($BodyLongPeriodTotal_1)/($164);
    $188=$165;
   }
  } while(0);

  $189=($159)*($188);
  $190=((HEAP32[((272)>>2)])|0);
  $191=(($190+164)|0);
  $192=((HEAP32[(($191)>>2)])|0);
  $193=($192|0)==2;
  $194=($193?(2.0):(1.0));
  $195=($189)/($194);
  $196=$156>$195;
  do {
   if ($196) {
    $198=((($i_3)-(1))|0);
    $199=(($inClose+($198<<3))|0);
    $200=(+(HEAPF64[(($199)>>3)]));
    $201=(($inOpen+($198<<3))|0);
    $202=(+(HEAPF64[(($201)>>3)]));
    $203=($200)-($202);
    $204=(+(Math_abs((+($203)))));
    $205=(($190+248)|0);
    $206=(+(HEAPF64[(($205)>>3)]));
    $207=(($190+240)|0);
    $208=((HEAP32[(($207)>>2)])|0);
    $209=($208|0)==0;
    do {
     if ($209) {
      $214=(($190+236)|0);
      $215=((HEAP32[(($214)>>2)])|0);
      if (((($215|0))|0)==((0)|0)) {
       $235=$204;
       break;
      } else if (((($215|0))|0)==((1)|0)) {
       $217=(($inHigh+($198<<3))|0);
       $218=(+(HEAPF64[(($217)>>3)]));
       $219=(($inLow+($198<<3))|0);
       $220=(+(HEAPF64[(($219)>>3)]));
       $221=($218)-($220);
       $235=$221;
       break;
      }
      $223=($215|0)==2;
      if (!($223)) {
       $235=0.0;
       break;
      }
      $225=(($inHigh+($198<<3))|0);
      $226=(+(HEAPF64[(($225)>>3)]));
      $227=$200<$202;
      $_15=($227?$202:$200);
      $228=($226)-($_15);
      $229=($227?$200:$202);
      $230=(($inLow+($198<<3))|0);
      $231=(+(HEAPF64[(($230)>>3)]));
      $232=($229)-($231);
      $233=($228)+($232);
      $235=$233;
     } else {
      $211=(+((($208|0))|0));
      $212=($BodyDojiPeriodTotal_1)/($211);
      $235=$212;
     }
    } while(0);

    $236=($206)*($235);
    $237=((HEAP32[((272)>>2)])|0);
    $238=(($237+236)|0);
    $239=((HEAP32[(($238)>>2)])|0);
    $240=($239|0)==2;
    $241=($240?(2.0):(1.0));
    $242=($236)/($241);
    $243=$204>$242;
    if ($243) {
     label = 63;
     break;
    }
    $245=(($inClose+($i_3<<3))|0);
    $246=(+(HEAPF64[(($245)>>3)]));
    $247=(($inOpen+($i_3<<3))|0);
    $248=(+(HEAPF64[(($247)>>3)]));
    $249=($246)-($248);
    $250=(+(Math_abs((+($249)))));
    $251=(($237+224)|0);
    $252=(+(HEAPF64[(($251)>>3)]));
    $253=(($237+216)|0);
    $254=((HEAP32[(($253)>>2)])|0);
    $255=($254|0)==0;
    do {
     if ($255) {
      $260=(($237+212)|0);
      $261=((HEAP32[(($260)>>2)])|0);
      if (((($261|0))|0)==((1)|0)) {
       $263=(($inHigh+($i_3<<3))|0);
       $264=(+(HEAPF64[(($263)>>3)]));
       $265=(($inLow+($i_3<<3))|0);
       $266=(+(HEAPF64[(($265)>>3)]));
       $267=($264)-($266);
       $281=$267;
       break;
      } else if (((($261|0))|0)==((0)|0)) {
       $281=$250;
       break;
      }
      $269=($261|0)==2;
      if (!($269)) {
       $281=0.0;
       break;
      }
      $271=(($inHigh+($i_3<<3))|0);
      $272=(+(HEAPF64[(($271)>>3)]));
      $273=$246<$248;
      $_16=($273?$248:$246);
      $274=($272)-($_16);
      $275=($273?$246:$248);
      $276=(($inLow+($i_3<<3))|0);
      $277=(+(HEAPF64[(($276)>>3)]));
      $278=($275)-($277);
      $279=($274)+($278);
      $281=$279;
     } else {
      $257=(+((($254|0))|0));
      $258=($BodyShortPeriodTotal_1)/($257);
      $281=$258;
     }
    } while(0);

    $282=($252)*($281);
    $283=((HEAP32[((272)>>2)])|0);
    $284=(($283+212)|0);
    $285=((HEAP32[(($284)>>2)])|0);
    $286=($285|0)==2;
    $287=($286?(2.0):(1.0));
    $288=($282)/($287);
    $289=$250>$288;
    if (!($289)) {
     label = 63;
     break;
    }
    $291=(+(HEAPF64[(($151)>>3)]));
    $292=(+(HEAPF64[(($153)>>3)]));
    $293=$291<$292;
    do {
     if ($293) {
      label = 57;
     } else {
      $295=(+(HEAPF64[(($245)>>3)]));
      $296=(+(HEAPF64[(($247)>>3)]));
      $not_10=$295<$296;
      if (!($not_10)) {
       label = 57;
       break;
      }
      $298=($291)-($292);
      $299=(+(Math_abs((+($298)))));
      $300=($_09)*($299);
      $301=($291)-($300);
      $302=$295<$301;
      if (!($302)) {
       label = 57;
       break;
      }
      $304=(($inLow+($198<<3))|0);
      $305=(+(HEAPF64[(($304)>>3)]));
      $306=(($inHigh+($150<<3))|0);
      $307=(+(HEAPF64[(($306)>>3)]));
      $308=$305>$307;
      if (!($308)) {
       label = 57;
       break;
      }
      $310=(($inHigh+($i_3<<3))|0);
      $311=(+(HEAPF64[(($310)>>3)]));
      $312=$311<$305;
      if (!($312)) {
       label = 57;
      }
     }
    } while(0);
    if ((label|0) == 57) {
     label = 0;
     $314=(+(HEAPF64[(($151)>>3)]));
     $315=(+(HEAPF64[(($153)>>3)]));
     $not_=$314<$315;
     if (!($not_)) {
      label = 63;
      break;
     }
     $317=(+(HEAPF64[(($245)>>3)]));
     $318=(+(HEAPF64[(($247)>>3)]));
     $319=$317<$318;
     if ($319) {
      label = 63;
      break;
     }
     $321=($314)-($315);
     $322=(+(Math_abs((+($321)))));
     $323=($_09)*($322);
     $324=($314)+($323);
     $325=$317>$324;
     if (!($325)) {
      label = 63;
      break;
     }
     $327=(($inHigh+($198<<3))|0);
     $328=(+(HEAPF64[(($327)>>3)]));
     $329=(($inLow+($150<<3))|0);
     $330=(+(HEAPF64[(($329)>>3)]));
     $331=$328<$330;
     if (!($331)) {
      label = 63;
      break;
     }
     $333=(($inLow+($i_3<<3))|0);
     $334=(+(HEAPF64[(($333)>>3)]));
     $335=$334>$328;
     if (!($335)) {
      label = 63;
      break;
     }
    }
    $337=(+(HEAPF64[(($245)>>3)]));
    $338=(+(HEAPF64[(($247)>>3)]));
    $339=$337>=$338;
    $340=($339?100:-100);
    $341=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($341)>>2)]=$340;
   } else {
    label = 63;
   }
  } while(0);
  if ((label|0) == 63) {
   label = 0;
   $343=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($343)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $345=((HEAP32[((272)>>2)])|0);
  $346=(($345+164)|0);
  $347=((HEAP32[(($346)>>2)])|0);
  if (((($347|0))|0)==((0)|0)) {
   $349=(+(HEAPF64[(($151)>>3)]));
   $350=(+(HEAPF64[(($153)>>3)]));
   $351=($349)-($350);
   $352=(+(Math_abs((+($351)))));
   $372=$352;
  } else if (((($347|0))|0)==((1)|0)) {
   $354=(($inHigh+($150<<3))|0);
   $355=(+(HEAPF64[(($354)>>3)]));
   $356=(($inLow+($150<<3))|0);
   $357=(+(HEAPF64[(($356)>>3)]));
   $358=($355)-($357);
   $372=$358;
  } else if (((($347|0))|0)==((2)|0)) {
   $360=(($inHigh+($150<<3))|0);
   $361=(+(HEAPF64[(($360)>>3)]));
   $362=(+(HEAPF64[(($151)>>3)]));
   $363=(+(HEAPF64[(($153)>>3)]));
   $364=$362<$363;
   $_17=($364?$363:$362);
   $365=($361)-($_17);
   $366=($364?$362:$363);
   $367=(($inLow+($150<<3))|0);
   $368=(+(HEAPF64[(($367)>>3)]));
   $369=($366)-($368);
   $370=($365)+($369);
   $372=$370;
  } else {
   $372=0.0;
  }

  $373=((HEAP32[((272)>>2)])|0);
  $374=(($373+164)|0);
  $375=((HEAP32[(($374)>>2)])|0);
  if (((($375|0))|0)==((0)|0)) {
   $377=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $378=(+(HEAPF64[(($377)>>3)]));
   $379=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $380=(+(HEAPF64[(($379)>>3)]));
   $381=($378)-($380);
   $382=(+(Math_abs((+($381)))));
   $404=$382;
  } else if (((($375|0))|0)==((1)|0)) {
   $384=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $385=(+(HEAPF64[(($384)>>3)]));
   $386=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $387=(+(HEAPF64[(($386)>>3)]));
   $388=($385)-($387);
   $404=$388;
  } else if (((($375|0))|0)==((2)|0)) {
   $390=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $391=(+(HEAPF64[(($390)>>3)]));
   $392=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $393=(+(HEAPF64[(($392)>>3)]));
   $394=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $395=(+(HEAPF64[(($394)>>3)]));
   $396=$393<$395;
   $_18=($396?$395:$393);
   $397=($391)-($_18);
   $398=($396?$393:$395);
   $399=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $400=(+(HEAPF64[(($399)>>3)]));
   $401=($398)-($400);
   $402=($397)+($401);
   $404=$402;
  } else {
   $404=0.0;
  }

  $405=($372)-($404);
  $406=($BodyLongPeriodTotal_1)+($405);
  $407=((HEAP32[((272)>>2)])|0);
  $408=(($407+236)|0);
  $409=((HEAP32[(($408)>>2)])|0);
  if (((($409|0))|0)==((0)|0)) {
   $411=((($i_3)-(1))|0);
   $412=(($inClose+($411<<3))|0);
   $413=(+(HEAPF64[(($412)>>3)]));
   $414=(($inOpen+($411<<3))|0);
   $415=(+(HEAPF64[(($414)>>3)]));
   $416=($413)-($415);
   $417=(+(Math_abs((+($416)))));
   $441=$417;
  } else if (((($409|0))|0)==((1)|0)) {
   $419=((($i_3)-(1))|0);
   $420=(($inHigh+($419<<3))|0);
   $421=(+(HEAPF64[(($420)>>3)]));
   $422=(($inLow+($419<<3))|0);
   $423=(+(HEAPF64[(($422)>>3)]));
   $424=($421)-($423);
   $441=$424;
  } else if (((($409|0))|0)==((2)|0)) {
   $426=((($i_3)-(1))|0);
   $427=(($inHigh+($426<<3))|0);
   $428=(+(HEAPF64[(($427)>>3)]));
   $429=(($inClose+($426<<3))|0);
   $430=(+(HEAPF64[(($429)>>3)]));
   $431=(($inOpen+($426<<3))|0);
   $432=(+(HEAPF64[(($431)>>3)]));
   $433=$430<$432;
   $_19=($433?$432:$430);
   $434=($428)-($_19);
   $435=($433?$430:$432);
   $436=(($inLow+($426<<3))|0);
   $437=(+(HEAPF64[(($436)>>3)]));
   $438=($435)-($437);
   $439=($434)+($438);
   $441=$439;
  } else {
   $441=0.0;
  }

  $442=((HEAP32[((272)>>2)])|0);
  $443=(($442+236)|0);
  $444=((HEAP32[(($443)>>2)])|0);
  if (((($444|0))|0)==((0)|0)) {
   $446=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $447=(+(HEAPF64[(($446)>>3)]));
   $448=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $449=(+(HEAPF64[(($448)>>3)]));
   $450=($447)-($449);
   $451=(+(Math_abs((+($450)))));
   $473=$451;
  } else if (((($444|0))|0)==((1)|0)) {
   $453=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $454=(+(HEAPF64[(($453)>>3)]));
   $455=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $456=(+(HEAPF64[(($455)>>3)]));
   $457=($454)-($456);
   $473=$457;
  } else if (((($444|0))|0)==((2)|0)) {
   $459=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $460=(+(HEAPF64[(($459)>>3)]));
   $461=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $462=(+(HEAPF64[(($461)>>3)]));
   $463=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $464=(+(HEAPF64[(($463)>>3)]));
   $465=$462<$464;
   $_20=($465?$464:$462);
   $466=($460)-($_20);
   $467=($465?$462:$464);
   $468=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $469=(+(HEAPF64[(($468)>>3)]));
   $470=($467)-($469);
   $471=($466)+($470);
   $473=$471;
  } else {
   $473=0.0;
  }

  $474=($441)-($473);
  $475=($BodyDojiPeriodTotal_1)+($474);
  $476=((HEAP32[((272)>>2)])|0);
  $477=(($476+212)|0);
  $478=((HEAP32[(($477)>>2)])|0);
  if (((($478|0))|0)==((0)|0)) {
   $480=(($inClose+($i_3<<3))|0);
   $481=(+(HEAPF64[(($480)>>3)]));
   $482=(($inOpen+($i_3<<3))|0);
   $483=(+(HEAPF64[(($482)>>3)]));
   $484=($481)-($483);
   $485=(+(Math_abs((+($484)))));
   $507=$485;
  } else if (((($478|0))|0)==((1)|0)) {
   $487=(($inHigh+($i_3<<3))|0);
   $488=(+(HEAPF64[(($487)>>3)]));
   $489=(($inLow+($i_3<<3))|0);
   $490=(+(HEAPF64[(($489)>>3)]));
   $491=($488)-($490);
   $507=$491;
  } else if (((($478|0))|0)==((2)|0)) {
   $493=(($inHigh+($i_3<<3))|0);
   $494=(+(HEAPF64[(($493)>>3)]));
   $495=(($inClose+($i_3<<3))|0);
   $496=(+(HEAPF64[(($495)>>3)]));
   $497=(($inOpen+($i_3<<3))|0);
   $498=(+(HEAPF64[(($497)>>3)]));
   $499=$496<$498;
   $_21=($499?$498:$496);
   $500=($494)-($_21);
   $501=($499?$496:$498);
   $502=(($inLow+($i_3<<3))|0);
   $503=(+(HEAPF64[(($502)>>3)]));
   $504=($501)-($503);
   $505=($500)+($504);
   $507=$505;
  } else {
   $507=0.0;
  }

  $508=((HEAP32[((272)>>2)])|0);
  $509=(($508+212)|0);
  $510=((HEAP32[(($509)>>2)])|0);
  if (((($510|0))|0)==((0)|0)) {
   $512=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $513=(+(HEAPF64[(($512)>>3)]));
   $514=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $515=(+(HEAPF64[(($514)>>3)]));
   $516=($513)-($515);
   $517=(+(Math_abs((+($516)))));
   $539=$517;
  } else if (((($510|0))|0)==((1)|0)) {
   $519=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $520=(+(HEAPF64[(($519)>>3)]));
   $521=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $522=(+(HEAPF64[(($521)>>3)]));
   $523=($520)-($522);
   $539=$523;
  } else if (((($510|0))|0)==((2)|0)) {
   $525=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $526=(+(HEAPF64[(($525)>>3)]));
   $527=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $528=(+(HEAPF64[(($527)>>3)]));
   $529=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $530=(+(HEAPF64[(($529)>>3)]));
   $531=$528<$530;
   $_22=($531?$530:$528);
   $532=($526)-($_22);
   $533=($531?$528:$530);
   $534=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $535=(+(HEAPF64[(($534)>>3)]));
   $536=($533)-($535);
   $537=($532)+($536);
   $539=$537;
  } else {
   $539=0.0;
  }

  $540=($507)-($539);
  $541=($BodyShortPeriodTotal_1)+($540);
  $542=((($i_3)+(1))|0);
  $543=((($BodyLongTrailingIdx_0)+(1))|0);
  $544=((($BodyDojiTrailingIdx_0)+(1))|0);
  $545=((($BodyShortTrailingIdx_0)+(1))|0);
  $546=($i_3|0)<($endIdx|0);
  if ($546) {
   $BodyShortTrailingIdx_0=$545;$BodyLongTrailingIdx_0=$543;$BodyDojiTrailingIdx_0=$544;$outIdx_0=$outIdx_1;$i_3=$542;$BodyShortPeriodTotal_1=$541;$BodyLongPeriodTotal_1=$406;$BodyDojiPeriodTotal_1=$475;
  } else {
   break;
  }
 }
 $548=((($smax35)+(1))|0);
 $549=((($548)-($smax36))|0);
 HEAP32[(($outNBElement)>>2)]=$549;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLADVANCEBLOCK_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$__=0,$14=0,$15=0,$16=0,$17=0,$19=0;
 var $20=0,$21=0,$22=0,$23=0,$_3=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$_3_=0,$32=0,$33=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+264)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+312)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=(($1+384)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($1+360)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)>($10|0);
 $12=($11?$8:$10);
 $13=($_|0)>($12|0);
 $__=($13?$_:$12);
 $14=((HEAP32[((272)>>2)])|0);
 $15=(($14+168)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=($__|0)>($16|0);
 if (!($17)) {
  $32=$16;

  $33=((($32)+(2))|0);
  return (($33)|0);
 }
 $19=(($14+264)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=(($14+312)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=($20|0)>($22|0);
 $_3=($23?$20:$22);
 $24=(($14+384)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=(($14+360)|0);
 $27=((HEAP32[(($26)>>2)])|0);
 $28=($25|0)>($27|0);
 $29=($28?$25:$27);
 $30=($_3|0)>($29|0);
 $_3_=($30?$_3:$29);
 $32=$_3_;

 $33=((($32)+(2))|0);
 return (($33)|0);
}


function _TA_CDLADVANCEBLOCK($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $ShadowShortPeriodTotal=0,$ShadowLongPeriodTotal=0,$NearPeriodTotal=0,$FarPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond44=0,$12=0,$13=0;
 var $_startIdx=0,$14=0,$17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0;
 var $35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$_promoted74=.0,$_promoted75=.0;
 var $_promoted76=.0,$53=0,$54=0,$55=0,$56=0,$_promoted68=.0,$_promoted69=.0,$58=.0,$59=.0,$60=.0,$i_072=0,$61=0,$62=0,$63=.0,$64=0,$65=.0,$66=.0,$67=.0,$68=0,$69=0;
 var $70=.0,$71=0,$72=.0,$73=.0,$74=.0,$75=0,$76=.0,$77=0,$78=.0,$79=.0,$80=.0,$81=0,$82=0,$83=.0,$84=0,$85=.0,$86=.0,$87=0,$88=0,$89=.0;
 var $90=0,$91=.0,$92=.0,$93=0,$94=.0,$95=0,$96=.0,$97=.0,$98=0,$99=0,$100=.0,$101=0,$102=.0,$103=0,$104=.0,$105=0,$_=.0,$106=.0,$107=.0,$108=0;
 var $109=.0,$110=.0,$111=.0,$112=0,$113=0,$114=.0,$115=0,$116=.0,$117=0,$118=.0,$119=0,$_8=.0,$120=.0,$121=.0,$122=0,$123=.0,$124=.0,$125=.0,$126=0,$127=.0;
 var $128=0,$129=.0,$130=0,$131=.0,$132=0,$_9=.0,$133=.0,$134=.0,$135=0,$136=.0,$137=.0,$138=.0,$_pn120=.0,$_pn121=.0,$141=.0,$142=.0,$143=.0,$144=.0,$145=0,$146=0;
 var $147=0,$148=0,$149=0,$150=0,$_promoted61=.0,$_promoted62=.0,$152=.0,$153=.0,$i_166=0,$154=0,$155=0,$156=.0,$157=0,$158=.0,$159=.0,$160=.0,$161=0,$162=.0,$163=0,$164=.0;
 var $165=.0,$166=.0,$167=0,$168=0,$169=.0,$170=0,$171=.0,$172=.0,$173=0,$174=.0,$175=0,$176=.0,$177=.0,$178=0,$179=0,$180=.0,$181=0,$182=.0,$183=0,$184=.0;
 var $185=0,$_10=.0,$186=.0,$187=.0,$188=0,$189=.0,$190=.0,$191=.0,$192=0,$193=.0,$194=0,$195=.0,$196=0,$197=.0,$198=0,$_11=.0,$199=.0,$200=.0,$201=0,$202=.0;
 var $203=.0,$204=.0,$_pn119=.0,$207=.0,$208=.0,$209=.0,$210=0,$211=0,$212=0,$213=0,$214=0,$215=0,$_promoted=.0,$_promoted55=.0,$217=.0,$218=.0,$i_259=0,$219=0,$220=0,$221=.0;
 var $222=0,$223=.0,$224=.0,$225=.0,$226=0,$227=0,$228=.0,$229=0,$230=.0,$231=.0,$232=.0,$233=0,$234=0,$235=.0,$236=0,$237=.0,$238=.0,$239=0,$240=0,$241=.0;
 var $242=0,$243=.0,$244=.0,$245=0,$246=0,$247=.0,$248=0,$249=.0,$250=0,$251=.0,$252=0,$_12=.0,$253=.0,$254=.0,$255=0,$256=.0,$257=.0,$258=.0,$259=0,$260=0;
 var $261=.0,$262=0,$263=.0,$264=0,$265=.0,$266=0,$_13=.0,$267=.0,$268=.0,$269=0,$270=.0,$271=.0,$272=.0,$_pn118=.0,$275=.0,$276=.0,$277=.0,$278=0,$279=0,$280=0;
 var $281=0,$282=0,$283=0,$285=.0,$286=.0,$i_353=0,$287=0,$288=0,$289=.0,$290=0,$291=.0,$292=.0,$293=.0,$294=0,$295=0,$296=.0,$297=0,$298=.0,$299=.0,$300=.0;
 var $301=0,$302=0,$303=.0,$304=0,$305=.0,$306=.0,$307=0,$308=0,$309=.0,$310=0,$311=.0,$312=.0,$313=0,$314=0,$315=.0,$316=0,$317=.0,$318=0,$319=.0,$320=0;
 var $_14=.0,$321=.0,$322=.0,$323=0,$324=.0,$325=.0,$326=.0,$327=0,$328=0,$329=.0,$330=0,$331=.0,$332=0,$333=.0,$334=0,$_15=.0,$335=.0,$336=.0,$337=0,$338=.0;
 var $339=.0,$340=.0,$_pn=.0,$343=.0,$344=.0,$345=.0,$346=0,$347=0,$BodyLongPeriodTotal_0_lcssa=.0,$348=0,$smax=0,$349=0,$smax81=0,$350=0,$smax82=0,$i_451=0,$BodyLongPeriodTotal_050=.0,$353=0,$354=0,$355=.0;
 var $356=0,$357=.0,$358=.0,$359=.0,$361=0,$362=0,$363=.0,$364=0,$365=.0,$366=.0,$368=0,$369=0,$370=.0,$371=0,$372=.0,$373=0,$374=.0,$375=0,$_16=.0,$376=.0;
 var $377=.0,$378=0,$379=.0,$380=.0,$381=.0,$383=.0,$384=.0,$385=0,$386=0,$BodyLongPeriodTotal_1=.0,$i_5=0,$outIdx_0=0,$BodyLongTrailingIdx_0=0,$ShadowShortTrailingIdx_0=0,$ShadowLongTrailingIdx_0=0,$NearTrailingIdx_0=0,$FarTrailingIdx_0=0,$388=0,$389=0,$390=.0;
 var $391=0,$392=.0,$393=0,$395=0,$396=0,$397=.0,$398=0,$399=.0,$400=0,$402=0,$403=.0,$404=0,$405=.0,$406=0,$407=0,$or_cond17=0,$408=0,$or_cond18=0,$409=0,$or_cond19=0;
 var $411=0,$412=0,$413=.0,$414=0,$415=0,$416=0,$418=.0,$419=.0,$420=.0,$422=0,$423=0,$425=.0,$426=.0,$428=0,$429=.0,$430=0,$431=.0,$432=.0,$434=0,$435=.0;
 var $_20=.0,$436=.0,$437=0,$438=.0,$439=0,$440=.0,$441=.0,$442=.0,$444=.0,$445=.0,$446=0,$447=0,$448=0,$449=0,$450=.0,$451=.0,$452=.0,$453=0,$455=.0,$456=.0;
 var $457=0,$459=.0,$460=0,$461=.0,$462=0,$463=0,$464=0,$466=.0,$467=.0,$468=.0,$471=.0,$472=.0,$474=0,$475=.0,$476=0,$477=.0,$478=.0,$481=0,$482=.0,$483=0;
 var $_21=.0,$484=.0,$485=.0,$486=0,$487=.0,$488=.0,$489=.0,$491=.0,$492=.0,$493=0,$494=0,$495=0,$496=0,$497=.0,$498=.0,$499=.0,$500=0,$502=.0,$503=.0,$504=.0;
 var $505=.0,$506=0,$507=.0,$508=0,$509=0,$510=0,$512=.0,$513=.0,$515=0,$516=0,$518=0,$519=.0,$520=0,$521=.0,$522=.0,$524=0,$526=0,$527=.0,$528=0,$_22=.0;
 var $529=.0,$530=.0,$531=0,$532=.0,$533=.0,$534=.0,$536=.0,$537=.0,$538=0,$539=0,$540=0,$541=0,$542=.0,$543=.0,$544=0,$546=0,$547=.0,$548=.0,$549=.0,$550=0;
 var $_23=.0,$551=.0,$552=0,$553=.0,$554=0,$555=0,$556=0,$558=.0,$559=.0,$560=.0,$562=0,$563=0,$565=.0,$566=.0,$568=0,$569=.0,$570=.0,$572=.0,$573=0,$574=.0;
 var $575=.0,$576=.0,$578=.0,$579=.0,$580=0,$581=0,$582=0,$583=0,$584=.0,$585=.0,$586=0,$588=.0,$589=.0,$590=.0,$591=.0,$592=.0,$593=.0,$594=.0,$595=.0,$596=0;
 var $597=.0,$598=0,$599=0,$600=0,$602=.0,$603=.0,$604=.0,$606=0,$607=0,$609=.0,$610=0,$611=.0,$612=.0,$614=0,$616=.0,$617=0,$_25=.0,$618=.0,$619=.0,$620=0;
 var $621=.0,$622=.0,$623=.0,$625=.0,$626=.0,$627=0,$628=0,$629=0,$630=0,$631=.0,$632=.0,$633=.0,$634=0,$636=.0,$637=.0,$638=.0,$639=.0,$640=.0,$641=.0,$642=.0;
 var $643=.0,$644=0,$645=.0,$646=0,$647=0,$648=0,$650=.0,$651=.0,$652=.0,$654=0,$655=0,$657=0,$658=.0,$659=0,$660=.0,$661=.0,$663=0,$665=0,$666=.0,$667=0;
 var $_26=.0,$668=.0,$669=.0,$670=0,$671=.0,$672=.0,$673=.0,$675=.0,$676=.0,$677=0,$678=0,$679=0,$680=0,$681=.0,$682=.0,$683=.0,$684=0,$686=.0,$687=.0,$688=.0;
 var $689=.0,$690=.0,$691=.0,$692=.0,$693=.0,$694=0,$695=0,$696=.0,$697=0,$698=0,$699=0,$701=.0,$702=.0,$703=.0,$705=0,$706=0,$708=0,$709=.0,$710=0,$711=.0;
 var $712=.0,$714=0,$716=0,$717=.0,$718=0,$_27=.0,$719=.0,$720=.0,$721=0,$722=.0,$723=.0,$724=.0,$726=.0,$727=.0,$728=0,$729=0,$730=0,$731=0,$732=.0,$733=.0;
 var $734=.0,$735=0,$737=.0,$738=.0,$739=.0,$740=.0,$741=.0,$742=.0,$743=.0,$744=.0,$745=0,$747=.0,$748=.0,$749=.0,$750=.0,$751=0,$753=0,$754=.0,$755=0,$_28=.0;
 var $756=.0,$757=0,$758=.0,$759=0,$760=0,$761=0,$763=.0,$764=.0,$765=.0,$767=0,$768=0,$771=0,$772=.0,$773=.0,$775=.0,$776=0,$777=.0,$778=.0,$779=.0,$781=.0;
 var $782=.0,$783=0,$784=0,$785=0,$786=0,$787=.0,$788=.0,$789=0,$791=0,$792=.0,$793=.0,$794=.0,$795=0,$_30=.0,$796=.0,$797=0,$798=.0,$799=0,$800=0,$801=0;
 var $803=.0,$804=.0,$805=.0,$808=.0,$809=.0,$811=0,$812=.0,$813=.0,$815=.0,$816=0,$817=.0,$818=.0,$819=.0,$821=.0,$822=.0,$823=0,$824=0,$825=0,$826=0,$827=.0;
 var $828=.0,$829=0,$831=.0,$832=.0,$833=.0,$834=.0,$835=.0,$836=.0,$837=.0,$838=.0,$839=0,$841=0,$842=.0,$843=0,$_32=.0,$844=.0,$845=0,$846=0,$847=.0,$848=0;
 var $849=0,$850=0,$852=.0,$853=.0,$854=.0,$856=0,$857=0,$860=0,$861=.0,$862=.0,$864=.0,$865=0,$866=.0,$867=.0,$868=.0,$870=.0,$871=.0,$872=0,$873=0,$874=0;
 var $875=0,$876=.0,$877=.0,$878=0,$880=0,$882=0,$884=0,$885=0,$886=0,$totIdx_045=0,$888=0,$889=0,$890=.0,$891=0,$892=.0,$893=.0,$894=.0,$895=0,$896=0,$897=.0;
 var $898=0,$899=.0,$900=.0,$901=.0,$902=0,$903=0,$904=.0,$905=0,$906=.0,$907=.0,$908=0,$909=0,$910=.0,$911=0,$912=.0,$913=.0,$914=0,$915=0,$916=.0,$917=0;
 var $918=.0,$919=0,$920=.0,$921=0,$_34=.0,$922=.0,$923=.0,$924=0,$925=.0,$926=.0,$927=.0,$928=0,$929=0,$930=.0,$931=0,$932=.0,$933=0,$934=.0,$935=0,$_35=.0;
 var $936=.0,$937=.0,$938=0,$939=.0,$940=.0,$941=.0,$943=.0,$944=.0,$945=.0,$946=0,$947=.0,$948=.0,$949=0,$950=0,$952=0,$953=0,$954=0,$955=0,$956=0,$957=.0;
 var $958=0,$959=.0,$960=.0,$961=.0,$962=0,$963=0,$964=.0,$965=0,$966=.0,$967=.0,$968=.0,$969=0,$970=0,$971=.0,$972=0,$973=.0,$974=.0,$975=0,$976=0,$977=.0;
 var $978=0,$979=.0,$980=.0,$981=0,$982=0,$983=.0,$984=0,$985=.0,$986=0,$987=.0,$988=0,$_36=.0,$989=.0,$990=.0,$991=0,$992=.0,$993=.0,$994=.0,$995=0,$996=0;
 var $997=.0,$998=0,$999=.0,$1000=0,$1001=.0,$1002=0,$_37=.0,$1003=.0,$1004=.0,$1005=0,$1006=.0,$1007=.0,$1008=.0,$1010=.0,$1011=.0,$1012=.0,$1013=0,$1014=.0,$1015=.0,$totIdx_248=0;
 var $1017=0,$1018=0,$1020=0,$1021=0,$1022=.0,$1023=0,$1024=.0,$1025=.0,$1026=.0,$1028=0,$1029=0,$1030=.0,$1031=0,$1032=.0,$1033=.0,$1035=0,$1036=0,$1037=.0,$1038=0,$1039=.0;
 var $1040=0,$1041=.0,$1042=0,$_38=.0,$1043=.0,$1044=.0,$1045=0,$1046=.0,$1047=.0,$1048=.0,$1050=.0,$1052=0,$1053=0,$1054=.0,$1055=0,$1056=.0,$1057=.0,$1058=.0,$1060=0,$1061=0;
 var $1062=.0,$1063=0,$1064=.0,$1065=.0,$1067=0,$1068=0,$1069=.0,$1070=0,$1071=.0,$1072=0,$1073=.0,$1074=0,$_39=.0,$1075=.0,$1076=.0,$1077=0,$1078=.0,$1079=.0,$1080=.0,$1082=.0;
 var $1083=.0,$1084=0,$1085=.0,$1086=.0,$1087=0,$1088=0,$1089=.0,$1090=0,$1091=.0,$1092=.0,$1093=.0,$1094=0,$1095=0,$1096=.0,$1097=0,$1098=.0,$1099=.0,$1100=.0,$1101=0,$1102=0;
 var $1103=.0,$1104=0,$1105=.0,$1106=.0,$1107=0,$1108=0,$1109=.0,$1110=0,$1111=.0,$1112=.0,$1113=0,$1114=0,$1115=.0,$1116=0,$1117=.0,$1118=0,$1119=.0,$1120=0,$_40=.0,$1121=.0;
 var $1122=.0,$1123=0,$1124=.0,$1125=.0,$1126=.0,$1127=0,$1128=0,$1129=.0,$1130=0,$1131=.0,$1132=0,$1133=.0,$1134=0,$_41=.0,$1135=.0,$1136=.0,$1137=0,$1138=.0,$1139=.0,$1140=.0;
 var $1142=.0,$1143=.0,$1144=.0,$1145=0,$1146=.0,$1147=.0,$1148=0,$1149=0,$outIdx_1=0,$1151=0,$1152=0,$1154=.0,$1155=.0,$1156=.0,$1157=.0,$1159=0,$1160=.0,$1161=0,$1162=.0,$1163=.0;
 var $1165=0,$1166=.0,$1167=.0,$1168=.0,$1169=0,$_42=.0,$1170=.0,$1171=.0,$1172=0,$1173=.0,$1174=.0,$1175=.0,$1177=.0,$1178=0,$1179=0,$1180=0,$1182=0,$1183=0,$1184=.0,$1185=0;
 var $1186=.0,$1187=.0,$1188=.0,$1190=0,$1191=0,$1192=.0,$1193=0,$1194=.0,$1195=.0,$1197=0,$1198=0,$1199=.0,$1200=0,$1201=.0,$1202=0,$1203=.0,$1204=0,$_43=.0,$1205=.0,$1206=.0;
 var $1207=0,$1208=.0,$1209=.0,$1210=.0,$1212=.0,$1213=.0,$1214=.0,$1215=0,$1216=0,$1217=0,$1218=0,$1219=0,$1220=0,$1221=0,$1223=0,$1224=0,$_0=0,$1226=0,$1227=.0,$1228=0;
 var $1229=.0,$1230=0,$1231=.0,$1232=0,$_36_1=.0,$1233=.0,$1234=.0,$1235=0,$1236=.0,$1237=.0,$1238=.0,$1239=0,$1240=.0,$1241=0,$1242=.0,$1243=0,$1244=.0,$1245=0,$_37_1=.0,$1246=.0;
 var $1247=.0,$1248=0,$1249=.0,$1250=.0,$1251=.0,$1252=0,$1253=.0,$1254=0,$1255=.0,$1256=.0,$1257=0,$1258=.0,$1259=0,$1260=.0,$1261=.0,$1262=0,$1263=.0,$1264=0,$1265=.0,$1266=.0;
 var $1267=.0,$1268=0,$1269=.0,$1270=0,$1271=.0,$1272=.0,$1273=.0,$1274=.0,$1275=.0,$1276=.0,$1277=0,$1278=.0,$1279=.0,$1280=0,$1281=0,$1282=0,$1283=0,$1284=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+88)|0;
 $ShadowShortPeriodTotal=((sp)|0);
 $ShadowLongPeriodTotal=(((sp)+(24))|0);
 $NearPeriodTotal=(((sp)+(40))|0);
 $FarPeriodTotal=(((sp)+(64))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond44=$10|$or_cond5_not;
 if ($or_cond44) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDLADVANCEBLOCK_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=(($ShadowShortPeriodTotal+16)|0);
 $18=(($ShadowShortPeriodTotal+8)|0);
 $19=(($ShadowShortPeriodTotal)|0);
 $20=$ShadowShortPeriodTotal;
 _memset((((($20)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $21=((HEAP32[((272)>>2)])|0);
 $22=(($21+312)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=((($_startIdx)-($23))|0);
 $25=(($ShadowLongPeriodTotal+8)|0);
 $26=(($ShadowLongPeriodTotal)|0);
 $27=$ShadowLongPeriodTotal;
 _memset((((($27)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 $28=((HEAP32[((272)>>2)])|0);
 $29=(($28+264)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=((($_startIdx)-($30))|0);
 $32=(($NearPeriodTotal+16)|0);
 $33=(($NearPeriodTotal+8)|0);
 $34=$NearPeriodTotal;
 _memset((((($34)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $35=((HEAP32[((272)>>2)])|0);
 $36=(($35+360)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 $38=((($_startIdx)-($37))|0);
 $39=(($FarPeriodTotal+16)|0);
 $40=(($FarPeriodTotal+8)|0);
 $41=$FarPeriodTotal;
 _memset((((($41)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $42=((HEAP32[((272)>>2)])|0);
 $43=(($42+384)|0);
 $44=((HEAP32[(($43)>>2)])|0);
 $45=((($_startIdx)-($44))|0);
 $46=(($42+168)|0);
 $47=((HEAP32[(($46)>>2)])|0);
 $48=((($_startIdx)-($47))|0);
 $49=($23|0)>0;
 if ($49) {
  $50=((HEAP32[((272)>>2)])|0);
  $51=(($50+308)|0);
  $52=((HEAP32[(($51)>>2)])|0);
  $_promoted74=(+(HEAPF64[(($17)>>3)]));
  $_promoted75=(+(HEAPF64[(($18)>>3)]));
  $_promoted76=(+(HEAPF64[(($19)>>3)]));
  $i_072=$24;$60=$_promoted74;$59=$_promoted75;$58=$_promoted76;
  while(1) {




   if (((($52|0))|0)==((1)|0)) {
    $81=((($i_072)-(2))|0);
    $82=(($inHigh+($81<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inLow+($81<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=($83)-($85);
    $87=((($i_072)-(1))|0);
    $88=(($inHigh+($87<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=(($inLow+($87<<3))|0);
    $91=(+(HEAPF64[(($90)>>3)]));
    $92=($89)-($91);
    $93=(($inHigh+($i_072<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=(($inLow+($i_072<<3))|0);
    $96=(+(HEAPF64[(($95)>>3)]));
    $97=($94)-($96);
    $141=$97;$_pn121=$86;$_pn120=$92;
   } else if (((($52|0))|0)==((2)|0)) {
    $98=((($i_072)-(2))|0);
    $99=(($inHigh+($98<<3))|0);
    $100=(+(HEAPF64[(($99)>>3)]));
    $101=(($inClose+($98<<3))|0);
    $102=(+(HEAPF64[(($101)>>3)]));
    $103=(($inOpen+($98<<3))|0);
    $104=(+(HEAPF64[(($103)>>3)]));
    $105=$102<$104;
    $_=($105?$104:$102);
    $106=($100)-($_);
    $107=($105?$102:$104);
    $108=(($inLow+($98<<3))|0);
    $109=(+(HEAPF64[(($108)>>3)]));
    $110=($107)-($109);
    $111=($106)+($110);
    $112=((($i_072)-(1))|0);
    $113=(($inHigh+($112<<3))|0);
    $114=(+(HEAPF64[(($113)>>3)]));
    $115=(($inClose+($112<<3))|0);
    $116=(+(HEAPF64[(($115)>>3)]));
    $117=(($inOpen+($112<<3))|0);
    $118=(+(HEAPF64[(($117)>>3)]));
    $119=$116<$118;
    $_8=($119?$118:$116);
    $120=($114)-($_8);
    $121=($119?$116:$118);
    $122=(($inLow+($112<<3))|0);
    $123=(+(HEAPF64[(($122)>>3)]));
    $124=($121)-($123);
    $125=($120)+($124);
    $126=(($inHigh+($i_072<<3))|0);
    $127=(+(HEAPF64[(($126)>>3)]));
    $128=(($inClose+($i_072<<3))|0);
    $129=(+(HEAPF64[(($128)>>3)]));
    $130=(($inOpen+($i_072<<3))|0);
    $131=(+(HEAPF64[(($130)>>3)]));
    $132=$129<$131;
    $_9=($132?$131:$129);
    $133=($127)-($_9);
    $134=($132?$129:$131);
    $135=(($inLow+($i_072<<3))|0);
    $136=(+(HEAPF64[(($135)>>3)]));
    $137=($134)-($136);
    $138=($133)+($137);
    $141=$138;$_pn121=$111;$_pn120=$125;
   } else if (((($52|0))|0)==((0)|0)) {
    $61=((($i_072)-(2))|0);
    $62=(($inClose+($61<<3))|0);
    $63=(+(HEAPF64[(($62)>>3)]));
    $64=(($inOpen+($61<<3))|0);
    $65=(+(HEAPF64[(($64)>>3)]));
    $66=($63)-($65);
    $67=(+(Math_abs((+($66)))));
    $68=((($i_072)-(1))|0);
    $69=(($inClose+($68<<3))|0);
    $70=(+(HEAPF64[(($69)>>3)]));
    $71=(($inOpen+($68<<3))|0);
    $72=(+(HEAPF64[(($71)>>3)]));
    $73=($70)-($72);
    $74=(+(Math_abs((+($73)))));
    $75=(($inClose+($i_072<<3))|0);
    $76=(+(HEAPF64[(($75)>>3)]));
    $77=(($inOpen+($i_072<<3))|0);
    $78=(+(HEAPF64[(($77)>>3)]));
    $79=($76)-($78);
    $80=(+(Math_abs((+($79)))));
    $141=$80;$_pn121=$67;$_pn120=$74;
   } else {
    $141=0.0;$_pn121=0.0;$_pn120=0.0;
   }



   $142=($_pn121)+($60);
   $143=($_pn120)+($59);
   $144=($141)+($58);
   $145=((($i_072)+(1))|0);
   $146=($145|0)<($_startIdx|0);
   if ($146) {
    $i_072=$145;$60=$142;$59=$143;$58=$144;
   } else {
    break;
   }
  }
  HEAPF64[(($17)>>3)]=$142;
  HEAPF64[(($18)>>3)]=$143;
  HEAPF64[(($19)>>3)]=$144;
 }
 $53=($30|0)>0;
 if ($53) {
  $54=((HEAP32[((272)>>2)])|0);
  $55=(($54+260)|0);
  $56=((HEAP32[(($55)>>2)])|0);
  $_promoted68=(+(HEAPF64[(($25)>>3)]));
  $_promoted69=(+(HEAPF64[(($26)>>3)]));
  $i_166=$31;$153=$_promoted68;$152=$_promoted69;
  while(1) {



   if (((($56|0))|0)==((0)|0)) {
    $154=((($i_166)-(1))|0);
    $155=(($inClose+($154<<3))|0);
    $156=(+(HEAPF64[(($155)>>3)]));
    $157=(($inOpen+($154<<3))|0);
    $158=(+(HEAPF64[(($157)>>3)]));
    $159=($156)-($158);
    $160=(+(Math_abs((+($159)))));
    $161=(($inClose+($i_166<<3))|0);
    $162=(+(HEAPF64[(($161)>>3)]));
    $163=(($inOpen+($i_166<<3))|0);
    $164=(+(HEAPF64[(($163)>>3)]));
    $165=($162)-($164);
    $166=(+(Math_abs((+($165)))));
    $207=$166;$_pn119=$160;
   } else if (((($56|0))|0)==((1)|0)) {
    $167=((($i_166)-(1))|0);
    $168=(($inHigh+($167<<3))|0);
    $169=(+(HEAPF64[(($168)>>3)]));
    $170=(($inLow+($167<<3))|0);
    $171=(+(HEAPF64[(($170)>>3)]));
    $172=($169)-($171);
    $173=(($inHigh+($i_166<<3))|0);
    $174=(+(HEAPF64[(($173)>>3)]));
    $175=(($inLow+($i_166<<3))|0);
    $176=(+(HEAPF64[(($175)>>3)]));
    $177=($174)-($176);
    $207=$177;$_pn119=$172;
   } else if (((($56|0))|0)==((2)|0)) {
    $178=((($i_166)-(1))|0);
    $179=(($inHigh+($178<<3))|0);
    $180=(+(HEAPF64[(($179)>>3)]));
    $181=(($inClose+($178<<3))|0);
    $182=(+(HEAPF64[(($181)>>3)]));
    $183=(($inOpen+($178<<3))|0);
    $184=(+(HEAPF64[(($183)>>3)]));
    $185=$182<$184;
    $_10=($185?$184:$182);
    $186=($180)-($_10);
    $187=($185?$182:$184);
    $188=(($inLow+($178<<3))|0);
    $189=(+(HEAPF64[(($188)>>3)]));
    $190=($187)-($189);
    $191=($186)+($190);
    $192=(($inHigh+($i_166<<3))|0);
    $193=(+(HEAPF64[(($192)>>3)]));
    $194=(($inClose+($i_166<<3))|0);
    $195=(+(HEAPF64[(($194)>>3)]));
    $196=(($inOpen+($i_166<<3))|0);
    $197=(+(HEAPF64[(($196)>>3)]));
    $198=$195<$197;
    $_11=($198?$197:$195);
    $199=($193)-($_11);
    $200=($198?$195:$197);
    $201=(($inLow+($i_166<<3))|0);
    $202=(+(HEAPF64[(($201)>>3)]));
    $203=($200)-($202);
    $204=($199)+($203);
    $207=$204;$_pn119=$191;
   } else {
    $207=0.0;$_pn119=0.0;
   }


   $208=($_pn119)+($153);
   $209=($207)+($152);
   $210=((($i_166)+(1))|0);
   $211=($210|0)<($_startIdx|0);
   if ($211) {
    $i_166=$210;$153=$208;$152=$209;
   } else {
    break;
   }
  }
  HEAPF64[(($25)>>3)]=$208;
  HEAPF64[(($26)>>3)]=$209;
 }
 $147=($37|0)>0;
 if ($147) {
  $148=((HEAP32[((272)>>2)])|0);
  $149=(($148+356)|0);
  $150=((HEAP32[(($149)>>2)])|0);
  $_promoted61=(+(HEAPF64[(($32)>>3)]));
  $_promoted62=(+(HEAPF64[(($33)>>3)]));
  $i_259=$38;$218=$_promoted61;$217=$_promoted62;
  while(1) {



   if (((($150|0))|0)==((0)|0)) {
    $219=((($i_259)-(2))|0);
    $220=(($inClose+($219<<3))|0);
    $221=(+(HEAPF64[(($220)>>3)]));
    $222=(($inOpen+($219<<3))|0);
    $223=(+(HEAPF64[(($222)>>3)]));
    $224=($221)-($223);
    $225=(+(Math_abs((+($224)))));
    $226=((($i_259)-(1))|0);
    $227=(($inClose+($226<<3))|0);
    $228=(+(HEAPF64[(($227)>>3)]));
    $229=(($inOpen+($226<<3))|0);
    $230=(+(HEAPF64[(($229)>>3)]));
    $231=($228)-($230);
    $232=(+(Math_abs((+($231)))));
    $275=$232;$_pn118=$225;
   } else if (((($150|0))|0)==((1)|0)) {
    $233=((($i_259)-(2))|0);
    $234=(($inHigh+($233<<3))|0);
    $235=(+(HEAPF64[(($234)>>3)]));
    $236=(($inLow+($233<<3))|0);
    $237=(+(HEAPF64[(($236)>>3)]));
    $238=($235)-($237);
    $239=((($i_259)-(1))|0);
    $240=(($inHigh+($239<<3))|0);
    $241=(+(HEAPF64[(($240)>>3)]));
    $242=(($inLow+($239<<3))|0);
    $243=(+(HEAPF64[(($242)>>3)]));
    $244=($241)-($243);
    $275=$244;$_pn118=$238;
   } else if (((($150|0))|0)==((2)|0)) {
    $245=((($i_259)-(2))|0);
    $246=(($inHigh+($245<<3))|0);
    $247=(+(HEAPF64[(($246)>>3)]));
    $248=(($inClose+($245<<3))|0);
    $249=(+(HEAPF64[(($248)>>3)]));
    $250=(($inOpen+($245<<3))|0);
    $251=(+(HEAPF64[(($250)>>3)]));
    $252=$249<$251;
    $_12=($252?$251:$249);
    $253=($247)-($_12);
    $254=($252?$249:$251);
    $255=(($inLow+($245<<3))|0);
    $256=(+(HEAPF64[(($255)>>3)]));
    $257=($254)-($256);
    $258=($253)+($257);
    $259=((($i_259)-(1))|0);
    $260=(($inHigh+($259<<3))|0);
    $261=(+(HEAPF64[(($260)>>3)]));
    $262=(($inClose+($259<<3))|0);
    $263=(+(HEAPF64[(($262)>>3)]));
    $264=(($inOpen+($259<<3))|0);
    $265=(+(HEAPF64[(($264)>>3)]));
    $266=$263<$265;
    $_13=($266?$265:$263);
    $267=($261)-($_13);
    $268=($266?$263:$265);
    $269=(($inLow+($259<<3))|0);
    $270=(+(HEAPF64[(($269)>>3)]));
    $271=($268)-($270);
    $272=($267)+($271);
    $275=$272;$_pn118=$258;
   } else {
    $275=0.0;$_pn118=0.0;
   }


   $276=($_pn118)+($218);
   $277=($275)+($217);
   $278=((($i_259)+(1))|0);
   $279=($278|0)<($_startIdx|0);
   if ($279) {
    $i_259=$278;$218=$276;$217=$277;
   } else {
    break;
   }
  }
  HEAPF64[(($32)>>3)]=$276;
  HEAPF64[(($33)>>3)]=$277;
 }
 $212=($44|0)>0;
 if ($212) {
  $213=((HEAP32[((272)>>2)])|0);
  $214=(($213+380)|0);
  $215=((HEAP32[(($214)>>2)])|0);
  $_promoted=(+(HEAPF64[(($39)>>3)]));
  $_promoted55=(+(HEAPF64[(($40)>>3)]));
  $i_353=$45;$286=$_promoted;$285=$_promoted55;
  while(1) {



   if (((($215|0))|0)==((0)|0)) {
    $287=((($i_353)-(2))|0);
    $288=(($inClose+($287<<3))|0);
    $289=(+(HEAPF64[(($288)>>3)]));
    $290=(($inOpen+($287<<3))|0);
    $291=(+(HEAPF64[(($290)>>3)]));
    $292=($289)-($291);
    $293=(+(Math_abs((+($292)))));
    $294=((($i_353)-(1))|0);
    $295=(($inClose+($294<<3))|0);
    $296=(+(HEAPF64[(($295)>>3)]));
    $297=(($inOpen+($294<<3))|0);
    $298=(+(HEAPF64[(($297)>>3)]));
    $299=($296)-($298);
    $300=(+(Math_abs((+($299)))));
    $343=$300;$_pn=$293;
   } else if (((($215|0))|0)==((1)|0)) {
    $301=((($i_353)-(2))|0);
    $302=(($inHigh+($301<<3))|0);
    $303=(+(HEAPF64[(($302)>>3)]));
    $304=(($inLow+($301<<3))|0);
    $305=(+(HEAPF64[(($304)>>3)]));
    $306=($303)-($305);
    $307=((($i_353)-(1))|0);
    $308=(($inHigh+($307<<3))|0);
    $309=(+(HEAPF64[(($308)>>3)]));
    $310=(($inLow+($307<<3))|0);
    $311=(+(HEAPF64[(($310)>>3)]));
    $312=($309)-($311);
    $343=$312;$_pn=$306;
   } else if (((($215|0))|0)==((2)|0)) {
    $313=((($i_353)-(2))|0);
    $314=(($inHigh+($313<<3))|0);
    $315=(+(HEAPF64[(($314)>>3)]));
    $316=(($inClose+($313<<3))|0);
    $317=(+(HEAPF64[(($316)>>3)]));
    $318=(($inOpen+($313<<3))|0);
    $319=(+(HEAPF64[(($318)>>3)]));
    $320=$317<$319;
    $_14=($320?$319:$317);
    $321=($315)-($_14);
    $322=($320?$317:$319);
    $323=(($inLow+($313<<3))|0);
    $324=(+(HEAPF64[(($323)>>3)]));
    $325=($322)-($324);
    $326=($321)+($325);
    $327=((($i_353)-(1))|0);
    $328=(($inHigh+($327<<3))|0);
    $329=(+(HEAPF64[(($328)>>3)]));
    $330=(($inClose+($327<<3))|0);
    $331=(+(HEAPF64[(($330)>>3)]));
    $332=(($inOpen+($327<<3))|0);
    $333=(+(HEAPF64[(($332)>>3)]));
    $334=$331<$333;
    $_15=($334?$333:$331);
    $335=($329)-($_15);
    $336=($334?$331:$333);
    $337=(($inLow+($327<<3))|0);
    $338=(+(HEAPF64[(($337)>>3)]));
    $339=($336)-($338);
    $340=($335)+($339);
    $343=$340;$_pn=$326;
   } else {
    $343=0.0;$_pn=0.0;
   }


   $344=($_pn)+($286);
   $345=($343)+($285);
   $346=((($i_353)+(1))|0);
   $347=($346|0)<($_startIdx|0);
   if ($347) {
    $i_353=$346;$286=$344;$285=$345;
   } else {
    break;
   }
  }
  HEAPF64[(($39)>>3)]=$344;
  HEAPF64[(($40)>>3)]=$345;
 }
 $280=($47|0)>0;
 if ($280) {
  $281=((HEAP32[((272)>>2)])|0);
  $282=(($281+164)|0);
  $283=((HEAP32[(($282)>>2)])|0);
  $BodyLongPeriodTotal_050=0.0;$i_451=$48;
  while(1) {


   if (((($283|0))|0)==((0)|0)) {
    $353=((($i_451)-(2))|0);
    $354=(($inClose+($353<<3))|0);
    $355=(+(HEAPF64[(($354)>>3)]));
    $356=(($inOpen+($353<<3))|0);
    $357=(+(HEAPF64[(($356)>>3)]));
    $358=($355)-($357);
    $359=(+(Math_abs((+($358)))));
    $383=$359;
   } else if (((($283|0))|0)==((1)|0)) {
    $361=((($i_451)-(2))|0);
    $362=(($inHigh+($361<<3))|0);
    $363=(+(HEAPF64[(($362)>>3)]));
    $364=(($inLow+($361<<3))|0);
    $365=(+(HEAPF64[(($364)>>3)]));
    $366=($363)-($365);
    $383=$366;
   } else if (((($283|0))|0)==((2)|0)) {
    $368=((($i_451)-(2))|0);
    $369=(($inHigh+($368<<3))|0);
    $370=(+(HEAPF64[(($369)>>3)]));
    $371=(($inClose+($368<<3))|0);
    $372=(+(HEAPF64[(($371)>>3)]));
    $373=(($inOpen+($368<<3))|0);
    $374=(+(HEAPF64[(($373)>>3)]));
    $375=$372<$374;
    $_16=($375?$374:$372);
    $376=($370)-($_16);
    $377=($375?$372:$374);
    $378=(($inLow+($368<<3))|0);
    $379=(+(HEAPF64[(($378)>>3)]));
    $380=($377)-($379);
    $381=($376)+($380);
    $383=$381;
   } else {
    $383=0.0;
   }

   $384=($BodyLongPeriodTotal_050)+($383);
   $385=((($i_451)+(1))|0);
   $386=($385|0)<($_startIdx|0);
   if ($386) {
    $BodyLongPeriodTotal_050=$384;$i_451=$385;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$384;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $348=($12|0)>($endIdx|0);
 $smax=($348?$12:$endIdx);
 $349=($smax|0)>($startIdx|0);
 $smax81=($349?$smax:$startIdx);
 $350=($12|0)>($startIdx|0);
 $smax82=($350?$12:$startIdx);
 $FarTrailingIdx_0=$45;$NearTrailingIdx_0=$38;$ShadowLongTrailingIdx_0=$31;$ShadowShortTrailingIdx_0=$24;$BodyLongTrailingIdx_0=$48;$outIdx_0=0;$i_5=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;
 while(1) {








  $388=((($i_5)-(2))|0);
  $389=(($inClose+($388<<3))|0);
  $390=(+(HEAPF64[(($389)>>3)]));
  $391=(($inOpen+($388<<3))|0);
  $392=(+(HEAPF64[(($391)>>3)]));
  $393=$390>=$392;
  L74: do {
   if ($393) {
    $395=((($i_5)-(1))|0);
    $396=(($inClose+($395<<3))|0);
    $397=(+(HEAPF64[(($396)>>3)]));
    $398=(($inOpen+($395<<3))|0);
    $399=(+(HEAPF64[(($398)>>3)]));
    $400=$397<$399;
    if ($400) {
     label = 129;
     break;
    }
    $402=(($inClose+($i_5<<3))|0);
    $403=(+(HEAPF64[(($402)>>3)]));
    $404=(($inOpen+($i_5<<3))|0);
    $405=(+(HEAPF64[(($404)>>3)]));
    $406=$403>=$405;
    $407=$403>$397;
    $or_cond17=$406&$407;
    $408=$397>$390;
    $or_cond18=$or_cond17&$408;
    $409=$399>$392;
    $or_cond19=$or_cond18&$409;
    if (!($or_cond19)) {
     label = 129;
     break;
    }
    $411=((HEAP32[((272)>>2)])|0);
    $412=(($411+368)|0);
    $413=(+(HEAPF64[(($412)>>3)]));
    $414=(($411+360)|0);
    $415=((HEAP32[(($414)>>2)])|0);
    $416=($415|0)==0;
    do {
     if ($416) {
      $422=(($411+356)|0);
      $423=((HEAP32[(($422)>>2)])|0);
      if (((($423|0))|0)==((0)|0)) {
       $425=($390)-($392);
       $426=(+(Math_abs((+($425)))));
       $444=$426;
       break;
      } else if (((($423|0))|0)==((1)|0)) {
       $428=(($inHigh+($388<<3))|0);
       $429=(+(HEAPF64[(($428)>>3)]));
       $430=(($inLow+($388<<3))|0);
       $431=(+(HEAPF64[(($430)>>3)]));
       $432=($429)-($431);
       $444=$432;
       break;
      } else if (((($423|0))|0)==((2)|0)) {
       $434=(($inHigh+($388<<3))|0);
       $435=(+(HEAPF64[(($434)>>3)]));
       $_20=($393?$390:$392);
       $436=($435)-($_20);
       $437=$390<$392;
       $438=($437?$390:$392);
       $439=(($inLow+($388<<3))|0);
       $440=(+(HEAPF64[(($439)>>3)]));
       $441=($438)-($440);
       $442=($436)+($441);
       $444=$442;
       break;
      } else {
       $444=0.0;
       break;
      }
     } else {
      $418=(+((($415|0))|0));
      $419=(+(HEAPF64[(($32)>>3)]));
      $420=($419)/($418);
      $444=$420;
     }
    } while(0);

    $445=($413)*($444);
    $446=((HEAP32[((272)>>2)])|0);
    $447=(($446+356)|0);
    $448=((HEAP32[(($447)>>2)])|0);
    $449=($448|0)==2;
    $450=($449?(2.0):(1.0));
    $451=($445)/($450);
    $452=($390)+($451);
    $453=$399>$452;
    if ($453) {
     label = 129;
     break;
    }
    $455=(+(HEAPF64[(($404)>>3)]));
    $456=(+(HEAPF64[(($398)>>3)]));
    $457=$455>$456;
    if (!($457)) {
     label = 129;
     break;
    }
    $459=(+(HEAPF64[(($396)>>3)]));
    $460=(($446+368)|0);
    $461=(+(HEAPF64[(($460)>>3)]));
    $462=(($446+360)|0);
    $463=((HEAP32[(($462)>>2)])|0);
    $464=($463|0)==0;
    do {
     if ($464) {
      if (((($448|0))|0)==((0)|0)) {
       $471=($459)-($456);
       $472=(+(Math_abs((+($471)))));
       $491=$472;
       break;
      } else if (((($448|0))|0)==((1)|0)) {
       $474=(($inHigh+($395<<3))|0);
       $475=(+(HEAPF64[(($474)>>3)]));
       $476=(($inLow+($395<<3))|0);
       $477=(+(HEAPF64[(($476)>>3)]));
       $478=($475)-($477);
       $491=$478;
       break;
      } else {
       if (!($449)) {
        $491=0.0;
        break;
       }
       $481=(($inHigh+($395<<3))|0);
       $482=(+(HEAPF64[(($481)>>3)]));
       $483=$459<$456;
       $_21=($483?$456:$459);
       $484=($482)-($_21);
       $485=($483?$459:$456);
       $486=(($inLow+($395<<3))|0);
       $487=(+(HEAPF64[(($486)>>3)]));
       $488=($485)-($487);
       $489=($484)+($488);
       $491=$489;
       break;
      }
     } else {
      $466=(+((($463|0))|0));
      $467=(+(HEAPF64[(($33)>>3)]));
      $468=($467)/($466);
      $491=$468;
     }
    } while(0);

    $492=($461)*($491);
    $493=((HEAP32[((272)>>2)])|0);
    $494=(($493+356)|0);
    $495=((HEAP32[(($494)>>2)])|0);
    $496=($495|0)==2;
    $497=($496?(2.0):(1.0));
    $498=($492)/($497);
    $499=($459)+($498);
    $500=$455>$499;
    if ($500) {
     label = 129;
     break;
    }
    $502=(+(HEAPF64[(($389)>>3)]));
    $503=(+(HEAPF64[(($391)>>3)]));
    $504=($502)-($503);
    $505=(+(Math_abs((+($504)))));
    $506=(($493+176)|0);
    $507=(+(HEAPF64[(($506)>>3)]));
    $508=(($493+168)|0);
    $509=((HEAP32[(($508)>>2)])|0);
    $510=($509|0)==0;
    do {
     if ($510) {
      $515=(($493+164)|0);
      $516=((HEAP32[(($515)>>2)])|0);
      if (((($516|0))|0)==((1)|0)) {
       $518=(($inHigh+($388<<3))|0);
       $519=(+(HEAPF64[(($518)>>3)]));
       $520=(($inLow+($388<<3))|0);
       $521=(+(HEAPF64[(($520)>>3)]));
       $522=($519)-($521);
       $536=$522;
       break;
      } else if (((($516|0))|0)==((0)|0)) {
       $536=$505;
       break;
      }
      $524=($516|0)==2;
      if (!($524)) {
       $536=0.0;
       break;
      }
      $526=(($inHigh+($388<<3))|0);
      $527=(+(HEAPF64[(($526)>>3)]));
      $528=$502<$503;
      $_22=($528?$503:$502);
      $529=($527)-($_22);
      $530=($528?$502:$503);
      $531=(($inLow+($388<<3))|0);
      $532=(+(HEAPF64[(($531)>>3)]));
      $533=($530)-($532);
      $534=($529)+($533);
      $536=$534;
     } else {
      $512=(+((($509|0))|0));
      $513=($BodyLongPeriodTotal_1)/($512);
      $536=$513;
     }
    } while(0);

    $537=($507)*($536);
    $538=((HEAP32[((272)>>2)])|0);
    $539=(($538+164)|0);
    $540=((HEAP32[(($539)>>2)])|0);
    $541=($540|0)==2;
    $542=($541?(2.0):(1.0));
    $543=($537)/($542);
    $544=$505>$543;
    if (!($544)) {
     label = 129;
     break;
    }
    $546=(($inHigh+($388<<3))|0);
    $547=(+(HEAPF64[(($546)>>3)]));
    $548=(+(HEAPF64[(($389)>>3)]));
    $549=(+(HEAPF64[(($391)>>3)]));
    $550=$548<$549;
    $_23=($550?$549:$548);
    $551=($547)-($_23);
    $552=(($538+320)|0);
    $553=(+(HEAPF64[(($552)>>3)]));
    $554=(($538+312)|0);
    $555=((HEAP32[(($554)>>2)])|0);
    $556=($555|0)==0;
    do {
     if ($556) {
      $562=(($538+308)|0);
      $563=((HEAP32[(($562)>>2)])|0);
      if (((($563|0))|0)==((0)|0)) {
       $565=($548)-($549);
       $566=(+(Math_abs((+($565)))));
       $578=$566;
       break;
      } else if (((($563|0))|0)==((1)|0)) {
       $568=(($inLow+($388<<3))|0);
       $569=(+(HEAPF64[(($568)>>3)]));
       $570=($547)-($569);
       $578=$570;
       break;
      } else if (((($563|0))|0)==((2)|0)) {
       $572=($550?$548:$549);
       $573=(($inLow+($388<<3))|0);
       $574=(+(HEAPF64[(($573)>>3)]));
       $575=($572)-($574);
       $576=($551)+($575);
       $578=$576;
       break;
      } else {
       $578=0.0;
       break;
      }
     } else {
      $558=(+((($555|0))|0));
      $559=(+(HEAPF64[(($17)>>3)]));
      $560=($559)/($558);
      $578=$560;
     }
    } while(0);

    $579=($553)*($578);
    $580=((HEAP32[((272)>>2)])|0);
    $581=(($580+308)|0);
    $582=((HEAP32[(($581)>>2)])|0);
    $583=($582|0)==2;
    $584=($583?(2.0):(1.0));
    $585=($579)/($584);
    $586=$551<$585;
    if (!($586)) {
     label = 129;
     break;
    }
    $588=(+(HEAPF64[(($396)>>3)]));
    $589=(+(HEAPF64[(($398)>>3)]));
    $590=($588)-($589);
    $591=(+(Math_abs((+($590)))));
    $592=(+(HEAPF64[(($389)>>3)]));
    $593=(+(HEAPF64[(($391)>>3)]));
    $594=($592)-($593);
    $595=(+(Math_abs((+($594)))));
    $596=(($580+392)|0);
    $597=(+(HEAPF64[(($596)>>3)]));
    $598=(($580+384)|0);
    $599=((HEAP32[(($598)>>2)])|0);
    $600=($599|0)==0;
    do {
     if ($600) {
      $606=(($580+380)|0);
      $607=((HEAP32[(($606)>>2)])|0);
      if (((($607|0))|0)==((1)|0)) {
       $609=(+(HEAPF64[(($546)>>3)]));
       $610=(($inLow+($388<<3))|0);
       $611=(+(HEAPF64[(($610)>>3)]));
       $612=($609)-($611);
       $625=$612;
       break;
      } else if (((($607|0))|0)==((0)|0)) {
       $625=$595;
       break;
      }
      $614=($607|0)==2;
      if (!($614)) {
       $625=0.0;
       break;
      }
      $616=(+(HEAPF64[(($546)>>3)]));
      $617=$592<$593;
      $_25=($617?$593:$592);
      $618=($616)-($_25);
      $619=($617?$592:$593);
      $620=(($inLow+($388<<3))|0);
      $621=(+(HEAPF64[(($620)>>3)]));
      $622=($619)-($621);
      $623=($618)+($622);
      $625=$623;
     } else {
      $602=(+((($599|0))|0));
      $603=(+(HEAPF64[(($39)>>3)]));
      $604=($603)/($602);
      $625=$604;
     }
    } while(0);

    $626=($597)*($625);
    $627=((HEAP32[((272)>>2)])|0);
    $628=(($627+380)|0);
    $629=((HEAP32[(($628)>>2)])|0);
    $630=($629|0)==2;
    $631=($630?(2.0):(1.0));
    $632=($626)/($631);
    $633=($595)-($632);
    $634=$591<$633;
    if ($634) {
     $636=(+(HEAPF64[(($402)>>3)]));
     $637=(+(HEAPF64[(($404)>>3)]));
     $638=($636)-($637);
     $639=(+(Math_abs((+($638)))));
     $640=(+(HEAPF64[(($396)>>3)]));
     $641=(+(HEAPF64[(($398)>>3)]));
     $642=($640)-($641);
     $643=(+(Math_abs((+($642)))));
     $644=(($627+368)|0);
     $645=(+(HEAPF64[(($644)>>3)]));
     $646=(($627+360)|0);
     $647=((HEAP32[(($646)>>2)])|0);
     $648=($647|0)==0;
     do {
      if ($648) {
       $654=(($627+356)|0);
       $655=((HEAP32[(($654)>>2)])|0);
       if (((($655|0))|0)==((1)|0)) {
        $657=(($inHigh+($395<<3))|0);
        $658=(+(HEAPF64[(($657)>>3)]));
        $659=(($inLow+($395<<3))|0);
        $660=(+(HEAPF64[(($659)>>3)]));
        $661=($658)-($660);
        $675=$661;
        break;
       } else if (((($655|0))|0)==((0)|0)) {
        $675=$643;
        break;
       }
       $663=($655|0)==2;
       if (!($663)) {
        $675=0.0;
        break;
       }
       $665=(($inHigh+($395<<3))|0);
       $666=(+(HEAPF64[(($665)>>3)]));
       $667=$640<$641;
       $_26=($667?$641:$640);
       $668=($666)-($_26);
       $669=($667?$640:$641);
       $670=(($inLow+($395<<3))|0);
       $671=(+(HEAPF64[(($670)>>3)]));
       $672=($669)-($671);
       $673=($668)+($672);
       $675=$673;
      } else {
       $650=(+((($647|0))|0));
       $651=(+(HEAPF64[(($33)>>3)]));
       $652=($651)/($650);
       $675=$652;
      }
     } while(0);

     $676=($645)*($675);
     $677=((HEAP32[((272)>>2)])|0);
     $678=(($677+356)|0);
     $679=((HEAP32[(($678)>>2)])|0);
     $680=($679|0)==2;
     $681=($680?(2.0):(1.0));
     $682=($676)/($681);
     $683=($643)+($682);
     $684=$639<$683;
     if (!($684)) {
      label = 97;
     }
    } else {
     label = 97;
    }
    L134: do {
     if ((label|0) == 97) {
      label = 0;
      $686=(+(HEAPF64[(($402)>>3)]));
      $687=(+(HEAPF64[(($404)>>3)]));
      $688=($686)-($687);
      $689=(+(Math_abs((+($688)))));
      $690=(+(HEAPF64[(($396)>>3)]));
      $691=(+(HEAPF64[(($398)>>3)]));
      $692=($690)-($691);
      $693=(+(Math_abs((+($692)))));
      $694=((HEAP32[((272)>>2)])|0);
      $695=(($694+392)|0);
      $696=(+(HEAPF64[(($695)>>3)]));
      $697=(($694+384)|0);
      $698=((HEAP32[(($697)>>2)])|0);
      $699=($698|0)==0;
      do {
       if ($699) {
        $705=(($694+380)|0);
        $706=((HEAP32[(($705)>>2)])|0);
        if (((($706|0))|0)==((1)|0)) {
         $708=(($inHigh+($395<<3))|0);
         $709=(+(HEAPF64[(($708)>>3)]));
         $710=(($inLow+($395<<3))|0);
         $711=(+(HEAPF64[(($710)>>3)]));
         $712=($709)-($711);
         $726=$712;
         break;
        } else if (((($706|0))|0)==((0)|0)) {
         $726=$693;
         break;
        }
        $714=($706|0)==2;
        if (!($714)) {
         $726=0.0;
         break;
        }
        $716=(($inHigh+($395<<3))|0);
        $717=(+(HEAPF64[(($716)>>3)]));
        $718=$690<$691;
        $_27=($718?$691:$690);
        $719=($717)-($_27);
        $720=($718?$690:$691);
        $721=(($inLow+($395<<3))|0);
        $722=(+(HEAPF64[(($721)>>3)]));
        $723=($720)-($722);
        $724=($719)+($723);
        $726=$724;
       } else {
        $701=(+((($698|0))|0));
        $702=(+(HEAPF64[(($40)>>3)]));
        $703=($702)/($701);
        $726=$703;
       }
      } while(0);

      $727=($696)*($726);
      $728=((HEAP32[((272)>>2)])|0);
      $729=(($728+380)|0);
      $730=((HEAP32[(($729)>>2)])|0);
      $731=($730|0)==2;
      $732=($731?(2.0):(1.0));
      $733=($727)/($732);
      $734=($693)-($733);
      $735=$689<$734;
      if ($735) {
       break;
      }
      $737=(+(HEAPF64[(($402)>>3)]));
      $738=(+(HEAPF64[(($404)>>3)]));
      $739=($737)-($738);
      $740=(+(Math_abs((+($739)))));
      $741=(+(HEAPF64[(($396)>>3)]));
      $742=(+(HEAPF64[(($398)>>3)]));
      $743=($741)-($742);
      $744=(+(Math_abs((+($743)))));
      $745=$740<$744;
      do {
       if ($745) {
        $747=(+(HEAPF64[(($389)>>3)]));
        $748=(+(HEAPF64[(($391)>>3)]));
        $749=($747)-($748);
        $750=(+(Math_abs((+($749)))));
        $751=$744<$750;
        if (!($751)) {
         break;
        }
        $753=(($inHigh+($i_5<<3))|0);
        $754=(+(HEAPF64[(($753)>>3)]));
        $755=$737<$738;
        $_28=($755?$738:$737);
        $756=($754)-($_28);
        $757=(($728+320)|0);
        $758=(+(HEAPF64[(($757)>>3)]));
        $759=(($728+312)|0);
        $760=((HEAP32[(($759)>>2)])|0);
        $761=($760|0)==0;
        do {
         if ($761) {
          $767=(($728+308)|0);
          $768=((HEAP32[(($767)>>2)])|0);
          if (((($768|0))|0)==((0)|0)) {
           $781=$740;
           break;
          } else if (((($768|0))|0)==((1)|0)) {
           $771=(($inLow+($i_5<<3))|0);
           $772=(+(HEAPF64[(($771)>>3)]));
           $773=($754)-($772);
           $781=$773;
           break;
          } else if (((($768|0))|0)==((2)|0)) {
           $775=($755?$737:$738);
           $776=(($inLow+($i_5<<3))|0);
           $777=(+(HEAPF64[(($776)>>3)]));
           $778=($775)-($777);
           $779=($756)+($778);
           $781=$779;
           break;
          } else {
           $781=0.0;
           break;
          }
         } else {
          $763=(+((($760|0))|0));
          $764=(+(HEAPF64[(($19)>>3)]));
          $765=($764)/($763);
          $781=$765;
         }
        } while(0);

        $782=($758)*($781);
        $783=((HEAP32[((272)>>2)])|0);
        $784=(($783+308)|0);
        $785=((HEAP32[(($784)>>2)])|0);
        $786=($785|0)==2;
        $787=($786?(2.0):(1.0));
        $788=($782)/($787);
        $789=$756>$788;
        if ($789) {
         break L134;
        }
        $791=(($inHigh+($395<<3))|0);
        $792=(+(HEAPF64[(($791)>>3)]));
        $793=(+(HEAPF64[(($396)>>3)]));
        $794=(+(HEAPF64[(($398)>>3)]));
        $795=$793<$794;
        $_30=($795?$794:$793);
        $796=($792)-($_30);
        $797=(($783+320)|0);
        $798=(+(HEAPF64[(($797)>>3)]));
        $799=(($783+312)|0);
        $800=((HEAP32[(($799)>>2)])|0);
        $801=($800|0)==0;
        do {
         if ($801) {
          if (((($785|0))|0)==((0)|0)) {
           $808=($793)-($794);
           $809=(+(Math_abs((+($808)))));
           $821=$809;
           break;
          } else if (((($785|0))|0)==((1)|0)) {
           $811=(($inLow+($395<<3))|0);
           $812=(+(HEAPF64[(($811)>>3)]));
           $813=($792)-($812);
           $821=$813;
           break;
          } else if (((($785|0))|0)==((2)|0)) {
           $815=($795?$793:$794);
           $816=(($inLow+($395<<3))|0);
           $817=(+(HEAPF64[(($816)>>3)]));
           $818=($815)-($817);
           $819=($796)+($818);
           $821=$819;
           break;
          } else {
           $821=0.0;
           break;
          }
         } else {
          $803=(+((($800|0))|0));
          $804=(+(HEAPF64[(($18)>>3)]));
          $805=($804)/($803);
          $821=$805;
         }
        } while(0);

        $822=($798)*($821);
        $823=((HEAP32[((272)>>2)])|0);
        $824=(($823+308)|0);
        $825=((HEAP32[(($824)>>2)])|0);
        $826=($825|0)==2;
        $827=($826?(2.0):(1.0));
        $828=($822)/($827);
        $829=$796>$828;
        if ($829) {
         break L134;
        }
       }
      } while(0);
      $831=(+(HEAPF64[(($402)>>3)]));
      $832=(+(HEAPF64[(($404)>>3)]));
      $833=($831)-($832);
      $834=(+(Math_abs((+($833)))));
      $835=(+(HEAPF64[(($396)>>3)]));
      $836=(+(HEAPF64[(($398)>>3)]));
      $837=($835)-($836);
      $838=(+(Math_abs((+($837)))));
      $839=$834<$838;
      if (!($839)) {
       label = 129;
       break L74;
      }
      $841=(($inHigh+($i_5<<3))|0);
      $842=(+(HEAPF64[(($841)>>3)]));
      $843=$831<$832;
      $_32=($843?$832:$831);
      $844=($842)-($_32);
      $845=((HEAP32[((272)>>2)])|0);
      $846=(($845+272)|0);
      $847=(+(HEAPF64[(($846)>>3)]));
      $848=(($845+264)|0);
      $849=((HEAP32[(($848)>>2)])|0);
      $850=($849|0)==0;
      do {
       if ($850) {
        $856=(($845+260)|0);
        $857=((HEAP32[(($856)>>2)])|0);
        if (((($857|0))|0)==((0)|0)) {
         $870=$834;
         break;
        } else if (((($857|0))|0)==((1)|0)) {
         $860=(($inLow+($i_5<<3))|0);
         $861=(+(HEAPF64[(($860)>>3)]));
         $862=($842)-($861);
         $870=$862;
         break;
        } else if (((($857|0))|0)==((2)|0)) {
         $864=($843?$831:$832);
         $865=(($inLow+($i_5<<3))|0);
         $866=(+(HEAPF64[(($865)>>3)]));
         $867=($864)-($866);
         $868=($844)+($867);
         $870=$868;
         break;
        } else {
         $870=0.0;
         break;
        }
       } else {
        $852=(+((($849|0))|0));
        $853=(+(HEAPF64[(($26)>>3)]));
        $854=($853)/($852);
        $870=$854;
       }
      } while(0);

      $871=($847)*($870);
      $872=((HEAP32[((272)>>2)])|0);
      $873=(($872+260)|0);
      $874=((HEAP32[(($873)>>2)])|0);
      $875=($874|0)==2;
      $876=($875?(2.0):(1.0));
      $877=($871)/($876);
      $878=$844>$877;
      if (!($878)) {
       label = 129;
       break L74;
      }
     }
    } while(0);
    $880=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($880)>>2)]=-100;
   } else {
    label = 129;
   }
  } while(0);
  if ((label|0) == 129) {
   label = 0;
   $882=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($882)>>2)]=0;
  }
  $884=((HEAP32[((272)>>2)])|0);
  $885=(($884+308)|0);
  $886=((HEAP32[(($885)>>2)])|0);
  $totIdx_045=2;
  while(1) {

   if (((($886|0))|0)==((0)|0)) {
    $888=((($i_5)-($totIdx_045))|0);
    $889=(($inClose+($888<<3))|0);
    $890=(+(HEAPF64[(($889)>>3)]));
    $891=(($inOpen+($888<<3))|0);
    $892=(+(HEAPF64[(($891)>>3)]));
    $893=($890)-($892);
    $894=(+(Math_abs((+($893)))));
    $895=((($ShadowShortTrailingIdx_0)-($totIdx_045))|0);
    $896=(($inClose+($895<<3))|0);
    $897=(+(HEAPF64[(($896)>>3)]));
    $898=(($inOpen+($895<<3))|0);
    $899=(+(HEAPF64[(($898)>>3)]));
    $900=($897)-($899);
    $901=(+(Math_abs((+($900)))));
    $944=$901;$943=$894;
   } else if (((($886|0))|0)==((1)|0)) {
    $902=((($i_5)-($totIdx_045))|0);
    $903=(($inHigh+($902<<3))|0);
    $904=(+(HEAPF64[(($903)>>3)]));
    $905=(($inLow+($902<<3))|0);
    $906=(+(HEAPF64[(($905)>>3)]));
    $907=($904)-($906);
    $908=((($ShadowShortTrailingIdx_0)-($totIdx_045))|0);
    $909=(($inHigh+($908<<3))|0);
    $910=(+(HEAPF64[(($909)>>3)]));
    $911=(($inLow+($908<<3))|0);
    $912=(+(HEAPF64[(($911)>>3)]));
    $913=($910)-($912);
    $944=$913;$943=$907;
   } else if (((($886|0))|0)==((2)|0)) {
    $914=((($i_5)-($totIdx_045))|0);
    $915=(($inHigh+($914<<3))|0);
    $916=(+(HEAPF64[(($915)>>3)]));
    $917=(($inClose+($914<<3))|0);
    $918=(+(HEAPF64[(($917)>>3)]));
    $919=(($inOpen+($914<<3))|0);
    $920=(+(HEAPF64[(($919)>>3)]));
    $921=$918<$920;
    $_34=($921?$920:$918);
    $922=($916)-($_34);
    $923=($921?$918:$920);
    $924=(($inLow+($914<<3))|0);
    $925=(+(HEAPF64[(($924)>>3)]));
    $926=($923)-($925);
    $927=($922)+($926);
    $928=((($ShadowShortTrailingIdx_0)-($totIdx_045))|0);
    $929=(($inHigh+($928<<3))|0);
    $930=(+(HEAPF64[(($929)>>3)]));
    $931=(($inClose+($928<<3))|0);
    $932=(+(HEAPF64[(($931)>>3)]));
    $933=(($inOpen+($928<<3))|0);
    $934=(+(HEAPF64[(($933)>>3)]));
    $935=$932<$934;
    $_35=($935?$934:$932);
    $936=($930)-($_35);
    $937=($935?$932:$934);
    $938=(($inLow+($928<<3))|0);
    $939=(+(HEAPF64[(($938)>>3)]));
    $940=($937)-($939);
    $941=($936)+($940);
    $944=$941;$943=$927;
   } else {
    $944=0.0;$943=0.0;
   }


   $945=($943)-($944);
   $946=(($ShadowShortPeriodTotal+($totIdx_045<<3))|0);
   $947=(+(HEAPF64[(($946)>>3)]));
   $948=($947)+($945);
   HEAPF64[(($946)>>3)]=$948;
   $949=((($totIdx_045)-(1))|0);
   $950=($totIdx_045|0)>0;
   if ($950) {
    $totIdx_045=$949;
   } else {
    break;
   }
  }
  $952=((HEAP32[((272)>>2)])|0);
  $953=(($952+260)|0);
  $954=((HEAP32[(($953)>>2)])|0);
  if (((($954|0))|0)==((2)|0)) {
   $981=((($i_5)-(1))|0);
   $982=(($inHigh+($981<<3))|0);
   $983=(+(HEAPF64[(($982)>>3)]));
   $984=(($inClose+($981<<3))|0);
   $985=(+(HEAPF64[(($984)>>3)]));
   $986=(($inOpen+($981<<3))|0);
   $987=(+(HEAPF64[(($986)>>3)]));
   $988=$985<$987;
   $_36=($988?$987:$985);
   $989=($983)-($_36);
   $990=($988?$985:$987);
   $991=(($inLow+($981<<3))|0);
   $992=(+(HEAPF64[(($991)>>3)]));
   $993=($990)-($992);
   $994=($989)+($993);
   $995=((($ShadowLongTrailingIdx_0)-(1))|0);
   $996=(($inHigh+($995<<3))|0);
   $997=(+(HEAPF64[(($996)>>3)]));
   $998=(($inClose+($995<<3))|0);
   $999=(+(HEAPF64[(($998)>>3)]));
   $1000=(($inOpen+($995<<3))|0);
   $1001=(+(HEAPF64[(($1000)>>3)]));
   $1002=$999<$1001;
   $_37=($1002?$1001:$999);
   $1003=($997)-($_37);
   $1004=($1002?$999:$1001);
   $1005=(($inLow+($995<<3))|0);
   $1006=(+(HEAPF64[(($1005)>>3)]));
   $1007=($1004)-($1006);
   $1008=($1003)+($1007);
   $1011=$1008;$1010=$994;
  } else if (((($954|0))|0)==((1)|0)) {
   $969=((($i_5)-(1))|0);
   $970=(($inHigh+($969<<3))|0);
   $971=(+(HEAPF64[(($970)>>3)]));
   $972=(($inLow+($969<<3))|0);
   $973=(+(HEAPF64[(($972)>>3)]));
   $974=($971)-($973);
   $975=((($ShadowLongTrailingIdx_0)-(1))|0);
   $976=(($inHigh+($975<<3))|0);
   $977=(+(HEAPF64[(($976)>>3)]));
   $978=(($inLow+($975<<3))|0);
   $979=(+(HEAPF64[(($978)>>3)]));
   $980=($977)-($979);
   $1011=$980;$1010=$974;
  } else if (((($954|0))|0)==((0)|0)) {
   $955=((($i_5)-(1))|0);
   $956=(($inClose+($955<<3))|0);
   $957=(+(HEAPF64[(($956)>>3)]));
   $958=(($inOpen+($955<<3))|0);
   $959=(+(HEAPF64[(($958)>>3)]));
   $960=($957)-($959);
   $961=(+(Math_abs((+($960)))));
   $962=((($ShadowLongTrailingIdx_0)-(1))|0);
   $963=(($inClose+($962<<3))|0);
   $964=(+(HEAPF64[(($963)>>3)]));
   $965=(($inOpen+($962<<3))|0);
   $966=(+(HEAPF64[(($965)>>3)]));
   $967=($964)-($966);
   $968=(+(Math_abs((+($967)))));
   $1011=$968;$1010=$961;
  } else {
   $1011=0.0;$1010=0.0;
  }


  $1012=($1010)-($1011);
  $1013=(($ShadowLongPeriodTotal+8)|0);
  $1014=(+(HEAPF64[(($1013)>>3)]));
  $1015=($1014)+($1012);
  HEAPF64[(($1013)>>3)]=$1015;
  if (((($954|0))|0)==((2)|0)) {
   $1226=(($inHigh+($i_5<<3))|0);
   $1227=(+(HEAPF64[(($1226)>>3)]));
   $1228=(($inClose+($i_5<<3))|0);
   $1229=(+(HEAPF64[(($1228)>>3)]));
   $1230=(($inOpen+($i_5<<3))|0);
   $1231=(+(HEAPF64[(($1230)>>3)]));
   $1232=$1229<$1231;
   $_36_1=($1232?$1231:$1229);
   $1233=($1227)-($_36_1);
   $1234=($1232?$1229:$1231);
   $1235=(($inLow+($i_5<<3))|0);
   $1236=(+(HEAPF64[(($1235)>>3)]));
   $1237=($1234)-($1236);
   $1238=($1233)+($1237);
   $1239=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $1240=(+(HEAPF64[(($1239)>>3)]));
   $1241=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $1242=(+(HEAPF64[(($1241)>>3)]));
   $1243=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $1244=(+(HEAPF64[(($1243)>>3)]));
   $1245=$1242<$1244;
   $_37_1=($1245?$1244:$1242);
   $1246=($1240)-($_37_1);
   $1247=($1245?$1242:$1244);
   $1248=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $1249=(+(HEAPF64[(($1248)>>3)]));
   $1250=($1247)-($1249);
   $1251=($1246)+($1250);
   $1275=$1251;$1274=$1238;
  } else if (((($954|0))|0)==((1)|0)) {
   $1252=(($inHigh+($i_5<<3))|0);
   $1253=(+(HEAPF64[(($1252)>>3)]));
   $1254=(($inLow+($i_5<<3))|0);
   $1255=(+(HEAPF64[(($1254)>>3)]));
   $1256=($1253)-($1255);
   $1257=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $1258=(+(HEAPF64[(($1257)>>3)]));
   $1259=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $1260=(+(HEAPF64[(($1259)>>3)]));
   $1261=($1258)-($1260);
   $1275=$1261;$1274=$1256;
  } else if (((($954|0))|0)==((0)|0)) {
   $1262=(($inClose+($i_5<<3))|0);
   $1263=(+(HEAPF64[(($1262)>>3)]));
   $1264=(($inOpen+($i_5<<3))|0);
   $1265=(+(HEAPF64[(($1264)>>3)]));
   $1266=($1263)-($1265);
   $1267=(+(Math_abs((+($1266)))));
   $1268=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $1269=(+(HEAPF64[(($1268)>>3)]));
   $1270=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $1271=(+(HEAPF64[(($1270)>>3)]));
   $1272=($1269)-($1271);
   $1273=(+(Math_abs((+($1272)))));
   $1275=$1273;$1274=$1267;
  } else {
   $1275=0.0;$1274=0.0;
  }


  $1276=($1274)-($1275);
  $1277=(($ShadowLongPeriodTotal)|0);
  $1278=(+(HEAPF64[(($1277)>>3)]));
  $1279=($1278)+($1276);
  HEAPF64[(($1277)>>3)]=$1279;
  $1280=((HEAP32[((272)>>2)])|0);
  $1281=(($1280+380)|0);
  $1282=((HEAP32[(($1281)>>2)])|0);
  $1283=(($1280+356)|0);
  $1284=((HEAP32[(($1283)>>2)])|0);
  $totIdx_248=2;
  while(1) {

   $1017=(($1280+380)|0);
   $1018=((HEAP32[(($1017)>>2)])|0);
   if (((($1018|0))|0)==((0)|0)) {
    $1020=((($i_5)-($totIdx_248))|0);
    $1021=(($inClose+($1020<<3))|0);
    $1022=(+(HEAPF64[(($1021)>>3)]));
    $1023=(($inOpen+($1020<<3))|0);
    $1024=(+(HEAPF64[(($1023)>>3)]));
    $1025=($1022)-($1024);
    $1026=(+(Math_abs((+($1025)))));
    $1050=$1026;
   } else if (((($1018|0))|0)==((1)|0)) {
    $1028=((($i_5)-($totIdx_248))|0);
    $1029=(($inHigh+($1028<<3))|0);
    $1030=(+(HEAPF64[(($1029)>>3)]));
    $1031=(($inLow+($1028<<3))|0);
    $1032=(+(HEAPF64[(($1031)>>3)]));
    $1033=($1030)-($1032);
    $1050=$1033;
   } else if (((($1018|0))|0)==((2)|0)) {
    $1035=((($i_5)-($totIdx_248))|0);
    $1036=(($inHigh+($1035<<3))|0);
    $1037=(+(HEAPF64[(($1036)>>3)]));
    $1038=(($inClose+($1035<<3))|0);
    $1039=(+(HEAPF64[(($1038)>>3)]));
    $1040=(($inOpen+($1035<<3))|0);
    $1041=(+(HEAPF64[(($1040)>>3)]));
    $1042=$1039<$1041;
    $_38=($1042?$1041:$1039);
    $1043=($1037)-($_38);
    $1044=($1042?$1039:$1041);
    $1045=(($inLow+($1035<<3))|0);
    $1046=(+(HEAPF64[(($1045)>>3)]));
    $1047=($1044)-($1046);
    $1048=($1043)+($1047);
    $1050=$1048;
   } else {
    $1050=0.0;
   }

   if (((($1282|0))|0)==((0)|0)) {
    $1052=((($FarTrailingIdx_0)-($totIdx_248))|0);
    $1053=(($inClose+($1052<<3))|0);
    $1054=(+(HEAPF64[(($1053)>>3)]));
    $1055=(($inOpen+($1052<<3))|0);
    $1056=(+(HEAPF64[(($1055)>>3)]));
    $1057=($1054)-($1056);
    $1058=(+(Math_abs((+($1057)))));
    $1082=$1058;
   } else if (((($1282|0))|0)==((1)|0)) {
    $1060=((($FarTrailingIdx_0)-($totIdx_248))|0);
    $1061=(($inHigh+($1060<<3))|0);
    $1062=(+(HEAPF64[(($1061)>>3)]));
    $1063=(($inLow+($1060<<3))|0);
    $1064=(+(HEAPF64[(($1063)>>3)]));
    $1065=($1062)-($1064);
    $1082=$1065;
   } else if (((($1282|0))|0)==((2)|0)) {
    $1067=((($FarTrailingIdx_0)-($totIdx_248))|0);
    $1068=(($inHigh+($1067<<3))|0);
    $1069=(+(HEAPF64[(($1068)>>3)]));
    $1070=(($inClose+($1067<<3))|0);
    $1071=(+(HEAPF64[(($1070)>>3)]));
    $1072=(($inOpen+($1067<<3))|0);
    $1073=(+(HEAPF64[(($1072)>>3)]));
    $1074=$1071<$1073;
    $_39=($1074?$1073:$1071);
    $1075=($1069)-($_39);
    $1076=($1074?$1071:$1073);
    $1077=(($inLow+($1067<<3))|0);
    $1078=(+(HEAPF64[(($1077)>>3)]));
    $1079=($1076)-($1078);
    $1080=($1075)+($1079);
    $1082=$1080;
   } else {
    $1082=0.0;
   }

   $1083=($1050)-($1082);
   $1084=(($FarPeriodTotal+($totIdx_248<<3))|0);
   $1085=(+(HEAPF64[(($1084)>>3)]));
   $1086=($1085)+($1083);
   HEAPF64[(($1084)>>3)]=$1086;
   if (((($1284|0))|0)==((0)|0)) {
    $1087=((($i_5)-($totIdx_248))|0);
    $1088=(($inClose+($1087<<3))|0);
    $1089=(+(HEAPF64[(($1088)>>3)]));
    $1090=(($inOpen+($1087<<3))|0);
    $1091=(+(HEAPF64[(($1090)>>3)]));
    $1092=($1089)-($1091);
    $1093=(+(Math_abs((+($1092)))));
    $1094=((($NearTrailingIdx_0)-($totIdx_248))|0);
    $1095=(($inClose+($1094<<3))|0);
    $1096=(+(HEAPF64[(($1095)>>3)]));
    $1097=(($inOpen+($1094<<3))|0);
    $1098=(+(HEAPF64[(($1097)>>3)]));
    $1099=($1096)-($1098);
    $1100=(+(Math_abs((+($1099)))));
    $1143=$1100;$1142=$1093;
   } else if (((($1284|0))|0)==((1)|0)) {
    $1101=((($i_5)-($totIdx_248))|0);
    $1102=(($inHigh+($1101<<3))|0);
    $1103=(+(HEAPF64[(($1102)>>3)]));
    $1104=(($inLow+($1101<<3))|0);
    $1105=(+(HEAPF64[(($1104)>>3)]));
    $1106=($1103)-($1105);
    $1107=((($NearTrailingIdx_0)-($totIdx_248))|0);
    $1108=(($inHigh+($1107<<3))|0);
    $1109=(+(HEAPF64[(($1108)>>3)]));
    $1110=(($inLow+($1107<<3))|0);
    $1111=(+(HEAPF64[(($1110)>>3)]));
    $1112=($1109)-($1111);
    $1143=$1112;$1142=$1106;
   } else if (((($1284|0))|0)==((2)|0)) {
    $1113=((($i_5)-($totIdx_248))|0);
    $1114=(($inHigh+($1113<<3))|0);
    $1115=(+(HEAPF64[(($1114)>>3)]));
    $1116=(($inClose+($1113<<3))|0);
    $1117=(+(HEAPF64[(($1116)>>3)]));
    $1118=(($inOpen+($1113<<3))|0);
    $1119=(+(HEAPF64[(($1118)>>3)]));
    $1120=$1117<$1119;
    $_40=($1120?$1119:$1117);
    $1121=($1115)-($_40);
    $1122=($1120?$1117:$1119);
    $1123=(($inLow+($1113<<3))|0);
    $1124=(+(HEAPF64[(($1123)>>3)]));
    $1125=($1122)-($1124);
    $1126=($1121)+($1125);
    $1127=((($NearTrailingIdx_0)-($totIdx_248))|0);
    $1128=(($inHigh+($1127<<3))|0);
    $1129=(+(HEAPF64[(($1128)>>3)]));
    $1130=(($inClose+($1127<<3))|0);
    $1131=(+(HEAPF64[(($1130)>>3)]));
    $1132=(($inOpen+($1127<<3))|0);
    $1133=(+(HEAPF64[(($1132)>>3)]));
    $1134=$1131<$1133;
    $_41=($1134?$1133:$1131);
    $1135=($1129)-($_41);
    $1136=($1134?$1131:$1133);
    $1137=(($inLow+($1127<<3))|0);
    $1138=(+(HEAPF64[(($1137)>>3)]));
    $1139=($1136)-($1138);
    $1140=($1135)+($1139);
    $1143=$1140;$1142=$1126;
   } else {
    $1143=0.0;$1142=0.0;
   }


   $1144=($1142)-($1143);
   $1145=(($NearPeriodTotal+($totIdx_248<<3))|0);
   $1146=(+(HEAPF64[(($1145)>>3)]));
   $1147=($1146)+($1144);
   HEAPF64[(($1145)>>3)]=$1147;
   $1148=((($totIdx_248)-(1))|0);
   $1149=($1148|0)>0;
   if ($1149) {
    $totIdx_248=$1148;
   } else {
    break;
   }
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $1151=(($1280+164)|0);
  $1152=((HEAP32[(($1151)>>2)])|0);
  if (((($1152|0))|0)==((0)|0)) {
   $1154=(+(HEAPF64[(($389)>>3)]));
   $1155=(+(HEAPF64[(($391)>>3)]));
   $1156=($1154)-($1155);
   $1157=(+(Math_abs((+($1156)))));
   $1177=$1157;
  } else if (((($1152|0))|0)==((1)|0)) {
   $1159=(($inHigh+($388<<3))|0);
   $1160=(+(HEAPF64[(($1159)>>3)]));
   $1161=(($inLow+($388<<3))|0);
   $1162=(+(HEAPF64[(($1161)>>3)]));
   $1163=($1160)-($1162);
   $1177=$1163;
  } else if (((($1152|0))|0)==((2)|0)) {
   $1165=(($inHigh+($388<<3))|0);
   $1166=(+(HEAPF64[(($1165)>>3)]));
   $1167=(+(HEAPF64[(($389)>>3)]));
   $1168=(+(HEAPF64[(($391)>>3)]));
   $1169=$1167<$1168;
   $_42=($1169?$1168:$1167);
   $1170=($1166)-($_42);
   $1171=($1169?$1167:$1168);
   $1172=(($inLow+($388<<3))|0);
   $1173=(+(HEAPF64[(($1172)>>3)]));
   $1174=($1171)-($1173);
   $1175=($1170)+($1174);
   $1177=$1175;
  } else {
   $1177=0.0;
  }

  $1178=((HEAP32[((272)>>2)])|0);
  $1179=(($1178+164)|0);
  $1180=((HEAP32[(($1179)>>2)])|0);
  if (((($1180|0))|0)==((2)|0)) {
   $1197=((($BodyLongTrailingIdx_0)-(2))|0);
   $1198=(($inHigh+($1197<<3))|0);
   $1199=(+(HEAPF64[(($1198)>>3)]));
   $1200=(($inClose+($1197<<3))|0);
   $1201=(+(HEAPF64[(($1200)>>3)]));
   $1202=(($inOpen+($1197<<3))|0);
   $1203=(+(HEAPF64[(($1202)>>3)]));
   $1204=$1201<$1203;
   $_43=($1204?$1203:$1201);
   $1205=($1199)-($_43);
   $1206=($1204?$1201:$1203);
   $1207=(($inLow+($1197<<3))|0);
   $1208=(+(HEAPF64[(($1207)>>3)]));
   $1209=($1206)-($1208);
   $1210=($1205)+($1209);
   $1212=$1210;
  } else if (((($1180|0))|0)==((0)|0)) {
   $1182=((($BodyLongTrailingIdx_0)-(2))|0);
   $1183=(($inClose+($1182<<3))|0);
   $1184=(+(HEAPF64[(($1183)>>3)]));
   $1185=(($inOpen+($1182<<3))|0);
   $1186=(+(HEAPF64[(($1185)>>3)]));
   $1187=($1184)-($1186);
   $1188=(+(Math_abs((+($1187)))));
   $1212=$1188;
  } else if (((($1180|0))|0)==((1)|0)) {
   $1190=((($BodyLongTrailingIdx_0)-(2))|0);
   $1191=(($inHigh+($1190<<3))|0);
   $1192=(+(HEAPF64[(($1191)>>3)]));
   $1193=(($inLow+($1190<<3))|0);
   $1194=(+(HEAPF64[(($1193)>>3)]));
   $1195=($1192)-($1194);
   $1212=$1195;
  } else {
   $1212=0.0;
  }

  $1213=($1177)-($1212);
  $1214=($BodyLongPeriodTotal_1)+($1213);
  $1215=((($i_5)+(1))|0);
  $1216=((($ShadowShortTrailingIdx_0)+(1))|0);
  $1217=((($ShadowLongTrailingIdx_0)+(1))|0);
  $1218=((($NearTrailingIdx_0)+(1))|0);
  $1219=((($FarTrailingIdx_0)+(1))|0);
  $1220=((($BodyLongTrailingIdx_0)+(1))|0);
  $1221=($i_5|0)<($endIdx|0);
  if ($1221) {
   $FarTrailingIdx_0=$1219;$NearTrailingIdx_0=$1218;$ShadowLongTrailingIdx_0=$1217;$ShadowShortTrailingIdx_0=$1216;$BodyLongTrailingIdx_0=$1220;$outIdx_0=$outIdx_1;$i_5=$1215;$BodyLongPeriodTotal_1=$1214;
  } else {
   break;
  }
 }
 $1223=((($smax81)+(1))|0);
 $1224=((($1223)-($smax82))|0);
 HEAP32[(($outNBElement)>>2)]=$1224;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDLBELTHOLD_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+168)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+336)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 return (($_)|0);
}


function _TA_CDLBELTHOLD($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond18=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$BodyLongPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$smax28=0,$33=0,$smax29=0,$34=0,$35=0;
 var $36=0,$i_024=0,$BodyLongPeriodTotal_023=.0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0,$46=0,$47=.0,$48=0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$57=.0;
 var $58=0,$_=.0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0,$66=.0,$67=.0,$68=0,$69=0,$smax30=0,$i_1_lcssa=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$70=0,$smax=0,$71=0,$i_121=0,$ShadowVeryShortPeriodTotal_020=.0;
 var $74=0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$_8=.0,$94=.0;
 var $95=.0,$96=0,$97=.0,$98=.0,$99=.0,$101=.0,$102=.0,$103=0,$104=0,$BodyLongPeriodTotal_1=.0,$ShadowVeryShortPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyLongTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$106=0,$107=.0,$108=0,$109=.0,$110=.0;
 var $111=.0,$112=0,$113=0,$114=.0,$115=0,$116=0,$117=0,$119=.0,$120=.0,$122=0,$123=0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$133=0,$134=.0,$135=0;
 var $_9=.0,$136=.0,$137=.0,$138=0,$139=.0,$140=.0,$141=.0,$143=.0,$144=.0,$145=0,$146=0,$147=0,$148=0,$149=.0,$150=.0,$151=0,$153=.0,$154=.0,$155=0,$157=0;
 var $158=.0,$159=.0,$160=0,$161=.0,$162=0,$163=0,$164=0,$166=.0,$167=.0,$169=0,$170=0,$172=.0,$173=.0,$175=0,$176=.0,$177=.0,$179=0,$180=.0,$181=0,$_11=.0;
 var $182=.0,$183=.0,$184=.0,$185=.0,$187=.0,$188=.0,$189=0,$190=0,$191=0,$192=0,$193=.0,$194=.0,$195=0,$197=.0,$198=.0,$199=0,$201=0,$202=.0,$203=.0,$204=0;
 var $205=0,$206=.0,$207=0,$208=0,$209=0,$211=.0,$212=.0,$214=0,$215=0,$217=.0,$218=.0,$220=0,$221=.0,$222=.0,$224=0,$_13=.0,$225=.0,$226=.0,$227=0,$228=.0;
 var $229=.0,$230=.0,$232=.0,$233=.0,$234=0,$235=0,$236=0,$237=0,$238=.0,$239=.0,$240=0,$242=.0,$243=.0,$244=0,$245=0,$246=0,$248=0,$outIdx_1=0,$250=0,$251=0;
 var $252=0,$254=.0,$255=.0,$256=.0,$257=.0,$259=0,$260=.0,$261=0,$262=.0,$263=.0,$265=0,$266=.0,$267=.0,$268=.0,$269=0,$_14=.0,$270=.0,$271=.0,$272=0,$273=.0;
 var $274=.0,$275=.0,$277=.0,$278=0,$279=0,$280=0,$282=0,$283=.0,$284=0,$285=.0,$286=.0,$287=.0,$289=0,$290=.0,$291=0,$292=.0,$293=.0,$295=0,$296=.0,$297=0;
 var $298=.0,$299=0,$300=.0,$301=0,$_15=.0,$302=.0,$303=.0,$304=0,$305=.0,$306=.0,$307=.0,$309=.0,$310=.0,$311=.0,$312=0,$313=0,$314=0,$316=.0,$317=.0,$318=.0;
 var $319=.0,$321=0,$322=.0,$323=0,$324=.0,$325=.0,$327=0,$328=.0,$329=.0,$330=.0,$331=0,$_16=.0,$332=.0,$333=.0,$334=0,$335=.0,$336=.0,$337=.0,$339=.0,$340=0;
 var $341=0,$342=0,$344=0,$345=.0,$346=0,$347=.0,$348=.0,$349=.0,$351=0,$352=.0,$353=0,$354=.0,$355=.0,$357=0,$358=.0,$359=0,$360=.0,$361=0,$362=.0,$363=0;
 var $_17=.0,$364=.0,$365=.0,$366=0,$367=.0,$368=.0,$369=.0,$371=.0,$372=.0,$373=.0,$374=0,$375=0,$376=0,$377=0,$379=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond18=$10|$or_cond5_not;
 if ($or_cond18) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLBELTHOLD_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+168)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+336)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+164)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $BodyLongPeriodTotal_023=0.0;$i_024=$20;
  while(1) {


   if (((($27|0))|0)==((2)|0)) {
    $52=(($inHigh+($i_024<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inClose+($i_024<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inOpen+($i_024<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=$55<$57;
    $_=($58?$57:$55);
    $59=($53)-($_);
    $60=($58?$55:$57);
    $61=(($inLow+($i_024<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=($60)-($62);
    $64=($59)+($63);
    $66=$64;
   } else if (((($27|0))|0)==((1)|0)) {
    $46=(($inHigh+($i_024<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inLow+($i_024<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=($47)-($49);
    $66=$50;
   } else if (((($27|0))|0)==((0)|0)) {
    $39=(($inClose+($i_024<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inOpen+($i_024<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $44=(+(Math_abs((+($43)))));
    $66=$44;
   } else {
    $66=0.0;
   }

   $67=($BodyLongPeriodTotal_023)+($66);
   $68=((($i_024)+(1))|0);
   $69=($68|0)<($_startIdx|0);
   if ($69) {
    $BodyLongPeriodTotal_023=$67;$i_024=$68;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$67;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+332)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=($12|0)>($startIdx|0);
  $smax28=($32?$12:$startIdx);
  $33=($12|0)>($startIdx|0);
  $smax29=($33?$12:$startIdx);
  $34=((($smax29)+(1))|0);
  $35=((($34)-($22))|0);
  $36=($smax28|0)>($35|0);
  $ShadowVeryShortPeriodTotal_020=0.0;$i_121=$23;
  while(1) {


   if (((($31|0))|0)==((2)|0)) {
    $87=(($inHigh+($i_121<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inClose+($i_121<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inOpen+($i_121<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$90<$92;
    $_8=($93?$92:$90);
    $94=($88)-($_8);
    $95=($93?$90:$92);
    $96=(($inLow+($i_121<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $101=$99;
   } else if (((($31|0))|0)==((1)|0)) {
    $81=(($inHigh+($i_121<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($i_121<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $101=$85;
   } else if (((($31|0))|0)==((0)|0)) {
    $74=(($inClose+($i_121<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($i_121<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $101=$79;
   } else {
    $101=0.0;
   }

   $102=($ShadowVeryShortPeriodTotal_020)+($101);
   $103=((($i_121)+(1))|0);
   $104=($103|0)<($_startIdx|0);
   if ($104) {
    $ShadowVeryShortPeriodTotal_020=$102;$i_121=$103;
   } else {
    break;
   }
  }
  $smax30=($36?$smax28:$35);
  $ShadowVeryShortPeriodTotal_0_lcssa=$102;$i_1_lcssa=$smax30;
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;$i_1_lcssa=$23;
 }


 $70=($i_1_lcssa|0)>($endIdx|0);
 $smax=($70?$i_1_lcssa:$endIdx);
 $71=((($smax)+(1))|0);
 $ShadowVeryShortTrailingIdx_0=$23;$BodyLongTrailingIdx_0=$20;$outIdx_0=0;$i_2=$i_1_lcssa;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;
 while(1) {






  $106=(($inClose+($i_2<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=(($inOpen+($i_2<<3))|0);
  $109=(+(HEAPF64[(($108)>>3)]));
  $110=($107)-($109);
  $111=(+(Math_abs((+($110)))));
  $112=((HEAP32[((272)>>2)])|0);
  $113=(($112+176)|0);
  $114=(+(HEAPF64[(($113)>>3)]));
  $115=(($112+168)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  $117=($116|0)==0;
  do {
   if ($117) {
    $122=(($112+164)|0);
    $123=((HEAP32[(($122)>>2)])|0);
    if (((($123|0))|0)==((1)|0)) {
     $125=(($inHigh+($i_2<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=(($inLow+($i_2<<3))|0);
     $128=(+(HEAPF64[(($127)>>3)]));
     $129=($126)-($128);
     $143=$129;
     break;
    } else if (((($123|0))|0)==((0)|0)) {
     $143=$111;
     break;
    }
    $131=($123|0)==2;
    if (!($131)) {
     $143=0.0;
     break;
    }
    $133=(($inHigh+($i_2<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=$107<$109;
    $_9=($135?$109:$107);
    $136=($134)-($_9);
    $137=($135?$107:$109);
    $138=(($inLow+($i_2<<3))|0);
    $139=(+(HEAPF64[(($138)>>3)]));
    $140=($137)-($139);
    $141=($136)+($140);
    $143=$141;
   } else {
    $119=(+((($116|0))|0));
    $120=($BodyLongPeriodTotal_1)/($119);
    $143=$120;
   }
  } while(0);

  $144=($114)*($143);
  $145=((HEAP32[((272)>>2)])|0);
  $146=(($145+164)|0);
  $147=((HEAP32[(($146)>>2)])|0);
  $148=($147|0)==2;
  $149=($148?(2.0):(1.0));
  $150=($144)/($149);
  $151=$111>$150;
  do {
   if ($151) {
    $153=(+(HEAPF64[(($106)>>3)]));
    $154=(+(HEAPF64[(($108)>>3)]));
    $155=$153<$154;
    if ($155) {
     label = 37;
    } else {
     $157=(($inLow+($i_2<<3))|0);
     $158=(+(HEAPF64[(($157)>>3)]));
     $159=($154)-($158);
     $160=(($145+344)|0);
     $161=(+(HEAPF64[(($160)>>3)]));
     $162=(($145+336)|0);
     $163=((HEAP32[(($162)>>2)])|0);
     $164=($163|0)==0;
     do {
      if ($164) {
       $169=(($145+332)|0);
       $170=((HEAP32[(($169)>>2)])|0);
       if (((($170|0))|0)==((1)|0)) {
        $175=(($inHigh+($i_2<<3))|0);
        $176=(+(HEAPF64[(($175)>>3)]));
        $177=($176)-($158);
        $187=$177;
        break;
       } else if (((($170|0))|0)==((2)|0)) {
        $179=(($inHigh+($i_2<<3))|0);
        $180=(+(HEAPF64[(($179)>>3)]));
        $181=$153<$154;
        $_11=($181?$154:$153);
        $182=($180)-($_11);
        $183=($181?$153:$154);
        $184=($183)-($158);
        $185=($184)+($182);
        $187=$185;
        break;
       } else if (((($170|0))|0)==((0)|0)) {
        $172=($153)-($154);
        $173=(+(Math_abs((+($172)))));
        $187=$173;
        break;
       } else {
        $187=0.0;
        break;
       }
      } else {
       $166=(+((($163|0))|0));
       $167=($ShadowVeryShortPeriodTotal_1)/($166);
       $187=$167;
      }
     } while(0);

     $188=($161)*($187);
     $189=((HEAP32[((272)>>2)])|0);
     $190=(($189+332)|0);
     $191=((HEAP32[(($190)>>2)])|0);
     $192=($191|0)==2;
     $193=($192?(2.0):(1.0));
     $194=($188)/($193);
     $195=$159<$194;
     if (!($195)) {
      label = 37;
     }
    }
    if ((label|0) == 37) {
     label = 0;
     $197=(+(HEAPF64[(($106)>>3)]));
     $198=(+(HEAPF64[(($108)>>3)]));
     $199=$197<$198;
     if (!($199)) {
      label = 46;
      break;
     }
     $201=(($inHigh+($i_2<<3))|0);
     $202=(+(HEAPF64[(($201)>>3)]));
     $203=($202)-($198);
     $204=((HEAP32[((272)>>2)])|0);
     $205=(($204+344)|0);
     $206=(+(HEAPF64[(($205)>>3)]));
     $207=(($204+336)|0);
     $208=((HEAP32[(($207)>>2)])|0);
     $209=($208|0)==0;
     do {
      if ($209) {
       $214=(($204+332)|0);
       $215=((HEAP32[(($214)>>2)])|0);
       if (((($215|0))|0)==((2)|0)) {
        $224=$197<$198;
        $_13=($224?$198:$197);
        $225=($202)-($_13);
        $226=($224?$197:$198);
        $227=(($inLow+($i_2<<3))|0);
        $228=(+(HEAPF64[(($227)>>3)]));
        $229=($226)-($228);
        $230=($225)+($229);
        $232=$230;
        break;
       } else if (((($215|0))|0)==((0)|0)) {
        $217=($197)-($198);
        $218=(+(Math_abs((+($217)))));
        $232=$218;
        break;
       } else if (((($215|0))|0)==((1)|0)) {
        $220=(($inLow+($i_2<<3))|0);
        $221=(+(HEAPF64[(($220)>>3)]));
        $222=($202)-($221);
        $232=$222;
        break;
       } else {
        $232=0.0;
        break;
       }
      } else {
       $211=(+((($208|0))|0));
       $212=($ShadowVeryShortPeriodTotal_1)/($211);
       $232=$212;
      }
     } while(0);

     $233=($206)*($232);
     $234=((HEAP32[((272)>>2)])|0);
     $235=(($234+332)|0);
     $236=((HEAP32[(($235)>>2)])|0);
     $237=($236|0)==2;
     $238=($237?(2.0):(1.0));
     $239=($233)/($238);
     $240=$203<$239;
     if (!($240)) {
      label = 46;
      break;
     }
    }
    $242=(+(HEAPF64[(($106)>>3)]));
    $243=(+(HEAPF64[(($108)>>3)]));
    $244=$242>=$243;
    $245=($244?100:-100);
    $246=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($246)>>2)]=$245;
   } else {
    label = 46;
   }
  } while(0);
  if ((label|0) == 46) {
   label = 0;
   $248=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($248)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $250=((HEAP32[((272)>>2)])|0);
  $251=(($250+164)|0);
  $252=((HEAP32[(($251)>>2)])|0);
  if (((($252|0))|0)==((0)|0)) {
   $254=(+(HEAPF64[(($106)>>3)]));
   $255=(+(HEAPF64[(($108)>>3)]));
   $256=($254)-($255);
   $257=(+(Math_abs((+($256)))));
   $277=$257;
  } else if (((($252|0))|0)==((1)|0)) {
   $259=(($inHigh+($i_2<<3))|0);
   $260=(+(HEAPF64[(($259)>>3)]));
   $261=(($inLow+($i_2<<3))|0);
   $262=(+(HEAPF64[(($261)>>3)]));
   $263=($260)-($262);
   $277=$263;
  } else if (((($252|0))|0)==((2)|0)) {
   $265=(($inHigh+($i_2<<3))|0);
   $266=(+(HEAPF64[(($265)>>3)]));
   $267=(+(HEAPF64[(($106)>>3)]));
   $268=(+(HEAPF64[(($108)>>3)]));
   $269=$267<$268;
   $_14=($269?$268:$267);
   $270=($266)-($_14);
   $271=($269?$267:$268);
   $272=(($inLow+($i_2<<3))|0);
   $273=(+(HEAPF64[(($272)>>3)]));
   $274=($271)-($273);
   $275=($270)+($274);
   $277=$275;
  } else {
   $277=0.0;
  }

  $278=((HEAP32[((272)>>2)])|0);
  $279=(($278+164)|0);
  $280=((HEAP32[(($279)>>2)])|0);
  if (((($280|0))|0)==((0)|0)) {
   $282=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $283=(+(HEAPF64[(($282)>>3)]));
   $284=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $285=(+(HEAPF64[(($284)>>3)]));
   $286=($283)-($285);
   $287=(+(Math_abs((+($286)))));
   $309=$287;
  } else if (((($280|0))|0)==((1)|0)) {
   $289=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $290=(+(HEAPF64[(($289)>>3)]));
   $291=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $292=(+(HEAPF64[(($291)>>3)]));
   $293=($290)-($292);
   $309=$293;
  } else if (((($280|0))|0)==((2)|0)) {
   $295=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $296=(+(HEAPF64[(($295)>>3)]));
   $297=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $298=(+(HEAPF64[(($297)>>3)]));
   $299=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $300=(+(HEAPF64[(($299)>>3)]));
   $301=$298<$300;
   $_15=($301?$300:$298);
   $302=($296)-($_15);
   $303=($301?$298:$300);
   $304=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $305=(+(HEAPF64[(($304)>>3)]));
   $306=($303)-($305);
   $307=($302)+($306);
   $309=$307;
  } else {
   $309=0.0;
  }

  $310=($277)-($309);
  $311=($BodyLongPeriodTotal_1)+($310);
  $312=((HEAP32[((272)>>2)])|0);
  $313=(($312+332)|0);
  $314=((HEAP32[(($313)>>2)])|0);
  if (((($314|0))|0)==((2)|0)) {
   $327=(($inHigh+($i_2<<3))|0);
   $328=(+(HEAPF64[(($327)>>3)]));
   $329=(+(HEAPF64[(($106)>>3)]));
   $330=(+(HEAPF64[(($108)>>3)]));
   $331=$329<$330;
   $_16=($331?$330:$329);
   $332=($328)-($_16);
   $333=($331?$329:$330);
   $334=(($inLow+($i_2<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=($333)-($335);
   $337=($332)+($336);
   $339=$337;
  } else if (((($314|0))|0)==((0)|0)) {
   $316=(+(HEAPF64[(($106)>>3)]));
   $317=(+(HEAPF64[(($108)>>3)]));
   $318=($316)-($317);
   $319=(+(Math_abs((+($318)))));
   $339=$319;
  } else if (((($314|0))|0)==((1)|0)) {
   $321=(($inHigh+($i_2<<3))|0);
   $322=(+(HEAPF64[(($321)>>3)]));
   $323=(($inLow+($i_2<<3))|0);
   $324=(+(HEAPF64[(($323)>>3)]));
   $325=($322)-($324);
   $339=$325;
  } else {
   $339=0.0;
  }

  $340=((HEAP32[((272)>>2)])|0);
  $341=(($340+332)|0);
  $342=((HEAP32[(($341)>>2)])|0);
  if (((($342|0))|0)==((1)|0)) {
   $351=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $352=(+(HEAPF64[(($351)>>3)]));
   $353=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $354=(+(HEAPF64[(($353)>>3)]));
   $355=($352)-($354);
   $371=$355;
  } else if (((($342|0))|0)==((2)|0)) {
   $357=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $358=(+(HEAPF64[(($357)>>3)]));
   $359=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $360=(+(HEAPF64[(($359)>>3)]));
   $361=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $362=(+(HEAPF64[(($361)>>3)]));
   $363=$360<$362;
   $_17=($363?$362:$360);
   $364=($358)-($_17);
   $365=($363?$360:$362);
   $366=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $367=(+(HEAPF64[(($366)>>3)]));
   $368=($365)-($367);
   $369=($364)+($368);
   $371=$369;
  } else if (((($342|0))|0)==((0)|0)) {
   $344=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $345=(+(HEAPF64[(($344)>>3)]));
   $346=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $347=(+(HEAPF64[(($346)>>3)]));
   $348=($345)-($347);
   $349=(+(Math_abs((+($348)))));
   $371=$349;
  } else {
   $371=0.0;
  }

  $372=($339)-($371);
  $373=($ShadowVeryShortPeriodTotal_1)+($372);
  $374=((($i_2)+(1))|0);
  $375=((($BodyLongTrailingIdx_0)+(1))|0);
  $376=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $377=($i_2|0)<($endIdx|0);
  if ($377) {
   $ShadowVeryShortTrailingIdx_0=$376;$BodyLongTrailingIdx_0=$375;$outIdx_0=$outIdx_1;$i_2=$374;$ShadowVeryShortPeriodTotal_1=$373;$BodyLongPeriodTotal_1=$311;
  } else {
   break;
  }
 }
 $379=((($71)-($i_1_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$379;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLBREAKAWAY_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+168)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((($3)+(4))|0);
 return (($4)|0);
}


function _TA_CDLBREAKAWAY($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond13=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$BodyLongPeriodTotal_0_lcssa=.0,$25=0,$smax=0,$26=0,$smax19=0,$27=0,$smax20=0,$i_018=0,$BodyLongPeriodTotal_017=.0,$30=0,$31=0,$32=.0,$33=0,$34=.0;
 var $35=.0,$36=.0,$38=0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$45=0,$46=0,$47=.0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$_=.0,$53=.0,$54=.0,$55=0;
 var $56=.0,$57=.0,$58=.0,$60=.0,$61=.0,$62=0,$63=0,$BodyLongPeriodTotal_1=.0,$i_1=0,$outIdx_0=0,$BodyLongTrailingIdx_0=0,$65=0,$66=0,$67=.0,$68=0,$69=.0,$70=.0,$71=.0,$72=0,$73=0;
 var $74=.0,$75=0,$76=0,$77=0,$79=.0,$80=.0,$82=0,$83=0,$85=0,$86=.0,$87=0,$88=.0,$89=.0,$91=0,$93=0,$94=.0,$95=0,$_8=.0,$96=.0,$97=.0;
 var $98=0,$99=.0,$100=.0,$101=.0,$103=.0,$104=.0,$105=0,$106=0,$107=0,$108=0,$109=.0,$110=.0,$111=0,$113=.0,$114=.0,$115=0,$116=0,$117=0,$118=0,$119=.0;
 var $120=0,$121=.0,$122=0,$123=0,$124=0,$126=0,$127=0,$128=.0,$129=0,$130=.0,$131=0,$132=0,$133=0,$135=0,$136=.0,$137=0,$138=.0,$139=0,$140=0,$141=0;
 var $144=0,$_9=.0,$145=0,$146=.0,$147=0,$149=0,$150=0,$151=.0,$152=0,$153=.0,$154=0,$156=0,$157=.0,$158=0,$159=.0,$160=0,$162=0,$163=.0,$164=0,$166=0;
 var $167=.0,$168=0,$169=0,$or_cond14=0,$170=0,$or_cond15=0,$172=.0,$173=.0,$174=0,$176=.0,$177=.0,$178=0,$_10=.0,$179=0,$180=.0,$181=0,$183=0,$184=0,$185=.0,$186=0;
 var $187=.0,$188=0,$190=0,$191=.0,$192=0,$193=.0,$194=0,$196=0,$197=.0,$198=0,$200=0,$201=.0,$202=0,$204=.0,$205=0,$206=0,$or_cond16=0,$208=.0,$209=.0,$210=0;
 var $211=0,$212=0,$214=0,$outIdx_1=0,$216=0,$217=0,$218=0,$220=.0,$221=.0,$222=.0,$223=.0,$225=0,$226=.0,$227=0,$228=.0,$229=.0,$231=0,$232=.0,$233=.0,$234=.0;
 var $235=0,$_11=.0,$236=.0,$237=.0,$238=0,$239=.0,$240=.0,$241=.0,$243=.0,$244=0,$245=0,$246=0,$248=0,$249=0,$250=.0,$251=0,$252=.0,$253=.0,$254=.0,$256=0;
 var $257=0,$258=.0,$259=0,$260=.0,$261=.0,$263=0,$264=0,$265=.0,$266=0,$267=.0,$268=0,$269=.0,$270=0,$_12=.0,$271=.0,$272=.0,$273=0,$274=.0,$275=.0,$276=.0;
 var $278=.0,$279=.0,$280=.0,$281=0,$282=0,$283=0,$285=0,$286=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond13=$10|$or_cond5_not;
 if ($or_cond13) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLBREAKAWAY_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+168)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=($19|0)>0;
 if ($21) {
  $22=((HEAP32[((272)>>2)])|0);
  $23=(($22+164)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $BodyLongPeriodTotal_017=0.0;$i_018=$20;
  while(1) {


   if (((($24|0))|0)==((0)|0)) {
    $30=((($i_018)-(4))|0);
    $31=(($inClose+($30<<3))|0);
    $32=(+(HEAPF64[(($31)>>3)]));
    $33=(($inOpen+($30<<3))|0);
    $34=(+(HEAPF64[(($33)>>3)]));
    $35=($32)-($34);
    $36=(+(Math_abs((+($35)))));
    $60=$36;
   } else if (((($24|0))|0)==((2)|0)) {
    $45=((($i_018)-(4))|0);
    $46=(($inHigh+($45<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inClose+($45<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inOpen+($45<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=$49<$51;
    $_=($52?$51:$49);
    $53=($47)-($_);
    $54=($52?$49:$51);
    $55=(($inLow+($45<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=($54)-($56);
    $58=($53)+($57);
    $60=$58;
   } else if (((($24|0))|0)==((1)|0)) {
    $38=((($i_018)-(4))|0);
    $39=(($inHigh+($38<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inLow+($38<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $60=$43;
   } else {
    $60=0.0;
   }

   $61=($BodyLongPeriodTotal_017)+($60);
   $62=((($i_018)+(1))|0);
   $63=($62|0)<($_startIdx|0);
   if ($63) {
    $BodyLongPeriodTotal_017=$61;$i_018=$62;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$61;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $25=($12|0)>($endIdx|0);
 $smax=($25?$12:$endIdx);
 $26=($smax|0)>($startIdx|0);
 $smax19=($26?$smax:$startIdx);
 $27=($12|0)>($startIdx|0);
 $smax20=($27?$12:$startIdx);
 $BodyLongTrailingIdx_0=$20;$outIdx_0=0;$i_1=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;
 while(1) {




  $65=((($i_1)-(4))|0);
  $66=(($inClose+($65<<3))|0);
  $67=(+(HEAPF64[(($66)>>3)]));
  $68=(($inOpen+($65<<3))|0);
  $69=(+(HEAPF64[(($68)>>3)]));
  $70=($67)-($69);
  $71=(+(Math_abs((+($70)))));
  $72=((HEAP32[((272)>>2)])|0);
  $73=(($72+176)|0);
  $74=(+(HEAPF64[(($73)>>3)]));
  $75=(($72+168)|0);
  $76=((HEAP32[(($75)>>2)])|0);
  $77=($76|0)==0;
  do {
   if ($77) {
    $82=(($72+164)|0);
    $83=((HEAP32[(($82)>>2)])|0);
    if (((($83|0))|0)==((1)|0)) {
     $85=(($inHigh+($65<<3))|0);
     $86=(+(HEAPF64[(($85)>>3)]));
     $87=(($inLow+($65<<3))|0);
     $88=(+(HEAPF64[(($87)>>3)]));
     $89=($86)-($88);
     $103=$89;
     break;
    } else if (((($83|0))|0)==((0)|0)) {
     $103=$71;
     break;
    }
    $91=($83|0)==2;
    if (!($91)) {
     $103=0.0;
     break;
    }
    $93=(($inHigh+($65<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=$67<$69;
    $_8=($95?$69:$67);
    $96=($94)-($_8);
    $97=($95?$67:$69);
    $98=(($inLow+($65<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=($97)-($99);
    $101=($96)+($100);
    $103=$101;
   } else {
    $79=(+((($76|0))|0));
    $80=($BodyLongPeriodTotal_1)/($79);
    $103=$80;
   }
  } while(0);

  $104=($74)*($103);
  $105=((HEAP32[((272)>>2)])|0);
  $106=(($105+164)|0);
  $107=((HEAP32[(($106)>>2)])|0);
  $108=($107|0)==2;
  $109=($108?(2.0):(1.0));
  $110=($104)/($109);
  $111=$71>$110;
  do {
   if ($111) {
    $113=(+(HEAPF64[(($66)>>3)]));
    $114=(+(HEAPF64[(($68)>>3)]));
    $115=$113>=$114;
    $116=($115?1:-1);
    $117=((($i_1)-(3))|0);
    $118=(($inClose+($117<<3))|0);
    $119=(+(HEAPF64[(($118)>>3)]));
    $120=(($inOpen+($117<<3))|0);
    $121=(+(HEAPF64[(($120)>>3)]));
    $122=$119>=$121;
    $123=($122?1:-1);
    $124=($116|0)==($123|0);
    if (!($124)) {
     label = 38;
     break;
    }
    $126=((($i_1)-(1))|0);
    $127=(($inClose+($126<<3))|0);
    $128=(+(HEAPF64[(($127)>>3)]));
    $129=(($inOpen+($126<<3))|0);
    $130=(+(HEAPF64[(($129)>>3)]));
    $131=$128>=$130;
    $132=($131?1:-1);
    $133=($123|0)==($132|0);
    if (!($133)) {
     label = 38;
     break;
    }
    $135=(($inClose+($i_1<<3))|0);
    $136=(+(HEAPF64[(($135)>>3)]));
    $137=(($inOpen+($i_1<<3))|0);
    $138=(+(HEAPF64[(($137)>>3)]));
    $139=$136>=$138;
    $140=($139?-1:1);
    $141=($132|0)==($140|0);
    if (!($141)) {
     label = 38;
     break;
    }
    do {
     if ($115) {
      label = 30;
     } else {
      $144=$121>$119;
      $_9=($144?$121:$119);
      $145=$114<$113;
      $146=($145?$114:$113);
      $147=$_9<$146;
      if (!($147)) {
       label = 30;
       break;
      }
      $149=((($i_1)-(2))|0);
      $150=(($inHigh+($149<<3))|0);
      $151=(+(HEAPF64[(($150)>>3)]));
      $152=(($inHigh+($117<<3))|0);
      $153=(+(HEAPF64[(($152)>>3)]));
      $154=$151<$153;
      if (!($154)) {
       label = 30;
       break;
      }
      $156=(($inLow+($149<<3))|0);
      $157=(+(HEAPF64[(($156)>>3)]));
      $158=(($inLow+($117<<3))|0);
      $159=(+(HEAPF64[(($158)>>3)]));
      $160=$157<$159;
      if (!($160)) {
       label = 30;
       break;
      }
      $162=(($inHigh+($126<<3))|0);
      $163=(+(HEAPF64[(($162)>>3)]));
      $164=$163<$151;
      if (!($164)) {
       label = 30;
       break;
      }
      $166=(($inLow+($126<<3))|0);
      $167=(+(HEAPF64[(($166)>>3)]));
      $168=$167<$157;
      $169=$136>$121;
      $or_cond14=$168&$169;
      $170=$136<$113;
      $or_cond15=$or_cond14&$170;
      if (!($or_cond15)) {
       label = 30;
      }
     }
    } while(0);
    if ((label|0) == 30) {
     label = 0;
     $172=(+(HEAPF64[(($66)>>3)]));
     $173=(+(HEAPF64[(($68)>>3)]));
     $174=$172<$173;
     if ($174) {
      label = 38;
      break;
     }
     $176=(+(HEAPF64[(($120)>>3)]));
     $177=(+(HEAPF64[(($118)>>3)]));
     $178=$176<$177;
     $_10=($178?$176:$177);
     $179=$173>$172;
     $180=($179?$173:$172);
     $181=$_10>$180;
     if (!($181)) {
      label = 38;
      break;
     }
     $183=((($i_1)-(2))|0);
     $184=(($inHigh+($183<<3))|0);
     $185=(+(HEAPF64[(($184)>>3)]));
     $186=(($inHigh+($117<<3))|0);
     $187=(+(HEAPF64[(($186)>>3)]));
     $188=$185>$187;
     if (!($188)) {
      label = 38;
      break;
     }
     $190=(($inLow+($183<<3))|0);
     $191=(+(HEAPF64[(($190)>>3)]));
     $192=(($inLow+($117<<3))|0);
     $193=(+(HEAPF64[(($192)>>3)]));
     $194=$191>$193;
     if (!($194)) {
      label = 38;
      break;
     }
     $196=(($inHigh+($126<<3))|0);
     $197=(+(HEAPF64[(($196)>>3)]));
     $198=$197>$185;
     if (!($198)) {
      label = 38;
      break;
     }
     $200=(($inLow+($126<<3))|0);
     $201=(+(HEAPF64[(($200)>>3)]));
     $202=$201>$191;
     if (!($202)) {
      label = 38;
      break;
     }
     $204=(+(HEAPF64[(($135)>>3)]));
     $205=$204<$176;
     $206=$204>$172;
     $or_cond16=$205&$206;
     if (!($or_cond16)) {
      label = 38;
      break;
     }
    }
    $208=(+(HEAPF64[(($135)>>3)]));
    $209=(+(HEAPF64[(($137)>>3)]));
    $210=$208>=$209;
    $211=($210?100:-100);
    $212=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($212)>>2)]=$211;
   } else {
    label = 38;
   }
  } while(0);
  if ((label|0) == 38) {
   label = 0;
   $214=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($214)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $216=((HEAP32[((272)>>2)])|0);
  $217=(($216+164)|0);
  $218=((HEAP32[(($217)>>2)])|0);
  if (((($218|0))|0)==((0)|0)) {
   $220=(+(HEAPF64[(($66)>>3)]));
   $221=(+(HEAPF64[(($68)>>3)]));
   $222=($220)-($221);
   $223=(+(Math_abs((+($222)))));
   $243=$223;
  } else if (((($218|0))|0)==((1)|0)) {
   $225=(($inHigh+($65<<3))|0);
   $226=(+(HEAPF64[(($225)>>3)]));
   $227=(($inLow+($65<<3))|0);
   $228=(+(HEAPF64[(($227)>>3)]));
   $229=($226)-($228);
   $243=$229;
  } else if (((($218|0))|0)==((2)|0)) {
   $231=(($inHigh+($65<<3))|0);
   $232=(+(HEAPF64[(($231)>>3)]));
   $233=(+(HEAPF64[(($66)>>3)]));
   $234=(+(HEAPF64[(($68)>>3)]));
   $235=$233<$234;
   $_11=($235?$234:$233);
   $236=($232)-($_11);
   $237=($235?$233:$234);
   $238=(($inLow+($65<<3))|0);
   $239=(+(HEAPF64[(($238)>>3)]));
   $240=($237)-($239);
   $241=($236)+($240);
   $243=$241;
  } else {
   $243=0.0;
  }

  $244=((HEAP32[((272)>>2)])|0);
  $245=(($244+164)|0);
  $246=((HEAP32[(($245)>>2)])|0);
  if (((($246|0))|0)==((0)|0)) {
   $248=((($BodyLongTrailingIdx_0)-(4))|0);
   $249=(($inClose+($248<<3))|0);
   $250=(+(HEAPF64[(($249)>>3)]));
   $251=(($inOpen+($248<<3))|0);
   $252=(+(HEAPF64[(($251)>>3)]));
   $253=($250)-($252);
   $254=(+(Math_abs((+($253)))));
   $278=$254;
  } else if (((($246|0))|0)==((1)|0)) {
   $256=((($BodyLongTrailingIdx_0)-(4))|0);
   $257=(($inHigh+($256<<3))|0);
   $258=(+(HEAPF64[(($257)>>3)]));
   $259=(($inLow+($256<<3))|0);
   $260=(+(HEAPF64[(($259)>>3)]));
   $261=($258)-($260);
   $278=$261;
  } else if (((($246|0))|0)==((2)|0)) {
   $263=((($BodyLongTrailingIdx_0)-(4))|0);
   $264=(($inHigh+($263<<3))|0);
   $265=(+(HEAPF64[(($264)>>3)]));
   $266=(($inClose+($263<<3))|0);
   $267=(+(HEAPF64[(($266)>>3)]));
   $268=(($inOpen+($263<<3))|0);
   $269=(+(HEAPF64[(($268)>>3)]));
   $270=$267<$269;
   $_12=($270?$269:$267);
   $271=($265)-($_12);
   $272=($270?$267:$269);
   $273=(($inLow+($263<<3))|0);
   $274=(+(HEAPF64[(($273)>>3)]));
   $275=($272)-($274);
   $276=($271)+($275);
   $278=$276;
  } else {
   $278=0.0;
  }

  $279=($243)-($278);
  $280=($BodyLongPeriodTotal_1)+($279);
  $281=((($i_1)+(1))|0);
  $282=((($BodyLongTrailingIdx_0)+(1))|0);
  $283=($i_1|0)<($endIdx|0);
  if ($283) {
   $BodyLongTrailingIdx_0=$282;$outIdx_0=$outIdx_1;$i_1=$281;$BodyLongPeriodTotal_1=$280;
  } else {
   break;
  }
 }
 $285=((($smax19)+(1))|0);
 $286=((($285)-($smax20))|0);
 HEAP32[(($outNBElement)>>2)]=$286;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLCLOSINGMARUBOZU_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+168)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+336)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 return (($_)|0);
}


function _TA_CDLCLOSINGMARUBOZU($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond18=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$BodyLongPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$smax28=0,$33=0,$smax29=0,$34=0,$35=0;
 var $36=0,$i_024=0,$BodyLongPeriodTotal_023=.0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0,$46=0,$47=.0,$48=0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$57=.0;
 var $58=0,$_=.0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0,$66=.0,$67=.0,$68=0,$69=0,$smax30=0,$i_1_lcssa=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$70=0,$smax=0,$71=0,$i_121=0,$ShadowVeryShortPeriodTotal_020=.0;
 var $74=0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$_8=.0,$94=.0;
 var $95=.0,$96=0,$97=.0,$98=.0,$99=.0,$101=.0,$102=.0,$103=0,$104=0,$BodyLongPeriodTotal_1=.0,$ShadowVeryShortPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyLongTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$106=0,$107=.0,$108=0,$109=.0,$110=.0;
 var $111=.0,$112=0,$113=0,$114=.0,$115=0,$116=0,$117=0,$119=.0,$120=.0,$122=0,$123=0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$133=0,$134=.0,$135=0;
 var $_9=.0,$136=.0,$137=.0,$138=0,$139=.0,$140=.0,$141=.0,$143=.0,$144=.0,$145=0,$146=0,$147=0,$148=0,$149=.0,$150=.0,$151=0,$153=.0,$154=.0,$155=0,$157=0;
 var $158=.0,$159=.0,$160=0,$161=.0,$162=0,$163=0,$164=0,$166=.0,$167=.0,$169=0,$170=0,$172=.0,$173=.0,$175=0,$176=.0,$177=.0,$179=0,$_11=.0,$180=.0,$181=.0;
 var $182=0,$183=.0,$184=.0,$185=.0,$187=.0,$188=.0,$189=0,$190=0,$191=0,$192=0,$193=.0,$194=.0,$195=0,$197=.0,$198=.0,$199=0,$201=0,$202=.0,$203=.0,$204=0;
 var $205=0,$206=.0,$207=0,$208=0,$209=0,$211=.0,$212=.0,$214=0,$215=0,$217=.0,$218=.0,$220=0,$221=.0,$222=.0,$224=0,$225=.0,$226=0,$_13=.0,$227=.0,$228=.0;
 var $229=.0,$230=.0,$232=.0,$233=.0,$234=0,$235=0,$236=0,$237=0,$238=.0,$239=.0,$240=0,$242=.0,$243=.0,$244=0,$245=0,$246=0,$248=0,$outIdx_1=0,$250=0,$251=0;
 var $252=0,$254=.0,$255=.0,$256=.0,$257=.0,$259=0,$260=.0,$261=0,$262=.0,$263=.0,$265=0,$266=.0,$267=.0,$268=.0,$269=0,$_14=.0,$270=.0,$271=.0,$272=0,$273=.0;
 var $274=.0,$275=.0,$277=.0,$278=0,$279=0,$280=0,$282=0,$283=.0,$284=0,$285=.0,$286=.0,$287=.0,$289=0,$290=.0,$291=0,$292=.0,$293=.0,$295=0,$296=.0,$297=0;
 var $298=.0,$299=0,$300=.0,$301=0,$_15=.0,$302=.0,$303=.0,$304=0,$305=.0,$306=.0,$307=.0,$309=.0,$310=.0,$311=.0,$312=0,$313=0,$314=0,$316=.0,$317=.0,$318=.0;
 var $319=.0,$321=0,$322=.0,$323=0,$324=.0,$325=.0,$327=0,$328=.0,$329=.0,$330=.0,$331=0,$_16=.0,$332=.0,$333=.0,$334=0,$335=.0,$336=.0,$337=.0,$339=.0,$340=0;
 var $341=0,$342=0,$344=0,$345=.0,$346=0,$347=.0,$348=.0,$349=.0,$351=0,$352=.0,$353=0,$354=.0,$355=.0,$357=0,$358=.0,$359=0,$360=.0,$361=0,$362=.0,$363=0;
 var $_17=.0,$364=.0,$365=.0,$366=0,$367=.0,$368=.0,$369=.0,$371=.0,$372=.0,$373=.0,$374=0,$375=0,$376=0,$377=0,$379=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond18=$10|$or_cond5_not;
 if ($or_cond18) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLCLOSINGMARUBOZU_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+168)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+336)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+164)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $BodyLongPeriodTotal_023=0.0;$i_024=$20;
  while(1) {


   if (((($27|0))|0)==((1)|0)) {
    $46=(($inHigh+($i_024<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inLow+($i_024<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=($47)-($49);
    $66=$50;
   } else if (((($27|0))|0)==((0)|0)) {
    $39=(($inClose+($i_024<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inOpen+($i_024<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $44=(+(Math_abs((+($43)))));
    $66=$44;
   } else if (((($27|0))|0)==((2)|0)) {
    $52=(($inHigh+($i_024<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inClose+($i_024<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inOpen+($i_024<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=$55<$57;
    $_=($58?$57:$55);
    $59=($53)-($_);
    $60=($58?$55:$57);
    $61=(($inLow+($i_024<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=($60)-($62);
    $64=($59)+($63);
    $66=$64;
   } else {
    $66=0.0;
   }

   $67=($BodyLongPeriodTotal_023)+($66);
   $68=((($i_024)+(1))|0);
   $69=($68|0)<($_startIdx|0);
   if ($69) {
    $BodyLongPeriodTotal_023=$67;$i_024=$68;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$67;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+332)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=($12|0)>($startIdx|0);
  $smax28=($32?$12:$startIdx);
  $33=($12|0)>($startIdx|0);
  $smax29=($33?$12:$startIdx);
  $34=((($smax29)+(1))|0);
  $35=((($34)-($22))|0);
  $36=($smax28|0)>($35|0);
  $ShadowVeryShortPeriodTotal_020=0.0;$i_121=$23;
  while(1) {


   if (((($31|0))|0)==((2)|0)) {
    $87=(($inHigh+($i_121<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inClose+($i_121<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inOpen+($i_121<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$90<$92;
    $_8=($93?$92:$90);
    $94=($88)-($_8);
    $95=($93?$90:$92);
    $96=(($inLow+($i_121<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $101=$99;
   } else if (((($31|0))|0)==((1)|0)) {
    $81=(($inHigh+($i_121<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($i_121<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $101=$85;
   } else if (((($31|0))|0)==((0)|0)) {
    $74=(($inClose+($i_121<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($i_121<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $101=$79;
   } else {
    $101=0.0;
   }

   $102=($ShadowVeryShortPeriodTotal_020)+($101);
   $103=((($i_121)+(1))|0);
   $104=($103|0)<($_startIdx|0);
   if ($104) {
    $ShadowVeryShortPeriodTotal_020=$102;$i_121=$103;
   } else {
    break;
   }
  }
  $smax30=($36?$smax28:$35);
  $ShadowVeryShortPeriodTotal_0_lcssa=$102;$i_1_lcssa=$smax30;
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;$i_1_lcssa=$23;
 }


 $70=($i_1_lcssa|0)>($endIdx|0);
 $smax=($70?$i_1_lcssa:$endIdx);
 $71=((($smax)+(1))|0);
 $ShadowVeryShortTrailingIdx_0=$23;$BodyLongTrailingIdx_0=$20;$outIdx_0=0;$i_2=$i_1_lcssa;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;
 while(1) {






  $106=(($inClose+($i_2<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=(($inOpen+($i_2<<3))|0);
  $109=(+(HEAPF64[(($108)>>3)]));
  $110=($107)-($109);
  $111=(+(Math_abs((+($110)))));
  $112=((HEAP32[((272)>>2)])|0);
  $113=(($112+176)|0);
  $114=(+(HEAPF64[(($113)>>3)]));
  $115=(($112+168)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  $117=($116|0)==0;
  do {
   if ($117) {
    $122=(($112+164)|0);
    $123=((HEAP32[(($122)>>2)])|0);
    if (((($123|0))|0)==((1)|0)) {
     $125=(($inHigh+($i_2<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=(($inLow+($i_2<<3))|0);
     $128=(+(HEAPF64[(($127)>>3)]));
     $129=($126)-($128);
     $143=$129;
     break;
    } else if (((($123|0))|0)==((0)|0)) {
     $143=$111;
     break;
    }
    $131=($123|0)==2;
    if (!($131)) {
     $143=0.0;
     break;
    }
    $133=(($inHigh+($i_2<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=$107<$109;
    $_9=($135?$109:$107);
    $136=($134)-($_9);
    $137=($135?$107:$109);
    $138=(($inLow+($i_2<<3))|0);
    $139=(+(HEAPF64[(($138)>>3)]));
    $140=($137)-($139);
    $141=($136)+($140);
    $143=$141;
   } else {
    $119=(+((($116|0))|0));
    $120=($BodyLongPeriodTotal_1)/($119);
    $143=$120;
   }
  } while(0);

  $144=($114)*($143);
  $145=((HEAP32[((272)>>2)])|0);
  $146=(($145+164)|0);
  $147=((HEAP32[(($146)>>2)])|0);
  $148=($147|0)==2;
  $149=($148?(2.0):(1.0));
  $150=($144)/($149);
  $151=$111>$150;
  do {
   if ($151) {
    $153=(+(HEAPF64[(($106)>>3)]));
    $154=(+(HEAPF64[(($108)>>3)]));
    $155=$153<$154;
    if ($155) {
     label = 37;
    } else {
     $157=(($inHigh+($i_2<<3))|0);
     $158=(+(HEAPF64[(($157)>>3)]));
     $159=($158)-($153);
     $160=(($145+344)|0);
     $161=(+(HEAPF64[(($160)>>3)]));
     $162=(($145+336)|0);
     $163=((HEAP32[(($162)>>2)])|0);
     $164=($163|0)==0;
     do {
      if ($164) {
       $169=(($145+332)|0);
       $170=((HEAP32[(($169)>>2)])|0);
       if (((($170|0))|0)==((0)|0)) {
        $172=($153)-($154);
        $173=(+(Math_abs((+($172)))));
        $187=$173;
        break;
       } else if (((($170|0))|0)==((1)|0)) {
        $175=(($inLow+($i_2<<3))|0);
        $176=(+(HEAPF64[(($175)>>3)]));
        $177=($158)-($176);
        $187=$177;
        break;
       } else if (((($170|0))|0)==((2)|0)) {
        $179=$153<$154;
        $_11=($179?$154:$153);
        $180=($158)-($_11);
        $181=($179?$153:$154);
        $182=(($inLow+($i_2<<3))|0);
        $183=(+(HEAPF64[(($182)>>3)]));
        $184=($181)-($183);
        $185=($180)+($184);
        $187=$185;
        break;
       } else {
        $187=0.0;
        break;
       }
      } else {
       $166=(+((($163|0))|0));
       $167=($ShadowVeryShortPeriodTotal_1)/($166);
       $187=$167;
      }
     } while(0);

     $188=($161)*($187);
     $189=((HEAP32[((272)>>2)])|0);
     $190=(($189+332)|0);
     $191=((HEAP32[(($190)>>2)])|0);
     $192=($191|0)==2;
     $193=($192?(2.0):(1.0));
     $194=($188)/($193);
     $195=$159<$194;
     if (!($195)) {
      label = 37;
     }
    }
    if ((label|0) == 37) {
     label = 0;
     $197=(+(HEAPF64[(($106)>>3)]));
     $198=(+(HEAPF64[(($108)>>3)]));
     $199=$197<$198;
     if (!($199)) {
      label = 46;
      break;
     }
     $201=(($inLow+($i_2<<3))|0);
     $202=(+(HEAPF64[(($201)>>3)]));
     $203=($197)-($202);
     $204=((HEAP32[((272)>>2)])|0);
     $205=(($204+344)|0);
     $206=(+(HEAPF64[(($205)>>3)]));
     $207=(($204+336)|0);
     $208=((HEAP32[(($207)>>2)])|0);
     $209=($208|0)==0;
     do {
      if ($209) {
       $214=(($204+332)|0);
       $215=((HEAP32[(($214)>>2)])|0);
       if (((($215|0))|0)==((0)|0)) {
        $217=($197)-($198);
        $218=(+(Math_abs((+($217)))));
        $232=$218;
        break;
       } else if (((($215|0))|0)==((1)|0)) {
        $220=(($inHigh+($i_2<<3))|0);
        $221=(+(HEAPF64[(($220)>>3)]));
        $222=($221)-($202);
        $232=$222;
        break;
       } else if (((($215|0))|0)==((2)|0)) {
        $224=(($inHigh+($i_2<<3))|0);
        $225=(+(HEAPF64[(($224)>>3)]));
        $226=$197<$198;
        $_13=($226?$198:$197);
        $227=($225)-($_13);
        $228=($226?$197:$198);
        $229=($228)-($202);
        $230=($229)+($227);
        $232=$230;
        break;
       } else {
        $232=0.0;
        break;
       }
      } else {
       $211=(+((($208|0))|0));
       $212=($ShadowVeryShortPeriodTotal_1)/($211);
       $232=$212;
      }
     } while(0);

     $233=($206)*($232);
     $234=((HEAP32[((272)>>2)])|0);
     $235=(($234+332)|0);
     $236=((HEAP32[(($235)>>2)])|0);
     $237=($236|0)==2;
     $238=($237?(2.0):(1.0));
     $239=($233)/($238);
     $240=$203<$239;
     if (!($240)) {
      label = 46;
      break;
     }
    }
    $242=(+(HEAPF64[(($106)>>3)]));
    $243=(+(HEAPF64[(($108)>>3)]));
    $244=$242>=$243;
    $245=($244?100:-100);
    $246=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($246)>>2)]=$245;
   } else {
    label = 46;
   }
  } while(0);
  if ((label|0) == 46) {
   label = 0;
   $248=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($248)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $250=((HEAP32[((272)>>2)])|0);
  $251=(($250+164)|0);
  $252=((HEAP32[(($251)>>2)])|0);
  if (((($252|0))|0)==((1)|0)) {
   $259=(($inHigh+($i_2<<3))|0);
   $260=(+(HEAPF64[(($259)>>3)]));
   $261=(($inLow+($i_2<<3))|0);
   $262=(+(HEAPF64[(($261)>>3)]));
   $263=($260)-($262);
   $277=$263;
  } else if (((($252|0))|0)==((2)|0)) {
   $265=(($inHigh+($i_2<<3))|0);
   $266=(+(HEAPF64[(($265)>>3)]));
   $267=(+(HEAPF64[(($106)>>3)]));
   $268=(+(HEAPF64[(($108)>>3)]));
   $269=$267<$268;
   $_14=($269?$268:$267);
   $270=($266)-($_14);
   $271=($269?$267:$268);
   $272=(($inLow+($i_2<<3))|0);
   $273=(+(HEAPF64[(($272)>>3)]));
   $274=($271)-($273);
   $275=($270)+($274);
   $277=$275;
  } else if (((($252|0))|0)==((0)|0)) {
   $254=(+(HEAPF64[(($106)>>3)]));
   $255=(+(HEAPF64[(($108)>>3)]));
   $256=($254)-($255);
   $257=(+(Math_abs((+($256)))));
   $277=$257;
  } else {
   $277=0.0;
  }

  $278=((HEAP32[((272)>>2)])|0);
  $279=(($278+164)|0);
  $280=((HEAP32[(($279)>>2)])|0);
  if (((($280|0))|0)==((2)|0)) {
   $295=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $296=(+(HEAPF64[(($295)>>3)]));
   $297=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $298=(+(HEAPF64[(($297)>>3)]));
   $299=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $300=(+(HEAPF64[(($299)>>3)]));
   $301=$298<$300;
   $_15=($301?$300:$298);
   $302=($296)-($_15);
   $303=($301?$298:$300);
   $304=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $305=(+(HEAPF64[(($304)>>3)]));
   $306=($303)-($305);
   $307=($302)+($306);
   $309=$307;
  } else if (((($280|0))|0)==((0)|0)) {
   $282=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $283=(+(HEAPF64[(($282)>>3)]));
   $284=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $285=(+(HEAPF64[(($284)>>3)]));
   $286=($283)-($285);
   $287=(+(Math_abs((+($286)))));
   $309=$287;
  } else if (((($280|0))|0)==((1)|0)) {
   $289=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $290=(+(HEAPF64[(($289)>>3)]));
   $291=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $292=(+(HEAPF64[(($291)>>3)]));
   $293=($290)-($292);
   $309=$293;
  } else {
   $309=0.0;
  }

  $310=($277)-($309);
  $311=($BodyLongPeriodTotal_1)+($310);
  $312=((HEAP32[((272)>>2)])|0);
  $313=(($312+332)|0);
  $314=((HEAP32[(($313)>>2)])|0);
  if (((($314|0))|0)==((2)|0)) {
   $327=(($inHigh+($i_2<<3))|0);
   $328=(+(HEAPF64[(($327)>>3)]));
   $329=(+(HEAPF64[(($106)>>3)]));
   $330=(+(HEAPF64[(($108)>>3)]));
   $331=$329<$330;
   $_16=($331?$330:$329);
   $332=($328)-($_16);
   $333=($331?$329:$330);
   $334=(($inLow+($i_2<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=($333)-($335);
   $337=($332)+($336);
   $339=$337;
  } else if (((($314|0))|0)==((0)|0)) {
   $316=(+(HEAPF64[(($106)>>3)]));
   $317=(+(HEAPF64[(($108)>>3)]));
   $318=($316)-($317);
   $319=(+(Math_abs((+($318)))));
   $339=$319;
  } else if (((($314|0))|0)==((1)|0)) {
   $321=(($inHigh+($i_2<<3))|0);
   $322=(+(HEAPF64[(($321)>>3)]));
   $323=(($inLow+($i_2<<3))|0);
   $324=(+(HEAPF64[(($323)>>3)]));
   $325=($322)-($324);
   $339=$325;
  } else {
   $339=0.0;
  }

  $340=((HEAP32[((272)>>2)])|0);
  $341=(($340+332)|0);
  $342=((HEAP32[(($341)>>2)])|0);
  if (((($342|0))|0)==((0)|0)) {
   $344=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $345=(+(HEAPF64[(($344)>>3)]));
   $346=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $347=(+(HEAPF64[(($346)>>3)]));
   $348=($345)-($347);
   $349=(+(Math_abs((+($348)))));
   $371=$349;
  } else if (((($342|0))|0)==((2)|0)) {
   $357=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $358=(+(HEAPF64[(($357)>>3)]));
   $359=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $360=(+(HEAPF64[(($359)>>3)]));
   $361=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $362=(+(HEAPF64[(($361)>>3)]));
   $363=$360<$362;
   $_17=($363?$362:$360);
   $364=($358)-($_17);
   $365=($363?$360:$362);
   $366=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $367=(+(HEAPF64[(($366)>>3)]));
   $368=($365)-($367);
   $369=($364)+($368);
   $371=$369;
  } else if (((($342|0))|0)==((1)|0)) {
   $351=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $352=(+(HEAPF64[(($351)>>3)]));
   $353=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $354=(+(HEAPF64[(($353)>>3)]));
   $355=($352)-($354);
   $371=$355;
  } else {
   $371=0.0;
  }

  $372=($339)-($371);
  $373=($ShadowVeryShortPeriodTotal_1)+($372);
  $374=((($i_2)+(1))|0);
  $375=((($BodyLongTrailingIdx_0)+(1))|0);
  $376=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $377=($i_2|0)<($endIdx|0);
  if ($377) {
   $ShadowVeryShortTrailingIdx_0=$376;$BodyLongTrailingIdx_0=$375;$outIdx_0=$outIdx_1;$i_2=$374;$ShadowVeryShortPeriodTotal_1=$373;$BodyLongPeriodTotal_1=$311;
  } else {
   break;
  }
 }
 $379=((($71)-($i_1_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$379;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLCONCEALBABYSWALL_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+336)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((($3)+(3))|0);
 return (($4)|0);
}


function _TA_CDLCONCEALBABYSWALL($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $ShadowVeryShortPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond10=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond26=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$_promoted=.0,$_promoted29=.0,$_promoted30=.0,$29=0,$smax=0,$30=0,$smax33=0,$31=0,$smax34=0;
 var $33=.0,$34=.0,$35=.0,$i_028=0,$36=0,$37=0,$38=.0,$39=0,$40=.0,$41=.0,$42=.0,$43=0,$44=0,$45=.0,$46=0,$47=.0,$48=.0,$49=.0,$50=0,$51=0;
 var $52=.0,$53=0,$54=.0,$55=.0,$56=.0,$57=0,$58=0,$59=.0,$60=0,$61=.0,$62=.0,$63=0,$64=0,$65=.0,$66=0,$67=.0,$68=.0,$69=0,$70=0,$71=.0;
 var $72=0,$73=.0,$74=.0,$75=0,$76=0,$77=.0,$78=0,$79=.0,$80=0,$81=.0,$82=0,$_=.0,$83=.0,$84=.0,$85=0,$86=.0,$87=.0,$88=.0,$89=0,$90=0;
 var $91=.0,$92=0,$93=.0,$94=0,$95=.0,$96=0,$_11=.0,$97=.0,$98=.0,$99=0,$100=.0,$101=.0,$102=.0,$103=0,$104=0,$105=.0,$106=0,$107=.0,$108=0,$109=.0;
 var $110=0,$_12=.0,$111=.0,$112=.0,$113=0,$114=.0,$115=.0,$116=.0,$_pn=.0,$_pn45=.0,$119=.0,$120=.0,$121=.0,$122=.0,$123=0,$124=0,$i_1=0,$outIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$126=0;
 var $127=0,$128=.0,$129=0,$130=.0,$131=0,$133=0,$134=0,$135=.0,$136=0,$137=.0,$not_7=0,$139=0,$140=0,$141=.0,$142=0,$143=.0,$not_8=0,$145=0,$146=.0,$147=0;
 var $148=.0,$not_9=0,$_13=.0,$150=0,$151=.0,$152=.0,$153=0,$154=0,$155=.0,$156=0,$157=0,$158=0,$160=.0,$161=.0,$162=.0,$164=0,$165=0,$167=.0,$168=.0,$170=0;
 var $171=.0,$172=.0,$174=0,$175=.0,$176=0,$_14=.0,$177=.0,$178=.0,$179=.0,$180=.0,$182=.0,$183=.0,$184=0,$185=0,$186=0,$187=0,$188=.0,$189=.0,$190=0,$192=0;
 var $193=.0,$194=.0,$195=.0,$196=0,$_15=.0,$197=.0,$198=0,$199=.0,$200=0,$201=0,$202=0,$204=.0,$205=.0,$206=.0,$209=.0,$210=.0,$212=.0,$213=.0,$215=.0,$216=.0;
 var $217=.0,$218=.0,$220=.0,$221=.0,$222=0,$223=0,$224=0,$225=0,$226=.0,$227=.0,$228=0,$230=.0,$231=.0,$232=0,$_17=.0,$233=0,$234=.0,$235=.0,$236=0,$237=.0;
 var $238=0,$239=0,$240=0,$242=.0,$243=.0,$244=.0,$247=.0,$248=.0,$250=0,$251=.0,$252=.0,$254=0,$255=.0,$_18=.0,$256=.0,$257=.0,$259=.0,$260=.0,$261=0,$262=0;
 var $263=0,$264=0,$265=.0,$266=.0,$267=0,$269=0,$270=.0,$271=.0,$272=.0,$273=0,$_19=.0,$274=.0,$275=0,$276=.0,$277=0,$278=0,$279=0,$281=.0,$282=.0,$283=.0;
 var $286=.0,$287=.0,$289=.0,$290=.0,$292=.0,$293=.0,$294=.0,$295=.0,$297=.0,$298=.0,$299=0,$300=0,$301=0,$302=0,$303=.0,$304=.0,$305=0,$307=.0,$308=.0,$309=0;
 var $_21=.0,$310=.0,$311=.0,$312=0,$313=.0,$314=0,$316=0,$317=.0,$318=0,$_22=.0,$319=.0,$320=0,$321=.0,$322=0,$323=0,$324=0,$326=.0,$327=.0,$328=.0,$331=.0;
 var $332=.0,$334=0,$335=.0,$336=.0,$338=.0,$339=0,$340=.0,$341=.0,$342=.0,$344=.0,$345=.0,$346=0,$347=0,$348=0,$349=0,$350=.0,$351=.0,$352=0,$354=.0,$355=.0;
 var $356=0,$358=0,$359=.0,$360=0,$362=0,$363=.0,$364=0,$365=.0,$366=0,$368=0,$370=0,$372=0,$373=0,$374=0,$totIdx_027=0,$376=0,$377=0,$378=.0,$379=0,$380=.0;
 var $381=.0,$382=.0,$383=0,$384=0,$385=.0,$386=0,$387=.0,$388=.0,$389=.0,$390=0,$391=0,$392=.0,$393=0,$394=.0,$395=.0,$396=0,$397=0,$398=.0,$399=0,$400=.0;
 var $401=.0,$402=0,$403=0,$404=.0,$405=0,$406=.0,$407=0,$408=.0,$409=0,$_24=.0,$410=.0,$411=.0,$412=0,$413=.0,$414=.0,$415=.0,$416=0,$417=0,$418=.0,$419=0;
 var $420=.0,$421=0,$422=.0,$423=0,$_25=.0,$424=.0,$425=.0,$426=0,$427=.0,$428=.0,$429=.0,$431=.0,$432=.0,$433=.0,$434=0,$435=.0,$436=.0,$437=0,$438=0,$outIdx_1=0;
 var $440=0,$441=0,$442=0,$444=0,$445=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $ShadowVeryShortPeriodTotal=((sp)|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond10=$3|$4;
 if ($or_cond10) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond26=$10|$or_cond5_not;
 if ($or_cond26) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDLCONCEALBABYSWALL_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=(($ShadowVeryShortPeriodTotal+24)|0);
 $18=(($ShadowVeryShortPeriodTotal+16)|0);
 $19=(($ShadowVeryShortPeriodTotal+8)|0);
 $20=$19;
 _memset((((($20)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $21=((HEAP32[((272)>>2)])|0);
 $22=(($21+336)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=((($_startIdx)-($23))|0);
 $25=($23|0)>0;
 if ($25) {
  $26=((HEAP32[((272)>>2)])|0);
  $27=(($26+332)|0);
  $28=((HEAP32[(($27)>>2)])|0);
  $_promoted=(+(HEAPF64[(($17)>>3)]));
  $_promoted29=(+(HEAPF64[(($18)>>3)]));
  $_promoted30=(+(HEAPF64[(($19)>>3)]));
  $i_028=$24;$35=$_promoted;$34=$_promoted29;$33=$_promoted30;
  while(1) {




   if (((($28|0))|0)==((0)|0)) {
    $36=((($i_028)-(3))|0);
    $37=(($inClose+($36<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=(($inOpen+($36<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=($38)-($40);
    $42=(+(Math_abs((+($41)))));
    $43=((($i_028)-(2))|0);
    $44=(($inClose+($43<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=(($inOpen+($43<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=($45)-($47);
    $49=(+(Math_abs((+($48)))));
    $50=((($i_028)-(1))|0);
    $51=(($inClose+($50<<3))|0);
    $52=(+(HEAPF64[(($51)>>3)]));
    $53=(($inOpen+($50<<3))|0);
    $54=(+(HEAPF64[(($53)>>3)]));
    $55=($52)-($54);
    $56=(+(Math_abs((+($55)))));
    $119=$56;$_pn45=$42;$_pn=$49;
   } else if (((($28|0))|0)==((1)|0)) {
    $57=((($i_028)-(3))|0);
    $58=(($inHigh+($57<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=(($inLow+($57<<3))|0);
    $61=(+(HEAPF64[(($60)>>3)]));
    $62=($59)-($61);
    $63=((($i_028)-(2))|0);
    $64=(($inHigh+($63<<3))|0);
    $65=(+(HEAPF64[(($64)>>3)]));
    $66=(($inLow+($63<<3))|0);
    $67=(+(HEAPF64[(($66)>>3)]));
    $68=($65)-($67);
    $69=((($i_028)-(1))|0);
    $70=(($inHigh+($69<<3))|0);
    $71=(+(HEAPF64[(($70)>>3)]));
    $72=(($inLow+($69<<3))|0);
    $73=(+(HEAPF64[(($72)>>3)]));
    $74=($71)-($73);
    $119=$74;$_pn45=$62;$_pn=$68;
   } else if (((($28|0))|0)==((2)|0)) {
    $75=((($i_028)-(3))|0);
    $76=(($inHigh+($75<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=(($inClose+($75<<3))|0);
    $79=(+(HEAPF64[(($78)>>3)]));
    $80=(($inOpen+($75<<3))|0);
    $81=(+(HEAPF64[(($80)>>3)]));
    $82=$79<$81;
    $_=($82?$81:$79);
    $83=($77)-($_);
    $84=($82?$79:$81);
    $85=(($inLow+($75<<3))|0);
    $86=(+(HEAPF64[(($85)>>3)]));
    $87=($84)-($86);
    $88=($83)+($87);
    $89=((($i_028)-(2))|0);
    $90=(($inHigh+($89<<3))|0);
    $91=(+(HEAPF64[(($90)>>3)]));
    $92=(($inClose+($89<<3))|0);
    $93=(+(HEAPF64[(($92)>>3)]));
    $94=(($inOpen+($89<<3))|0);
    $95=(+(HEAPF64[(($94)>>3)]));
    $96=$93<$95;
    $_11=($96?$95:$93);
    $97=($91)-($_11);
    $98=($96?$93:$95);
    $99=(($inLow+($89<<3))|0);
    $100=(+(HEAPF64[(($99)>>3)]));
    $101=($98)-($100);
    $102=($97)+($101);
    $103=((($i_028)-(1))|0);
    $104=(($inHigh+($103<<3))|0);
    $105=(+(HEAPF64[(($104)>>3)]));
    $106=(($inClose+($103<<3))|0);
    $107=(+(HEAPF64[(($106)>>3)]));
    $108=(($inOpen+($103<<3))|0);
    $109=(+(HEAPF64[(($108)>>3)]));
    $110=$107<$109;
    $_12=($110?$109:$107);
    $111=($105)-($_12);
    $112=($110?$107:$109);
    $113=(($inLow+($103<<3))|0);
    $114=(+(HEAPF64[(($113)>>3)]));
    $115=($112)-($114);
    $116=($111)+($115);
    $119=$116;$_pn45=$88;$_pn=$102;
   } else {
    $119=0.0;$_pn45=0.0;$_pn=0.0;
   }



   $120=($_pn45)+($35);
   $121=($_pn)+($34);
   $122=($119)+($33);
   $123=((($i_028)+(1))|0);
   $124=($123|0)<($_startIdx|0);
   if ($124) {
    $i_028=$123;$35=$120;$34=$121;$33=$122;
   } else {
    break;
   }
  }
  HEAPF64[(($17)>>3)]=$120;
  HEAPF64[(($18)>>3)]=$121;
  HEAPF64[(($19)>>3)]=$122;
 }
 $29=($12|0)>($endIdx|0);
 $smax=($29?$12:$endIdx);
 $30=($smax|0)>($startIdx|0);
 $smax33=($30?$smax:$startIdx);
 $31=($12|0)>($startIdx|0);
 $smax34=($31?$12:$startIdx);
 $ShadowVeryShortTrailingIdx_0=$24;$outIdx_0=0;$i_1=$_startIdx;
 while(1) {



  $126=((($i_1)-(3))|0);
  $127=(($inClose+($126<<3))|0);
  $128=(+(HEAPF64[(($127)>>3)]));
  $129=(($inOpen+($126<<3))|0);
  $130=(+(HEAPF64[(($129)>>3)]));
  $131=$128>=$130;
  do {
   if ($131) {
    label = 60;
   } else {
    $133=((($i_1)-(2))|0);
    $134=(($inClose+($133<<3))|0);
    $135=(+(HEAPF64[(($134)>>3)]));
    $136=(($inOpen+($133<<3))|0);
    $137=(+(HEAPF64[(($136)>>3)]));
    $not_7=$135<$137;
    if (!($not_7)) {
     label = 60;
     break;
    }
    $139=((($i_1)-(1))|0);
    $140=(($inClose+($139<<3))|0);
    $141=(+(HEAPF64[(($140)>>3)]));
    $142=(($inOpen+($139<<3))|0);
    $143=(+(HEAPF64[(($142)>>3)]));
    $not_8=$141<$143;
    if (!($not_8)) {
     label = 60;
     break;
    }
    $145=(($inClose+($i_1<<3))|0);
    $146=(+(HEAPF64[(($145)>>3)]));
    $147=(($inOpen+($i_1<<3))|0);
    $148=(+(HEAPF64[(($147)>>3)]));
    $not_9=$146<$148;
    if (!($not_9)) {
     label = 60;
     break;
    }
    $_13=($131?$130:$128);
    $150=(($inLow+($126<<3))|0);
    $151=(+(HEAPF64[(($150)>>3)]));
    $152=($_13)-($151);
    $153=((HEAP32[((272)>>2)])|0);
    $154=(($153+344)|0);
    $155=(+(HEAPF64[(($154)>>3)]));
    $156=(($153+336)|0);
    $157=((HEAP32[(($156)>>2)])|0);
    $158=($157|0)==0;
    do {
     if ($158) {
      $164=(($153+332)|0);
      $165=((HEAP32[(($164)>>2)])|0);
      if (((($165|0))|0)==((2)|0)) {
       $174=(($inHigh+($126<<3))|0);
       $175=(+(HEAPF64[(($174)>>3)]));
       $176=$128<$130;
       $_14=($176?$130:$128);
       $177=($175)-($_14);
       $178=($176?$128:$130);
       $179=($178)-($151);
       $180=($179)+($177);
       $182=$180;
       break;
      } else if (((($165|0))|0)==((0)|0)) {
       $167=($128)-($130);
       $168=(+(Math_abs((+($167)))));
       $182=$168;
       break;
      } else if (((($165|0))|0)==((1)|0)) {
       $170=(($inHigh+($126<<3))|0);
       $171=(+(HEAPF64[(($170)>>3)]));
       $172=($171)-($151);
       $182=$172;
       break;
      } else {
       $182=0.0;
       break;
      }
     } else {
      $160=(+((($157|0))|0));
      $161=(+(HEAPF64[(($17)>>3)]));
      $162=($161)/($160);
      $182=$162;
     }
    } while(0);

    $183=($155)*($182);
    $184=((HEAP32[((272)>>2)])|0);
    $185=(($184+332)|0);
    $186=((HEAP32[(($185)>>2)])|0);
    $187=($186|0)==2;
    $188=($187?(2.0):(1.0));
    $189=($183)/($188);
    $190=$152<$189;
    if (!($190)) {
     label = 60;
     break;
    }
    $192=(($inHigh+($126<<3))|0);
    $193=(+(HEAPF64[(($192)>>3)]));
    $194=(+(HEAPF64[(($127)>>3)]));
    $195=(+(HEAPF64[(($129)>>3)]));
    $196=$194<$195;
    $_15=($196?$195:$194);
    $197=($193)-($_15);
    $198=(($184+344)|0);
    $199=(+(HEAPF64[(($198)>>3)]));
    $200=(($184+336)|0);
    $201=((HEAP32[(($200)>>2)])|0);
    $202=($201|0)==0;
    do {
     if ($202) {
      if (((($186|0))|0)==((0)|0)) {
       $209=($194)-($195);
       $210=(+(Math_abs((+($209)))));
       $220=$210;
       break;
      } else if (((($186|0))|0)==((1)|0)) {
       $212=(+(HEAPF64[(($150)>>3)]));
       $213=($193)-($212);
       $220=$213;
       break;
      } else if (((($186|0))|0)==((2)|0)) {
       $215=($196?$194:$195);
       $216=(+(HEAPF64[(($150)>>3)]));
       $217=($215)-($216);
       $218=($197)+($217);
       $220=$218;
       break;
      } else {
       $220=0.0;
       break;
      }
     } else {
      $204=(+((($201|0))|0));
      $205=(+(HEAPF64[(($17)>>3)]));
      $206=($205)/($204);
      $220=$206;
     }
    } while(0);

    $221=($199)*($220);
    $222=((HEAP32[((272)>>2)])|0);
    $223=(($222+332)|0);
    $224=((HEAP32[(($223)>>2)])|0);
    $225=($224|0)==2;
    $226=($225?(2.0):(1.0));
    $227=($221)/($226);
    $228=$197<$227;
    if (!($228)) {
     label = 60;
     break;
    }
    $230=(+(HEAPF64[(($134)>>3)]));
    $231=(+(HEAPF64[(($136)>>3)]));
    $232=$230<$231;
    $_17=($232?$230:$231);
    $233=(($inLow+($133<<3))|0);
    $234=(+(HEAPF64[(($233)>>3)]));
    $235=($_17)-($234);
    $236=(($222+344)|0);
    $237=(+(HEAPF64[(($236)>>3)]));
    $238=(($222+336)|0);
    $239=((HEAP32[(($238)>>2)])|0);
    $240=($239|0)==0;
    do {
     if ($240) {
      if (((($224|0))|0)==((0)|0)) {
       $247=($230)-($231);
       $248=(+(Math_abs((+($247)))));
       $259=$248;
       break;
      } else if (((($224|0))|0)==((1)|0)) {
       $250=(($inHigh+($133<<3))|0);
       $251=(+(HEAPF64[(($250)>>3)]));
       $252=($251)-($234);
       $259=$252;
       break;
      } else if (((($224|0))|0)==((2)|0)) {
       $254=(($inHigh+($133<<3))|0);
       $255=(+(HEAPF64[(($254)>>3)]));
       $_18=($232?$231:$230);
       $256=($255)-($_18);
       $257=($235)+($256);
       $259=$257;
       break;
      } else {
       $259=0.0;
       break;
      }
     } else {
      $242=(+((($239|0))|0));
      $243=(+(HEAPF64[(($18)>>3)]));
      $244=($243)/($242);
      $259=$244;
     }
    } while(0);

    $260=($237)*($259);
    $261=((HEAP32[((272)>>2)])|0);
    $262=(($261+332)|0);
    $263=((HEAP32[(($262)>>2)])|0);
    $264=($263|0)==2;
    $265=($264?(2.0):(1.0));
    $266=($260)/($265);
    $267=$235<$266;
    if (!($267)) {
     label = 60;
     break;
    }
    $269=(($inHigh+($133<<3))|0);
    $270=(+(HEAPF64[(($269)>>3)]));
    $271=(+(HEAPF64[(($134)>>3)]));
    $272=(+(HEAPF64[(($136)>>3)]));
    $273=$271<$272;
    $_19=($273?$272:$271);
    $274=($270)-($_19);
    $275=(($261+344)|0);
    $276=(+(HEAPF64[(($275)>>3)]));
    $277=(($261+336)|0);
    $278=((HEAP32[(($277)>>2)])|0);
    $279=($278|0)==0;
    do {
     if ($279) {
      if (((($263|0))|0)==((0)|0)) {
       $286=($271)-($272);
       $287=(+(Math_abs((+($286)))));
       $297=$287;
       break;
      } else if (((($263|0))|0)==((1)|0)) {
       $289=(+(HEAPF64[(($233)>>3)]));
       $290=($270)-($289);
       $297=$290;
       break;
      } else if (((($263|0))|0)==((2)|0)) {
       $292=($273?$271:$272);
       $293=(+(HEAPF64[(($233)>>3)]));
       $294=($292)-($293);
       $295=($274)+($294);
       $297=$295;
       break;
      } else {
       $297=0.0;
       break;
      }
     } else {
      $281=(+((($278|0))|0));
      $282=(+(HEAPF64[(($18)>>3)]));
      $283=($282)/($281);
      $297=$283;
     }
    } while(0);

    $298=($276)*($297);
    $299=((HEAP32[((272)>>2)])|0);
    $300=(($299+332)|0);
    $301=((HEAP32[(($300)>>2)])|0);
    $302=($301|0)==2;
    $303=($302?(2.0):(1.0));
    $304=($298)/($303);
    $305=$274<$304;
    if (!($305)) {
     label = 60;
     break;
    }
    $307=(+(HEAPF64[(($142)>>3)]));
    $308=(+(HEAPF64[(($140)>>3)]));
    $309=$307>$308;
    $_21=($309?$307:$308);
    $310=(+(HEAPF64[(($136)>>3)]));
    $311=(+(HEAPF64[(($134)>>3)]));
    $312=$310<$311;
    $313=($312?$310:$311);
    $314=$_21<$313;
    if (!($314)) {
     label = 60;
     break;
    }
    $316=(($inHigh+($139<<3))|0);
    $317=(+(HEAPF64[(($316)>>3)]));
    $318=$308<$307;
    $_22=($318?$307:$308);
    $319=($317)-($_22);
    $320=(($299+344)|0);
    $321=(+(HEAPF64[(($320)>>3)]));
    $322=(($299+336)|0);
    $323=((HEAP32[(($322)>>2)])|0);
    $324=($323|0)==0;
    do {
     if ($324) {
      if (((($301|0))|0)==((0)|0)) {
       $331=($308)-($307);
       $332=(+(Math_abs((+($331)))));
       $344=$332;
       break;
      } else if (((($301|0))|0)==((1)|0)) {
       $334=(($inLow+($139<<3))|0);
       $335=(+(HEAPF64[(($334)>>3)]));
       $336=($317)-($335);
       $344=$336;
       break;
      } else if (((($301|0))|0)==((2)|0)) {
       $338=($318?$308:$307);
       $339=(($inLow+($139<<3))|0);
       $340=(+(HEAPF64[(($339)>>3)]));
       $341=($338)-($340);
       $342=($319)+($341);
       $344=$342;
       break;
      } else {
       $344=0.0;
       break;
      }
     } else {
      $326=(+((($323|0))|0));
      $327=(+(HEAPF64[(($19)>>3)]));
      $328=($327)/($326);
      $344=$328;
     }
    } while(0);

    $345=($321)*($344);
    $346=((HEAP32[((272)>>2)])|0);
    $347=(($346+332)|0);
    $348=((HEAP32[(($347)>>2)])|0);
    $349=($348|0)==2;
    $350=($349?(2.0):(1.0));
    $351=($345)/($350);
    $352=$319>$351;
    if (!($352)) {
     label = 60;
     break;
    }
    $354=(+(HEAPF64[(($316)>>3)]));
    $355=(+(HEAPF64[(($134)>>3)]));
    $356=$354>$355;
    if (!($356)) {
     label = 60;
     break;
    }
    $358=(($inHigh+($i_1<<3))|0);
    $359=(+(HEAPF64[(($358)>>3)]));
    $360=$359>$354;
    if (!($360)) {
     label = 60;
     break;
    }
    $362=(($inLow+($i_1<<3))|0);
    $363=(+(HEAPF64[(($362)>>3)]));
    $364=(($inLow+($139<<3))|0);
    $365=(+(HEAPF64[(($364)>>3)]));
    $366=$363<$365;
    if (!($366)) {
     label = 60;
     break;
    }
    $368=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($368)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 60) {
   label = 0;
   $370=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($370)>>2)]=0;
  }
  $372=((HEAP32[((272)>>2)])|0);
  $373=(($372+332)|0);
  $374=((HEAP32[(($373)>>2)])|0);
  $totIdx_027=3;
  while(1) {

   if (((($374|0))|0)==((0)|0)) {
    $376=((($i_1)-($totIdx_027))|0);
    $377=(($inClose+($376<<3))|0);
    $378=(+(HEAPF64[(($377)>>3)]));
    $379=(($inOpen+($376<<3))|0);
    $380=(+(HEAPF64[(($379)>>3)]));
    $381=($378)-($380);
    $382=(+(Math_abs((+($381)))));
    $383=((($ShadowVeryShortTrailingIdx_0)-($totIdx_027))|0);
    $384=(($inClose+($383<<3))|0);
    $385=(+(HEAPF64[(($384)>>3)]));
    $386=(($inOpen+($383<<3))|0);
    $387=(+(HEAPF64[(($386)>>3)]));
    $388=($385)-($387);
    $389=(+(Math_abs((+($388)))));
    $432=$389;$431=$382;
   } else if (((($374|0))|0)==((1)|0)) {
    $390=((($i_1)-($totIdx_027))|0);
    $391=(($inHigh+($390<<3))|0);
    $392=(+(HEAPF64[(($391)>>3)]));
    $393=(($inLow+($390<<3))|0);
    $394=(+(HEAPF64[(($393)>>3)]));
    $395=($392)-($394);
    $396=((($ShadowVeryShortTrailingIdx_0)-($totIdx_027))|0);
    $397=(($inHigh+($396<<3))|0);
    $398=(+(HEAPF64[(($397)>>3)]));
    $399=(($inLow+($396<<3))|0);
    $400=(+(HEAPF64[(($399)>>3)]));
    $401=($398)-($400);
    $432=$401;$431=$395;
   } else if (((($374|0))|0)==((2)|0)) {
    $402=((($i_1)-($totIdx_027))|0);
    $403=(($inHigh+($402<<3))|0);
    $404=(+(HEAPF64[(($403)>>3)]));
    $405=(($inClose+($402<<3))|0);
    $406=(+(HEAPF64[(($405)>>3)]));
    $407=(($inOpen+($402<<3))|0);
    $408=(+(HEAPF64[(($407)>>3)]));
    $409=$406<$408;
    $_24=($409?$408:$406);
    $410=($404)-($_24);
    $411=($409?$406:$408);
    $412=(($inLow+($402<<3))|0);
    $413=(+(HEAPF64[(($412)>>3)]));
    $414=($411)-($413);
    $415=($410)+($414);
    $416=((($ShadowVeryShortTrailingIdx_0)-($totIdx_027))|0);
    $417=(($inHigh+($416<<3))|0);
    $418=(+(HEAPF64[(($417)>>3)]));
    $419=(($inClose+($416<<3))|0);
    $420=(+(HEAPF64[(($419)>>3)]));
    $421=(($inOpen+($416<<3))|0);
    $422=(+(HEAPF64[(($421)>>3)]));
    $423=$420<$422;
    $_25=($423?$422:$420);
    $424=($418)-($_25);
    $425=($423?$420:$422);
    $426=(($inLow+($416<<3))|0);
    $427=(+(HEAPF64[(($426)>>3)]));
    $428=($425)-($427);
    $429=($424)+($428);
    $432=$429;$431=$415;
   } else {
    $432=0.0;$431=0.0;
   }


   $433=($431)-($432);
   $434=(($ShadowVeryShortPeriodTotal+($totIdx_027<<3))|0);
   $435=(+(HEAPF64[(($434)>>3)]));
   $436=($435)+($433);
   HEAPF64[(($434)>>3)]=$436;
   $437=((($totIdx_027)-(1))|0);
   $438=($437|0)>0;
   if ($438) {
    $totIdx_027=$437;
   } else {
    break;
   }
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $440=((($i_1)+(1))|0);
  $441=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $442=($i_1|0)<($endIdx|0);
  if ($442) {
   $ShadowVeryShortTrailingIdx_0=$441;$outIdx_0=$outIdx_1;$i_1=$440;
  } else {
   break;
  }
 }
 $444=((($smax33)+(1))|0);
 $445=((($444)-($smax34))|0);
 HEAP32[(($outNBElement)>>2)]=$445;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDLCOUNTERATTACK_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+408)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(1))|0);
 return (($7)|0);
}


function _TA_CDLCOUNTERATTACK($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $BodyLongPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond18=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$EqualPeriodTotal_0_lcssa=.0,$32=0,$33=0,$34=0,$35=0,$_promoted=.0;
 var $_promoted22=.0,$i_025=0,$EqualPeriodTotal_024=.0,$38=0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0,$46=0,$47=0,$48=.0,$49=0,$50=.0,$51=.0,$53=0,$54=0,$55=.0,$56=0;
 var $57=.0,$58=0,$59=.0,$60=0,$_=.0,$61=.0,$62=.0,$63=0,$64=.0,$65=.0,$66=.0,$68=.0,$69=.0,$70=0,$71=0,$72=0,$smax=0,$73=0,$smax27=0,$74=0;
 var $smax28=0,$76=.0,$77=.0,$i_121=0,$78=0,$79=0,$80=.0,$81=0,$82=.0,$83=.0,$84=.0,$85=0,$86=.0,$87=0,$88=.0,$89=.0,$90=.0,$91=0,$92=0,$93=.0;
 var $94=0,$95=.0,$96=.0,$97=0,$98=.0,$99=0,$100=.0,$101=.0,$102=0,$103=0,$104=.0,$105=0,$106=.0,$107=0,$108=.0,$109=0,$_8=.0,$110=.0,$111=.0,$112=0;
 var $113=.0,$114=.0,$115=.0,$116=0,$117=.0,$118=0,$119=.0,$120=0,$121=.0,$122=0,$_9=.0,$123=.0,$124=.0,$125=0,$126=.0,$127=.0,$128=.0,$_pn=.0,$131=.0,$132=.0;
 var $133=.0,$134=0,$135=0,$EqualPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$EqualTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$137=0,$138=0,$139=.0,$140=0,$141=.0,$142=0,$143=0,$144=0,$145=.0,$146=0,$147=.0,$148=0;
 var $149=0,$150=0,$152=.0,$153=.0,$154=0,$155=0,$156=.0,$157=0,$158=0,$159=0,$161=.0,$162=.0,$163=.0,$165=0,$166=0,$168=0,$169=.0,$170=0,$171=.0,$172=.0;
 var $174=0,$176=0,$177=.0,$_10=.0,$178=.0,$179=0,$180=.0,$181=0,$182=.0,$183=.0,$184=.0,$186=.0,$187=.0,$188=0,$189=0,$190=0,$191=0,$192=.0,$193=.0,$194=0;
 var $196=.0,$197=.0,$198=.0,$199=.0,$200=0,$201=.0,$202=0,$203=0,$204=0,$206=.0,$207=.0,$208=.0,$211=0,$212=.0,$213=0,$214=.0,$215=.0,$218=0,$219=.0,$220=0;
 var $_11=.0,$221=.0,$222=.0,$223=0,$224=.0,$225=.0,$226=.0,$228=.0,$229=.0,$230=0,$231=0,$232=0,$233=0,$234=.0,$235=.0,$236=0,$238=.0,$239=.0,$240=0,$241=.0;
 var $242=0,$243=0,$244=0,$246=.0,$247=.0,$249=0,$250=0,$252=.0,$253=.0,$254=.0,$256=0,$257=.0,$258=0,$259=.0,$260=.0,$262=0,$263=.0,$264=.0,$265=0,$_12=.0;
 var $266=.0,$267=.0,$268=0,$269=.0,$270=.0,$271=.0,$273=.0,$274=.0,$275=0,$276=0,$277=0,$278=0,$279=.0,$280=.0,$281=.0,$282=0,$284=.0,$285=.0,$286=0,$287=.0;
 var $288=0,$289=0,$290=0,$292=.0,$293=.0,$296=.0,$297=.0,$298=.0,$300=0,$301=.0,$302=0,$303=.0,$304=.0,$307=0,$308=.0,$309=.0,$310=0,$_13=.0,$311=.0,$312=.0;
 var $313=0,$314=.0,$315=.0,$316=.0,$318=.0,$319=.0,$320=0,$321=0,$322=0,$323=0,$324=.0,$325=.0,$326=.0,$327=0,$329=.0,$330=.0,$331=0,$332=0,$333=0,$335=0;
 var $outIdx_1=0,$337=0,$338=0,$339=0,$341=.0,$342=.0,$343=.0,$344=.0,$346=0,$347=.0,$348=0,$349=.0,$350=.0,$352=0,$353=.0,$354=.0,$355=.0,$356=0,$_14=.0,$357=.0;
 var $358=.0,$359=0,$360=.0,$361=.0,$362=.0,$364=.0,$365=0,$366=0,$367=0,$369=0,$370=0,$371=.0,$372=0,$373=.0,$374=.0,$375=.0,$377=0,$378=0,$379=.0,$380=0;
 var $381=.0,$382=.0,$384=0,$385=0,$386=.0,$387=0,$388=.0,$389=0,$390=.0,$391=0,$_15=.0,$392=.0,$393=.0,$394=0,$395=.0,$396=.0,$397=.0,$399=.0,$400=.0,$401=0;
 var $402=0,$403=0,$404=0,$405=0,$406=.0,$407=0,$408=.0,$409=.0,$410=.0,$411=0,$412=0,$413=.0,$414=0,$415=.0,$416=.0,$417=.0,$418=0,$419=0,$420=.0,$421=0;
 var $422=.0,$423=.0,$424=0,$425=0,$426=.0,$427=0,$428=.0,$429=.0,$430=0,$431=0,$432=.0,$433=0,$434=.0,$435=0,$436=.0,$437=0,$_16=.0,$438=.0,$439=.0,$440=0;
 var $441=.0,$442=.0,$443=.0,$444=0,$445=0,$446=.0,$447=0,$448=.0,$449=0,$450=.0,$451=0,$_17=.0,$452=.0,$453=.0,$454=0,$455=.0,$456=.0,$457=.0,$459=.0,$460=.0;
 var $461=.0,$462=0,$463=.0,$464=.0,$466=0,$467=0,$_0=0,$469=0,$470=.0,$471=0,$472=.0,$473=0,$474=.0,$475=0,$_16_1=.0,$476=.0,$477=.0,$478=0,$479=.0,$480=.0;
 var $481=.0,$482=0,$483=.0,$484=0,$485=.0,$486=0,$487=.0,$488=0,$_17_1=.0,$489=.0,$490=.0,$491=0,$492=.0,$493=.0,$494=.0,$495=0,$496=.0,$497=0,$498=.0,$499=.0;
 var $500=0,$501=.0,$502=0,$503=.0,$504=.0,$505=0,$506=.0,$507=0,$508=.0,$509=.0,$510=.0,$511=0,$512=.0,$513=0,$514=.0,$515=.0,$516=.0,$518=.0,$519=.0,$520=.0;
 var $521=0,$522=.0,$523=.0,$524=.0,$525=0,$526=0,$527=0,$528=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $BodyLongPeriodTotal=((sp)|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond18=$10|$or_cond5_not;
 if ($or_cond18) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDLCOUNTERATTACK_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+408)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($BodyLongPeriodTotal+8)|0);
 $22=(($BodyLongPeriodTotal)|0);
 $23=$BodyLongPeriodTotal;
 _memset((((($23)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 $24=((HEAP32[((272)>>2)])|0);
 $25=(($24+168)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=((($_startIdx)-($26))|0);
 $28=($19|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+404)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $EqualPeriodTotal_024=0.0;$i_025=$20;
  while(1) {


   if (((($31|0))|0)==((1)|0)) {
    $46=((($i_025)-(1))|0);
    $47=(($inHigh+($46<<3))|0);
    $48=(+(HEAPF64[(($47)>>3)]));
    $49=(($inLow+($46<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=($48)-($50);
    $68=$51;
   } else if (((($31|0))|0)==((2)|0)) {
    $53=((($i_025)-(1))|0);
    $54=(($inHigh+($53<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inClose+($53<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=(($inOpen+($53<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=$57<$59;
    $_=($60?$59:$57);
    $61=($55)-($_);
    $62=($60?$57:$59);
    $63=(($inLow+($53<<3))|0);
    $64=(+(HEAPF64[(($63)>>3)]));
    $65=($62)-($64);
    $66=($61)+($65);
    $68=$66;
   } else if (((($31|0))|0)==((0)|0)) {
    $38=((($i_025)-(1))|0);
    $39=(($inClose+($38<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inOpen+($38<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $44=(+(Math_abs((+($43)))));
    $68=$44;
   } else {
    $68=0.0;
   }

   $69=($EqualPeriodTotal_024)+($68);
   $70=((($i_025)+(1))|0);
   $71=($70|0)<($_startIdx|0);
   if ($71) {
    $EqualPeriodTotal_024=$69;$i_025=$70;
   } else {
    $EqualPeriodTotal_0_lcssa=$69;
    break;
   }
  }
 } else {
  $EqualPeriodTotal_0_lcssa=0.0;
 }

 $32=($26|0)>0;
 if ($32) {
  $33=((HEAP32[((272)>>2)])|0);
  $34=(($33+164)|0);
  $35=((HEAP32[(($34)>>2)])|0);
  $_promoted=(+(HEAPF64[(($21)>>3)]));
  $_promoted22=(+(HEAPF64[(($22)>>3)]));
  $i_121=$27;$77=$_promoted;$76=$_promoted22;
  while(1) {



   if (((($35|0))|0)==((2)|0)) {
    $102=((($i_121)-(1))|0);
    $103=(($inHigh+($102<<3))|0);
    $104=(+(HEAPF64[(($103)>>3)]));
    $105=(($inClose+($102<<3))|0);
    $106=(+(HEAPF64[(($105)>>3)]));
    $107=(($inOpen+($102<<3))|0);
    $108=(+(HEAPF64[(($107)>>3)]));
    $109=$106<$108;
    $_8=($109?$108:$106);
    $110=($104)-($_8);
    $111=($109?$106:$108);
    $112=(($inLow+($102<<3))|0);
    $113=(+(HEAPF64[(($112)>>3)]));
    $114=($111)-($113);
    $115=($110)+($114);
    $116=(($inHigh+($i_121<<3))|0);
    $117=(+(HEAPF64[(($116)>>3)]));
    $118=(($inClose+($i_121<<3))|0);
    $119=(+(HEAPF64[(($118)>>3)]));
    $120=(($inOpen+($i_121<<3))|0);
    $121=(+(HEAPF64[(($120)>>3)]));
    $122=$119<$121;
    $_9=($122?$121:$119);
    $123=($117)-($_9);
    $124=($122?$119:$121);
    $125=(($inLow+($i_121<<3))|0);
    $126=(+(HEAPF64[(($125)>>3)]));
    $127=($124)-($126);
    $128=($123)+($127);
    $131=$128;$_pn=$115;
   } else if (((($35|0))|0)==((0)|0)) {
    $78=((($i_121)-(1))|0);
    $79=(($inClose+($78<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=(($inOpen+($78<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=($80)-($82);
    $84=(+(Math_abs((+($83)))));
    $85=(($inClose+($i_121<<3))|0);
    $86=(+(HEAPF64[(($85)>>3)]));
    $87=(($inOpen+($i_121<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=($86)-($88);
    $90=(+(Math_abs((+($89)))));
    $131=$90;$_pn=$84;
   } else if (((($35|0))|0)==((1)|0)) {
    $91=((($i_121)-(1))|0);
    $92=(($inHigh+($91<<3))|0);
    $93=(+(HEAPF64[(($92)>>3)]));
    $94=(($inLow+($91<<3))|0);
    $95=(+(HEAPF64[(($94)>>3)]));
    $96=($93)-($95);
    $97=(($inHigh+($i_121<<3))|0);
    $98=(+(HEAPF64[(($97)>>3)]));
    $99=(($inLow+($i_121<<3))|0);
    $100=(+(HEAPF64[(($99)>>3)]));
    $101=($98)-($100);
    $131=$101;$_pn=$96;
   } else {
    $131=0.0;$_pn=0.0;
   }


   $132=($_pn)+($77);
   $133=($131)+($76);
   $134=((($i_121)+(1))|0);
   $135=($134|0)<($_startIdx|0);
   if ($135) {
    $i_121=$134;$77=$132;$76=$133;
   } else {
    break;
   }
  }
  HEAPF64[(($21)>>3)]=$132;
  HEAPF64[(($22)>>3)]=$133;
 }
 $72=($12|0)>($endIdx|0);
 $smax=($72?$12:$endIdx);
 $73=($smax|0)>($startIdx|0);
 $smax27=($73?$smax:$startIdx);
 $74=($12|0)>($startIdx|0);
 $smax28=($74?$12:$startIdx);
 $BodyLongTrailingIdx_0=$27;$EqualTrailingIdx_0=$20;$outIdx_0=0;$i_2=$_startIdx;$EqualPeriodTotal_1=$EqualPeriodTotal_0_lcssa;
 while(1) {





  $137=((($i_2)-(1))|0);
  $138=(($inClose+($137<<3))|0);
  $139=(+(HEAPF64[(($138)>>3)]));
  $140=(($inOpen+($137<<3))|0);
  $141=(+(HEAPF64[(($140)>>3)]));
  $142=$139>=$141;
  $143=($142?1:-1);
  $144=(($inClose+($i_2<<3))|0);
  $145=(+(HEAPF64[(($144)>>3)]));
  $146=(($inOpen+($i_2<<3))|0);
  $147=(+(HEAPF64[(($146)>>3)]));
  $148=$145>=$147;
  $149=($148?-1:1);
  $150=($143|0)==($149|0);
  do {
   if ($150) {
    $152=($139)-($141);
    $153=(+(Math_abs((+($152)))));
    $154=((HEAP32[((272)>>2)])|0);
    $155=(($154+176)|0);
    $156=(+(HEAPF64[(($155)>>3)]));
    $157=(($154+168)|0);
    $158=((HEAP32[(($157)>>2)])|0);
    $159=($158|0)==0;
    do {
     if ($159) {
      $165=(($154+164)|0);
      $166=((HEAP32[(($165)>>2)])|0);
      if (((($166|0))|0)==((0)|0)) {
       $186=$153;
       break;
      } else if (((($166|0))|0)==((1)|0)) {
       $168=(($inHigh+($137<<3))|0);
       $169=(+(HEAPF64[(($168)>>3)]));
       $170=(($inLow+($137<<3))|0);
       $171=(+(HEAPF64[(($170)>>3)]));
       $172=($169)-($171);
       $186=$172;
       break;
      }
      $174=($166|0)==2;
      if (!($174)) {
       $186=0.0;
       break;
      }
      $176=(($inHigh+($137<<3))|0);
      $177=(+(HEAPF64[(($176)>>3)]));
      $_10=($142?$139:$141);
      $178=($177)-($_10);
      $179=$139<$141;
      $180=($179?$139:$141);
      $181=(($inLow+($137<<3))|0);
      $182=(+(HEAPF64[(($181)>>3)]));
      $183=($180)-($182);
      $184=($178)+($183);
      $186=$184;
     } else {
      $161=(+((($158|0))|0));
      $162=(+(HEAPF64[(($21)>>3)]));
      $163=($162)/($161);
      $186=$163;
     }
    } while(0);

    $187=($156)*($186);
    $188=((HEAP32[((272)>>2)])|0);
    $189=(($188+164)|0);
    $190=((HEAP32[(($189)>>2)])|0);
    $191=($190|0)==2;
    $192=($191?(2.0):(1.0));
    $193=($187)/($192);
    $194=$153>$193;
    if (!($194)) {
     label = 54;
     break;
    }
    $196=(+(HEAPF64[(($144)>>3)]));
    $197=(+(HEAPF64[(($146)>>3)]));
    $198=($196)-($197);
    $199=(+(Math_abs((+($198)))));
    $200=(($188+176)|0);
    $201=(+(HEAPF64[(($200)>>3)]));
    $202=(($188+168)|0);
    $203=((HEAP32[(($202)>>2)])|0);
    $204=($203|0)==0;
    do {
     if ($204) {
      if (((($190|0))|0)==((1)|0)) {
       $211=(($inHigh+($i_2<<3))|0);
       $212=(+(HEAPF64[(($211)>>3)]));
       $213=(($inLow+($i_2<<3))|0);
       $214=(+(HEAPF64[(($213)>>3)]));
       $215=($212)-($214);
       $228=$215;
       break;
      } else if (((($190|0))|0)==((0)|0)) {
       $228=$199;
       break;
      }
      if (!($191)) {
       $228=0.0;
       break;
      }
      $218=(($inHigh+($i_2<<3))|0);
      $219=(+(HEAPF64[(($218)>>3)]));
      $220=$196<$197;
      $_11=($220?$197:$196);
      $221=($219)-($_11);
      $222=($220?$196:$197);
      $223=(($inLow+($i_2<<3))|0);
      $224=(+(HEAPF64[(($223)>>3)]));
      $225=($222)-($224);
      $226=($221)+($225);
      $228=$226;
     } else {
      $206=(+((($203|0))|0));
      $207=(+(HEAPF64[(($22)>>3)]));
      $208=($207)/($206);
      $228=$208;
     }
    } while(0);

    $229=($201)*($228);
    $230=((HEAP32[((272)>>2)])|0);
    $231=(($230+164)|0);
    $232=((HEAP32[(($231)>>2)])|0);
    $233=($232|0)==2;
    $234=($233?(2.0):(1.0));
    $235=($229)/($234);
    $236=$199>$235;
    if (!($236)) {
     label = 54;
     break;
    }
    $238=(+(HEAPF64[(($144)>>3)]));
    $239=(+(HEAPF64[(($138)>>3)]));
    $240=(($230+416)|0);
    $241=(+(HEAPF64[(($240)>>3)]));
    $242=(($230+408)|0);
    $243=((HEAP32[(($242)>>2)])|0);
    $244=($243|0)==0;
    do {
     if ($244) {
      $249=(($230+404)|0);
      $250=((HEAP32[(($249)>>2)])|0);
      if (((($250|0))|0)==((0)|0)) {
       $252=(+(HEAPF64[(($140)>>3)]));
       $253=($239)-($252);
       $254=(+(Math_abs((+($253)))));
       $273=$254;
       break;
      } else if (((($250|0))|0)==((1)|0)) {
       $256=(($inHigh+($137<<3))|0);
       $257=(+(HEAPF64[(($256)>>3)]));
       $258=(($inLow+($137<<3))|0);
       $259=(+(HEAPF64[(($258)>>3)]));
       $260=($257)-($259);
       $273=$260;
       break;
      } else if (((($250|0))|0)==((2)|0)) {
       $262=(($inHigh+($137<<3))|0);
       $263=(+(HEAPF64[(($262)>>3)]));
       $264=(+(HEAPF64[(($140)>>3)]));
       $265=$239<$264;
       $_12=($265?$264:$239);
       $266=($263)-($_12);
       $267=($265?$239:$264);
       $268=(($inLow+($137<<3))|0);
       $269=(+(HEAPF64[(($268)>>3)]));
       $270=($267)-($269);
       $271=($266)+($270);
       $273=$271;
       break;
      } else {
       $273=0.0;
       break;
      }
     } else {
      $246=(+((($243|0))|0));
      $247=($EqualPeriodTotal_1)/($246);
      $273=$247;
     }
    } while(0);

    $274=($241)*($273);
    $275=((HEAP32[((272)>>2)])|0);
    $276=(($275+404)|0);
    $277=((HEAP32[(($276)>>2)])|0);
    $278=($277|0)==2;
    $279=($278?(2.0):(1.0));
    $280=($274)/($279);
    $281=($239)+($280);
    $282=$238>$281;
    if ($282) {
     label = 54;
     break;
    }
    $284=(+(HEAPF64[(($144)>>3)]));
    $285=(+(HEAPF64[(($138)>>3)]));
    $286=(($275+416)|0);
    $287=(+(HEAPF64[(($286)>>3)]));
    $288=(($275+408)|0);
    $289=((HEAP32[(($288)>>2)])|0);
    $290=($289|0)==0;
    do {
     if ($290) {
      if (((($277|0))|0)==((0)|0)) {
       $296=(+(HEAPF64[(($140)>>3)]));
       $297=($285)-($296);
       $298=(+(Math_abs((+($297)))));
       $318=$298;
       break;
      } else if (((($277|0))|0)==((1)|0)) {
       $300=(($inHigh+($137<<3))|0);
       $301=(+(HEAPF64[(($300)>>3)]));
       $302=(($inLow+($137<<3))|0);
       $303=(+(HEAPF64[(($302)>>3)]));
       $304=($301)-($303);
       $318=$304;
       break;
      } else {
       if (!($278)) {
        $318=0.0;
        break;
       }
       $307=(($inHigh+($137<<3))|0);
       $308=(+(HEAPF64[(($307)>>3)]));
       $309=(+(HEAPF64[(($140)>>3)]));
       $310=$285<$309;
       $_13=($310?$309:$285);
       $311=($308)-($_13);
       $312=($310?$285:$309);
       $313=(($inLow+($137<<3))|0);
       $314=(+(HEAPF64[(($313)>>3)]));
       $315=($312)-($314);
       $316=($311)+($315);
       $318=$316;
       break;
      }
     } else {
      $292=(+((($289|0))|0));
      $293=($EqualPeriodTotal_1)/($292);
      $318=$293;
     }
    } while(0);

    $319=($287)*($318);
    $320=((HEAP32[((272)>>2)])|0);
    $321=(($320+404)|0);
    $322=((HEAP32[(($321)>>2)])|0);
    $323=($322|0)==2;
    $324=($323?(2.0):(1.0));
    $325=($319)/($324);
    $326=($285)-($325);
    $327=$284<$326;
    if ($327) {
     label = 54;
     break;
    }
    $329=(+(HEAPF64[(($144)>>3)]));
    $330=(+(HEAPF64[(($146)>>3)]));
    $331=$329>=$330;
    $332=($331?100:-100);
    $333=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($333)>>2)]=$332;
   } else {
    label = 54;
   }
  } while(0);
  if ((label|0) == 54) {
   label = 0;
   $335=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($335)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $337=((HEAP32[((272)>>2)])|0);
  $338=(($337+404)|0);
  $339=((HEAP32[(($338)>>2)])|0);
  if (((($339|0))|0)==((0)|0)) {
   $341=(+(HEAPF64[(($138)>>3)]));
   $342=(+(HEAPF64[(($140)>>3)]));
   $343=($341)-($342);
   $344=(+(Math_abs((+($343)))));
   $364=$344;
  } else if (((($339|0))|0)==((1)|0)) {
   $346=(($inHigh+($137<<3))|0);
   $347=(+(HEAPF64[(($346)>>3)]));
   $348=(($inLow+($137<<3))|0);
   $349=(+(HEAPF64[(($348)>>3)]));
   $350=($347)-($349);
   $364=$350;
  } else if (((($339|0))|0)==((2)|0)) {
   $352=(($inHigh+($137<<3))|0);
   $353=(+(HEAPF64[(($352)>>3)]));
   $354=(+(HEAPF64[(($138)>>3)]));
   $355=(+(HEAPF64[(($140)>>3)]));
   $356=$354<$355;
   $_14=($356?$355:$354);
   $357=($353)-($_14);
   $358=($356?$354:$355);
   $359=(($inLow+($137<<3))|0);
   $360=(+(HEAPF64[(($359)>>3)]));
   $361=($358)-($360);
   $362=($357)+($361);
   $364=$362;
  } else {
   $364=0.0;
  }

  $365=((HEAP32[((272)>>2)])|0);
  $366=(($365+404)|0);
  $367=((HEAP32[(($366)>>2)])|0);
  if (((($367|0))|0)==((0)|0)) {
   $369=((($EqualTrailingIdx_0)-(1))|0);
   $370=(($inClose+($369<<3))|0);
   $371=(+(HEAPF64[(($370)>>3)]));
   $372=(($inOpen+($369<<3))|0);
   $373=(+(HEAPF64[(($372)>>3)]));
   $374=($371)-($373);
   $375=(+(Math_abs((+($374)))));
   $399=$375;
  } else if (((($367|0))|0)==((1)|0)) {
   $377=((($EqualTrailingIdx_0)-(1))|0);
   $378=(($inHigh+($377<<3))|0);
   $379=(+(HEAPF64[(($378)>>3)]));
   $380=(($inLow+($377<<3))|0);
   $381=(+(HEAPF64[(($380)>>3)]));
   $382=($379)-($381);
   $399=$382;
  } else if (((($367|0))|0)==((2)|0)) {
   $384=((($EqualTrailingIdx_0)-(1))|0);
   $385=(($inHigh+($384<<3))|0);
   $386=(+(HEAPF64[(($385)>>3)]));
   $387=(($inClose+($384<<3))|0);
   $388=(+(HEAPF64[(($387)>>3)]));
   $389=(($inOpen+($384<<3))|0);
   $390=(+(HEAPF64[(($389)>>3)]));
   $391=$388<$390;
   $_15=($391?$390:$388);
   $392=($386)-($_15);
   $393=($391?$388:$390);
   $394=(($inLow+($384<<3))|0);
   $395=(+(HEAPF64[(($394)>>3)]));
   $396=($393)-($395);
   $397=($392)+($396);
   $399=$397;
  } else {
   $399=0.0;
  }

  $400=($364)-($399);
  $401=((HEAP32[((272)>>2)])|0);
  $402=(($401+164)|0);
  $403=((HEAP32[(($402)>>2)])|0);
  if (((($403|0))|0)==((0)|0)) {
   $404=((($i_2)-(1))|0);
   $405=(($inClose+($404<<3))|0);
   $406=(+(HEAPF64[(($405)>>3)]));
   $407=(($inOpen+($404<<3))|0);
   $408=(+(HEAPF64[(($407)>>3)]));
   $409=($406)-($408);
   $410=(+(Math_abs((+($409)))));
   $411=((($BodyLongTrailingIdx_0)-(1))|0);
   $412=(($inClose+($411<<3))|0);
   $413=(+(HEAPF64[(($412)>>3)]));
   $414=(($inOpen+($411<<3))|0);
   $415=(+(HEAPF64[(($414)>>3)]));
   $416=($413)-($415);
   $417=(+(Math_abs((+($416)))));
   $460=$417;$459=$410;
  } else if (((($403|0))|0)==((1)|0)) {
   $418=((($i_2)-(1))|0);
   $419=(($inHigh+($418<<3))|0);
   $420=(+(HEAPF64[(($419)>>3)]));
   $421=(($inLow+($418<<3))|0);
   $422=(+(HEAPF64[(($421)>>3)]));
   $423=($420)-($422);
   $424=((($BodyLongTrailingIdx_0)-(1))|0);
   $425=(($inHigh+($424<<3))|0);
   $426=(+(HEAPF64[(($425)>>3)]));
   $427=(($inLow+($424<<3))|0);
   $428=(+(HEAPF64[(($427)>>3)]));
   $429=($426)-($428);
   $460=$429;$459=$423;
  } else if (((($403|0))|0)==((2)|0)) {
   $430=((($i_2)-(1))|0);
   $431=(($inHigh+($430<<3))|0);
   $432=(+(HEAPF64[(($431)>>3)]));
   $433=(($inClose+($430<<3))|0);
   $434=(+(HEAPF64[(($433)>>3)]));
   $435=(($inOpen+($430<<3))|0);
   $436=(+(HEAPF64[(($435)>>3)]));
   $437=$434<$436;
   $_16=($437?$436:$434);
   $438=($432)-($_16);
   $439=($437?$434:$436);
   $440=(($inLow+($430<<3))|0);
   $441=(+(HEAPF64[(($440)>>3)]));
   $442=($439)-($441);
   $443=($438)+($442);
   $444=((($BodyLongTrailingIdx_0)-(1))|0);
   $445=(($inHigh+($444<<3))|0);
   $446=(+(HEAPF64[(($445)>>3)]));
   $447=(($inClose+($444<<3))|0);
   $448=(+(HEAPF64[(($447)>>3)]));
   $449=(($inOpen+($444<<3))|0);
   $450=(+(HEAPF64[(($449)>>3)]));
   $451=$448<$450;
   $_17=($451?$450:$448);
   $452=($446)-($_17);
   $453=($451?$448:$450);
   $454=(($inLow+($444<<3))|0);
   $455=(+(HEAPF64[(($454)>>3)]));
   $456=($453)-($455);
   $457=($452)+($456);
   $460=$457;$459=$443;
  } else {
   $460=0.0;$459=0.0;
  }


  $461=($459)-($460);
  $462=(($BodyLongPeriodTotal+8)|0);
  $463=(+(HEAPF64[(($462)>>3)]));
  $464=($463)+($461);
  HEAPF64[(($462)>>3)]=$464;
  if (((($403|0))|0)==((2)|0)) {
   $469=(($inHigh+($i_2<<3))|0);
   $470=(+(HEAPF64[(($469)>>3)]));
   $471=(($inClose+($i_2<<3))|0);
   $472=(+(HEAPF64[(($471)>>3)]));
   $473=(($inOpen+($i_2<<3))|0);
   $474=(+(HEAPF64[(($473)>>3)]));
   $475=$472<$474;
   $_16_1=($475?$474:$472);
   $476=($470)-($_16_1);
   $477=($475?$472:$474);
   $478=(($inLow+($i_2<<3))|0);
   $479=(+(HEAPF64[(($478)>>3)]));
   $480=($477)-($479);
   $481=($476)+($480);
   $482=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $483=(+(HEAPF64[(($482)>>3)]));
   $484=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $485=(+(HEAPF64[(($484)>>3)]));
   $486=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $487=(+(HEAPF64[(($486)>>3)]));
   $488=$485<$487;
   $_17_1=($488?$487:$485);
   $489=($483)-($_17_1);
   $490=($488?$485:$487);
   $491=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $492=(+(HEAPF64[(($491)>>3)]));
   $493=($490)-($492);
   $494=($489)+($493);
   $519=$494;$518=$481;
  } else if (((($403|0))|0)==((1)|0)) {
   $495=(($inHigh+($i_2<<3))|0);
   $496=(+(HEAPF64[(($495)>>3)]));
   $497=(($inLow+($i_2<<3))|0);
   $498=(+(HEAPF64[(($497)>>3)]));
   $499=($496)-($498);
   $500=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $501=(+(HEAPF64[(($500)>>3)]));
   $502=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $503=(+(HEAPF64[(($502)>>3)]));
   $504=($501)-($503);
   $519=$504;$518=$499;
  } else if (((($403|0))|0)==((0)|0)) {
   $505=(($inClose+($i_2<<3))|0);
   $506=(+(HEAPF64[(($505)>>3)]));
   $507=(($inOpen+($i_2<<3))|0);
   $508=(+(HEAPF64[(($507)>>3)]));
   $509=($506)-($508);
   $510=(+(Math_abs((+($509)))));
   $511=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $512=(+(HEAPF64[(($511)>>3)]));
   $513=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $514=(+(HEAPF64[(($513)>>3)]));
   $515=($512)-($514);
   $516=(+(Math_abs((+($515)))));
   $519=$516;$518=$510;
  } else {
   $519=0.0;$518=0.0;
  }


  $520=($518)-($519);
  $521=(($BodyLongPeriodTotal)|0);
  $522=(+(HEAPF64[(($521)>>3)]));
  $523=($522)+($520);
  HEAPF64[(($521)>>3)]=$523;
  $524=($EqualPeriodTotal_1)+($400);
  $525=((($i_2)+(1))|0);
  $526=((($EqualTrailingIdx_0)+(1))|0);
  $527=((($BodyLongTrailingIdx_0)+(1))|0);
  $528=($i_2|0)<($endIdx|0);
  if ($528) {
   $BodyLongTrailingIdx_0=$527;$EqualTrailingIdx_0=$526;$outIdx_0=$outIdx_1;$i_2=$525;$EqualPeriodTotal_1=$524;
  } else {
   break;
  }
 }
 $466=((($smax27)+(1))|0);
 $467=((($466)-($smax28))|0);
 HEAP32[(($outNBElement)>>2)]=$467;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDLDARKCLOUDCOVER_Lookback($optInPenetration){
 $optInPenetration=+($optInPenetration);
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$8=0,$9=0,$_02=0,label=0;

 $1=$optInPenetration==(-4.0e+37);
 do {
  if (!($1)) {
   $3=$optInPenetration<(0.0);
   $4=$optInPenetration>(3.0e+37);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_02=-1;
   } else {
    break;
   }

   return (($_02)|0);
  }
 } while(0);
 $6=((HEAP32[((272)>>2)])|0);
 $7=(($6+168)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((($8)+(1))|0);
 $_02=$9;

 return (($_02)|0);
}


function _TA_CDLDARKCLOUDCOVER($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$optInPenetration,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInPenetration=+($optInPenetration);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond10=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$11=0,$13=0,$14=0,$or_cond7=0,$_09=.0,$16=0,$18=0,$19=0,$_startIdx=0;
 var $20=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$BodyLongPeriodTotal_0_lcssa=.0,$31=0,$smax=0,$32=0,$smax16=0,$33=0,$smax17=0,$i_015=0,$BodyLongPeriodTotal_014=.0,$36=0,$37=0;
 var $38=.0,$39=0,$40=.0,$41=.0,$42=.0,$44=0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$51=0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$57=.0,$58=0,$_=.0;
 var $59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0,$66=.0,$67=.0,$68=0,$69=0,$BodyLongPeriodTotal_1=.0,$i_1=0,$outIdx_0=0,$BodyLongTrailingIdx_0=0,$71=0,$72=0,$73=.0,$74=0,$75=.0,$76=0;
 var $78=.0,$79=.0,$80=0,$81=0,$82=.0,$83=0,$84=0,$85=0,$87=.0,$88=.0,$90=0,$91=0,$93=0,$94=.0,$95=0,$96=.0,$97=.0,$99=0,$101=0,$102=.0;
 var $_11=.0,$103=.0,$104=0,$105=.0,$106=0,$107=.0,$108=.0,$109=.0,$111=.0,$112=.0,$113=0,$114=0,$115=0,$116=0,$117=.0,$118=.0,$119=0,$121=0,$122=.0,$123=0;
 var $124=.0,$not_=0,$126=0,$127=.0,$128=0,$130=.0,$131=0,$133=.0,$134=.0,$135=.0,$136=.0,$137=.0,$138=0,$140=0,$142=0,$outIdx_1=0,$144=0,$145=0,$146=0,$148=.0;
 var $149=.0,$150=.0,$151=.0,$153=0,$154=.0,$155=0,$156=.0,$157=.0,$159=0,$160=.0,$161=.0,$162=.0,$163=0,$_12=.0,$164=.0,$165=.0,$166=0,$167=.0,$168=.0,$169=.0;
 var $171=.0,$172=0,$173=0,$174=0,$176=0,$177=0,$178=.0,$179=0,$180=.0,$181=.0,$182=.0,$184=0,$185=0,$186=.0,$187=0,$188=.0,$189=.0,$191=0,$192=0,$193=.0;
 var $194=0,$195=.0,$196=0,$197=.0,$198=0,$_13=.0,$199=.0,$200=.0,$201=0,$202=.0,$203=.0,$204=.0,$206=.0,$207=.0,$208=.0,$209=0,$210=0,$211=0,$213=0,$214=0;
 var $_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond10=$3|$4;
 if ($or_cond10) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 if (!($or_cond5)) {
  $_0=2;

  return (($_0)|0);
 }
 $11=$optInPenetration==(-4.0e+37);
 do {
  if ($11) {
   $_09=0.5;
  } else {
   $13=$optInPenetration<(0.0);
   $14=$optInPenetration>(3.0e+37);
   $or_cond7=$13|$14;
   if ($or_cond7) {
    $_0=2;
   } else {
    $_09=$optInPenetration;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $16=($outInteger|0)==0;
 if ($16) {
  $_0=2;

  return (($_0)|0);
 }
 $18=((_TA_CDLDARKCLOUDCOVER_Lookback($_09))|0);
 $19=($18|0)>($startIdx|0);
 $_startIdx=($19?$18:$startIdx);
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $23=((HEAP32[((272)>>2)])|0);
 $24=(($23+168)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($_startIdx)-($25))|0);
 $27=($25|0)>0;
 if ($27) {
  $28=((HEAP32[((272)>>2)])|0);
  $29=(($28+164)|0);
  $30=((HEAP32[(($29)>>2)])|0);
  $BodyLongPeriodTotal_014=0.0;$i_015=$26;
  while(1) {


   if (((($30|0))|0)==((2)|0)) {
    $51=((($i_015)-(1))|0);
    $52=(($inHigh+($51<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inClose+($51<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inOpen+($51<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=$55<$57;
    $_=($58?$57:$55);
    $59=($53)-($_);
    $60=($58?$55:$57);
    $61=(($inLow+($51<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=($60)-($62);
    $64=($59)+($63);
    $66=$64;
   } else if (((($30|0))|0)==((0)|0)) {
    $36=((($i_015)-(1))|0);
    $37=(($inClose+($36<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=(($inOpen+($36<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=($38)-($40);
    $42=(+(Math_abs((+($41)))));
    $66=$42;
   } else if (((($30|0))|0)==((1)|0)) {
    $44=((($i_015)-(1))|0);
    $45=(($inHigh+($44<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=(($inLow+($44<<3))|0);
    $48=(+(HEAPF64[(($47)>>3)]));
    $49=($46)-($48);
    $66=$49;
   } else {
    $66=0.0;
   }

   $67=($BodyLongPeriodTotal_014)+($66);
   $68=((($i_015)+(1))|0);
   $69=($68|0)<($_startIdx|0);
   if ($69) {
    $BodyLongPeriodTotal_014=$67;$i_015=$68;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$67;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $31=($18|0)>($endIdx|0);
 $smax=($31?$18:$endIdx);
 $32=($smax|0)>($startIdx|0);
 $smax16=($32?$smax:$startIdx);
 $33=($18|0)>($startIdx|0);
 $smax17=($33?$18:$startIdx);
 $BodyLongTrailingIdx_0=$26;$outIdx_0=0;$i_1=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;
 while(1) {




  $71=((($i_1)-(1))|0);
  $72=(($inClose+($71<<3))|0);
  $73=(+(HEAPF64[(($72)>>3)]));
  $74=(($inOpen+($71<<3))|0);
  $75=(+(HEAPF64[(($74)>>3)]));
  $76=$73>=$75;
  do {
   if ($76) {
    $78=($73)-($75);
    $79=(+(Math_abs((+($78)))));
    $80=((HEAP32[((272)>>2)])|0);
    $81=(($80+176)|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($80+168)|0);
    $84=((HEAP32[(($83)>>2)])|0);
    $85=($84|0)==0;
    do {
     if ($85) {
      $90=(($80+164)|0);
      $91=((HEAP32[(($90)>>2)])|0);
      if (((($91|0))|0)==((1)|0)) {
       $93=(($inHigh+($71<<3))|0);
       $94=(+(HEAPF64[(($93)>>3)]));
       $95=(($inLow+($71<<3))|0);
       $96=(+(HEAPF64[(($95)>>3)]));
       $97=($94)-($96);
       $111=$97;
       break;
      } else if (((($91|0))|0)==((0)|0)) {
       $111=$79;
       break;
      }
      $99=($91|0)==2;
      if (!($99)) {
       $111=0.0;
       break;
      }
      $101=(($inHigh+($71<<3))|0);
      $102=(+(HEAPF64[(($101)>>3)]));
      $_11=($76?$73:$75);
      $103=($102)-($_11);
      $104=$73<$75;
      $105=($104?$73:$75);
      $106=(($inLow+($71<<3))|0);
      $107=(+(HEAPF64[(($106)>>3)]));
      $108=($105)-($107);
      $109=($103)+($108);
      $111=$109;
     } else {
      $87=(+((($84|0))|0));
      $88=($BodyLongPeriodTotal_1)/($87);
      $111=$88;
     }
    } while(0);

    $112=($82)*($111);
    $113=((HEAP32[((272)>>2)])|0);
    $114=(($113+164)|0);
    $115=((HEAP32[(($114)>>2)])|0);
    $116=($115|0)==2;
    $117=($116?(2.0):(1.0));
    $118=($112)/($117);
    $119=$79>$118;
    if (!($119)) {
     label = 30;
     break;
    }
    $121=(($inClose+($i_1<<3))|0);
    $122=(+(HEAPF64[(($121)>>3)]));
    $123=(($inOpen+($i_1<<3))|0);
    $124=(+(HEAPF64[(($123)>>3)]));
    $not_=$122<$124;
    if (!($not_)) {
     label = 30;
     break;
    }
    $126=(($inHigh+($71<<3))|0);
    $127=(+(HEAPF64[(($126)>>3)]));
    $128=$124>$127;
    if (!($128)) {
     label = 30;
     break;
    }
    $130=(+(HEAPF64[(($74)>>3)]));
    $131=$122>$130;
    if (!($131)) {
     label = 30;
     break;
    }
    $133=(+(HEAPF64[(($72)>>3)]));
    $134=($133)-($130);
    $135=(+(Math_abs((+($134)))));
    $136=($_09)*($135);
    $137=($133)-($136);
    $138=$122<$137;
    if (!($138)) {
     label = 30;
     break;
    }
    $140=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($140)>>2)]=-100;
   } else {
    label = 30;
   }
  } while(0);
  if ((label|0) == 30) {
   label = 0;
   $142=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($142)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $144=((HEAP32[((272)>>2)])|0);
  $145=(($144+164)|0);
  $146=((HEAP32[(($145)>>2)])|0);
  if (((($146|0))|0)==((0)|0)) {
   $148=(+(HEAPF64[(($72)>>3)]));
   $149=(+(HEAPF64[(($74)>>3)]));
   $150=($148)-($149);
   $151=(+(Math_abs((+($150)))));
   $171=$151;
  } else if (((($146|0))|0)==((1)|0)) {
   $153=(($inHigh+($71<<3))|0);
   $154=(+(HEAPF64[(($153)>>3)]));
   $155=(($inLow+($71<<3))|0);
   $156=(+(HEAPF64[(($155)>>3)]));
   $157=($154)-($156);
   $171=$157;
  } else if (((($146|0))|0)==((2)|0)) {
   $159=(($inHigh+($71<<3))|0);
   $160=(+(HEAPF64[(($159)>>3)]));
   $161=(+(HEAPF64[(($72)>>3)]));
   $162=(+(HEAPF64[(($74)>>3)]));
   $163=$161<$162;
   $_12=($163?$162:$161);
   $164=($160)-($_12);
   $165=($163?$161:$162);
   $166=(($inLow+($71<<3))|0);
   $167=(+(HEAPF64[(($166)>>3)]));
   $168=($165)-($167);
   $169=($164)+($168);
   $171=$169;
  } else {
   $171=0.0;
  }

  $172=((HEAP32[((272)>>2)])|0);
  $173=(($172+164)|0);
  $174=((HEAP32[(($173)>>2)])|0);
  if (((($174|0))|0)==((0)|0)) {
   $176=((($BodyLongTrailingIdx_0)-(1))|0);
   $177=(($inClose+($176<<3))|0);
   $178=(+(HEAPF64[(($177)>>3)]));
   $179=(($inOpen+($176<<3))|0);
   $180=(+(HEAPF64[(($179)>>3)]));
   $181=($178)-($180);
   $182=(+(Math_abs((+($181)))));
   $206=$182;
  } else if (((($174|0))|0)==((1)|0)) {
   $184=((($BodyLongTrailingIdx_0)-(1))|0);
   $185=(($inHigh+($184<<3))|0);
   $186=(+(HEAPF64[(($185)>>3)]));
   $187=(($inLow+($184<<3))|0);
   $188=(+(HEAPF64[(($187)>>3)]));
   $189=($186)-($188);
   $206=$189;
  } else if (((($174|0))|0)==((2)|0)) {
   $191=((($BodyLongTrailingIdx_0)-(1))|0);
   $192=(($inHigh+($191<<3))|0);
   $193=(+(HEAPF64[(($192)>>3)]));
   $194=(($inClose+($191<<3))|0);
   $195=(+(HEAPF64[(($194)>>3)]));
   $196=(($inOpen+($191<<3))|0);
   $197=(+(HEAPF64[(($196)>>3)]));
   $198=$195<$197;
   $_13=($198?$197:$195);
   $199=($193)-($_13);
   $200=($198?$195:$197);
   $201=(($inLow+($191<<3))|0);
   $202=(+(HEAPF64[(($201)>>3)]));
   $203=($200)-($202);
   $204=($199)+($203);
   $206=$204;
  } else {
   $206=0.0;
  }

  $207=($171)-($206);
  $208=($BodyLongPeriodTotal_1)+($207);
  $209=((($i_1)+(1))|0);
  $210=((($BodyLongTrailingIdx_0)+(1))|0);
  $211=($i_1|0)<($endIdx|0);
  if ($211) {
   $BodyLongTrailingIdx_0=$210;$outIdx_0=$outIdx_1;$i_1=$209;$BodyLongPeriodTotal_1=$208;
  } else {
   break;
  }
 }
 $213=((($smax16)+(1))|0);
 $214=((($213)-($smax17))|0);
 HEAP32[(($outNBElement)>>2)]=$214;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLDOJI_Lookback(){
 var $1=0,$2=0,$3=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+240)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 return (($3)|0);
}


function _TA_CDLDOJI($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond12=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$smax17=0,$26=0,$smax18=0,$27=0,$28=0,$29=0,$smax19=0,$i_0_lcssa=0,$BodyDojiPeriodTotal_0_lcssa=.0,$30=0,$smax=0,$31=0,$i_014=0;
 var $BodyDojiPeriodTotal_013=.0,$34=0,$35=.0,$36=0,$37=.0,$38=.0,$39=.0,$41=0,$42=.0,$43=0,$44=.0,$45=.0,$47=0,$48=.0,$49=0,$50=.0,$51=0,$52=.0,$53=0,$_=.0;
 var $54=.0,$55=.0,$56=0,$57=.0,$58=.0,$59=.0,$61=.0,$62=.0,$63=0,$64=0,$BodyDojiPeriodTotal_1=.0,$i_1=0,$outIdx_0=0,$BodyDojiTrailingIdx_0=0,$66=0,$67=.0,$68=0,$69=.0,$70=.0,$71=.0;
 var $72=0,$73=0,$74=.0,$75=0,$76=0,$77=0,$79=.0,$80=.0,$82=0,$83=0,$85=0,$86=.0,$87=0,$88=.0,$89=.0,$91=0,$93=0,$94=.0,$95=0,$_8=.0;
 var $96=.0,$97=.0,$98=0,$99=.0,$100=.0,$101=.0,$103=.0,$104=.0,$105=0,$106=0,$107=0,$108=0,$109=.0,$110=.0,$111=0,$112=0,$113=0,$_9=0,$114=0,$115=0;
 var $116=0,$118=.0,$119=.0,$120=.0,$121=.0,$123=0,$124=.0,$125=0,$126=.0,$127=.0,$129=0,$130=.0,$131=.0,$132=.0,$133=0,$_10=.0,$134=.0,$135=.0,$136=0,$137=.0;
 var $138=.0,$139=.0,$141=.0,$142=0,$143=0,$144=0,$146=0,$147=.0,$148=0,$149=.0,$150=.0,$151=.0,$153=0,$154=.0,$155=0,$156=.0,$157=.0,$159=0,$160=.0,$161=0;
 var $162=.0,$163=0,$164=.0,$165=0,$_11=.0,$166=.0,$167=.0,$168=0,$169=.0,$170=.0,$171=.0,$173=.0,$174=.0,$175=.0,$176=0,$177=0,$178=0,$180=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond12=$10|$or_cond5_not;
 if ($or_cond12) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLDOJI_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+240)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=($19|0)>0;
 if ($21) {
  $22=((HEAP32[((272)>>2)])|0);
  $23=(($22+236)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=($12|0)>($startIdx|0);
  $smax17=($25?$12:$startIdx);
  $26=($12|0)>($startIdx|0);
  $smax18=($26?$12:$startIdx);
  $27=((($smax18)+(1))|0);
  $28=((($27)-($19))|0);
  $29=($smax17|0)>($28|0);
  $BodyDojiPeriodTotal_013=0.0;$i_014=$20;
  while(1) {


   if (((($24|0))|0)==((0)|0)) {
    $34=(($inClose+($i_014<<3))|0);
    $35=(+(HEAPF64[(($34)>>3)]));
    $36=(($inOpen+($i_014<<3))|0);
    $37=(+(HEAPF64[(($36)>>3)]));
    $38=($35)-($37);
    $39=(+(Math_abs((+($38)))));
    $61=$39;
   } else if (((($24|0))|0)==((2)|0)) {
    $47=(($inHigh+($i_014<<3))|0);
    $48=(+(HEAPF64[(($47)>>3)]));
    $49=(($inClose+($i_014<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=(($inOpen+($i_014<<3))|0);
    $52=(+(HEAPF64[(($51)>>3)]));
    $53=$50<$52;
    $_=($53?$52:$50);
    $54=($48)-($_);
    $55=($53?$50:$52);
    $56=(($inLow+($i_014<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=($55)-($57);
    $59=($54)+($58);
    $61=$59;
   } else if (((($24|0))|0)==((1)|0)) {
    $41=(($inHigh+($i_014<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=(($inLow+($i_014<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=($42)-($44);
    $61=$45;
   } else {
    $61=0.0;
   }

   $62=($BodyDojiPeriodTotal_013)+($61);
   $63=((($i_014)+(1))|0);
   $64=($63|0)<($_startIdx|0);
   if ($64) {
    $BodyDojiPeriodTotal_013=$62;$i_014=$63;
   } else {
    break;
   }
  }
  $smax19=($29?$smax17:$28);
  $BodyDojiPeriodTotal_0_lcssa=$62;$i_0_lcssa=$smax19;
 } else {
  $BodyDojiPeriodTotal_0_lcssa=0.0;$i_0_lcssa=$20;
 }


 $30=($i_0_lcssa|0)>($endIdx|0);
 $smax=($30?$i_0_lcssa:$endIdx);
 $31=((($smax)+(1))|0);
 $BodyDojiTrailingIdx_0=$20;$outIdx_0=0;$i_1=$i_0_lcssa;$BodyDojiPeriodTotal_1=$BodyDojiPeriodTotal_0_lcssa;
 while(1) {




  $66=(($inClose+($i_1<<3))|0);
  $67=(+(HEAPF64[(($66)>>3)]));
  $68=(($inOpen+($i_1<<3))|0);
  $69=(+(HEAPF64[(($68)>>3)]));
  $70=($67)-($69);
  $71=(+(Math_abs((+($70)))));
  $72=((HEAP32[((272)>>2)])|0);
  $73=(($72+248)|0);
  $74=(+(HEAPF64[(($73)>>3)]));
  $75=(($72+240)|0);
  $76=((HEAP32[(($75)>>2)])|0);
  $77=($76|0)==0;
  do {
   if ($77) {
    $82=(($72+236)|0);
    $83=((HEAP32[(($82)>>2)])|0);
    if (((($83|0))|0)==((0)|0)) {
     $103=$71;
     break;
    } else if (((($83|0))|0)==((1)|0)) {
     $85=(($inHigh+($i_1<<3))|0);
     $86=(+(HEAPF64[(($85)>>3)]));
     $87=(($inLow+($i_1<<3))|0);
     $88=(+(HEAPF64[(($87)>>3)]));
     $89=($86)-($88);
     $103=$89;
     break;
    }
    $91=($83|0)==2;
    if (!($91)) {
     $103=0.0;
     break;
    }
    $93=(($inHigh+($i_1<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=$67<$69;
    $_8=($95?$69:$67);
    $96=($94)-($_8);
    $97=($95?$67:$69);
    $98=(($inLow+($i_1<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=($97)-($99);
    $101=($96)+($100);
    $103=$101;
   } else {
    $79=(+((($76|0))|0));
    $80=($BodyDojiPeriodTotal_1)/($79);
    $103=$80;
   }
  } while(0);

  $104=($74)*($103);
  $105=((HEAP32[((272)>>2)])|0);
  $106=(($105+236)|0);
  $107=((HEAP32[(($106)>>2)])|0);
  $108=($107|0)==2;
  $109=($108?(2.0):(1.0));
  $110=($104)/($109);
  $111=$71>$110;
  $112=((($outIdx_0)+(1))|0);
  $113=(($outInteger+($outIdx_0<<2))|0);
  $_9=($111?0:100);
  HEAP32[(($113)>>2)]=$_9;
  $114=((HEAP32[((272)>>2)])|0);
  $115=(($114+236)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  if (((($116|0))|0)==((0)|0)) {
   $118=(+(HEAPF64[(($66)>>3)]));
   $119=(+(HEAPF64[(($68)>>3)]));
   $120=($118)-($119);
   $121=(+(Math_abs((+($120)))));
   $141=$121;
  } else if (((($116|0))|0)==((1)|0)) {
   $123=(($inHigh+($i_1<<3))|0);
   $124=(+(HEAPF64[(($123)>>3)]));
   $125=(($inLow+($i_1<<3))|0);
   $126=(+(HEAPF64[(($125)>>3)]));
   $127=($124)-($126);
   $141=$127;
  } else if (((($116|0))|0)==((2)|0)) {
   $129=(($inHigh+($i_1<<3))|0);
   $130=(+(HEAPF64[(($129)>>3)]));
   $131=(+(HEAPF64[(($66)>>3)]));
   $132=(+(HEAPF64[(($68)>>3)]));
   $133=$131<$132;
   $_10=($133?$132:$131);
   $134=($130)-($_10);
   $135=($133?$131:$132);
   $136=(($inLow+($i_1<<3))|0);
   $137=(+(HEAPF64[(($136)>>3)]));
   $138=($135)-($137);
   $139=($134)+($138);
   $141=$139;
  } else {
   $141=0.0;
  }

  $142=((HEAP32[((272)>>2)])|0);
  $143=(($142+236)|0);
  $144=((HEAP32[(($143)>>2)])|0);
  if (((($144|0))|0)==((1)|0)) {
   $153=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $154=(+(HEAPF64[(($153)>>3)]));
   $155=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $156=(+(HEAPF64[(($155)>>3)]));
   $157=($154)-($156);
   $173=$157;
  } else if (((($144|0))|0)==((2)|0)) {
   $159=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $160=(+(HEAPF64[(($159)>>3)]));
   $161=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $162=(+(HEAPF64[(($161)>>3)]));
   $163=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $164=(+(HEAPF64[(($163)>>3)]));
   $165=$162<$164;
   $_11=($165?$164:$162);
   $166=($160)-($_11);
   $167=($165?$162:$164);
   $168=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $169=(+(HEAPF64[(($168)>>3)]));
   $170=($167)-($169);
   $171=($166)+($170);
   $173=$171;
  } else if (((($144|0))|0)==((0)|0)) {
   $146=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $147=(+(HEAPF64[(($146)>>3)]));
   $148=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $149=(+(HEAPF64[(($148)>>3)]));
   $150=($147)-($149);
   $151=(+(Math_abs((+($150)))));
   $173=$151;
  } else {
   $173=0.0;
  }

  $174=($141)-($173);
  $175=($BodyDojiPeriodTotal_1)+($174);
  $176=((($i_1)+(1))|0);
  $177=((($BodyDojiTrailingIdx_0)+(1))|0);
  $178=($i_1|0)<($endIdx|0);
  if ($178) {
   $BodyDojiTrailingIdx_0=$177;$outIdx_0=$112;$i_1=$176;$BodyDojiPeriodTotal_1=$175;
  } else {
   break;
  }
 }
 $180=((($31)-($i_0_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$180;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLDOJISTAR_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+240)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(1))|0);
 return (($7)|0);
}


function _TA_CDLDOJISTAR($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond17=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$BodyLongPeriodTotal_0_lcssa=.0,$29=0,$30=0,$31=0,$32=0,$33=0,$smax27=0,$34=0,$smax28=0,$35=0;
 var $36=0,$37=0,$i_023=0,$BodyLongPeriodTotal_022=.0,$40=0,$41=.0,$42=0,$43=.0,$44=.0,$45=.0,$47=0,$48=.0,$49=0,$50=.0,$51=.0,$53=0,$54=.0,$55=0,$56=.0,$57=0;
 var $58=.0,$59=0,$_=.0,$60=.0,$61=.0,$62=0,$63=.0,$64=.0,$65=.0,$67=.0,$68=.0,$69=0,$70=0,$smax29=0,$i_1_lcssa=0,$BodyDojiPeriodTotal_0_lcssa=.0,$71=0,$smax=0,$72=0,$i_120=0;
 var $BodyDojiPeriodTotal_019=.0,$75=0,$76=.0,$77=0,$78=.0,$79=.0,$80=.0,$82=0,$83=.0,$84=0,$85=.0,$86=.0,$88=0,$89=.0,$90=0,$91=.0,$92=0,$93=.0,$94=0,$_8=.0;
 var $95=.0,$96=.0,$97=0,$98=.0,$99=.0,$100=.0,$102=.0,$103=.0,$104=0,$105=0,$BodyDojiPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyDojiTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$107=0,$108=0,$109=.0,$110=0;
 var $111=.0,$112=.0,$113=.0,$114=0,$115=0,$116=.0,$117=0,$118=0,$119=0,$121=.0,$122=.0,$124=0,$125=0,$127=0,$128=.0,$129=0,$130=.0,$131=.0,$133=0,$135=0;
 var $136=.0,$137=0,$_9=.0,$138=.0,$139=.0,$140=0,$141=.0,$142=.0,$143=.0,$145=.0,$146=.0,$147=0,$148=0,$149=0,$150=0,$151=.0,$152=.0,$153=0,$155=0,$156=.0;
 var $157=0,$158=.0,$159=.0,$160=.0,$161=0,$162=.0,$163=0,$164=0,$165=0,$167=.0,$168=.0,$170=0,$171=0,$173=0,$174=.0,$175=0,$176=.0,$177=.0,$179=0,$181=0;
 var $182=.0,$183=0,$_10=.0,$184=.0,$185=.0,$186=0,$187=.0,$188=.0,$189=.0,$191=.0,$192=.0,$193=0,$194=0,$195=0,$196=0,$197=.0,$198=.0,$199=0,$201=.0,$202=.0;
 var $203=0,$205=.0,$206=.0,$207=0,$_11=.0,$208=0,$209=.0,$210=0,$212=.0,$213=.0,$not_=0,$215=.0,$216=.0,$217=0,$_12=.0,$218=0,$219=.0,$220=0,$222=.0,$223=.0;
 var $224=0,$225=0,$226=0,$228=0,$outIdx_1=0,$230=0,$231=0,$232=0,$234=.0,$235=.0,$236=.0,$237=.0,$239=0,$240=.0,$241=0,$242=.0,$243=.0,$245=0,$246=.0,$247=.0;
 var $248=.0,$249=0,$_13=.0,$250=.0,$251=.0,$252=0,$253=.0,$254=.0,$255=.0,$257=.0,$258=0,$259=0,$260=0,$262=0,$263=.0,$264=0,$265=.0,$266=.0,$267=.0,$269=0;
 var $270=.0,$271=0,$272=.0,$273=.0,$275=0,$276=.0,$277=0,$278=.0,$279=0,$280=.0,$281=0,$_14=.0,$282=.0,$283=.0,$284=0,$285=.0,$286=.0,$287=.0,$289=.0,$290=.0;
 var $291=.0,$292=0,$293=0,$294=0,$296=0,$297=.0,$298=0,$299=.0,$300=.0,$301=.0,$303=0,$304=.0,$305=0,$306=.0,$307=.0,$309=0,$310=.0,$311=0,$312=.0,$313=0;
 var $314=.0,$315=0,$_15=.0,$316=.0,$317=.0,$318=0,$319=.0,$320=.0,$321=.0,$323=.0,$324=0,$325=0,$326=0,$328=0,$329=.0,$330=0,$331=.0,$332=.0,$333=.0,$335=0;
 var $336=.0,$337=0,$338=.0,$339=.0,$341=0,$342=.0,$343=0,$344=.0,$345=0,$346=.0,$347=0,$_16=.0,$348=.0,$349=.0,$350=0,$351=.0,$352=.0,$353=.0,$355=.0,$356=.0;
 var $357=.0,$358=0,$359=0,$360=0,$361=0,$363=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond17=$10|$or_cond5_not;
 if ($or_cond17) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLDOJISTAR_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((($_startIdx)-(1))|0);
 $18=((HEAP32[((272)>>2)])|0);
 $19=(($18+168)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((($17)-($20))|0);
 $22=(($18+240)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=((($_startIdx)-($23))|0);
 $25=($20|0)>0;
 if ($25) {
  $26=((HEAP32[((272)>>2)])|0);
  $27=(($26+164)|0);
  $28=((HEAP32[(($27)>>2)])|0);
  $BodyLongPeriodTotal_022=0.0;$i_023=$21;
  while(1) {


   if (((($28|0))|0)==((1)|0)) {
    $47=(($inHigh+($i_023<<3))|0);
    $48=(+(HEAPF64[(($47)>>3)]));
    $49=(($inLow+($i_023<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=($48)-($50);
    $67=$51;
   } else if (((($28|0))|0)==((0)|0)) {
    $40=(($inClose+($i_023<<3))|0);
    $41=(+(HEAPF64[(($40)>>3)]));
    $42=(($inOpen+($i_023<<3))|0);
    $43=(+(HEAPF64[(($42)>>3)]));
    $44=($41)-($43);
    $45=(+(Math_abs((+($44)))));
    $67=$45;
   } else if (((($28|0))|0)==((2)|0)) {
    $53=(($inHigh+($i_023<<3))|0);
    $54=(+(HEAPF64[(($53)>>3)]));
    $55=(($inClose+($i_023<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=(($inOpen+($i_023<<3))|0);
    $58=(+(HEAPF64[(($57)>>3)]));
    $59=$56<$58;
    $_=($59?$58:$56);
    $60=($54)-($_);
    $61=($59?$56:$58);
    $62=(($inLow+($i_023<<3))|0);
    $63=(+(HEAPF64[(($62)>>3)]));
    $64=($61)-($63);
    $65=($60)+($64);
    $67=$65;
   } else {
    $67=0.0;
   }

   $68=($BodyLongPeriodTotal_022)+($67);
   $69=((($i_023)+(1))|0);
   $70=($69|0)<($17|0);
   if ($70) {
    $BodyLongPeriodTotal_022=$68;$i_023=$69;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$68;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $29=($23|0)>0;
 if ($29) {
  $30=((HEAP32[((272)>>2)])|0);
  $31=(($30+236)|0);
  $32=((HEAP32[(($31)>>2)])|0);
  $33=($12|0)>($startIdx|0);
  $smax27=($33?$12:$startIdx);
  $34=($12|0)>($startIdx|0);
  $smax28=($34?$12:$startIdx);
  $35=((($smax28)+(1))|0);
  $36=((($35)-($23))|0);
  $37=($smax27|0)>($36|0);
  $BodyDojiPeriodTotal_019=0.0;$i_120=$24;
  while(1) {


   if (((($32|0))|0)==((2)|0)) {
    $88=(($inHigh+($i_120<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=(($inClose+($i_120<<3))|0);
    $91=(+(HEAPF64[(($90)>>3)]));
    $92=(($inOpen+($i_120<<3))|0);
    $93=(+(HEAPF64[(($92)>>3)]));
    $94=$91<$93;
    $_8=($94?$93:$91);
    $95=($89)-($_8);
    $96=($94?$91:$93);
    $97=(($inLow+($i_120<<3))|0);
    $98=(+(HEAPF64[(($97)>>3)]));
    $99=($96)-($98);
    $100=($95)+($99);
    $102=$100;
   } else if (((($32|0))|0)==((0)|0)) {
    $75=(($inClose+($i_120<<3))|0);
    $76=(+(HEAPF64[(($75)>>3)]));
    $77=(($inOpen+($i_120<<3))|0);
    $78=(+(HEAPF64[(($77)>>3)]));
    $79=($76)-($78);
    $80=(+(Math_abs((+($79)))));
    $102=$80;
   } else if (((($32|0))|0)==((1)|0)) {
    $82=(($inHigh+($i_120<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inLow+($i_120<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=($83)-($85);
    $102=$86;
   } else {
    $102=0.0;
   }

   $103=($BodyDojiPeriodTotal_019)+($102);
   $104=((($i_120)+(1))|0);
   $105=($104|0)<($_startIdx|0);
   if ($105) {
    $BodyDojiPeriodTotal_019=$103;$i_120=$104;
   } else {
    break;
   }
  }
  $smax29=($37?$smax27:$36);
  $BodyDojiPeriodTotal_0_lcssa=$103;$i_1_lcssa=$smax29;
 } else {
  $BodyDojiPeriodTotal_0_lcssa=0.0;$i_1_lcssa=$24;
 }


 $71=($i_1_lcssa|0)>($endIdx|0);
 $smax=($71?$i_1_lcssa:$endIdx);
 $72=((($smax)+(1))|0);
 $BodyLongTrailingIdx_0=$21;$BodyDojiTrailingIdx_0=$24;$outIdx_0=0;$i_2=$i_1_lcssa;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyDojiPeriodTotal_1=$BodyDojiPeriodTotal_0_lcssa;
 while(1) {






  $107=((($i_2)-(1))|0);
  $108=(($inClose+($107<<3))|0);
  $109=(+(HEAPF64[(($108)>>3)]));
  $110=(($inOpen+($107<<3))|0);
  $111=(+(HEAPF64[(($110)>>3)]));
  $112=($109)-($111);
  $113=(+(Math_abs((+($112)))));
  $114=((HEAP32[((272)>>2)])|0);
  $115=(($114+176)|0);
  $116=(+(HEAPF64[(($115)>>3)]));
  $117=(($114+168)|0);
  $118=((HEAP32[(($117)>>2)])|0);
  $119=($118|0)==0;
  do {
   if ($119) {
    $124=(($114+164)|0);
    $125=((HEAP32[(($124)>>2)])|0);
    if (((($125|0))|0)==((0)|0)) {
     $145=$113;
     break;
    } else if (((($125|0))|0)==((1)|0)) {
     $127=(($inHigh+($107<<3))|0);
     $128=(+(HEAPF64[(($127)>>3)]));
     $129=(($inLow+($107<<3))|0);
     $130=(+(HEAPF64[(($129)>>3)]));
     $131=($128)-($130);
     $145=$131;
     break;
    }
    $133=($125|0)==2;
    if (!($133)) {
     $145=0.0;
     break;
    }
    $135=(($inHigh+($107<<3))|0);
    $136=(+(HEAPF64[(($135)>>3)]));
    $137=$109<$111;
    $_9=($137?$111:$109);
    $138=($136)-($_9);
    $139=($137?$109:$111);
    $140=(($inLow+($107<<3))|0);
    $141=(+(HEAPF64[(($140)>>3)]));
    $142=($139)-($141);
    $143=($138)+($142);
    $145=$143;
   } else {
    $121=(+((($118|0))|0));
    $122=($BodyLongPeriodTotal_1)/($121);
    $145=$122;
   }
  } while(0);

  $146=($116)*($145);
  $147=((HEAP32[((272)>>2)])|0);
  $148=(($147+164)|0);
  $149=((HEAP32[(($148)>>2)])|0);
  $150=($149|0)==2;
  $151=($150?(2.0):(1.0));
  $152=($146)/($151);
  $153=$113>$152;
  do {
   if ($153) {
    $155=(($inClose+($i_2<<3))|0);
    $156=(+(HEAPF64[(($155)>>3)]));
    $157=(($inOpen+($i_2<<3))|0);
    $158=(+(HEAPF64[(($157)>>3)]));
    $159=($156)-($158);
    $160=(+(Math_abs((+($159)))));
    $161=(($147+248)|0);
    $162=(+(HEAPF64[(($161)>>3)]));
    $163=(($147+240)|0);
    $164=((HEAP32[(($163)>>2)])|0);
    $165=($164|0)==0;
    do {
     if ($165) {
      $170=(($147+236)|0);
      $171=((HEAP32[(($170)>>2)])|0);
      if (((($171|0))|0)==((1)|0)) {
       $173=(($inHigh+($i_2<<3))|0);
       $174=(+(HEAPF64[(($173)>>3)]));
       $175=(($inLow+($i_2<<3))|0);
       $176=(+(HEAPF64[(($175)>>3)]));
       $177=($174)-($176);
       $191=$177;
       break;
      } else if (((($171|0))|0)==((0)|0)) {
       $191=$160;
       break;
      }
      $179=($171|0)==2;
      if (!($179)) {
       $191=0.0;
       break;
      }
      $181=(($inHigh+($i_2<<3))|0);
      $182=(+(HEAPF64[(($181)>>3)]));
      $183=$156<$158;
      $_10=($183?$158:$156);
      $184=($182)-($_10);
      $185=($183?$156:$158);
      $186=(($inLow+($i_2<<3))|0);
      $187=(+(HEAPF64[(($186)>>3)]));
      $188=($185)-($187);
      $189=($184)+($188);
      $191=$189;
     } else {
      $167=(+((($164|0))|0));
      $168=($BodyDojiPeriodTotal_1)/($167);
      $191=$168;
     }
    } while(0);

    $192=($162)*($191);
    $193=((HEAP32[((272)>>2)])|0);
    $194=(($193+236)|0);
    $195=((HEAP32[(($194)>>2)])|0);
    $196=($195|0)==2;
    $197=($196?(2.0):(1.0));
    $198=($192)/($197);
    $199=$160>$198;
    if ($199) {
     label = 41;
     break;
    }
    $201=(+(HEAPF64[(($108)>>3)]));
    $202=(+(HEAPF64[(($110)>>3)]));
    $203=$201<$202;
    if ($203) {
     label = 38;
    } else {
     $205=(+(HEAPF64[(($157)>>3)]));
     $206=(+(HEAPF64[(($155)>>3)]));
     $207=$205<$206;
     $_11=($207?$205:$206);
     $208=$202>$201;
     $209=($208?$202:$201);
     $210=$_11>$209;
     if (!($210)) {
      label = 38;
     }
    }
    if ((label|0) == 38) {
     label = 0;
     $212=(+(HEAPF64[(($108)>>3)]));
     $213=(+(HEAPF64[(($110)>>3)]));
     $not_=$212<$213;
     if (!($not_)) {
      label = 41;
      break;
     }
     $215=(+(HEAPF64[(($157)>>3)]));
     $216=(+(HEAPF64[(($155)>>3)]));
     $217=$215>$216;
     $_12=($217?$215:$216);
     $218=$213<$212;
     $219=($218?$213:$212);
     $220=$_12<$219;
     if (!($220)) {
      label = 41;
      break;
     }
    }
    $222=(+(HEAPF64[(($108)>>3)]));
    $223=(+(HEAPF64[(($110)>>3)]));
    $224=$222>=$223;
    $225=($224?-100:100);
    $226=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($226)>>2)]=$225;
   } else {
    label = 41;
   }
  } while(0);
  if ((label|0) == 41) {
   label = 0;
   $228=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($228)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $230=((HEAP32[((272)>>2)])|0);
  $231=(($230+164)|0);
  $232=((HEAP32[(($231)>>2)])|0);
  if (((($232|0))|0)==((2)|0)) {
   $245=(($inHigh+($107<<3))|0);
   $246=(+(HEAPF64[(($245)>>3)]));
   $247=(+(HEAPF64[(($108)>>3)]));
   $248=(+(HEAPF64[(($110)>>3)]));
   $249=$247<$248;
   $_13=($249?$248:$247);
   $250=($246)-($_13);
   $251=($249?$247:$248);
   $252=(($inLow+($107<<3))|0);
   $253=(+(HEAPF64[(($252)>>3)]));
   $254=($251)-($253);
   $255=($250)+($254);
   $257=$255;
  } else if (((($232|0))|0)==((1)|0)) {
   $239=(($inHigh+($107<<3))|0);
   $240=(+(HEAPF64[(($239)>>3)]));
   $241=(($inLow+($107<<3))|0);
   $242=(+(HEAPF64[(($241)>>3)]));
   $243=($240)-($242);
   $257=$243;
  } else if (((($232|0))|0)==((0)|0)) {
   $234=(+(HEAPF64[(($108)>>3)]));
   $235=(+(HEAPF64[(($110)>>3)]));
   $236=($234)-($235);
   $237=(+(Math_abs((+($236)))));
   $257=$237;
  } else {
   $257=0.0;
  }

  $258=((HEAP32[((272)>>2)])|0);
  $259=(($258+164)|0);
  $260=((HEAP32[(($259)>>2)])|0);
  if (((($260|0))|0)==((1)|0)) {
   $269=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $270=(+(HEAPF64[(($269)>>3)]));
   $271=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $272=(+(HEAPF64[(($271)>>3)]));
   $273=($270)-($272);
   $289=$273;
  } else if (((($260|0))|0)==((2)|0)) {
   $275=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $276=(+(HEAPF64[(($275)>>3)]));
   $277=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $278=(+(HEAPF64[(($277)>>3)]));
   $279=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $280=(+(HEAPF64[(($279)>>3)]));
   $281=$278<$280;
   $_14=($281?$280:$278);
   $282=($276)-($_14);
   $283=($281?$278:$280);
   $284=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $285=(+(HEAPF64[(($284)>>3)]));
   $286=($283)-($285);
   $287=($282)+($286);
   $289=$287;
  } else if (((($260|0))|0)==((0)|0)) {
   $262=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $263=(+(HEAPF64[(($262)>>3)]));
   $264=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $265=(+(HEAPF64[(($264)>>3)]));
   $266=($263)-($265);
   $267=(+(Math_abs((+($266)))));
   $289=$267;
  } else {
   $289=0.0;
  }

  $290=($257)-($289);
  $291=($BodyLongPeriodTotal_1)+($290);
  $292=((HEAP32[((272)>>2)])|0);
  $293=(($292+236)|0);
  $294=((HEAP32[(($293)>>2)])|0);
  if (((($294|0))|0)==((1)|0)) {
   $303=(($inHigh+($i_2<<3))|0);
   $304=(+(HEAPF64[(($303)>>3)]));
   $305=(($inLow+($i_2<<3))|0);
   $306=(+(HEAPF64[(($305)>>3)]));
   $307=($304)-($306);
   $323=$307;
  } else if (((($294|0))|0)==((2)|0)) {
   $309=(($inHigh+($i_2<<3))|0);
   $310=(+(HEAPF64[(($309)>>3)]));
   $311=(($inClose+($i_2<<3))|0);
   $312=(+(HEAPF64[(($311)>>3)]));
   $313=(($inOpen+($i_2<<3))|0);
   $314=(+(HEAPF64[(($313)>>3)]));
   $315=$312<$314;
   $_15=($315?$314:$312);
   $316=($310)-($_15);
   $317=($315?$312:$314);
   $318=(($inLow+($i_2<<3))|0);
   $319=(+(HEAPF64[(($318)>>3)]));
   $320=($317)-($319);
   $321=($316)+($320);
   $323=$321;
  } else if (((($294|0))|0)==((0)|0)) {
   $296=(($inClose+($i_2<<3))|0);
   $297=(+(HEAPF64[(($296)>>3)]));
   $298=(($inOpen+($i_2<<3))|0);
   $299=(+(HEAPF64[(($298)>>3)]));
   $300=($297)-($299);
   $301=(+(Math_abs((+($300)))));
   $323=$301;
  } else {
   $323=0.0;
  }

  $324=((HEAP32[((272)>>2)])|0);
  $325=(($324+236)|0);
  $326=((HEAP32[(($325)>>2)])|0);
  if (((($326|0))|0)==((0)|0)) {
   $328=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $329=(+(HEAPF64[(($328)>>3)]));
   $330=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $331=(+(HEAPF64[(($330)>>3)]));
   $332=($329)-($331);
   $333=(+(Math_abs((+($332)))));
   $355=$333;
  } else if (((($326|0))|0)==((1)|0)) {
   $335=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $336=(+(HEAPF64[(($335)>>3)]));
   $337=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $338=(+(HEAPF64[(($337)>>3)]));
   $339=($336)-($338);
   $355=$339;
  } else if (((($326|0))|0)==((2)|0)) {
   $341=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $344=(+(HEAPF64[(($343)>>3)]));
   $345=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $346=(+(HEAPF64[(($345)>>3)]));
   $347=$344<$346;
   $_16=($347?$346:$344);
   $348=($342)-($_16);
   $349=($347?$344:$346);
   $350=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $351=(+(HEAPF64[(($350)>>3)]));
   $352=($349)-($351);
   $353=($348)+($352);
   $355=$353;
  } else {
   $355=0.0;
  }

  $356=($323)-($355);
  $357=($BodyDojiPeriodTotal_1)+($356);
  $358=((($i_2)+(1))|0);
  $359=((($BodyLongTrailingIdx_0)+(1))|0);
  $360=((($BodyDojiTrailingIdx_0)+(1))|0);
  $361=($i_2|0)<($endIdx|0);
  if ($361) {
   $BodyLongTrailingIdx_0=$359;$BodyDojiTrailingIdx_0=$360;$outIdx_0=$outIdx_1;$i_2=$358;$BodyLongPeriodTotal_1=$291;$BodyDojiPeriodTotal_1=$357;
  } else {
   break;
  }
 }
 $363=((($72)-($i_1_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$363;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLDRAGONFLYDOJI_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+240)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+336)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 return (($_)|0);
}


function _TA_CDLDRAGONFLYDOJI($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond18=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$BodyDojiPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$smax28=0,$33=0,$smax29=0,$34=0,$35=0;
 var $36=0,$i_024=0,$BodyDojiPeriodTotal_023=.0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0,$46=0,$47=.0,$48=0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$57=.0;
 var $58=0,$_=.0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0,$66=.0,$67=.0,$68=0,$69=0,$smax30=0,$i_1_lcssa=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$70=0,$smax=0,$71=0,$i_121=0,$ShadowVeryShortPeriodTotal_020=.0;
 var $74=0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$_8=.0,$94=.0;
 var $95=.0,$96=0,$97=.0,$98=.0,$99=.0,$101=.0,$102=.0,$103=0,$104=0,$BodyDojiPeriodTotal_1=.0,$ShadowVeryShortPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyDojiTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$106=0,$107=.0,$108=0,$109=.0,$110=.0;
 var $111=.0,$112=0,$113=0,$114=.0,$115=0,$116=0,$117=0,$119=.0,$120=.0,$122=0,$123=0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$133=0,$134=.0,$135=0;
 var $_9=.0,$136=.0,$137=.0,$138=0,$139=.0,$140=.0,$141=.0,$143=.0,$144=.0,$145=0,$146=0,$147=0,$148=0,$149=.0,$150=.0,$151=0,$153=0,$154=.0,$155=.0,$156=.0;
 var $157=0,$_10=.0,$158=.0,$159=0,$160=.0,$161=0,$162=0,$163=0,$165=.0,$166=.0,$168=0,$169=0,$171=.0,$172=.0,$174=0,$175=.0,$176=.0,$178=.0,$179=0,$180=.0;
 var $181=.0,$182=.0,$184=.0,$185=.0,$186=0,$187=0,$188=0,$189=0,$190=.0,$191=.0,$192=0,$194=.0,$195=.0,$196=0,$_12=.0,$197=0,$198=.0,$199=.0,$200=0,$201=.0;
 var $202=0,$203=0,$204=0,$206=.0,$207=.0,$210=.0,$211=.0,$213=.0,$214=.0,$216=.0,$_13=.0,$217=.0,$218=.0,$220=.0,$221=.0,$222=0,$223=0,$224=0,$225=0,$226=.0;
 var $227=.0,$228=0,$230=0,$232=0,$outIdx_1=0,$234=0,$235=0,$236=0,$238=.0,$239=.0,$240=.0,$241=.0,$243=0,$244=.0,$245=0,$246=.0,$247=.0,$249=0,$250=.0,$251=.0;
 var $252=.0,$253=0,$_14=.0,$254=.0,$255=.0,$256=0,$257=.0,$258=.0,$259=.0,$261=.0,$262=0,$263=0,$264=0,$266=0,$267=.0,$268=0,$269=.0,$270=.0,$271=.0,$273=0;
 var $274=.0,$275=0,$276=.0,$277=.0,$279=0,$280=.0,$281=0,$282=.0,$283=0,$284=.0,$285=0,$_15=.0,$286=.0,$287=.0,$288=0,$289=.0,$290=.0,$291=.0,$293=.0,$294=.0;
 var $295=.0,$296=0,$297=0,$298=0,$300=.0,$301=.0,$302=.0,$303=.0,$305=0,$306=.0,$307=0,$308=.0,$309=.0,$311=0,$312=.0,$313=.0,$314=.0,$315=0,$_16=.0,$316=.0;
 var $317=.0,$318=0,$319=.0,$320=.0,$321=.0,$323=.0,$324=0,$325=0,$326=0,$328=0,$329=.0,$330=0,$331=.0,$332=.0,$333=.0,$335=0,$336=.0,$337=0,$338=.0,$339=.0;
 var $341=0,$342=.0,$343=0,$344=.0,$345=0,$346=.0,$347=0,$_17=.0,$348=.0,$349=.0,$350=0,$351=.0,$352=.0,$353=.0,$355=.0,$356=.0,$357=.0,$358=0,$359=0,$360=0;
 var $361=0,$363=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond18=$10|$or_cond5_not;
 if ($or_cond18) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLDRAGONFLYDOJI_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+240)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+336)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+236)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $BodyDojiPeriodTotal_023=0.0;$i_024=$20;
  while(1) {


   if (((($27|0))|0)==((1)|0)) {
    $46=(($inHigh+($i_024<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inLow+($i_024<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=($47)-($49);
    $66=$50;
   } else if (((($27|0))|0)==((2)|0)) {
    $52=(($inHigh+($i_024<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inClose+($i_024<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inOpen+($i_024<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=$55<$57;
    $_=($58?$57:$55);
    $59=($53)-($_);
    $60=($58?$55:$57);
    $61=(($inLow+($i_024<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=($60)-($62);
    $64=($59)+($63);
    $66=$64;
   } else if (((($27|0))|0)==((0)|0)) {
    $39=(($inClose+($i_024<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inOpen+($i_024<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $44=(+(Math_abs((+($43)))));
    $66=$44;
   } else {
    $66=0.0;
   }

   $67=($BodyDojiPeriodTotal_023)+($66);
   $68=((($i_024)+(1))|0);
   $69=($68|0)<($_startIdx|0);
   if ($69) {
    $BodyDojiPeriodTotal_023=$67;$i_024=$68;
   } else {
    $BodyDojiPeriodTotal_0_lcssa=$67;
    break;
   }
  }
 } else {
  $BodyDojiPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+332)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=($12|0)>($startIdx|0);
  $smax28=($32?$12:$startIdx);
  $33=($12|0)>($startIdx|0);
  $smax29=($33?$12:$startIdx);
  $34=((($smax29)+(1))|0);
  $35=((($34)-($22))|0);
  $36=($smax28|0)>($35|0);
  $ShadowVeryShortPeriodTotal_020=0.0;$i_121=$23;
  while(1) {


   if (((($31|0))|0)==((0)|0)) {
    $74=(($inClose+($i_121<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($i_121<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $101=$79;
   } else if (((($31|0))|0)==((2)|0)) {
    $87=(($inHigh+($i_121<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inClose+($i_121<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inOpen+($i_121<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$90<$92;
    $_8=($93?$92:$90);
    $94=($88)-($_8);
    $95=($93?$90:$92);
    $96=(($inLow+($i_121<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $101=$99;
   } else if (((($31|0))|0)==((1)|0)) {
    $81=(($inHigh+($i_121<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($i_121<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $101=$85;
   } else {
    $101=0.0;
   }

   $102=($ShadowVeryShortPeriodTotal_020)+($101);
   $103=((($i_121)+(1))|0);
   $104=($103|0)<($_startIdx|0);
   if ($104) {
    $ShadowVeryShortPeriodTotal_020=$102;$i_121=$103;
   } else {
    break;
   }
  }
  $smax30=($36?$smax28:$35);
  $ShadowVeryShortPeriodTotal_0_lcssa=$102;$i_1_lcssa=$smax30;
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;$i_1_lcssa=$23;
 }


 $70=($i_1_lcssa|0)>($endIdx|0);
 $smax=($70?$i_1_lcssa:$endIdx);
 $71=((($smax)+(1))|0);
 $ShadowVeryShortTrailingIdx_0=$23;$BodyDojiTrailingIdx_0=$20;$outIdx_0=0;$i_2=$i_1_lcssa;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;$BodyDojiPeriodTotal_1=$BodyDojiPeriodTotal_0_lcssa;
 while(1) {






  $106=(($inClose+($i_2<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=(($inOpen+($i_2<<3))|0);
  $109=(+(HEAPF64[(($108)>>3)]));
  $110=($107)-($109);
  $111=(+(Math_abs((+($110)))));
  $112=((HEAP32[((272)>>2)])|0);
  $113=(($112+248)|0);
  $114=(+(HEAPF64[(($113)>>3)]));
  $115=(($112+240)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  $117=($116|0)==0;
  do {
   if ($117) {
    $122=(($112+236)|0);
    $123=((HEAP32[(($122)>>2)])|0);
    if (((($123|0))|0)==((1)|0)) {
     $125=(($inHigh+($i_2<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=(($inLow+($i_2<<3))|0);
     $128=(+(HEAPF64[(($127)>>3)]));
     $129=($126)-($128);
     $143=$129;
     break;
    } else if (((($123|0))|0)==((0)|0)) {
     $143=$111;
     break;
    }
    $131=($123|0)==2;
    if (!($131)) {
     $143=0.0;
     break;
    }
    $133=(($inHigh+($i_2<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=$107<$109;
    $_9=($135?$109:$107);
    $136=($134)-($_9);
    $137=($135?$107:$109);
    $138=(($inLow+($i_2<<3))|0);
    $139=(+(HEAPF64[(($138)>>3)]));
    $140=($137)-($139);
    $141=($136)+($140);
    $143=$141;
   } else {
    $119=(+((($116|0))|0));
    $120=($BodyDojiPeriodTotal_1)/($119);
    $143=$120;
   }
  } while(0);

  $144=($114)*($143);
  $145=((HEAP32[((272)>>2)])|0);
  $146=(($145+236)|0);
  $147=((HEAP32[(($146)>>2)])|0);
  $148=($147|0)==2;
  $149=($148?(2.0):(1.0));
  $150=($144)/($149);
  $151=$111>$150;
  do {
   if ($151) {
    label = 44;
   } else {
    $153=(($inHigh+($i_2<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=(+(HEAPF64[(($106)>>3)]));
    $156=(+(HEAPF64[(($108)>>3)]));
    $157=$155<$156;
    $_10=($157?$156:$155);
    $158=($154)-($_10);
    $159=(($145+344)|0);
    $160=(+(HEAPF64[(($159)>>3)]));
    $161=(($145+336)|0);
    $162=((HEAP32[(($161)>>2)])|0);
    $163=($162|0)==0;
    do {
     if ($163) {
      $168=(($145+332)|0);
      $169=((HEAP32[(($168)>>2)])|0);
      if (((($169|0))|0)==((1)|0)) {
       $174=(($inLow+($i_2<<3))|0);
       $175=(+(HEAPF64[(($174)>>3)]));
       $176=($154)-($175);
       $184=$176;
       break;
      } else if (((($169|0))|0)==((2)|0)) {
       $178=($157?$155:$156);
       $179=(($inLow+($i_2<<3))|0);
       $180=(+(HEAPF64[(($179)>>3)]));
       $181=($178)-($180);
       $182=($158)+($181);
       $184=$182;
       break;
      } else if (((($169|0))|0)==((0)|0)) {
       $171=($155)-($156);
       $172=(+(Math_abs((+($171)))));
       $184=$172;
       break;
      } else {
       $184=0.0;
       break;
      }
     } else {
      $165=(+((($162|0))|0));
      $166=($ShadowVeryShortPeriodTotal_1)/($165);
      $184=$166;
     }
    } while(0);

    $185=($160)*($184);
    $186=((HEAP32[((272)>>2)])|0);
    $187=(($186+332)|0);
    $188=((HEAP32[(($187)>>2)])|0);
    $189=($188|0)==2;
    $190=($189?(2.0):(1.0));
    $191=($185)/($190);
    $192=$158<$191;
    if (!($192)) {
     label = 44;
     break;
    }
    $194=(+(HEAPF64[(($106)>>3)]));
    $195=(+(HEAPF64[(($108)>>3)]));
    $196=$194<$195;
    $_12=($196?$194:$195);
    $197=(($inLow+($i_2<<3))|0);
    $198=(+(HEAPF64[(($197)>>3)]));
    $199=($_12)-($198);
    $200=(($186+344)|0);
    $201=(+(HEAPF64[(($200)>>3)]));
    $202=(($186+336)|0);
    $203=((HEAP32[(($202)>>2)])|0);
    $204=($203|0)==0;
    do {
     if ($204) {
      if (((($188|0))|0)==((0)|0)) {
       $210=($194)-($195);
       $211=(+(Math_abs((+($210)))));
       $220=$211;
       break;
      } else if (((($188|0))|0)==((1)|0)) {
       $213=(+(HEAPF64[(($153)>>3)]));
       $214=($213)-($198);
       $220=$214;
       break;
      } else if (((($188|0))|0)==((2)|0)) {
       $216=(+(HEAPF64[(($153)>>3)]));
       $_13=($196?$195:$194);
       $217=($216)-($_13);
       $218=($199)+($217);
       $220=$218;
       break;
      } else {
       $220=0.0;
       break;
      }
     } else {
      $206=(+((($203|0))|0));
      $207=($ShadowVeryShortPeriodTotal_1)/($206);
      $220=$207;
     }
    } while(0);

    $221=($201)*($220);
    $222=((HEAP32[((272)>>2)])|0);
    $223=(($222+332)|0);
    $224=((HEAP32[(($223)>>2)])|0);
    $225=($224|0)==2;
    $226=($225?(2.0):(1.0));
    $227=($221)/($226);
    $228=$199>$227;
    if (!($228)) {
     label = 44;
     break;
    }
    $230=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($230)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 44) {
   label = 0;
   $232=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($232)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $234=((HEAP32[((272)>>2)])|0);
  $235=(($234+236)|0);
  $236=((HEAP32[(($235)>>2)])|0);
  if (((($236|0))|0)==((0)|0)) {
   $238=(+(HEAPF64[(($106)>>3)]));
   $239=(+(HEAPF64[(($108)>>3)]));
   $240=($238)-($239);
   $241=(+(Math_abs((+($240)))));
   $261=$241;
  } else if (((($236|0))|0)==((1)|0)) {
   $243=(($inHigh+($i_2<<3))|0);
   $244=(+(HEAPF64[(($243)>>3)]));
   $245=(($inLow+($i_2<<3))|0);
   $246=(+(HEAPF64[(($245)>>3)]));
   $247=($244)-($246);
   $261=$247;
  } else if (((($236|0))|0)==((2)|0)) {
   $249=(($inHigh+($i_2<<3))|0);
   $250=(+(HEAPF64[(($249)>>3)]));
   $251=(+(HEAPF64[(($106)>>3)]));
   $252=(+(HEAPF64[(($108)>>3)]));
   $253=$251<$252;
   $_14=($253?$252:$251);
   $254=($250)-($_14);
   $255=($253?$251:$252);
   $256=(($inLow+($i_2<<3))|0);
   $257=(+(HEAPF64[(($256)>>3)]));
   $258=($255)-($257);
   $259=($254)+($258);
   $261=$259;
  } else {
   $261=0.0;
  }

  $262=((HEAP32[((272)>>2)])|0);
  $263=(($262+236)|0);
  $264=((HEAP32[(($263)>>2)])|0);
  if (((($264|0))|0)==((0)|0)) {
   $266=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $267=(+(HEAPF64[(($266)>>3)]));
   $268=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $269=(+(HEAPF64[(($268)>>3)]));
   $270=($267)-($269);
   $271=(+(Math_abs((+($270)))));
   $293=$271;
  } else if (((($264|0))|0)==((1)|0)) {
   $273=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $274=(+(HEAPF64[(($273)>>3)]));
   $275=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $276=(+(HEAPF64[(($275)>>3)]));
   $277=($274)-($276);
   $293=$277;
  } else if (((($264|0))|0)==((2)|0)) {
   $279=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $280=(+(HEAPF64[(($279)>>3)]));
   $281=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $282=(+(HEAPF64[(($281)>>3)]));
   $283=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $284=(+(HEAPF64[(($283)>>3)]));
   $285=$282<$284;
   $_15=($285?$284:$282);
   $286=($280)-($_15);
   $287=($285?$282:$284);
   $288=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $289=(+(HEAPF64[(($288)>>3)]));
   $290=($287)-($289);
   $291=($286)+($290);
   $293=$291;
  } else {
   $293=0.0;
  }

  $294=($261)-($293);
  $295=($BodyDojiPeriodTotal_1)+($294);
  $296=((HEAP32[((272)>>2)])|0);
  $297=(($296+332)|0);
  $298=((HEAP32[(($297)>>2)])|0);
  if (((($298|0))|0)==((0)|0)) {
   $300=(+(HEAPF64[(($106)>>3)]));
   $301=(+(HEAPF64[(($108)>>3)]));
   $302=($300)-($301);
   $303=(+(Math_abs((+($302)))));
   $323=$303;
  } else if (((($298|0))|0)==((1)|0)) {
   $305=(($inHigh+($i_2<<3))|0);
   $306=(+(HEAPF64[(($305)>>3)]));
   $307=(($inLow+($i_2<<3))|0);
   $308=(+(HEAPF64[(($307)>>3)]));
   $309=($306)-($308);
   $323=$309;
  } else if (((($298|0))|0)==((2)|0)) {
   $311=(($inHigh+($i_2<<3))|0);
   $312=(+(HEAPF64[(($311)>>3)]));
   $313=(+(HEAPF64[(($106)>>3)]));
   $314=(+(HEAPF64[(($108)>>3)]));
   $315=$313<$314;
   $_16=($315?$314:$313);
   $316=($312)-($_16);
   $317=($315?$313:$314);
   $318=(($inLow+($i_2<<3))|0);
   $319=(+(HEAPF64[(($318)>>3)]));
   $320=($317)-($319);
   $321=($316)+($320);
   $323=$321;
  } else {
   $323=0.0;
  }

  $324=((HEAP32[((272)>>2)])|0);
  $325=(($324+332)|0);
  $326=((HEAP32[(($325)>>2)])|0);
  if (((($326|0))|0)==((0)|0)) {
   $328=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $329=(+(HEAPF64[(($328)>>3)]));
   $330=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $331=(+(HEAPF64[(($330)>>3)]));
   $332=($329)-($331);
   $333=(+(Math_abs((+($332)))));
   $355=$333;
  } else if (((($326|0))|0)==((1)|0)) {
   $335=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $336=(+(HEAPF64[(($335)>>3)]));
   $337=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $338=(+(HEAPF64[(($337)>>3)]));
   $339=($336)-($338);
   $355=$339;
  } else if (((($326|0))|0)==((2)|0)) {
   $341=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $344=(+(HEAPF64[(($343)>>3)]));
   $345=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $346=(+(HEAPF64[(($345)>>3)]));
   $347=$344<$346;
   $_17=($347?$346:$344);
   $348=($342)-($_17);
   $349=($347?$344:$346);
   $350=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $351=(+(HEAPF64[(($350)>>3)]));
   $352=($349)-($351);
   $353=($348)+($352);
   $355=$353;
  } else {
   $355=0.0;
  }

  $356=($323)-($355);
  $357=($ShadowVeryShortPeriodTotal_1)+($356);
  $358=((($i_2)+(1))|0);
  $359=((($BodyDojiTrailingIdx_0)+(1))|0);
  $360=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $361=($i_2|0)<($endIdx|0);
  if ($361) {
   $ShadowVeryShortTrailingIdx_0=$360;$BodyDojiTrailingIdx_0=$359;$outIdx_0=$outIdx_1;$i_2=$358;$ShadowVeryShortPeriodTotal_1=$357;$BodyDojiPeriodTotal_1=$295;
  } else {
   break;
  }
 }
 $363=((($71)-($i_1_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$363;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLENGULFING($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond11=0,$12=0,$_startIdx=0,$13=0,$14=0,$smax=0,$i_0=0;
 var $outIdx_0=0,$17=0,$18=.0,$19=0,$20=.0,$21=0,$23=0,$24=0,$25=.0,$26=0,$27=.0,$not_7=0,$29=0,$30=0,$or_cond9=0,$32=0,$33=0,$or_cond12=0,$35=.0,$36=.0;
 var $not_=0,$38=0,$39=0,$40=.0,$41=0,$42=.0,$43=0,$45=0,$46=0,$or_cond10=0,$48=0,$49=0,$or_cond13=0,$51=.0,$52=0,$53=0,$54=.0,$55=0,$57=.0,$58=0;
 var $59=.0,$60=0,$62=0,$63=0,$64=0,$66=.0,$67=.0,$68=0,$69=0,$70=0,$72=0,$outIdx_1=0,$74=0,$75=0,$77=0,$78=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond11=$10|$or_cond5_not;
 if ($or_cond11) {
  $_0=2;

  return (($_0)|0);
 }
 $12=($startIdx|0)<2;
 $_startIdx=($12?2:$startIdx);
 $13=($_startIdx|0)>($endIdx|0);
 if ($13) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $14=($startIdx|0)>2;
 $smax=($14?$startIdx:2);
 $outIdx_0=0;$i_0=$_startIdx;
 while(1) {


  $17=(($inClose+($i_0<<3))|0);
  $18=(+(HEAPF64[(($17)>>3)]));
  $19=(($inOpen+($i_0<<3))|0);
  $20=(+(HEAPF64[(($19)>>3)]));
  $21=$18<$20;
  do {
   if ($21) {
    label = 11;
   } else {
    $23=((($i_0)-(1))|0);
    $24=(($inClose+($23<<3))|0);
    $25=(+(HEAPF64[(($24)>>3)]));
    $26=(($inOpen+($23<<3))|0);
    $27=(+(HEAPF64[(($26)>>3)]));
    $not_7=$25<$27;
    if (!($not_7)) {
     label = 11;
     break;
    }
    $29=$18>=$27;
    $30=$20<$25;
    $or_cond9=$29&$30;
    if ($or_cond9) {
     label = 15;
     break;
    }
    $32=$18<=$27;
    $33=$20>$25;
    $or_cond12=$32|$33;
    if ($or_cond12) {
     label = 11;
    } else {
     label = 15;
    }
   }
  } while(0);
  L20: do {
   if ((label|0) == 11) {
    label = 0;
    $35=(+(HEAPF64[(($17)>>3)]));
    $36=(+(HEAPF64[(($19)>>3)]));
    $not_=$35<$36;
    do {
     if ($not_) {
      $38=((($i_0)-(1))|0);
      $39=(($inClose+($38<<3))|0);
      $40=(+(HEAPF64[(($39)>>3)]));
      $41=(($inOpen+($38<<3))|0);
      $42=(+(HEAPF64[(($41)>>3)]));
      $43=$40<$42;
      if ($43) {
       break;
      }
      $45=$36>=$40;
      $46=$35<$42;
      $or_cond10=$45&$46;
      if ($or_cond10) {
       label = 15;
       break L20;
      }
      $48=$36<=$40;
      $49=$35>$42;
      $or_cond13=$48|$49;
      if (!($or_cond13)) {
       label = 15;
       break L20;
      }
     }
    } while(0);
    $72=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($72)>>2)]=0;
   }
  } while(0);
  L27: do {
   if ((label|0) == 15) {
    label = 0;
    $51=(+(HEAPF64[(($19)>>3)]));
    $52=((($i_0)-(1))|0);
    $53=(($inClose+($52<<3))|0);
    $54=(+(HEAPF64[(($53)>>3)]));
    $55=$51!=$54;
    do {
     if ($55) {
      $57=(+(HEAPF64[(($17)>>3)]));
      $58=(($inOpen+($52<<3))|0);
      $59=(+(HEAPF64[(($58)>>3)]));
      $60=$57!=$59;
      if (!($60)) {
       break;
      }
      $62=$57>=$51;
      $63=($62?100:-100);
      $64=(($outInteger+($outIdx_0<<2))|0);
      HEAP32[(($64)>>2)]=$63;
      break L27;
     }
    } while(0);
    $66=(+(HEAPF64[(($17)>>3)]));
    $67=(+(HEAPF64[(($19)>>3)]));
    $68=$66>=$67;
    $69=($68?80:-80);
    $70=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($70)>>2)]=$69;
   }
  } while(0);
  $outIdx_1=((($outIdx_0)+(1))|0);
  $74=((($i_0)+(1))|0);
  $75=($i_0|0)<($endIdx|0);
  if ($75) {
   $outIdx_0=$outIdx_1;$i_0=$74;
  } else {
   break;
  }
 }
 $77=((($endIdx)+(1))|0);
 $78=((($77)-($smax))|0);
 HEAP32[(($outNBElement)>>2)]=$78;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLEVENINGDOJISTAR_Lookback($optInPenetration){
 $optInPenetration=+($optInPenetration);
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$_=0,$12=0,$13=0,$14=0,$__=0,$15=0,$_02=0,label=0;

 $1=$optInPenetration==(-4.0e+37);
 do {
  if (!($1)) {
   $3=$optInPenetration<(0.0);
   $4=$optInPenetration>(3.0e+37);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_02=-1;
   } else {
    break;
   }

   return (($_02)|0);
  }
 } while(0);
 $6=((HEAP32[((272)>>2)])|0);
 $7=(($6+240)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($6+168)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)>($10|0);
 $_=($11?$8:$10);
 $12=(($6+216)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=($_|0)>($13|0);
 $__=($14?$_:$13);
 $15=((($__)+(2))|0);
 $_02=$15;

 return (($_02)|0);
}


function _TA_CDLEVENINGDOJISTAR($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$optInPenetration,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInPenetration=+($optInPenetration);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond10=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$11=0,$13=0,$14=0,$or_cond7=0,$_09=.0,$16=0,$18=0,$19=0,$_startIdx=0;
 var $20=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$BodyLongPeriodTotal_0_lcssa=.0,$39=0,$40=0;
 var $41=0,$42=0,$i_032=0,$BodyLongPeriodTotal_031=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=.0,$58=0,$59=.0,$60=0,$61=.0,$62=0;
 var $63=.0,$64=0,$_=.0,$65=.0,$66=.0,$67=0,$68=.0,$69=.0,$70=.0,$72=.0,$73=.0,$74=0,$75=0,$BodyDojiPeriodTotal_0_lcssa=.0,$76=0,$77=0,$78=0,$79=0,$i_128=0,$BodyDojiPeriodTotal_027=.0;
 var $82=0,$83=.0,$84=0,$85=.0,$86=.0,$87=.0,$89=0,$90=.0,$91=0,$92=.0,$93=.0,$95=0,$96=.0,$97=0,$98=.0,$99=0,$100=.0,$101=0,$_11=.0,$102=.0;
 var $103=.0,$104=0,$105=.0,$106=.0,$107=.0,$109=.0,$110=.0,$111=0,$112=0,$BodyShortPeriodTotal_0_lcssa=.0,$113=0,$smax=0,$114=0,$smax35=0,$115=0,$smax36=0,$i_225=0,$BodyShortPeriodTotal_024=.0,$118=0,$119=.0;
 var $120=0,$121=.0,$122=.0,$123=.0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$132=.0,$133=0,$134=.0,$135=0,$136=.0,$137=0,$_12=.0,$138=.0,$139=.0,$140=0;
 var $141=.0,$142=.0,$143=.0,$145=.0,$146=.0,$147=0,$148=0,$BodyDojiPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$BodyShortPeriodTotal_1=.0,$i_3=0,$outIdx_0=0,$BodyDojiTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$BodyShortTrailingIdx_0=0,$150=0,$151=0,$152=.0,$153=0,$154=.0;
 var $155=.0,$156=.0,$157=0,$158=0,$159=.0,$160=0,$161=0,$162=0,$164=.0,$165=.0,$167=0,$168=0,$170=0,$171=.0,$172=0,$173=.0,$174=.0,$176=0,$178=0,$179=.0;
 var $180=0,$_13=.0,$181=.0,$182=.0,$183=0,$184=.0,$185=.0,$186=.0,$188=.0,$189=.0,$190=0,$191=0,$192=0,$193=0,$194=.0,$195=.0,$196=0,$198=.0,$199=.0,$200=0;
 var $202=0,$203=0,$204=.0,$205=0,$206=.0,$207=.0,$208=.0,$209=0,$210=.0,$211=0,$212=0,$213=0,$215=.0,$216=.0,$218=0,$219=0,$221=0,$222=.0,$223=0,$224=.0;
 var $225=.0,$227=0,$229=0,$230=.0,$231=0,$_14=.0,$232=.0,$233=.0,$234=0,$235=.0,$236=.0,$237=.0,$239=.0,$240=.0,$241=0,$242=0,$243=0,$244=0,$245=.0,$246=.0;
 var $247=0,$249=.0,$250=.0,$251=0,$_15=.0,$252=.0,$253=.0,$254=0,$255=.0,$256=0,$258=0,$259=.0,$260=0,$261=.0,$262=.0,$263=.0,$264=0,$265=.0,$266=0,$267=0;
 var $268=0,$270=.0,$271=.0,$273=0,$274=0,$276=0,$277=.0,$278=0,$279=.0,$280=.0,$282=0,$284=0,$285=.0,$286=0,$_16=.0,$287=.0,$288=.0,$289=0,$290=.0,$291=.0;
 var $292=.0,$294=.0,$295=.0,$296=0,$297=0,$298=0,$299=0,$300=.0,$301=.0,$302=0,$304=.0,$305=.0,$not_=0,$307=.0,$308=.0,$309=.0,$310=.0,$311=.0,$312=.0,$313=0;
 var $315=0,$317=0,$outIdx_1=0,$319=0,$320=0,$321=0,$323=.0,$324=.0,$325=.0,$326=.0,$328=0,$329=.0,$330=0,$331=.0,$332=.0,$334=0,$335=.0,$336=.0,$337=.0,$338=0;
 var $_17=.0,$339=.0,$340=.0,$341=0,$342=.0,$343=.0,$344=.0,$346=.0,$347=0,$348=0,$349=0,$351=0,$352=.0,$353=0,$354=.0,$355=.0,$356=.0,$358=0,$359=.0,$360=0;
 var $361=.0,$362=.0,$364=0,$365=.0,$366=0,$367=.0,$368=0,$369=.0,$370=0,$_18=.0,$371=.0,$372=.0,$373=0,$374=.0,$375=.0,$376=.0,$378=.0,$379=.0,$380=.0,$381=0;
 var $382=0,$383=0,$385=0,$386=0,$387=.0,$388=0,$389=.0,$390=.0,$391=.0,$393=0,$394=0,$395=.0,$396=0,$397=.0,$398=.0,$400=0,$401=0,$402=.0,$403=0,$404=.0;
 var $405=0,$406=.0,$407=0,$_19=.0,$408=.0,$409=.0,$410=0,$411=.0,$412=.0,$413=.0,$415=.0,$416=0,$417=0,$418=0,$420=0,$421=.0,$422=0,$423=.0,$424=.0,$425=.0;
 var $427=0,$428=.0,$429=0,$430=.0,$431=.0,$433=0,$434=.0,$435=0,$436=.0,$437=0,$438=.0,$439=0,$_20=.0,$440=.0,$441=.0,$442=0,$443=.0,$444=.0,$445=.0,$447=.0;
 var $448=.0,$449=.0,$450=0,$451=0,$452=0,$454=0,$455=.0,$456=0,$457=.0,$458=.0,$459=.0,$461=0,$462=.0,$463=0,$464=.0,$465=.0,$467=0,$468=.0,$469=0,$470=.0;
 var $471=0,$472=.0,$473=0,$_21=.0,$474=.0,$475=.0,$476=0,$477=.0,$478=.0,$479=.0,$481=.0,$482=0,$483=0,$484=0,$486=0,$487=.0,$488=0,$489=.0,$490=.0,$491=.0;
 var $493=0,$494=.0,$495=0,$496=.0,$497=.0,$499=0,$500=.0,$501=0,$502=.0,$503=0,$504=.0,$505=0,$_22=.0,$506=.0,$507=.0,$508=0,$509=.0,$510=.0,$511=.0,$513=.0;
 var $514=.0,$515=.0,$516=0,$517=0,$518=0,$519=0,$520=0,$522=0,$523=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond10=$3|$4;
 if ($or_cond10) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 if (!($or_cond5)) {
  $_0=2;

  return (($_0)|0);
 }
 $11=$optInPenetration==(-4.0e+37);
 do {
  if ($11) {
   $_09=0.3;
  } else {
   $13=$optInPenetration<(0.0);
   $14=$optInPenetration>(3.0e+37);
   $or_cond7=$13|$14;
   if ($or_cond7) {
    $_0=2;
   } else {
    $_09=$optInPenetration;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $16=($outInteger|0)==0;
 if ($16) {
  $_0=2;

  return (($_0)|0);
 }
 $18=((_TA_CDLEVENINGDOJISTAR_Lookback($_09))|0);
 $19=($18|0)>($startIdx|0);
 $_startIdx=($19?$18:$startIdx);
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $23=((($_startIdx)-(2))|0);
 $24=((HEAP32[((272)>>2)])|0);
 $25=(($24+168)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=((($23)-($26))|0);
 $28=((($_startIdx)-(1))|0);
 $29=(($24+240)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=((($28)-($30))|0);
 $32=(($24+216)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=((($_startIdx)-($33))|0);
 $35=($26|0)>0;
 if ($35) {
  $36=((HEAP32[((272)>>2)])|0);
  $37=(($36+164)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $BodyLongPeriodTotal_031=0.0;$i_032=$27;
  while(1) {


   if (((($38|0))|0)==((2)|0)) {
    $58=(($inHigh+($i_032<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=(($inClose+($i_032<<3))|0);
    $61=(+(HEAPF64[(($60)>>3)]));
    $62=(($inOpen+($i_032<<3))|0);
    $63=(+(HEAPF64[(($62)>>3)]));
    $64=$61<$63;
    $_=($64?$63:$61);
    $65=($59)-($_);
    $66=($64?$61:$63);
    $67=(($inLow+($i_032<<3))|0);
    $68=(+(HEAPF64[(($67)>>3)]));
    $69=($66)-($68);
    $70=($65)+($69);
    $72=$70;
   } else if (((($38|0))|0)==((0)|0)) {
    $45=(($inClose+($i_032<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=(($inOpen+($i_032<<3))|0);
    $48=(+(HEAPF64[(($47)>>3)]));
    $49=($46)-($48);
    $50=(+(Math_abs((+($49)))));
    $72=$50;
   } else if (((($38|0))|0)==((1)|0)) {
    $52=(($inHigh+($i_032<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inLow+($i_032<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=($53)-($55);
    $72=$56;
   } else {
    $72=0.0;
   }

   $73=($BodyLongPeriodTotal_031)+($72);
   $74=((($i_032)+(1))|0);
   $75=($74|0)<($23|0);
   if ($75) {
    $BodyLongPeriodTotal_031=$73;$i_032=$74;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$73;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $39=($30|0)>0;
 if ($39) {
  $40=((HEAP32[((272)>>2)])|0);
  $41=(($40+236)|0);
  $42=((HEAP32[(($41)>>2)])|0);
  $BodyDojiPeriodTotal_027=0.0;$i_128=$31;
  while(1) {


   if (((($42|0))|0)==((2)|0)) {
    $95=(($inHigh+($i_128<<3))|0);
    $96=(+(HEAPF64[(($95)>>3)]));
    $97=(($inClose+($i_128<<3))|0);
    $98=(+(HEAPF64[(($97)>>3)]));
    $99=(($inOpen+($i_128<<3))|0);
    $100=(+(HEAPF64[(($99)>>3)]));
    $101=$98<$100;
    $_11=($101?$100:$98);
    $102=($96)-($_11);
    $103=($101?$98:$100);
    $104=(($inLow+($i_128<<3))|0);
    $105=(+(HEAPF64[(($104)>>3)]));
    $106=($103)-($105);
    $107=($102)+($106);
    $109=$107;
   } else if (((($42|0))|0)==((0)|0)) {
    $82=(($inClose+($i_128<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inOpen+($i_128<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=($83)-($85);
    $87=(+(Math_abs((+($86)))));
    $109=$87;
   } else if (((($42|0))|0)==((1)|0)) {
    $89=(($inHigh+($i_128<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inLow+($i_128<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=($90)-($92);
    $109=$93;
   } else {
    $109=0.0;
   }

   $110=($BodyDojiPeriodTotal_027)+($109);
   $111=((($i_128)+(1))|0);
   $112=($111|0)<($28|0);
   if ($112) {
    $BodyDojiPeriodTotal_027=$110;$i_128=$111;
   } else {
    $BodyDojiPeriodTotal_0_lcssa=$110;
    break;
   }
  }
 } else {
  $BodyDojiPeriodTotal_0_lcssa=0.0;
 }

 $76=($33|0)>0;
 if ($76) {
  $77=((HEAP32[((272)>>2)])|0);
  $78=(($77+212)|0);
  $79=((HEAP32[(($78)>>2)])|0);
  $BodyShortPeriodTotal_024=0.0;$i_225=$34;
  while(1) {


   if (((($79|0))|0)==((2)|0)) {
    $131=(($inHigh+($i_225<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=(($inClose+($i_225<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=(($inOpen+($i_225<<3))|0);
    $136=(+(HEAPF64[(($135)>>3)]));
    $137=$134<$136;
    $_12=($137?$136:$134);
    $138=($132)-($_12);
    $139=($137?$134:$136);
    $140=(($inLow+($i_225<<3))|0);
    $141=(+(HEAPF64[(($140)>>3)]));
    $142=($139)-($141);
    $143=($138)+($142);
    $145=$143;
   } else if (((($79|0))|0)==((1)|0)) {
    $125=(($inHigh+($i_225<<3))|0);
    $126=(+(HEAPF64[(($125)>>3)]));
    $127=(($inLow+($i_225<<3))|0);
    $128=(+(HEAPF64[(($127)>>3)]));
    $129=($126)-($128);
    $145=$129;
   } else if (((($79|0))|0)==((0)|0)) {
    $118=(($inClose+($i_225<<3))|0);
    $119=(+(HEAPF64[(($118)>>3)]));
    $120=(($inOpen+($i_225<<3))|0);
    $121=(+(HEAPF64[(($120)>>3)]));
    $122=($119)-($121);
    $123=(+(Math_abs((+($122)))));
    $145=$123;
   } else {
    $145=0.0;
   }

   $146=($BodyShortPeriodTotal_024)+($145);
   $147=((($i_225)+(1))|0);
   $148=($147|0)<($_startIdx|0);
   if ($148) {
    $BodyShortPeriodTotal_024=$146;$i_225=$147;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$146;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;
 }

 $113=($18|0)>($endIdx|0);
 $smax=($113?$18:$endIdx);
 $114=($smax|0)>($startIdx|0);
 $smax35=($114?$smax:$startIdx);
 $115=($18|0)>($startIdx|0);
 $smax36=($115?$18:$startIdx);
 $BodyShortTrailingIdx_0=$34;$BodyLongTrailingIdx_0=$27;$BodyDojiTrailingIdx_0=$31;$outIdx_0=0;$i_3=$_startIdx;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyDojiPeriodTotal_1=$BodyDojiPeriodTotal_0_lcssa;
 while(1) {








  $150=((($i_3)-(2))|0);
  $151=(($inClose+($150<<3))|0);
  $152=(+(HEAPF64[(($151)>>3)]));
  $153=(($inOpen+($150<<3))|0);
  $154=(+(HEAPF64[(($153)>>3)]));
  $155=($152)-($154);
  $156=(+(Math_abs((+($155)))));
  $157=((HEAP32[((272)>>2)])|0);
  $158=(($157+176)|0);
  $159=(+(HEAPF64[(($158)>>3)]));
  $160=(($157+168)|0);
  $161=((HEAP32[(($160)>>2)])|0);
  $162=($161|0)==0;
  do {
   if ($162) {
    $167=(($157+164)|0);
    $168=((HEAP32[(($167)>>2)])|0);
    if (((($168|0))|0)==((0)|0)) {
     $188=$156;
     break;
    } else if (((($168|0))|0)==((1)|0)) {
     $170=(($inHigh+($150<<3))|0);
     $171=(+(HEAPF64[(($170)>>3)]));
     $172=(($inLow+($150<<3))|0);
     $173=(+(HEAPF64[(($172)>>3)]));
     $174=($171)-($173);
     $188=$174;
     break;
    }
    $176=($168|0)==2;
    if (!($176)) {
     $188=0.0;
     break;
    }
    $178=(($inHigh+($150<<3))|0);
    $179=(+(HEAPF64[(($178)>>3)]));
    $180=$152<$154;
    $_13=($180?$154:$152);
    $181=($179)-($_13);
    $182=($180?$152:$154);
    $183=(($inLow+($150<<3))|0);
    $184=(+(HEAPF64[(($183)>>3)]));
    $185=($182)-($184);
    $186=($181)+($185);
    $188=$186;
   } else {
    $164=(+((($161|0))|0));
    $165=($BodyLongPeriodTotal_1)/($164);
    $188=$165;
   }
  } while(0);

  $189=($159)*($188);
  $190=((HEAP32[((272)>>2)])|0);
  $191=(($190+164)|0);
  $192=((HEAP32[(($191)>>2)])|0);
  $193=($192|0)==2;
  $194=($193?(2.0):(1.0));
  $195=($189)/($194);
  $196=$156>$195;
  do {
   if ($196) {
    $198=(+(HEAPF64[(($151)>>3)]));
    $199=(+(HEAPF64[(($153)>>3)]));
    $200=$198<$199;
    if ($200) {
     label = 57;
     break;
    }
    $202=((($i_3)-(1))|0);
    $203=(($inClose+($202<<3))|0);
    $204=(+(HEAPF64[(($203)>>3)]));
    $205=(($inOpen+($202<<3))|0);
    $206=(+(HEAPF64[(($205)>>3)]));
    $207=($204)-($206);
    $208=(+(Math_abs((+($207)))));
    $209=(($190+248)|0);
    $210=(+(HEAPF64[(($209)>>3)]));
    $211=(($190+240)|0);
    $212=((HEAP32[(($211)>>2)])|0);
    $213=($212|0)==0;
    do {
     if ($213) {
      $218=(($190+236)|0);
      $219=((HEAP32[(($218)>>2)])|0);
      if (((($219|0))|0)==((0)|0)) {
       $239=$208;
       break;
      } else if (((($219|0))|0)==((1)|0)) {
       $221=(($inHigh+($202<<3))|0);
       $222=(+(HEAPF64[(($221)>>3)]));
       $223=(($inLow+($202<<3))|0);
       $224=(+(HEAPF64[(($223)>>3)]));
       $225=($222)-($224);
       $239=$225;
       break;
      }
      $227=($219|0)==2;
      if (!($227)) {
       $239=0.0;
       break;
      }
      $229=(($inHigh+($202<<3))|0);
      $230=(+(HEAPF64[(($229)>>3)]));
      $231=$204<$206;
      $_14=($231?$206:$204);
      $232=($230)-($_14);
      $233=($231?$204:$206);
      $234=(($inLow+($202<<3))|0);
      $235=(+(HEAPF64[(($234)>>3)]));
      $236=($233)-($235);
      $237=($232)+($236);
      $239=$237;
     } else {
      $215=(+((($212|0))|0));
      $216=($BodyDojiPeriodTotal_1)/($215);
      $239=$216;
     }
    } while(0);

    $240=($210)*($239);
    $241=((HEAP32[((272)>>2)])|0);
    $242=(($241+236)|0);
    $243=((HEAP32[(($242)>>2)])|0);
    $244=($243|0)==2;
    $245=($244?(2.0):(1.0));
    $246=($240)/($245);
    $247=$208>$246;
    if ($247) {
     label = 57;
     break;
    }
    $249=(+(HEAPF64[(($205)>>3)]));
    $250=(+(HEAPF64[(($203)>>3)]));
    $251=$249<$250;
    $_15=($251?$249:$250);
    $252=(+(HEAPF64[(($153)>>3)]));
    $253=(+(HEAPF64[(($151)>>3)]));
    $254=$252>$253;
    $255=($254?$252:$253);
    $256=$_15>$255;
    if (!($256)) {
     label = 57;
     break;
    }
    $258=(($inClose+($i_3<<3))|0);
    $259=(+(HEAPF64[(($258)>>3)]));
    $260=(($inOpen+($i_3<<3))|0);
    $261=(+(HEAPF64[(($260)>>3)]));
    $262=($259)-($261);
    $263=(+(Math_abs((+($262)))));
    $264=(($241+224)|0);
    $265=(+(HEAPF64[(($264)>>3)]));
    $266=(($241+216)|0);
    $267=((HEAP32[(($266)>>2)])|0);
    $268=($267|0)==0;
    do {
     if ($268) {
      $273=(($241+212)|0);
      $274=((HEAP32[(($273)>>2)])|0);
      if (((($274|0))|0)==((0)|0)) {
       $294=$263;
       break;
      } else if (((($274|0))|0)==((1)|0)) {
       $276=(($inHigh+($i_3<<3))|0);
       $277=(+(HEAPF64[(($276)>>3)]));
       $278=(($inLow+($i_3<<3))|0);
       $279=(+(HEAPF64[(($278)>>3)]));
       $280=($277)-($279);
       $294=$280;
       break;
      }
      $282=($274|0)==2;
      if (!($282)) {
       $294=0.0;
       break;
      }
      $284=(($inHigh+($i_3<<3))|0);
      $285=(+(HEAPF64[(($284)>>3)]));
      $286=$259<$261;
      $_16=($286?$261:$259);
      $287=($285)-($_16);
      $288=($286?$259:$261);
      $289=(($inLow+($i_3<<3))|0);
      $290=(+(HEAPF64[(($289)>>3)]));
      $291=($288)-($290);
      $292=($287)+($291);
      $294=$292;
     } else {
      $270=(+((($267|0))|0));
      $271=($BodyShortPeriodTotal_1)/($270);
      $294=$271;
     }
    } while(0);

    $295=($265)*($294);
    $296=((HEAP32[((272)>>2)])|0);
    $297=(($296+212)|0);
    $298=((HEAP32[(($297)>>2)])|0);
    $299=($298|0)==2;
    $300=($299?(2.0):(1.0));
    $301=($295)/($300);
    $302=$263>$301;
    if (!($302)) {
     label = 57;
     break;
    }
    $304=(+(HEAPF64[(($258)>>3)]));
    $305=(+(HEAPF64[(($260)>>3)]));
    $not_=$304<$305;
    if (!($not_)) {
     label = 57;
     break;
    }
    $307=(+(HEAPF64[(($151)>>3)]));
    $308=(+(HEAPF64[(($153)>>3)]));
    $309=($307)-($308);
    $310=(+(Math_abs((+($309)))));
    $311=($_09)*($310);
    $312=($307)-($311);
    $313=$304<$312;
    if (!($313)) {
     label = 57;
     break;
    }
    $315=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($315)>>2)]=-100;
   } else {
    label = 57;
   }
  } while(0);
  if ((label|0) == 57) {
   label = 0;
   $317=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($317)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $319=((HEAP32[((272)>>2)])|0);
  $320=(($319+164)|0);
  $321=((HEAP32[(($320)>>2)])|0);
  if (((($321|0))|0)==((0)|0)) {
   $323=(+(HEAPF64[(($151)>>3)]));
   $324=(+(HEAPF64[(($153)>>3)]));
   $325=($323)-($324);
   $326=(+(Math_abs((+($325)))));
   $346=$326;
  } else if (((($321|0))|0)==((2)|0)) {
   $334=(($inHigh+($150<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=(+(HEAPF64[(($151)>>3)]));
   $337=(+(HEAPF64[(($153)>>3)]));
   $338=$336<$337;
   $_17=($338?$337:$336);
   $339=($335)-($_17);
   $340=($338?$336:$337);
   $341=(($inLow+($150<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=($340)-($342);
   $344=($339)+($343);
   $346=$344;
  } else if (((($321|0))|0)==((1)|0)) {
   $328=(($inHigh+($150<<3))|0);
   $329=(+(HEAPF64[(($328)>>3)]));
   $330=(($inLow+($150<<3))|0);
   $331=(+(HEAPF64[(($330)>>3)]));
   $332=($329)-($331);
   $346=$332;
  } else {
   $346=0.0;
  }

  $347=((HEAP32[((272)>>2)])|0);
  $348=(($347+164)|0);
  $349=((HEAP32[(($348)>>2)])|0);
  if (((($349|0))|0)==((2)|0)) {
   $364=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $365=(+(HEAPF64[(($364)>>3)]));
   $366=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $367=(+(HEAPF64[(($366)>>3)]));
   $368=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $369=(+(HEAPF64[(($368)>>3)]));
   $370=$367<$369;
   $_18=($370?$369:$367);
   $371=($365)-($_18);
   $372=($370?$367:$369);
   $373=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $374=(+(HEAPF64[(($373)>>3)]));
   $375=($372)-($374);
   $376=($371)+($375);
   $378=$376;
  } else if (((($349|0))|0)==((1)|0)) {
   $358=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $359=(+(HEAPF64[(($358)>>3)]));
   $360=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $361=(+(HEAPF64[(($360)>>3)]));
   $362=($359)-($361);
   $378=$362;
  } else if (((($349|0))|0)==((0)|0)) {
   $351=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $352=(+(HEAPF64[(($351)>>3)]));
   $353=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $354=(+(HEAPF64[(($353)>>3)]));
   $355=($352)-($354);
   $356=(+(Math_abs((+($355)))));
   $378=$356;
  } else {
   $378=0.0;
  }

  $379=($346)-($378);
  $380=($BodyLongPeriodTotal_1)+($379);
  $381=((HEAP32[((272)>>2)])|0);
  $382=(($381+236)|0);
  $383=((HEAP32[(($382)>>2)])|0);
  if (((($383|0))|0)==((0)|0)) {
   $385=((($i_3)-(1))|0);
   $386=(($inClose+($385<<3))|0);
   $387=(+(HEAPF64[(($386)>>3)]));
   $388=(($inOpen+($385<<3))|0);
   $389=(+(HEAPF64[(($388)>>3)]));
   $390=($387)-($389);
   $391=(+(Math_abs((+($390)))));
   $415=$391;
  } else if (((($383|0))|0)==((1)|0)) {
   $393=((($i_3)-(1))|0);
   $394=(($inHigh+($393<<3))|0);
   $395=(+(HEAPF64[(($394)>>3)]));
   $396=(($inLow+($393<<3))|0);
   $397=(+(HEAPF64[(($396)>>3)]));
   $398=($395)-($397);
   $415=$398;
  } else if (((($383|0))|0)==((2)|0)) {
   $400=((($i_3)-(1))|0);
   $401=(($inHigh+($400<<3))|0);
   $402=(+(HEAPF64[(($401)>>3)]));
   $403=(($inClose+($400<<3))|0);
   $404=(+(HEAPF64[(($403)>>3)]));
   $405=(($inOpen+($400<<3))|0);
   $406=(+(HEAPF64[(($405)>>3)]));
   $407=$404<$406;
   $_19=($407?$406:$404);
   $408=($402)-($_19);
   $409=($407?$404:$406);
   $410=(($inLow+($400<<3))|0);
   $411=(+(HEAPF64[(($410)>>3)]));
   $412=($409)-($411);
   $413=($408)+($412);
   $415=$413;
  } else {
   $415=0.0;
  }

  $416=((HEAP32[((272)>>2)])|0);
  $417=(($416+236)|0);
  $418=((HEAP32[(($417)>>2)])|0);
  if (((($418|0))|0)==((0)|0)) {
   $420=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $421=(+(HEAPF64[(($420)>>3)]));
   $422=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $423=(+(HEAPF64[(($422)>>3)]));
   $424=($421)-($423);
   $425=(+(Math_abs((+($424)))));
   $447=$425;
  } else if (((($418|0))|0)==((1)|0)) {
   $427=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $428=(+(HEAPF64[(($427)>>3)]));
   $429=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $430=(+(HEAPF64[(($429)>>3)]));
   $431=($428)-($430);
   $447=$431;
  } else if (((($418|0))|0)==((2)|0)) {
   $433=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $434=(+(HEAPF64[(($433)>>3)]));
   $435=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $436=(+(HEAPF64[(($435)>>3)]));
   $437=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $438=(+(HEAPF64[(($437)>>3)]));
   $439=$436<$438;
   $_20=($439?$438:$436);
   $440=($434)-($_20);
   $441=($439?$436:$438);
   $442=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $443=(+(HEAPF64[(($442)>>3)]));
   $444=($441)-($443);
   $445=($440)+($444);
   $447=$445;
  } else {
   $447=0.0;
  }

  $448=($415)-($447);
  $449=($BodyDojiPeriodTotal_1)+($448);
  $450=((HEAP32[((272)>>2)])|0);
  $451=(($450+212)|0);
  $452=((HEAP32[(($451)>>2)])|0);
  if (((($452|0))|0)==((1)|0)) {
   $461=(($inHigh+($i_3<<3))|0);
   $462=(+(HEAPF64[(($461)>>3)]));
   $463=(($inLow+($i_3<<3))|0);
   $464=(+(HEAPF64[(($463)>>3)]));
   $465=($462)-($464);
   $481=$465;
  } else if (((($452|0))|0)==((0)|0)) {
   $454=(($inClose+($i_3<<3))|0);
   $455=(+(HEAPF64[(($454)>>3)]));
   $456=(($inOpen+($i_3<<3))|0);
   $457=(+(HEAPF64[(($456)>>3)]));
   $458=($455)-($457);
   $459=(+(Math_abs((+($458)))));
   $481=$459;
  } else if (((($452|0))|0)==((2)|0)) {
   $467=(($inHigh+($i_3<<3))|0);
   $468=(+(HEAPF64[(($467)>>3)]));
   $469=(($inClose+($i_3<<3))|0);
   $470=(+(HEAPF64[(($469)>>3)]));
   $471=(($inOpen+($i_3<<3))|0);
   $472=(+(HEAPF64[(($471)>>3)]));
   $473=$470<$472;
   $_21=($473?$472:$470);
   $474=($468)-($_21);
   $475=($473?$470:$472);
   $476=(($inLow+($i_3<<3))|0);
   $477=(+(HEAPF64[(($476)>>3)]));
   $478=($475)-($477);
   $479=($474)+($478);
   $481=$479;
  } else {
   $481=0.0;
  }

  $482=((HEAP32[((272)>>2)])|0);
  $483=(($482+212)|0);
  $484=((HEAP32[(($483)>>2)])|0);
  if (((($484|0))|0)==((2)|0)) {
   $499=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $500=(+(HEAPF64[(($499)>>3)]));
   $501=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $502=(+(HEAPF64[(($501)>>3)]));
   $503=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $504=(+(HEAPF64[(($503)>>3)]));
   $505=$502<$504;
   $_22=($505?$504:$502);
   $506=($500)-($_22);
   $507=($505?$502:$504);
   $508=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $509=(+(HEAPF64[(($508)>>3)]));
   $510=($507)-($509);
   $511=($506)+($510);
   $513=$511;
  } else if (((($484|0))|0)==((0)|0)) {
   $486=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $487=(+(HEAPF64[(($486)>>3)]));
   $488=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $489=(+(HEAPF64[(($488)>>3)]));
   $490=($487)-($489);
   $491=(+(Math_abs((+($490)))));
   $513=$491;
  } else if (((($484|0))|0)==((1)|0)) {
   $493=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $494=(+(HEAPF64[(($493)>>3)]));
   $495=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $496=(+(HEAPF64[(($495)>>3)]));
   $497=($494)-($496);
   $513=$497;
  } else {
   $513=0.0;
  }

  $514=($481)-($513);
  $515=($BodyShortPeriodTotal_1)+($514);
  $516=((($i_3)+(1))|0);
  $517=((($BodyLongTrailingIdx_0)+(1))|0);
  $518=((($BodyDojiTrailingIdx_0)+(1))|0);
  $519=((($BodyShortTrailingIdx_0)+(1))|0);
  $520=($i_3|0)<($endIdx|0);
  if ($520) {
   $BodyShortTrailingIdx_0=$519;$BodyLongTrailingIdx_0=$517;$BodyDojiTrailingIdx_0=$518;$outIdx_0=$outIdx_1;$i_3=$516;$BodyShortPeriodTotal_1=$515;$BodyLongPeriodTotal_1=$380;$BodyDojiPeriodTotal_1=$449;
  } else {
   break;
  }
 }
 $522=((($smax35)+(1))|0);
 $523=((($522)-($smax36))|0);
 HEAP32[(($outNBElement)>>2)]=$523;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLEVENINGSTAR_Lookback($optInPenetration){
 $optInPenetration=+($optInPenetration);
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$_=0,$12=0,$_02=0,label=0;

 $1=$optInPenetration==(-4.0e+37);
 do {
  if (!($1)) {
   $3=$optInPenetration<(0.0);
   $4=$optInPenetration>(3.0e+37);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_02=-1;
   } else {
    break;
   }

   return (($_02)|0);
  }
 } while(0);
 $6=((HEAP32[((272)>>2)])|0);
 $7=(($6+216)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($6+168)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)>($10|0);
 $_=($11?$8:$10);
 $12=((($_)+(2))|0);
 $_02=$12;

 return (($_02)|0);
}


function _TA_CDLEVENINGSTAR($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$optInPenetration,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInPenetration=+($optInPenetration);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond10=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$11=0,$13=0,$14=0,$or_cond7=0,$_09=.0,$16=0,$18=0,$19=0,$_startIdx=0;
 var $20=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$BodyLongPeriodTotal_0_lcssa=.0,$36=0,$37=0,$38=0,$39=0,$i_029=0;
 var $BodyLongPeriodTotal_028=.0,$42=0,$43=.0,$44=0,$45=.0,$46=.0,$47=.0,$49=0,$50=.0,$51=0,$52=.0,$53=.0,$55=0,$56=.0,$57=0,$58=.0,$59=0,$60=.0,$61=0,$_=.0;
 var $62=.0,$63=.0,$64=0,$65=.0,$66=.0,$67=.0,$69=.0,$70=.0,$71=0,$72=0,$BodyShortPeriodTotal2_0_lcssa=.0,$BodyShortPeriodTotal_0_lcssa=.0,$73=0,$smax=0,$74=0,$smax32=0,$75=0,$smax33=0,$i_126=0,$BodyShortPeriodTotal2_025=.0;
 var $BodyShortPeriodTotal_024=.0,$77=0,$78=.0,$79=0,$80=.0,$81=.0,$82=.0,$83=0,$84=0,$85=.0,$86=0,$87=.0,$88=.0,$89=.0,$90=0,$91=.0,$92=0,$93=.0,$94=.0,$95=0;
 var $96=0,$97=.0,$98=0,$99=.0,$100=.0,$101=0,$102=.0,$103=0,$104=.0,$105=0,$106=.0,$107=0,$_11=.0,$108=.0,$109=.0,$110=0,$111=.0,$112=.0,$113=.0,$114=0;
 var $115=0,$116=.0,$117=0,$118=.0,$119=0,$120=.0,$121=0,$_12=.0,$122=.0,$123=.0,$124=0,$125=.0,$126=.0,$127=.0,$_pn=.0,$130=.0,$131=.0,$132=.0,$133=0,$134=0;
 var $BodyShortPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$BodyShortPeriodTotal2_1=.0,$i_2=0,$outIdx_0=0,$BodyShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$136=0,$137=0,$138=.0,$139=0,$140=.0,$141=.0,$142=.0,$143=0,$144=0,$145=.0,$146=0,$147=0,$148=0;
 var $150=.0,$151=.0,$153=0,$154=0,$156=0,$157=.0,$158=0,$159=.0,$160=.0,$162=0,$164=0,$165=.0,$166=0,$_13=.0,$167=.0,$168=.0,$169=0,$170=.0,$171=.0,$172=.0;
 var $174=.0,$175=.0,$176=0,$177=0,$178=0,$179=0,$180=.0,$181=.0,$182=0,$184=.0,$185=.0,$186=0,$188=0,$189=0,$190=.0,$191=0,$192=.0,$193=.0,$194=.0,$195=0;
 var $196=.0,$197=0,$198=0,$199=0,$201=.0,$202=.0,$204=0,$205=0,$207=0,$208=.0,$209=0,$210=.0,$211=.0,$213=0,$215=0,$216=.0,$217=0,$_14=.0,$218=.0,$219=.0;
 var $220=0,$221=.0,$222=.0,$223=.0,$225=.0,$226=.0,$227=0,$228=0,$229=0,$230=0,$231=.0,$232=.0,$233=0,$235=.0,$236=.0,$237=0,$_15=.0,$238=.0,$239=.0,$240=0;
 var $241=.0,$242=0,$244=0,$245=.0,$246=0,$247=.0,$248=.0,$249=.0,$250=0,$251=.0,$252=0,$253=0,$254=0,$256=.0,$257=.0,$260=0,$261=.0,$262=0,$263=.0,$264=.0;
 var $267=0,$268=.0,$269=0,$_16=.0,$270=.0,$271=.0,$272=0,$273=.0,$274=.0,$275=.0,$277=.0,$278=.0,$279=0,$280=0,$281=0,$282=0,$283=.0,$284=.0,$285=0,$287=.0;
 var $288=.0,$not_=0,$290=.0,$291=.0,$292=.0,$293=.0,$294=.0,$295=.0,$296=0,$298=0,$300=0,$outIdx_1=0,$302=0,$303=0,$304=0,$306=.0,$307=.0,$308=.0,$309=.0,$311=0;
 var $312=.0,$313=0,$314=.0,$315=.0,$317=0,$318=.0,$319=.0,$320=.0,$321=0,$_17=.0,$322=.0,$323=.0,$324=0,$325=.0,$326=.0,$327=.0,$329=.0,$330=0,$331=0,$332=0;
 var $334=0,$335=.0,$336=0,$337=.0,$338=.0,$339=.0,$341=0,$342=.0,$343=0,$344=.0,$345=.0,$347=0,$348=.0,$349=0,$350=.0,$351=0,$352=.0,$353=0,$_18=.0,$354=.0;
 var $355=.0,$356=0,$357=.0,$358=.0,$359=.0,$361=.0,$362=.0,$363=.0,$364=0,$365=0,$366=0,$368=0,$369=0,$370=.0,$371=0,$372=.0,$373=.0,$374=.0,$376=0,$377=0;
 var $378=.0,$379=0,$380=.0,$381=.0,$383=0,$384=0,$385=.0,$386=0,$387=.0,$388=0,$389=.0,$390=0,$_19=.0,$391=.0,$392=.0,$393=0,$394=.0,$395=.0,$396=.0,$398=.0;
 var $399=0,$400=0,$401=0,$403=0,$404=.0,$405=0,$406=.0,$407=.0,$408=.0,$410=0,$411=.0,$412=0,$413=.0,$414=.0,$416=0,$417=.0,$418=0,$419=.0,$420=0,$421=.0;
 var $422=0,$_20=.0,$423=.0,$424=.0,$425=0,$426=.0,$427=.0,$428=.0,$430=.0,$431=.0,$432=.0,$433=0,$434=0,$435=0,$437=0,$438=.0,$439=0,$440=.0,$441=.0,$442=.0;
 var $444=0,$445=.0,$446=0,$447=.0,$448=.0,$450=0,$451=.0,$452=0,$453=.0,$454=0,$455=.0,$456=0,$_21=.0,$457=.0,$458=.0,$459=0,$460=.0,$461=.0,$462=.0,$464=.0;
 var $465=0,$466=0,$467=0,$469=0,$470=0,$471=.0,$472=0,$473=.0,$474=.0,$475=.0,$477=0,$478=0,$479=.0,$480=0,$481=.0,$482=.0,$484=0,$485=0,$486=.0,$487=0;
 var $488=.0,$489=0,$490=.0,$491=0,$_22=.0,$492=.0,$493=.0,$494=0,$495=.0,$496=.0,$497=.0,$499=.0,$500=.0,$501=.0,$502=0,$503=0,$504=0,$505=0,$507=0,$508=0;
 var $_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond10=$3|$4;
 if ($or_cond10) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 if (!($or_cond5)) {
  $_0=2;

  return (($_0)|0);
 }
 $11=$optInPenetration==(-4.0e+37);
 do {
  if ($11) {
   $_09=0.3;
  } else {
   $13=$optInPenetration<(0.0);
   $14=$optInPenetration>(3.0e+37);
   $or_cond7=$13|$14;
   if ($or_cond7) {
    $_0=2;
   } else {
    $_09=$optInPenetration;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $16=($outInteger|0)==0;
 if ($16) {
  $_0=2;

  return (($_0)|0);
 }
 $18=((_TA_CDLEVENINGSTAR_Lookback($_09))|0);
 $19=($18|0)>($startIdx|0);
 $_startIdx=($19?$18:$startIdx);
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $23=((($_startIdx)-(2))|0);
 $24=((HEAP32[((272)>>2)])|0);
 $25=(($24+168)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=((($23)-($26))|0);
 $28=((($_startIdx)-(1))|0);
 $29=(($24+216)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=((($28)-($30))|0);
 $32=($26|0)>0;
 if ($32) {
  $33=((HEAP32[((272)>>2)])|0);
  $34=(($33+164)|0);
  $35=((HEAP32[(($34)>>2)])|0);
  $BodyLongPeriodTotal_028=0.0;$i_029=$27;
  while(1) {


   if (((($35|0))|0)==((1)|0)) {
    $49=(($inHigh+($i_029<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=(($inLow+($i_029<<3))|0);
    $52=(+(HEAPF64[(($51)>>3)]));
    $53=($50)-($52);
    $69=$53;
   } else if (((($35|0))|0)==((0)|0)) {
    $42=(($inClose+($i_029<<3))|0);
    $43=(+(HEAPF64[(($42)>>3)]));
    $44=(($inOpen+($i_029<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=($43)-($45);
    $47=(+(Math_abs((+($46)))));
    $69=$47;
   } else if (((($35|0))|0)==((2)|0)) {
    $55=(($inHigh+($i_029<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=(($inClose+($i_029<<3))|0);
    $58=(+(HEAPF64[(($57)>>3)]));
    $59=(($inOpen+($i_029<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=$58<$60;
    $_=($61?$60:$58);
    $62=($56)-($_);
    $63=($61?$58:$60);
    $64=(($inLow+($i_029<<3))|0);
    $65=(+(HEAPF64[(($64)>>3)]));
    $66=($63)-($65);
    $67=($62)+($66);
    $69=$67;
   } else {
    $69=0.0;
   }

   $70=($BodyLongPeriodTotal_028)+($69);
   $71=((($i_029)+(1))|0);
   $72=($71|0)<($23|0);
   if ($72) {
    $BodyLongPeriodTotal_028=$70;$i_029=$71;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$70;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $36=($30|0)>0;
 if ($36) {
  $37=((HEAP32[((272)>>2)])|0);
  $38=(($37+212)|0);
  $39=((HEAP32[(($38)>>2)])|0);
  $BodyShortPeriodTotal_024=0.0;$BodyShortPeriodTotal2_025=0.0;$i_126=$31;
  while(1) {



   if (((($39|0))|0)==((0)|0)) {
    $77=(($inClose+($i_126<<3))|0);
    $78=(+(HEAPF64[(($77)>>3)]));
    $79=(($inOpen+($i_126<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=($78)-($80);
    $82=(+(Math_abs((+($81)))));
    $83=((($i_126)+(1))|0);
    $84=(($inClose+($83<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=(($inOpen+($83<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=($85)-($87);
    $89=(+(Math_abs((+($88)))));
    $130=$89;$_pn=$82;
   } else if (((($39|0))|0)==((2)|0)) {
    $101=(($inHigh+($i_126<<3))|0);
    $102=(+(HEAPF64[(($101)>>3)]));
    $103=(($inClose+($i_126<<3))|0);
    $104=(+(HEAPF64[(($103)>>3)]));
    $105=(($inOpen+($i_126<<3))|0);
    $106=(+(HEAPF64[(($105)>>3)]));
    $107=$104<$106;
    $_11=($107?$106:$104);
    $108=($102)-($_11);
    $109=($107?$104:$106);
    $110=(($inLow+($i_126<<3))|0);
    $111=(+(HEAPF64[(($110)>>3)]));
    $112=($109)-($111);
    $113=($108)+($112);
    $114=((($i_126)+(1))|0);
    $115=(($inHigh+($114<<3))|0);
    $116=(+(HEAPF64[(($115)>>3)]));
    $117=(($inClose+($114<<3))|0);
    $118=(+(HEAPF64[(($117)>>3)]));
    $119=(($inOpen+($114<<3))|0);
    $120=(+(HEAPF64[(($119)>>3)]));
    $121=$118<$120;
    $_12=($121?$120:$118);
    $122=($116)-($_12);
    $123=($121?$118:$120);
    $124=(($inLow+($114<<3))|0);
    $125=(+(HEAPF64[(($124)>>3)]));
    $126=($123)-($125);
    $127=($122)+($126);
    $130=$127;$_pn=$113;
   } else if (((($39|0))|0)==((1)|0)) {
    $90=(($inHigh+($i_126<<3))|0);
    $91=(+(HEAPF64[(($90)>>3)]));
    $92=(($inLow+($i_126<<3))|0);
    $93=(+(HEAPF64[(($92)>>3)]));
    $94=($91)-($93);
    $95=((($i_126)+(1))|0);
    $96=(($inHigh+($95<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=(($inLow+($95<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=($97)-($99);
    $130=$100;$_pn=$94;
   } else {
    $130=0.0;$_pn=0.0;
   }


   $131=($BodyShortPeriodTotal_024)+($_pn);
   $132=($BodyShortPeriodTotal2_025)+($130);
   $133=((($i_126)+(1))|0);
   $134=($133|0)<($28|0);
   if ($134) {
    $BodyShortPeriodTotal_024=$131;$BodyShortPeriodTotal2_025=$132;$i_126=$133;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$131;$BodyShortPeriodTotal2_0_lcssa=$132;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;$BodyShortPeriodTotal2_0_lcssa=0.0;
 }


 $73=($18|0)>($endIdx|0);
 $smax=($73?$18:$endIdx);
 $74=($smax|0)>($startIdx|0);
 $smax32=($74?$smax:$startIdx);
 $75=($18|0)>($startIdx|0);
 $smax33=($75?$18:$startIdx);
 $BodyLongTrailingIdx_0=$27;$BodyShortTrailingIdx_0=$31;$outIdx_0=0;$i_2=$_startIdx;$BodyShortPeriodTotal2_1=$BodyShortPeriodTotal2_0_lcssa;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;
 while(1) {







  $136=((($i_2)-(2))|0);
  $137=(($inClose+($136<<3))|0);
  $138=(+(HEAPF64[(($137)>>3)]));
  $139=(($inOpen+($136<<3))|0);
  $140=(+(HEAPF64[(($139)>>3)]));
  $141=($138)-($140);
  $142=(+(Math_abs((+($141)))));
  $143=((HEAP32[((272)>>2)])|0);
  $144=(($143+176)|0);
  $145=(+(HEAPF64[(($144)>>3)]));
  $146=(($143+168)|0);
  $147=((HEAP32[(($146)>>2)])|0);
  $148=($147|0)==0;
  do {
   if ($148) {
    $153=(($143+164)|0);
    $154=((HEAP32[(($153)>>2)])|0);
    if (((($154|0))|0)==((1)|0)) {
     $156=(($inHigh+($136<<3))|0);
     $157=(+(HEAPF64[(($156)>>3)]));
     $158=(($inLow+($136<<3))|0);
     $159=(+(HEAPF64[(($158)>>3)]));
     $160=($157)-($159);
     $174=$160;
     break;
    } else if (((($154|0))|0)==((0)|0)) {
     $174=$142;
     break;
    }
    $162=($154|0)==2;
    if (!($162)) {
     $174=0.0;
     break;
    }
    $164=(($inHigh+($136<<3))|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    $166=$138<$140;
    $_13=($166?$140:$138);
    $167=($165)-($_13);
    $168=($166?$138:$140);
    $169=(($inLow+($136<<3))|0);
    $170=(+(HEAPF64[(($169)>>3)]));
    $171=($168)-($170);
    $172=($167)+($171);
    $174=$172;
   } else {
    $150=(+((($147|0))|0));
    $151=($BodyLongPeriodTotal_1)/($150);
    $174=$151;
   }
  } while(0);

  $175=($145)*($174);
  $176=((HEAP32[((272)>>2)])|0);
  $177=(($176+164)|0);
  $178=((HEAP32[(($177)>>2)])|0);
  $179=($178|0)==2;
  $180=($179?(2.0):(1.0));
  $181=($175)/($180);
  $182=$142>$181;
  do {
   if ($182) {
    $184=(+(HEAPF64[(($137)>>3)]));
    $185=(+(HEAPF64[(($139)>>3)]));
    $186=$184<$185;
    if ($186) {
     label = 51;
     break;
    }
    $188=((($i_2)-(1))|0);
    $189=(($inClose+($188<<3))|0);
    $190=(+(HEAPF64[(($189)>>3)]));
    $191=(($inOpen+($188<<3))|0);
    $192=(+(HEAPF64[(($191)>>3)]));
    $193=($190)-($192);
    $194=(+(Math_abs((+($193)))));
    $195=(($176+224)|0);
    $196=(+(HEAPF64[(($195)>>3)]));
    $197=(($176+216)|0);
    $198=((HEAP32[(($197)>>2)])|0);
    $199=($198|0)==0;
    do {
     if ($199) {
      $204=(($176+212)|0);
      $205=((HEAP32[(($204)>>2)])|0);
      if (((($205|0))|0)==((1)|0)) {
       $207=(($inHigh+($188<<3))|0);
       $208=(+(HEAPF64[(($207)>>3)]));
       $209=(($inLow+($188<<3))|0);
       $210=(+(HEAPF64[(($209)>>3)]));
       $211=($208)-($210);
       $225=$211;
       break;
      } else if (((($205|0))|0)==((0)|0)) {
       $225=$194;
       break;
      }
      $213=($205|0)==2;
      if (!($213)) {
       $225=0.0;
       break;
      }
      $215=(($inHigh+($188<<3))|0);
      $216=(+(HEAPF64[(($215)>>3)]));
      $217=$190<$192;
      $_14=($217?$192:$190);
      $218=($216)-($_14);
      $219=($217?$190:$192);
      $220=(($inLow+($188<<3))|0);
      $221=(+(HEAPF64[(($220)>>3)]));
      $222=($219)-($221);
      $223=($218)+($222);
      $225=$223;
     } else {
      $201=(+((($198|0))|0));
      $202=($BodyShortPeriodTotal_1)/($201);
      $225=$202;
     }
    } while(0);

    $226=($196)*($225);
    $227=((HEAP32[((272)>>2)])|0);
    $228=(($227+212)|0);
    $229=((HEAP32[(($228)>>2)])|0);
    $230=($229|0)==2;
    $231=($230?(2.0):(1.0));
    $232=($226)/($231);
    $233=$194>$232;
    if ($233) {
     label = 51;
     break;
    }
    $235=(+(HEAPF64[(($191)>>3)]));
    $236=(+(HEAPF64[(($189)>>3)]));
    $237=$235<$236;
    $_15=($237?$235:$236);
    $238=(+(HEAPF64[(($139)>>3)]));
    $239=(+(HEAPF64[(($137)>>3)]));
    $240=$238>$239;
    $241=($240?$238:$239);
    $242=$_15>$241;
    if (!($242)) {
     label = 51;
     break;
    }
    $244=(($inClose+($i_2<<3))|0);
    $245=(+(HEAPF64[(($244)>>3)]));
    $246=(($inOpen+($i_2<<3))|0);
    $247=(+(HEAPF64[(($246)>>3)]));
    $248=($245)-($247);
    $249=(+(Math_abs((+($248)))));
    $250=(($227+224)|0);
    $251=(+(HEAPF64[(($250)>>3)]));
    $252=(($227+216)|0);
    $253=((HEAP32[(($252)>>2)])|0);
    $254=($253|0)==0;
    do {
     if ($254) {
      if (((($229|0))|0)==((1)|0)) {
       $260=(($inHigh+($i_2<<3))|0);
       $261=(+(HEAPF64[(($260)>>3)]));
       $262=(($inLow+($i_2<<3))|0);
       $263=(+(HEAPF64[(($262)>>3)]));
       $264=($261)-($263);
       $277=$264;
       break;
      } else if (((($229|0))|0)==((0)|0)) {
       $277=$249;
       break;
      }
      if (!($230)) {
       $277=0.0;
       break;
      }
      $267=(($inHigh+($i_2<<3))|0);
      $268=(+(HEAPF64[(($267)>>3)]));
      $269=$245<$247;
      $_16=($269?$247:$245);
      $270=($268)-($_16);
      $271=($269?$245:$247);
      $272=(($inLow+($i_2<<3))|0);
      $273=(+(HEAPF64[(($272)>>3)]));
      $274=($271)-($273);
      $275=($270)+($274);
      $277=$275;
     } else {
      $256=(+((($253|0))|0));
      $257=($BodyShortPeriodTotal2_1)/($256);
      $277=$257;
     }
    } while(0);

    $278=($251)*($277);
    $279=((HEAP32[((272)>>2)])|0);
    $280=(($279+212)|0);
    $281=((HEAP32[(($280)>>2)])|0);
    $282=($281|0)==2;
    $283=($282?(2.0):(1.0));
    $284=($278)/($283);
    $285=$249>$284;
    if (!($285)) {
     label = 51;
     break;
    }
    $287=(+(HEAPF64[(($244)>>3)]));
    $288=(+(HEAPF64[(($246)>>3)]));
    $not_=$287<$288;
    if (!($not_)) {
     label = 51;
     break;
    }
    $290=(+(HEAPF64[(($137)>>3)]));
    $291=(+(HEAPF64[(($139)>>3)]));
    $292=($290)-($291);
    $293=(+(Math_abs((+($292)))));
    $294=($_09)*($293);
    $295=($290)-($294);
    $296=$287<$295;
    if (!($296)) {
     label = 51;
     break;
    }
    $298=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($298)>>2)]=-100;
   } else {
    label = 51;
   }
  } while(0);
  if ((label|0) == 51) {
   label = 0;
   $300=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($300)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $302=((HEAP32[((272)>>2)])|0);
  $303=(($302+164)|0);
  $304=((HEAP32[(($303)>>2)])|0);
  if (((($304|0))|0)==((0)|0)) {
   $306=(+(HEAPF64[(($137)>>3)]));
   $307=(+(HEAPF64[(($139)>>3)]));
   $308=($306)-($307);
   $309=(+(Math_abs((+($308)))));
   $329=$309;
  } else if (((($304|0))|0)==((1)|0)) {
   $311=(($inHigh+($136<<3))|0);
   $312=(+(HEAPF64[(($311)>>3)]));
   $313=(($inLow+($136<<3))|0);
   $314=(+(HEAPF64[(($313)>>3)]));
   $315=($312)-($314);
   $329=$315;
  } else if (((($304|0))|0)==((2)|0)) {
   $317=(($inHigh+($136<<3))|0);
   $318=(+(HEAPF64[(($317)>>3)]));
   $319=(+(HEAPF64[(($137)>>3)]));
   $320=(+(HEAPF64[(($139)>>3)]));
   $321=$319<$320;
   $_17=($321?$320:$319);
   $322=($318)-($_17);
   $323=($321?$319:$320);
   $324=(($inLow+($136<<3))|0);
   $325=(+(HEAPF64[(($324)>>3)]));
   $326=($323)-($325);
   $327=($322)+($326);
   $329=$327;
  } else {
   $329=0.0;
  }

  $330=((HEAP32[((272)>>2)])|0);
  $331=(($330+164)|0);
  $332=((HEAP32[(($331)>>2)])|0);
  if (((($332|0))|0)==((0)|0)) {
   $334=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $337=(+(HEAPF64[(($336)>>3)]));
   $338=($335)-($337);
   $339=(+(Math_abs((+($338)))));
   $361=$339;
  } else if (((($332|0))|0)==((1)|0)) {
   $341=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $344=(+(HEAPF64[(($343)>>3)]));
   $345=($342)-($344);
   $361=$345;
  } else if (((($332|0))|0)==((2)|0)) {
   $347=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $348=(+(HEAPF64[(($347)>>3)]));
   $349=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $350=(+(HEAPF64[(($349)>>3)]));
   $351=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $352=(+(HEAPF64[(($351)>>3)]));
   $353=$350<$352;
   $_18=($353?$352:$350);
   $354=($348)-($_18);
   $355=($353?$350:$352);
   $356=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $357=(+(HEAPF64[(($356)>>3)]));
   $358=($355)-($357);
   $359=($354)+($358);
   $361=$359;
  } else {
   $361=0.0;
  }

  $362=($329)-($361);
  $363=($BodyLongPeriodTotal_1)+($362);
  $364=((HEAP32[((272)>>2)])|0);
  $365=(($364+212)|0);
  $366=((HEAP32[(($365)>>2)])|0);
  if (((($366|0))|0)==((0)|0)) {
   $368=((($i_2)-(1))|0);
   $369=(($inClose+($368<<3))|0);
   $370=(+(HEAPF64[(($369)>>3)]));
   $371=(($inOpen+($368<<3))|0);
   $372=(+(HEAPF64[(($371)>>3)]));
   $373=($370)-($372);
   $374=(+(Math_abs((+($373)))));
   $398=$374;
  } else if (((($366|0))|0)==((1)|0)) {
   $376=((($i_2)-(1))|0);
   $377=(($inHigh+($376<<3))|0);
   $378=(+(HEAPF64[(($377)>>3)]));
   $379=(($inLow+($376<<3))|0);
   $380=(+(HEAPF64[(($379)>>3)]));
   $381=($378)-($380);
   $398=$381;
  } else if (((($366|0))|0)==((2)|0)) {
   $383=((($i_2)-(1))|0);
   $384=(($inHigh+($383<<3))|0);
   $385=(+(HEAPF64[(($384)>>3)]));
   $386=(($inClose+($383<<3))|0);
   $387=(+(HEAPF64[(($386)>>3)]));
   $388=(($inOpen+($383<<3))|0);
   $389=(+(HEAPF64[(($388)>>3)]));
   $390=$387<$389;
   $_19=($390?$389:$387);
   $391=($385)-($_19);
   $392=($390?$387:$389);
   $393=(($inLow+($383<<3))|0);
   $394=(+(HEAPF64[(($393)>>3)]));
   $395=($392)-($394);
   $396=($391)+($395);
   $398=$396;
  } else {
   $398=0.0;
  }

  $399=((HEAP32[((272)>>2)])|0);
  $400=(($399+212)|0);
  $401=((HEAP32[(($400)>>2)])|0);
  if (((($401|0))|0)==((0)|0)) {
   $403=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $404=(+(HEAPF64[(($403)>>3)]));
   $405=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $406=(+(HEAPF64[(($405)>>3)]));
   $407=($404)-($406);
   $408=(+(Math_abs((+($407)))));
   $430=$408;
  } else if (((($401|0))|0)==((1)|0)) {
   $410=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $411=(+(HEAPF64[(($410)>>3)]));
   $412=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $413=(+(HEAPF64[(($412)>>3)]));
   $414=($411)-($413);
   $430=$414;
  } else if (((($401|0))|0)==((2)|0)) {
   $416=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $417=(+(HEAPF64[(($416)>>3)]));
   $418=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $419=(+(HEAPF64[(($418)>>3)]));
   $420=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $421=(+(HEAPF64[(($420)>>3)]));
   $422=$419<$421;
   $_20=($422?$421:$419);
   $423=($417)-($_20);
   $424=($422?$419:$421);
   $425=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $426=(+(HEAPF64[(($425)>>3)]));
   $427=($424)-($426);
   $428=($423)+($427);
   $430=$428;
  } else {
   $430=0.0;
  }

  $431=($398)-($430);
  $432=($BodyShortPeriodTotal_1)+($431);
  $433=((HEAP32[((272)>>2)])|0);
  $434=(($433+212)|0);
  $435=((HEAP32[(($434)>>2)])|0);
  if (((($435|0))|0)==((0)|0)) {
   $437=(($inClose+($i_2<<3))|0);
   $438=(+(HEAPF64[(($437)>>3)]));
   $439=(($inOpen+($i_2<<3))|0);
   $440=(+(HEAPF64[(($439)>>3)]));
   $441=($438)-($440);
   $442=(+(Math_abs((+($441)))));
   $464=$442;
  } else if (((($435|0))|0)==((1)|0)) {
   $444=(($inHigh+($i_2<<3))|0);
   $445=(+(HEAPF64[(($444)>>3)]));
   $446=(($inLow+($i_2<<3))|0);
   $447=(+(HEAPF64[(($446)>>3)]));
   $448=($445)-($447);
   $464=$448;
  } else if (((($435|0))|0)==((2)|0)) {
   $450=(($inHigh+($i_2<<3))|0);
   $451=(+(HEAPF64[(($450)>>3)]));
   $452=(($inClose+($i_2<<3))|0);
   $453=(+(HEAPF64[(($452)>>3)]));
   $454=(($inOpen+($i_2<<3))|0);
   $455=(+(HEAPF64[(($454)>>3)]));
   $456=$453<$455;
   $_21=($456?$455:$453);
   $457=($451)-($_21);
   $458=($456?$453:$455);
   $459=(($inLow+($i_2<<3))|0);
   $460=(+(HEAPF64[(($459)>>3)]));
   $461=($458)-($460);
   $462=($457)+($461);
   $464=$462;
  } else {
   $464=0.0;
  }

  $465=((HEAP32[((272)>>2)])|0);
  $466=(($465+212)|0);
  $467=((HEAP32[(($466)>>2)])|0);
  if (((($467|0))|0)==((0)|0)) {
   $469=((($BodyShortTrailingIdx_0)+(1))|0);
   $470=(($inClose+($469<<3))|0);
   $471=(+(HEAPF64[(($470)>>3)]));
   $472=(($inOpen+($469<<3))|0);
   $473=(+(HEAPF64[(($472)>>3)]));
   $474=($471)-($473);
   $475=(+(Math_abs((+($474)))));
   $499=$475;
  } else if (((($467|0))|0)==((1)|0)) {
   $477=((($BodyShortTrailingIdx_0)+(1))|0);
   $478=(($inHigh+($477<<3))|0);
   $479=(+(HEAPF64[(($478)>>3)]));
   $480=(($inLow+($477<<3))|0);
   $481=(+(HEAPF64[(($480)>>3)]));
   $482=($479)-($481);
   $499=$482;
  } else if (((($467|0))|0)==((2)|0)) {
   $484=((($BodyShortTrailingIdx_0)+(1))|0);
   $485=(($inHigh+($484<<3))|0);
   $486=(+(HEAPF64[(($485)>>3)]));
   $487=(($inClose+($484<<3))|0);
   $488=(+(HEAPF64[(($487)>>3)]));
   $489=(($inOpen+($484<<3))|0);
   $490=(+(HEAPF64[(($489)>>3)]));
   $491=$488<$490;
   $_22=($491?$490:$488);
   $492=($486)-($_22);
   $493=($491?$488:$490);
   $494=(($inLow+($484<<3))|0);
   $495=(+(HEAPF64[(($494)>>3)]));
   $496=($493)-($495);
   $497=($492)+($496);
   $499=$497;
  } else {
   $499=0.0;
  }

  $500=($464)-($499);
  $501=($BodyShortPeriodTotal2_1)+($500);
  $502=((($i_2)+(1))|0);
  $503=((($BodyLongTrailingIdx_0)+(1))|0);
  $504=((($BodyShortTrailingIdx_0)+(1))|0);
  $505=($i_2|0)<($endIdx|0);
  if ($505) {
   $BodyLongTrailingIdx_0=$503;$BodyShortTrailingIdx_0=$504;$outIdx_0=$outIdx_1;$i_2=$502;$BodyShortPeriodTotal2_1=$501;$BodyLongPeriodTotal_1=$363;$BodyShortPeriodTotal_1=$432;
  } else {
   break;
  }
 }
 $507=((($smax32)+(1))|0);
 $508=((($507)-($smax33))|0);
 HEAP32[(($outNBElement)>>2)]=$508;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLGAPSIDESIDEWHITE_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+360)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+408)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(2))|0);
 return (($7)|0);
}


function _TA_CDLGAPSIDESIDEWHITE($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond22=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$NearPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$i_027=0,$NearPeriodTotal_026=.0,$34=0,$35=0,$36=.0,$37=0;
 var $38=.0,$39=.0,$40=.0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$49=0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$_=.0,$57=.0,$58=.0;
 var $59=0,$60=.0,$61=.0,$62=.0,$64=.0,$65=.0,$66=0,$67=0,$EqualPeriodTotal_0_lcssa=.0,$68=0,$smax=0,$69=0,$smax30=0,$70=0,$smax31=0,$i_125=0,$EqualPeriodTotal_024=.0,$73=0,$74=0,$75=.0;
 var $76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=0,$83=.0,$84=0,$85=.0,$86=.0,$88=0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$94=.0,$95=0,$_8=.0,$96=.0;
 var $97=.0,$98=0,$99=.0,$100=.0,$101=.0,$103=.0,$104=.0,$105=0,$106=0,$NearPeriodTotal_1=.0,$EqualPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$NearTrailingIdx_0=0,$EqualTrailingIdx_0=0,$108=0,$109=0,$110=.0,$111=0,$112=.0;
 var $113=0,$_9=.0,$114=0,$115=0,$116=.0,$117=0,$118=.0,$119=0,$120=.0,$121=0,$123=0,$124=.0,$125=0,$126=.0,$127=0,$_10=.0,$128=0,$130=.0,$131=.0,$132=0;
 var $_11=.0,$133=.0,$134=.0,$135=0,$136=.0,$137=0,$139=0,$140=.0,$141=0,$142=.0,$143=0,$_12=.0,$144=0,$146=.0,$147=.0,$148=0,$150=0,$151=.0,$152=0,$153=.0;
 var $154=0,$156=.0,$157=.0,$158=.0,$159=.0,$160=0,$161=0,$162=.0,$163=0,$164=0,$165=0,$167=.0,$168=.0,$170=0,$171=0,$173=0,$174=.0,$175=0,$176=.0,$177=.0;
 var $179=0,$181=0,$182=.0,$_13=.0,$183=.0,$184=0,$185=.0,$186=0,$187=.0,$188=.0,$189=.0,$191=.0,$192=.0,$193=0,$194=0,$195=0,$196=0,$197=.0,$198=.0,$199=.0;
 var $200=0,$202=.0,$203=.0,$204=.0,$205=.0,$206=.0,$207=.0,$208=.0,$209=.0,$210=0,$211=.0,$212=0,$213=0,$214=0,$216=.0,$217=.0,$220=0,$221=.0,$222=0,$223=.0;
 var $224=.0,$227=0,$228=.0,$229=0,$_14=.0,$230=.0,$231=.0,$232=0,$233=.0,$234=.0,$235=.0,$237=.0,$238=.0,$239=0,$240=0,$241=0,$242=0,$243=.0,$244=.0,$245=.0;
 var $246=0,$248=.0,$249=.0,$250=0,$251=.0,$252=0,$253=0,$254=0,$256=.0,$257=.0,$259=0,$260=0,$262=.0,$263=.0,$264=.0,$266=0,$267=.0,$268=0,$269=.0,$270=.0;
 var $272=0,$273=.0,$274=.0,$275=0,$_15=.0,$276=.0,$277=.0,$278=0,$279=.0,$280=.0,$281=.0,$283=.0,$284=.0,$285=0,$286=0,$287=0,$288=0,$289=.0,$290=.0,$291=.0;
 var $292=0,$294=.0,$295=.0,$296=0,$297=.0,$298=0,$299=0,$300=0,$302=.0,$303=.0,$306=.0,$307=.0,$308=.0,$310=0,$311=.0,$312=0,$313=.0,$314=.0,$317=0,$318=.0;
 var $319=.0,$320=0,$_16=.0,$321=.0,$322=.0,$323=0,$324=.0,$325=.0,$326=.0,$328=.0,$329=.0,$330=0,$331=0,$332=0,$333=0,$334=.0,$335=.0,$336=.0,$337=0,$339=.0;
 var $340=.0,$341=0,$_17=.0,$342=.0,$343=.0,$344=0,$345=.0,$346=0,$347=0,$348=0,$350=0,$outIdx_1=0,$352=0,$353=0,$354=0,$356=.0,$357=.0,$358=.0,$359=.0,$361=0;
 var $362=.0,$363=0,$364=.0,$365=.0,$367=0,$368=.0,$369=.0,$370=.0,$371=0,$_18=.0,$372=.0,$373=.0,$374=0,$375=.0,$376=.0,$377=.0,$379=.0,$380=0,$381=0,$382=0;
 var $384=0,$385=0,$386=.0,$387=0,$388=.0,$389=.0,$390=.0,$392=0,$393=0,$394=.0,$395=0,$396=.0,$397=.0,$399=0,$400=0,$401=.0,$402=0,$403=.0,$404=0,$405=.0;
 var $406=0,$_19=.0,$407=.0,$408=.0,$409=0,$410=.0,$411=.0,$412=.0,$414=.0,$415=.0,$416=.0,$417=0,$418=0,$419=0,$421=.0,$422=.0,$423=.0,$424=.0,$426=0,$427=.0;
 var $428=0,$429=.0,$430=.0,$432=0,$433=.0,$434=.0,$435=.0,$436=0,$_20=.0,$437=.0,$438=.0,$439=0,$440=.0,$441=.0,$442=.0,$444=.0,$445=0,$446=0,$447=0,$449=0;
 var $450=0,$451=.0,$452=0,$453=.0,$454=.0,$455=.0,$457=0,$458=0,$459=.0,$460=0,$461=.0,$462=.0,$464=0,$465=0,$466=.0,$467=0,$468=.0,$469=0,$470=.0,$471=0;
 var $_21=.0,$472=.0,$473=.0,$474=0,$475=.0,$476=.0,$477=.0,$479=.0,$480=.0,$481=.0,$482=0,$483=0,$484=0,$485=0,$487=0,$488=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond22=$10|$or_cond5_not;
 if ($or_cond22) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLGAPSIDESIDEWHITE_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+360)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+408)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+356)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $NearPeriodTotal_026=0.0;$i_027=$20;
  while(1) {


   if (((($27|0))|0)==((2)|0)) {
    $49=((($i_027)-(1))|0);
    $50=(($inHigh+($49<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inClose+($49<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inOpen+($49<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=$53<$55;
    $_=($56?$55:$53);
    $57=($51)-($_);
    $58=($56?$53:$55);
    $59=(($inLow+($49<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=($57)+($61);
    $64=$62;
   } else if (((($27|0))|0)==((1)|0)) {
    $42=((($i_027)-(1))|0);
    $43=(($inHigh+($42<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=(($inLow+($42<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=($44)-($46);
    $64=$47;
   } else if (((($27|0))|0)==((0)|0)) {
    $34=((($i_027)-(1))|0);
    $35=(($inClose+($34<<3))|0);
    $36=(+(HEAPF64[(($35)>>3)]));
    $37=(($inOpen+($34<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=($36)-($38);
    $40=(+(Math_abs((+($39)))));
    $64=$40;
   } else {
    $64=0.0;
   }

   $65=($NearPeriodTotal_026)+($64);
   $66=((($i_027)+(1))|0);
   $67=($66|0)<($_startIdx|0);
   if ($67) {
    $NearPeriodTotal_026=$65;$i_027=$66;
   } else {
    $NearPeriodTotal_0_lcssa=$65;
    break;
   }
  }
 } else {
  $NearPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+404)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $EqualPeriodTotal_024=0.0;$i_125=$23;
  while(1) {


   if (((($31|0))|0)==((1)|0)) {
    $81=((($i_125)-(1))|0);
    $82=(($inHigh+($81<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inLow+($81<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=($83)-($85);
    $103=$86;
   } else if (((($31|0))|0)==((2)|0)) {
    $88=((($i_125)-(1))|0);
    $89=(($inHigh+($88<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inClose+($88<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=(($inOpen+($88<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=$92<$94;
    $_8=($95?$94:$92);
    $96=($90)-($_8);
    $97=($95?$92:$94);
    $98=(($inLow+($88<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=($97)-($99);
    $101=($96)+($100);
    $103=$101;
   } else if (((($31|0))|0)==((0)|0)) {
    $73=((($i_125)-(1))|0);
    $74=(($inClose+($73<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($73<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $103=$79;
   } else {
    $103=0.0;
   }

   $104=($EqualPeriodTotal_024)+($103);
   $105=((($i_125)+(1))|0);
   $106=($105|0)<($_startIdx|0);
   if ($106) {
    $EqualPeriodTotal_024=$104;$i_125=$105;
   } else {
    $EqualPeriodTotal_0_lcssa=$104;
    break;
   }
  }
 } else {
  $EqualPeriodTotal_0_lcssa=0.0;
 }

 $68=($12|0)>($endIdx|0);
 $smax=($68?$12:$endIdx);
 $69=($smax|0)>($startIdx|0);
 $smax30=($69?$smax:$startIdx);
 $70=($12|0)>($startIdx|0);
 $smax31=($70?$12:$startIdx);
 $EqualTrailingIdx_0=$23;$NearTrailingIdx_0=$20;$outIdx_0=0;$i_2=$_startIdx;$EqualPeriodTotal_1=$EqualPeriodTotal_0_lcssa;$NearPeriodTotal_1=$NearPeriodTotal_0_lcssa;
 while(1) {






  $108=((($i_2)-(1))|0);
  $109=(($inOpen+($108<<3))|0);
  $110=(+(HEAPF64[(($109)>>3)]));
  $111=(($inClose+($108<<3))|0);
  $112=(+(HEAPF64[(($111)>>3)]));
  $113=$110<$112;
  $_9=($113?$110:$112);
  $114=((($i_2)-(2))|0);
  $115=(($inOpen+($114<<3))|0);
  $116=(+(HEAPF64[(($115)>>3)]));
  $117=(($inClose+($114<<3))|0);
  $118=(+(HEAPF64[(($117)>>3)]));
  $119=$116>$118;
  $120=($119?$116:$118);
  $121=$_9>$120;
  if ($121) {
   $123=(($inOpen+($i_2<<3))|0);
   $124=(+(HEAPF64[(($123)>>3)]));
   $125=(($inClose+($i_2<<3))|0);
   $126=(+(HEAPF64[(($125)>>3)]));
   $127=$124<$126;
   $_10=($127?$124:$126);
   $128=$_10>$120;
   if ($128) {
    label = 25;
   } else {
    label = 23;
   }
  } else {
   label = 23;
  }
  do {
   if ((label|0) == 23) {
    label = 0;
    $130=(+(HEAPF64[(($109)>>3)]));
    $131=(+(HEAPF64[(($111)>>3)]));
    $132=$130>$131;
    $_11=($132?$130:$131);
    $133=(+(HEAPF64[(($115)>>3)]));
    $134=(+(HEAPF64[(($117)>>3)]));
    $135=$133<$134;
    $136=($135?$133:$134);
    $137=$_11<$136;
    if (!($137)) {
     label = 57;
     break;
    }
    $139=(($inOpen+($i_2<<3))|0);
    $140=(+(HEAPF64[(($139)>>3)]));
    $141=(($inClose+($i_2<<3))|0);
    $142=(+(HEAPF64[(($141)>>3)]));
    $143=$140>$142;
    $_12=($143?$140:$142);
    $144=$_12<$136;
    if ($144) {
     label = 25;
    } else {
     label = 57;
    }
   }
  } while(0);
  do {
   if ((label|0) == 25) {
    label = 0;
    $146=(+(HEAPF64[(($111)>>3)]));
    $147=(+(HEAPF64[(($109)>>3)]));
    $148=$146>=$147;
    if (!($148)) {
     label = 57;
     break;
    }
    $150=(($inClose+($i_2<<3))|0);
    $151=(+(HEAPF64[(($150)>>3)]));
    $152=(($inOpen+($i_2<<3))|0);
    $153=(+(HEAPF64[(($152)>>3)]));
    $154=$151<$153;
    if ($154) {
     label = 57;
     break;
    }
    $156=($151)-($153);
    $157=(+(Math_abs((+($156)))));
    $158=($146)-($147);
    $159=(+(Math_abs((+($158)))));
    $160=((HEAP32[((272)>>2)])|0);
    $161=(($160+368)|0);
    $162=(+(HEAPF64[(($161)>>3)]));
    $163=(($160+360)|0);
    $164=((HEAP32[(($163)>>2)])|0);
    $165=($164|0)==0;
    do {
     if ($165) {
      $170=(($160+356)|0);
      $171=((HEAP32[(($170)>>2)])|0);
      if (((($171|0))|0)==((0)|0)) {
       $191=$159;
       break;
      } else if (((($171|0))|0)==((1)|0)) {
       $173=(($inHigh+($108<<3))|0);
       $174=(+(HEAPF64[(($173)>>3)]));
       $175=(($inLow+($108<<3))|0);
       $176=(+(HEAPF64[(($175)>>3)]));
       $177=($174)-($176);
       $191=$177;
       break;
      }
      $179=($171|0)==2;
      if (!($179)) {
       $191=0.0;
       break;
      }
      $181=(($inHigh+($108<<3))|0);
      $182=(+(HEAPF64[(($181)>>3)]));
      $_13=($148?$146:$147);
      $183=($182)-($_13);
      $184=$146<$147;
      $185=($184?$146:$147);
      $186=(($inLow+($108<<3))|0);
      $187=(+(HEAPF64[(($186)>>3)]));
      $188=($185)-($187);
      $189=($183)+($188);
      $191=$189;
     } else {
      $167=(+((($164|0))|0));
      $168=($NearPeriodTotal_1)/($167);
      $191=$168;
     }
    } while(0);

    $192=($162)*($191);
    $193=((HEAP32[((272)>>2)])|0);
    $194=(($193+356)|0);
    $195=((HEAP32[(($194)>>2)])|0);
    $196=($195|0)==2;
    $197=($196?(2.0):(1.0));
    $198=($192)/($197);
    $199=($159)-($198);
    $200=$157<$199;
    if ($200) {
     label = 57;
     break;
    }
    $202=(+(HEAPF64[(($150)>>3)]));
    $203=(+(HEAPF64[(($152)>>3)]));
    $204=($202)-($203);
    $205=(+(Math_abs((+($204)))));
    $206=(+(HEAPF64[(($111)>>3)]));
    $207=(+(HEAPF64[(($109)>>3)]));
    $208=($206)-($207);
    $209=(+(Math_abs((+($208)))));
    $210=(($193+368)|0);
    $211=(+(HEAPF64[(($210)>>3)]));
    $212=(($193+360)|0);
    $213=((HEAP32[(($212)>>2)])|0);
    $214=($213|0)==0;
    do {
     if ($214) {
      if (((($195|0))|0)==((0)|0)) {
       $237=$209;
       break;
      } else if (((($195|0))|0)==((1)|0)) {
       $220=(($inHigh+($108<<3))|0);
       $221=(+(HEAPF64[(($220)>>3)]));
       $222=(($inLow+($108<<3))|0);
       $223=(+(HEAPF64[(($222)>>3)]));
       $224=($221)-($223);
       $237=$224;
       break;
      }
      if (!($196)) {
       $237=0.0;
       break;
      }
      $227=(($inHigh+($108<<3))|0);
      $228=(+(HEAPF64[(($227)>>3)]));
      $229=$206<$207;
      $_14=($229?$207:$206);
      $230=($228)-($_14);
      $231=($229?$206:$207);
      $232=(($inLow+($108<<3))|0);
      $233=(+(HEAPF64[(($232)>>3)]));
      $234=($231)-($233);
      $235=($230)+($234);
      $237=$235;
     } else {
      $216=(+((($213|0))|0));
      $217=($NearPeriodTotal_1)/($216);
      $237=$217;
     }
    } while(0);

    $238=($211)*($237);
    $239=((HEAP32[((272)>>2)])|0);
    $240=(($239+356)|0);
    $241=((HEAP32[(($240)>>2)])|0);
    $242=($241|0)==2;
    $243=($242?(2.0):(1.0));
    $244=($238)/($243);
    $245=($209)+($244);
    $246=$205>$245;
    if ($246) {
     label = 57;
     break;
    }
    $248=(+(HEAPF64[(($152)>>3)]));
    $249=(+(HEAPF64[(($109)>>3)]));
    $250=(($239+416)|0);
    $251=(+(HEAPF64[(($250)>>3)]));
    $252=(($239+408)|0);
    $253=((HEAP32[(($252)>>2)])|0);
    $254=($253|0)==0;
    do {
     if ($254) {
      $259=(($239+404)|0);
      $260=((HEAP32[(($259)>>2)])|0);
      if (((($260|0))|0)==((0)|0)) {
       $262=(+(HEAPF64[(($111)>>3)]));
       $263=($262)-($249);
       $264=(+(Math_abs((+($263)))));
       $283=$264;
       break;
      } else if (((($260|0))|0)==((1)|0)) {
       $266=(($inHigh+($108<<3))|0);
       $267=(+(HEAPF64[(($266)>>3)]));
       $268=(($inLow+($108<<3))|0);
       $269=(+(HEAPF64[(($268)>>3)]));
       $270=($267)-($269);
       $283=$270;
       break;
      } else if (((($260|0))|0)==((2)|0)) {
       $272=(($inHigh+($108<<3))|0);
       $273=(+(HEAPF64[(($272)>>3)]));
       $274=(+(HEAPF64[(($111)>>3)]));
       $275=$274<$249;
       $_15=($275?$249:$274);
       $276=($273)-($_15);
       $277=($275?$274:$249);
       $278=(($inLow+($108<<3))|0);
       $279=(+(HEAPF64[(($278)>>3)]));
       $280=($277)-($279);
       $281=($276)+($280);
       $283=$281;
       break;
      } else {
       $283=0.0;
       break;
      }
     } else {
      $256=(+((($253|0))|0));
      $257=($EqualPeriodTotal_1)/($256);
      $283=$257;
     }
    } while(0);

    $284=($251)*($283);
    $285=((HEAP32[((272)>>2)])|0);
    $286=(($285+404)|0);
    $287=((HEAP32[(($286)>>2)])|0);
    $288=($287|0)==2;
    $289=($288?(2.0):(1.0));
    $290=($284)/($289);
    $291=($249)-($290);
    $292=$248<$291;
    if ($292) {
     label = 57;
     break;
    }
    $294=(+(HEAPF64[(($152)>>3)]));
    $295=(+(HEAPF64[(($109)>>3)]));
    $296=(($285+416)|0);
    $297=(+(HEAPF64[(($296)>>3)]));
    $298=(($285+408)|0);
    $299=((HEAP32[(($298)>>2)])|0);
    $300=($299|0)==0;
    do {
     if ($300) {
      if (((($287|0))|0)==((1)|0)) {
       $310=(($inHigh+($108<<3))|0);
       $311=(+(HEAPF64[(($310)>>3)]));
       $312=(($inLow+($108<<3))|0);
       $313=(+(HEAPF64[(($312)>>3)]));
       $314=($311)-($313);
       $328=$314;
       break;
      } else if (((($287|0))|0)==((0)|0)) {
       $306=(+(HEAPF64[(($111)>>3)]));
       $307=($306)-($295);
       $308=(+(Math_abs((+($307)))));
       $328=$308;
       break;
      } else {
       if (!($288)) {
        $328=0.0;
        break;
       }
       $317=(($inHigh+($108<<3))|0);
       $318=(+(HEAPF64[(($317)>>3)]));
       $319=(+(HEAPF64[(($111)>>3)]));
       $320=$319<$295;
       $_16=($320?$295:$319);
       $321=($318)-($_16);
       $322=($320?$319:$295);
       $323=(($inLow+($108<<3))|0);
       $324=(+(HEAPF64[(($323)>>3)]));
       $325=($322)-($324);
       $326=($321)+($325);
       $328=$326;
       break;
      }
     } else {
      $302=(+((($299|0))|0));
      $303=($EqualPeriodTotal_1)/($302);
      $328=$303;
     }
    } while(0);

    $329=($297)*($328);
    $330=((HEAP32[((272)>>2)])|0);
    $331=(($330+404)|0);
    $332=((HEAP32[(($331)>>2)])|0);
    $333=($332|0)==2;
    $334=($333?(2.0):(1.0));
    $335=($329)/($334);
    $336=($295)+($335);
    $337=$294>$336;
    if ($337) {
     label = 57;
     break;
    }
    $339=(+(HEAPF64[(($109)>>3)]));
    $340=(+(HEAPF64[(($111)>>3)]));
    $341=$339<$340;
    $_17=($341?$339:$340);
    $342=(+(HEAPF64[(($115)>>3)]));
    $343=(+(HEAPF64[(($117)>>3)]));
    $344=$342>$343;
    $345=($344?$342:$343);
    $346=$_17>$345;
    $347=($346?100:-100);
    $348=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($348)>>2)]=$347;
   }
  } while(0);
  if ((label|0) == 57) {
   label = 0;
   $350=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($350)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $352=((HEAP32[((272)>>2)])|0);
  $353=(($352+356)|0);
  $354=((HEAP32[(($353)>>2)])|0);
  if (((($354|0))|0)==((0)|0)) {
   $356=(+(HEAPF64[(($111)>>3)]));
   $357=(+(HEAPF64[(($109)>>3)]));
   $358=($356)-($357);
   $359=(+(Math_abs((+($358)))));
   $379=$359;
  } else if (((($354|0))|0)==((1)|0)) {
   $361=(($inHigh+($108<<3))|0);
   $362=(+(HEAPF64[(($361)>>3)]));
   $363=(($inLow+($108<<3))|0);
   $364=(+(HEAPF64[(($363)>>3)]));
   $365=($362)-($364);
   $379=$365;
  } else if (((($354|0))|0)==((2)|0)) {
   $367=(($inHigh+($108<<3))|0);
   $368=(+(HEAPF64[(($367)>>3)]));
   $369=(+(HEAPF64[(($111)>>3)]));
   $370=(+(HEAPF64[(($109)>>3)]));
   $371=$369<$370;
   $_18=($371?$370:$369);
   $372=($368)-($_18);
   $373=($371?$369:$370);
   $374=(($inLow+($108<<3))|0);
   $375=(+(HEAPF64[(($374)>>3)]));
   $376=($373)-($375);
   $377=($372)+($376);
   $379=$377;
  } else {
   $379=0.0;
  }

  $380=((HEAP32[((272)>>2)])|0);
  $381=(($380+356)|0);
  $382=((HEAP32[(($381)>>2)])|0);
  if (((($382|0))|0)==((2)|0)) {
   $399=((($NearTrailingIdx_0)-(1))|0);
   $400=(($inHigh+($399<<3))|0);
   $401=(+(HEAPF64[(($400)>>3)]));
   $402=(($inClose+($399<<3))|0);
   $403=(+(HEAPF64[(($402)>>3)]));
   $404=(($inOpen+($399<<3))|0);
   $405=(+(HEAPF64[(($404)>>3)]));
   $406=$403<$405;
   $_19=($406?$405:$403);
   $407=($401)-($_19);
   $408=($406?$403:$405);
   $409=(($inLow+($399<<3))|0);
   $410=(+(HEAPF64[(($409)>>3)]));
   $411=($408)-($410);
   $412=($407)+($411);
   $414=$412;
  } else if (((($382|0))|0)==((0)|0)) {
   $384=((($NearTrailingIdx_0)-(1))|0);
   $385=(($inClose+($384<<3))|0);
   $386=(+(HEAPF64[(($385)>>3)]));
   $387=(($inOpen+($384<<3))|0);
   $388=(+(HEAPF64[(($387)>>3)]));
   $389=($386)-($388);
   $390=(+(Math_abs((+($389)))));
   $414=$390;
  } else if (((($382|0))|0)==((1)|0)) {
   $392=((($NearTrailingIdx_0)-(1))|0);
   $393=(($inHigh+($392<<3))|0);
   $394=(+(HEAPF64[(($393)>>3)]));
   $395=(($inLow+($392<<3))|0);
   $396=(+(HEAPF64[(($395)>>3)]));
   $397=($394)-($396);
   $414=$397;
  } else {
   $414=0.0;
  }

  $415=($379)-($414);
  $416=($NearPeriodTotal_1)+($415);
  $417=((HEAP32[((272)>>2)])|0);
  $418=(($417+404)|0);
  $419=((HEAP32[(($418)>>2)])|0);
  if (((($419|0))|0)==((1)|0)) {
   $426=(($inHigh+($108<<3))|0);
   $427=(+(HEAPF64[(($426)>>3)]));
   $428=(($inLow+($108<<3))|0);
   $429=(+(HEAPF64[(($428)>>3)]));
   $430=($427)-($429);
   $444=$430;
  } else if (((($419|0))|0)==((2)|0)) {
   $432=(($inHigh+($108<<3))|0);
   $433=(+(HEAPF64[(($432)>>3)]));
   $434=(+(HEAPF64[(($111)>>3)]));
   $435=(+(HEAPF64[(($109)>>3)]));
   $436=$434<$435;
   $_20=($436?$435:$434);
   $437=($433)-($_20);
   $438=($436?$434:$435);
   $439=(($inLow+($108<<3))|0);
   $440=(+(HEAPF64[(($439)>>3)]));
   $441=($438)-($440);
   $442=($437)+($441);
   $444=$442;
  } else if (((($419|0))|0)==((0)|0)) {
   $421=(+(HEAPF64[(($111)>>3)]));
   $422=(+(HEAPF64[(($109)>>3)]));
   $423=($421)-($422);
   $424=(+(Math_abs((+($423)))));
   $444=$424;
  } else {
   $444=0.0;
  }

  $445=((HEAP32[((272)>>2)])|0);
  $446=(($445+404)|0);
  $447=((HEAP32[(($446)>>2)])|0);
  if (((($447|0))|0)==((0)|0)) {
   $449=((($EqualTrailingIdx_0)-(1))|0);
   $450=(($inClose+($449<<3))|0);
   $451=(+(HEAPF64[(($450)>>3)]));
   $452=(($inOpen+($449<<3))|0);
   $453=(+(HEAPF64[(($452)>>3)]));
   $454=($451)-($453);
   $455=(+(Math_abs((+($454)))));
   $479=$455;
  } else if (((($447|0))|0)==((1)|0)) {
   $457=((($EqualTrailingIdx_0)-(1))|0);
   $458=(($inHigh+($457<<3))|0);
   $459=(+(HEAPF64[(($458)>>3)]));
   $460=(($inLow+($457<<3))|0);
   $461=(+(HEAPF64[(($460)>>3)]));
   $462=($459)-($461);
   $479=$462;
  } else if (((($447|0))|0)==((2)|0)) {
   $464=((($EqualTrailingIdx_0)-(1))|0);
   $465=(($inHigh+($464<<3))|0);
   $466=(+(HEAPF64[(($465)>>3)]));
   $467=(($inClose+($464<<3))|0);
   $468=(+(HEAPF64[(($467)>>3)]));
   $469=(($inOpen+($464<<3))|0);
   $470=(+(HEAPF64[(($469)>>3)]));
   $471=$468<$470;
   $_21=($471?$470:$468);
   $472=($466)-($_21);
   $473=($471?$468:$470);
   $474=(($inLow+($464<<3))|0);
   $475=(+(HEAPF64[(($474)>>3)]));
   $476=($473)-($475);
   $477=($472)+($476);
   $479=$477;
  } else {
   $479=0.0;
  }

  $480=($444)-($479);
  $481=($EqualPeriodTotal_1)+($480);
  $482=((($i_2)+(1))|0);
  $483=((($NearTrailingIdx_0)+(1))|0);
  $484=((($EqualTrailingIdx_0)+(1))|0);
  $485=($i_2|0)<($endIdx|0);
  if ($485) {
   $EqualTrailingIdx_0=$484;$NearTrailingIdx_0=$483;$outIdx_0=$outIdx_1;$i_2=$482;$EqualPeriodTotal_1=$481;$NearPeriodTotal_1=$416;
  } else {
   break;
  }
 }
 $487=((($smax30)+(1))|0);
 $488=((($487)-($smax31))|0);
 HEAP32[(($outNBElement)>>2)]=$488;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLGRAVESTONEDOJI_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+240)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+336)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 return (($_)|0);
}


function _TA_CDLGRAVESTONEDOJI($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond18=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$BodyDojiPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$smax28=0,$33=0,$smax29=0,$34=0,$35=0;
 var $36=0,$i_024=0,$BodyDojiPeriodTotal_023=.0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0,$46=0,$47=.0,$48=0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$57=.0;
 var $58=0,$_=.0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0,$66=.0,$67=.0,$68=0,$69=0,$smax30=0,$i_1_lcssa=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$70=0,$smax=0,$71=0,$i_121=0,$ShadowVeryShortPeriodTotal_020=.0;
 var $74=0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$_8=.0,$94=.0;
 var $95=.0,$96=0,$97=.0,$98=.0,$99=.0,$101=.0,$102=.0,$103=0,$104=0,$BodyDojiPeriodTotal_1=.0,$ShadowVeryShortPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyDojiTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$106=0,$107=.0,$108=0,$109=.0,$110=.0;
 var $111=.0,$112=0,$113=0,$114=.0,$115=0,$116=0,$117=0,$119=.0,$120=.0,$122=0,$123=0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$133=0,$134=.0,$135=0;
 var $_9=.0,$136=.0,$137=.0,$138=0,$139=.0,$140=.0,$141=.0,$143=.0,$144=.0,$145=0,$146=0,$147=0,$148=0,$149=.0,$150=.0,$151=0,$153=.0,$154=.0,$155=0,$_10=.0;
 var $156=0,$157=.0,$158=.0,$159=0,$160=.0,$161=0,$162=0,$163=0,$165=.0,$166=.0,$168=0,$169=0,$171=.0,$172=.0,$174=0,$175=.0,$176=.0,$178=0,$179=.0,$_11=.0;
 var $180=.0,$181=.0,$183=.0,$184=.0,$185=0,$186=0,$187=0,$188=0,$189=.0,$190=.0,$191=0,$193=0,$194=.0,$195=.0,$196=.0,$197=0,$_12=.0,$198=.0,$199=0,$200=.0;
 var $201=0,$202=0,$203=0,$205=.0,$206=.0,$209=.0,$210=.0,$212=.0,$213=.0,$215=.0,$216=.0,$217=.0,$218=.0,$220=.0,$221=.0,$222=0,$223=0,$224=0,$225=0,$226=.0;
 var $227=.0,$228=0,$230=0,$232=0,$outIdx_1=0,$234=0,$235=0,$236=0,$238=.0,$239=.0,$240=.0,$241=.0,$243=0,$244=.0,$245=0,$246=.0,$247=.0,$249=0,$250=.0,$251=.0;
 var $252=.0,$253=0,$_14=.0,$254=.0,$255=.0,$256=0,$257=.0,$258=.0,$259=.0,$261=.0,$262=0,$263=0,$264=0,$266=0,$267=.0,$268=0,$269=.0,$270=.0,$271=.0,$273=0;
 var $274=.0,$275=0,$276=.0,$277=.0,$279=0,$280=.0,$281=0,$282=.0,$283=0,$284=.0,$285=0,$_15=.0,$286=.0,$287=.0,$288=0,$289=.0,$290=.0,$291=.0,$293=.0,$294=.0;
 var $295=.0,$296=0,$297=0,$298=0,$300=.0,$301=.0,$302=.0,$303=.0,$305=0,$306=.0,$307=0,$308=.0,$309=.0,$311=0,$312=.0,$313=.0,$314=.0,$315=0,$_16=.0,$316=.0;
 var $317=.0,$318=0,$319=.0,$320=.0,$321=.0,$323=.0,$324=0,$325=0,$326=0,$328=0,$329=.0,$330=0,$331=.0,$332=.0,$333=.0,$335=0,$336=.0,$337=0,$338=.0,$339=.0;
 var $341=0,$342=.0,$343=0,$344=.0,$345=0,$346=.0,$347=0,$_17=.0,$348=.0,$349=.0,$350=0,$351=.0,$352=.0,$353=.0,$355=.0,$356=.0,$357=.0,$358=0,$359=0,$360=0;
 var $361=0,$363=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond18=$10|$or_cond5_not;
 if ($or_cond18) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLGRAVESTONEDOJI_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+240)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+336)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+236)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $BodyDojiPeriodTotal_023=0.0;$i_024=$20;
  while(1) {


   if (((($27|0))|0)==((2)|0)) {
    $52=(($inHigh+($i_024<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inClose+($i_024<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inOpen+($i_024<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=$55<$57;
    $_=($58?$57:$55);
    $59=($53)-($_);
    $60=($58?$55:$57);
    $61=(($inLow+($i_024<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=($60)-($62);
    $64=($59)+($63);
    $66=$64;
   } else if (((($27|0))|0)==((0)|0)) {
    $39=(($inClose+($i_024<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inOpen+($i_024<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $44=(+(Math_abs((+($43)))));
    $66=$44;
   } else if (((($27|0))|0)==((1)|0)) {
    $46=(($inHigh+($i_024<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inLow+($i_024<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=($47)-($49);
    $66=$50;
   } else {
    $66=0.0;
   }

   $67=($BodyDojiPeriodTotal_023)+($66);
   $68=((($i_024)+(1))|0);
   $69=($68|0)<($_startIdx|0);
   if ($69) {
    $BodyDojiPeriodTotal_023=$67;$i_024=$68;
   } else {
    $BodyDojiPeriodTotal_0_lcssa=$67;
    break;
   }
  }
 } else {
  $BodyDojiPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+332)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=($12|0)>($startIdx|0);
  $smax28=($32?$12:$startIdx);
  $33=($12|0)>($startIdx|0);
  $smax29=($33?$12:$startIdx);
  $34=((($smax29)+(1))|0);
  $35=((($34)-($22))|0);
  $36=($smax28|0)>($35|0);
  $ShadowVeryShortPeriodTotal_020=0.0;$i_121=$23;
  while(1) {


   if (((($31|0))|0)==((1)|0)) {
    $81=(($inHigh+($i_121<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($i_121<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $101=$85;
   } else if (((($31|0))|0)==((0)|0)) {
    $74=(($inClose+($i_121<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($i_121<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $101=$79;
   } else if (((($31|0))|0)==((2)|0)) {
    $87=(($inHigh+($i_121<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inClose+($i_121<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inOpen+($i_121<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$90<$92;
    $_8=($93?$92:$90);
    $94=($88)-($_8);
    $95=($93?$90:$92);
    $96=(($inLow+($i_121<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $101=$99;
   } else {
    $101=0.0;
   }

   $102=($ShadowVeryShortPeriodTotal_020)+($101);
   $103=((($i_121)+(1))|0);
   $104=($103|0)<($_startIdx|0);
   if ($104) {
    $ShadowVeryShortPeriodTotal_020=$102;$i_121=$103;
   } else {
    break;
   }
  }
  $smax30=($36?$smax28:$35);
  $ShadowVeryShortPeriodTotal_0_lcssa=$102;$i_1_lcssa=$smax30;
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;$i_1_lcssa=$23;
 }


 $70=($i_1_lcssa|0)>($endIdx|0);
 $smax=($70?$i_1_lcssa:$endIdx);
 $71=((($smax)+(1))|0);
 $ShadowVeryShortTrailingIdx_0=$23;$BodyDojiTrailingIdx_0=$20;$outIdx_0=0;$i_2=$i_1_lcssa;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;$BodyDojiPeriodTotal_1=$BodyDojiPeriodTotal_0_lcssa;
 while(1) {






  $106=(($inClose+($i_2<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=(($inOpen+($i_2<<3))|0);
  $109=(+(HEAPF64[(($108)>>3)]));
  $110=($107)-($109);
  $111=(+(Math_abs((+($110)))));
  $112=((HEAP32[((272)>>2)])|0);
  $113=(($112+248)|0);
  $114=(+(HEAPF64[(($113)>>3)]));
  $115=(($112+240)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  $117=($116|0)==0;
  do {
   if ($117) {
    $122=(($112+236)|0);
    $123=((HEAP32[(($122)>>2)])|0);
    if (((($123|0))|0)==((1)|0)) {
     $125=(($inHigh+($i_2<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=(($inLow+($i_2<<3))|0);
     $128=(+(HEAPF64[(($127)>>3)]));
     $129=($126)-($128);
     $143=$129;
     break;
    } else if (((($123|0))|0)==((0)|0)) {
     $143=$111;
     break;
    }
    $131=($123|0)==2;
    if (!($131)) {
     $143=0.0;
     break;
    }
    $133=(($inHigh+($i_2<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=$107<$109;
    $_9=($135?$109:$107);
    $136=($134)-($_9);
    $137=($135?$107:$109);
    $138=(($inLow+($i_2<<3))|0);
    $139=(+(HEAPF64[(($138)>>3)]));
    $140=($137)-($139);
    $141=($136)+($140);
    $143=$141;
   } else {
    $119=(+((($116|0))|0));
    $120=($BodyDojiPeriodTotal_1)/($119);
    $143=$120;
   }
  } while(0);

  $144=($114)*($143);
  $145=((HEAP32[((272)>>2)])|0);
  $146=(($145+236)|0);
  $147=((HEAP32[(($146)>>2)])|0);
  $148=($147|0)==2;
  $149=($148?(2.0):(1.0));
  $150=($144)/($149);
  $151=$111>$150;
  do {
   if ($151) {
    label = 44;
   } else {
    $153=(+(HEAPF64[(($106)>>3)]));
    $154=(+(HEAPF64[(($108)>>3)]));
    $155=$153<$154;
    $_10=($155?$153:$154);
    $156=(($inLow+($i_2<<3))|0);
    $157=(+(HEAPF64[(($156)>>3)]));
    $158=($_10)-($157);
    $159=(($145+344)|0);
    $160=(+(HEAPF64[(($159)>>3)]));
    $161=(($145+336)|0);
    $162=((HEAP32[(($161)>>2)])|0);
    $163=($162|0)==0;
    do {
     if ($163) {
      $168=(($145+332)|0);
      $169=((HEAP32[(($168)>>2)])|0);
      if (((($169|0))|0)==((2)|0)) {
       $178=(($inHigh+($i_2<<3))|0);
       $179=(+(HEAPF64[(($178)>>3)]));
       $_11=($155?$154:$153);
       $180=($179)-($_11);
       $181=($158)+($180);
       $183=$181;
       break;
      } else if (((($169|0))|0)==((1)|0)) {
       $174=(($inHigh+($i_2<<3))|0);
       $175=(+(HEAPF64[(($174)>>3)]));
       $176=($175)-($157);
       $183=$176;
       break;
      } else if (((($169|0))|0)==((0)|0)) {
       $171=($153)-($154);
       $172=(+(Math_abs((+($171)))));
       $183=$172;
       break;
      } else {
       $183=0.0;
       break;
      }
     } else {
      $165=(+((($162|0))|0));
      $166=($ShadowVeryShortPeriodTotal_1)/($165);
      $183=$166;
     }
    } while(0);

    $184=($160)*($183);
    $185=((HEAP32[((272)>>2)])|0);
    $186=(($185+332)|0);
    $187=((HEAP32[(($186)>>2)])|0);
    $188=($187|0)==2;
    $189=($188?(2.0):(1.0));
    $190=($184)/($189);
    $191=$158<$190;
    if (!($191)) {
     label = 44;
     break;
    }
    $193=(($inHigh+($i_2<<3))|0);
    $194=(+(HEAPF64[(($193)>>3)]));
    $195=(+(HEAPF64[(($106)>>3)]));
    $196=(+(HEAPF64[(($108)>>3)]));
    $197=$195<$196;
    $_12=($197?$196:$195);
    $198=($194)-($_12);
    $199=(($185+344)|0);
    $200=(+(HEAPF64[(($199)>>3)]));
    $201=(($185+336)|0);
    $202=((HEAP32[(($201)>>2)])|0);
    $203=($202|0)==0;
    do {
     if ($203) {
      if (((($187|0))|0)==((0)|0)) {
       $209=($195)-($196);
       $210=(+(Math_abs((+($209)))));
       $220=$210;
       break;
      } else if (((($187|0))|0)==((1)|0)) {
       $212=(+(HEAPF64[(($156)>>3)]));
       $213=($194)-($212);
       $220=$213;
       break;
      } else if (((($187|0))|0)==((2)|0)) {
       $215=($197?$195:$196);
       $216=(+(HEAPF64[(($156)>>3)]));
       $217=($215)-($216);
       $218=($198)+($217);
       $220=$218;
       break;
      } else {
       $220=0.0;
       break;
      }
     } else {
      $205=(+((($202|0))|0));
      $206=($ShadowVeryShortPeriodTotal_1)/($205);
      $220=$206;
     }
    } while(0);

    $221=($200)*($220);
    $222=((HEAP32[((272)>>2)])|0);
    $223=(($222+332)|0);
    $224=((HEAP32[(($223)>>2)])|0);
    $225=($224|0)==2;
    $226=($225?(2.0):(1.0));
    $227=($221)/($226);
    $228=$198>$227;
    if (!($228)) {
     label = 44;
     break;
    }
    $230=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($230)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 44) {
   label = 0;
   $232=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($232)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $234=((HEAP32[((272)>>2)])|0);
  $235=(($234+236)|0);
  $236=((HEAP32[(($235)>>2)])|0);
  if (((($236|0))|0)==((0)|0)) {
   $238=(+(HEAPF64[(($106)>>3)]));
   $239=(+(HEAPF64[(($108)>>3)]));
   $240=($238)-($239);
   $241=(+(Math_abs((+($240)))));
   $261=$241;
  } else if (((($236|0))|0)==((1)|0)) {
   $243=(($inHigh+($i_2<<3))|0);
   $244=(+(HEAPF64[(($243)>>3)]));
   $245=(($inLow+($i_2<<3))|0);
   $246=(+(HEAPF64[(($245)>>3)]));
   $247=($244)-($246);
   $261=$247;
  } else if (((($236|0))|0)==((2)|0)) {
   $249=(($inHigh+($i_2<<3))|0);
   $250=(+(HEAPF64[(($249)>>3)]));
   $251=(+(HEAPF64[(($106)>>3)]));
   $252=(+(HEAPF64[(($108)>>3)]));
   $253=$251<$252;
   $_14=($253?$252:$251);
   $254=($250)-($_14);
   $255=($253?$251:$252);
   $256=(($inLow+($i_2<<3))|0);
   $257=(+(HEAPF64[(($256)>>3)]));
   $258=($255)-($257);
   $259=($254)+($258);
   $261=$259;
  } else {
   $261=0.0;
  }

  $262=((HEAP32[((272)>>2)])|0);
  $263=(($262+236)|0);
  $264=((HEAP32[(($263)>>2)])|0);
  if (((($264|0))|0)==((0)|0)) {
   $266=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $267=(+(HEAPF64[(($266)>>3)]));
   $268=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $269=(+(HEAPF64[(($268)>>3)]));
   $270=($267)-($269);
   $271=(+(Math_abs((+($270)))));
   $293=$271;
  } else if (((($264|0))|0)==((1)|0)) {
   $273=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $274=(+(HEAPF64[(($273)>>3)]));
   $275=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $276=(+(HEAPF64[(($275)>>3)]));
   $277=($274)-($276);
   $293=$277;
  } else if (((($264|0))|0)==((2)|0)) {
   $279=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $280=(+(HEAPF64[(($279)>>3)]));
   $281=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $282=(+(HEAPF64[(($281)>>3)]));
   $283=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $284=(+(HEAPF64[(($283)>>3)]));
   $285=$282<$284;
   $_15=($285?$284:$282);
   $286=($280)-($_15);
   $287=($285?$282:$284);
   $288=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $289=(+(HEAPF64[(($288)>>3)]));
   $290=($287)-($289);
   $291=($286)+($290);
   $293=$291;
  } else {
   $293=0.0;
  }

  $294=($261)-($293);
  $295=($BodyDojiPeriodTotal_1)+($294);
  $296=((HEAP32[((272)>>2)])|0);
  $297=(($296+332)|0);
  $298=((HEAP32[(($297)>>2)])|0);
  if (((($298|0))|0)==((0)|0)) {
   $300=(+(HEAPF64[(($106)>>3)]));
   $301=(+(HEAPF64[(($108)>>3)]));
   $302=($300)-($301);
   $303=(+(Math_abs((+($302)))));
   $323=$303;
  } else if (((($298|0))|0)==((1)|0)) {
   $305=(($inHigh+($i_2<<3))|0);
   $306=(+(HEAPF64[(($305)>>3)]));
   $307=(($inLow+($i_2<<3))|0);
   $308=(+(HEAPF64[(($307)>>3)]));
   $309=($306)-($308);
   $323=$309;
  } else if (((($298|0))|0)==((2)|0)) {
   $311=(($inHigh+($i_2<<3))|0);
   $312=(+(HEAPF64[(($311)>>3)]));
   $313=(+(HEAPF64[(($106)>>3)]));
   $314=(+(HEAPF64[(($108)>>3)]));
   $315=$313<$314;
   $_16=($315?$314:$313);
   $316=($312)-($_16);
   $317=($315?$313:$314);
   $318=(($inLow+($i_2<<3))|0);
   $319=(+(HEAPF64[(($318)>>3)]));
   $320=($317)-($319);
   $321=($316)+($320);
   $323=$321;
  } else {
   $323=0.0;
  }

  $324=((HEAP32[((272)>>2)])|0);
  $325=(($324+332)|0);
  $326=((HEAP32[(($325)>>2)])|0);
  if (((($326|0))|0)==((0)|0)) {
   $328=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $329=(+(HEAPF64[(($328)>>3)]));
   $330=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $331=(+(HEAPF64[(($330)>>3)]));
   $332=($329)-($331);
   $333=(+(Math_abs((+($332)))));
   $355=$333;
  } else if (((($326|0))|0)==((1)|0)) {
   $335=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $336=(+(HEAPF64[(($335)>>3)]));
   $337=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $338=(+(HEAPF64[(($337)>>3)]));
   $339=($336)-($338);
   $355=$339;
  } else if (((($326|0))|0)==((2)|0)) {
   $341=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $344=(+(HEAPF64[(($343)>>3)]));
   $345=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $346=(+(HEAPF64[(($345)>>3)]));
   $347=$344<$346;
   $_17=($347?$346:$344);
   $348=($342)-($_17);
   $349=($347?$344:$346);
   $350=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $351=(+(HEAPF64[(($350)>>3)]));
   $352=($349)-($351);
   $353=($348)+($352);
   $355=$353;
  } else {
   $355=0.0;
  }

  $356=($323)-($355);
  $357=($ShadowVeryShortPeriodTotal_1)+($356);
  $358=((($i_2)+(1))|0);
  $359=((($BodyDojiTrailingIdx_0)+(1))|0);
  $360=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $361=($i_2|0)<($endIdx|0);
  if ($361) {
   $ShadowVeryShortTrailingIdx_0=$360;$BodyDojiTrailingIdx_0=$359;$outIdx_0=$outIdx_1;$i_2=$358;$ShadowVeryShortPeriodTotal_1=$357;$BodyDojiPeriodTotal_1=$295;
  } else {
   break;
  }
 }
 $363=((($71)-($i_1_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$363;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLHAMMER_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$__=0,$10=0,$11=0,$12=0,$13=0,$15=0,$16=0,$17=0,$18=0,$19=0;
 var $_2=0,$20=0,$21=0,$22=0,$_2_=0,$24=0,$25=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+264)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=(($1+336)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($_|0)>($8|0);
 $__=($9?$_:$8);
 $10=((HEAP32[((272)>>2)])|0);
 $11=(($10+360)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($__|0)>($12|0);
 if (!($13)) {
  $24=$12;

  $25=((($24)+(1))|0);
  return (($25)|0);
 }
 $15=(($10+216)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($10+264)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=($16|0)>($18|0);
 $_2=($19?$16:$18);
 $20=(($10+336)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=($_2|0)>($21|0);
 $_2_=($22?$_2:$21);
 $24=$_2_;

 $25=((($24)+(1))|0);
 return (($25)|0);
}


function _TA_CDLHAMMER($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond26=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$BodyPeriodTotal_0_lcssa=.0,$35=0,$36=0,$37=0;
 var $38=0,$i_041=0,$BodyPeriodTotal_040=.0,$41=0,$42=.0,$43=0,$44=.0,$45=.0,$46=.0,$48=0,$49=.0,$50=0,$51=.0,$52=.0,$54=0,$55=.0,$56=0,$57=.0,$58=0,$59=.0;
 var $60=0,$_=.0,$61=.0,$62=.0,$63=0,$64=.0,$65=.0,$66=.0,$68=.0,$69=.0,$70=0,$71=0,$ShadowLongPeriodTotal_0_lcssa=.0,$72=0,$73=0,$74=0,$75=0,$i_137=0,$ShadowLongPeriodTotal_036=.0,$78=0;
 var $79=.0,$80=0,$81=.0,$82=.0,$83=.0,$85=0,$86=.0,$87=0,$88=.0,$89=.0,$91=0,$92=.0,$93=0,$94=.0,$95=0,$96=.0,$97=0,$_8=.0,$98=.0,$99=.0;
 var $100=0,$101=.0,$102=.0,$103=.0,$105=.0,$106=.0,$107=0,$108=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$109=0,$110=0,$111=0,$112=0,$i_232=0,$ShadowVeryShortPeriodTotal_031=.0,$115=0,$116=.0,$117=0,$118=.0,$119=.0;
 var $120=.0,$122=0,$123=.0,$124=0,$125=.0,$126=.0,$128=0,$129=.0,$130=0,$131=.0,$132=0,$133=.0,$134=0,$_9=.0,$135=.0,$136=.0,$137=0,$138=.0,$139=.0,$140=.0;
 var $142=.0,$143=.0,$144=0,$145=0,$NearPeriodTotal_0_lcssa=.0,$146=0,$smax=0,$147=0,$smax44=0,$148=0,$smax45=0,$i_329=0,$NearPeriodTotal_028=.0,$151=0,$152=.0,$153=0,$154=.0,$155=.0,$156=.0,$158=0;
 var $159=.0,$160=0,$161=.0,$162=.0,$164=0,$165=.0,$166=0,$167=.0,$168=0,$169=.0,$170=0,$_10=.0,$171=.0,$172=.0,$173=0,$174=.0,$175=.0,$176=.0,$178=.0,$179=.0;
 var $180=0,$181=0,$BodyPeriodTotal_1=.0,$ShadowLongPeriodTotal_1=.0,$ShadowVeryShortPeriodTotal_1=.0,$NearPeriodTotal_1=.0,$i_4=0,$outIdx_0=0,$BodyTrailingIdx_0=0,$ShadowLongTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$NearTrailingIdx_0=0,$183=0,$184=.0,$185=0,$186=.0,$187=.0,$188=.0,$189=0,$190=0;
 var $191=.0,$192=0,$193=0,$194=0,$196=.0,$197=.0,$199=0,$200=0,$202=0,$203=.0,$204=0,$205=.0,$206=.0,$208=0,$210=0,$211=.0,$212=0,$_11=.0,$213=.0,$214=.0;
 var $215=0,$216=.0,$217=.0,$218=.0,$220=.0,$221=.0,$222=0,$223=0,$224=0,$225=0,$226=.0,$227=.0,$228=0,$230=.0,$231=.0,$232=0,$_12=.0,$233=0,$234=.0,$235=.0;
 var $236=0,$237=.0,$238=0,$239=0,$240=0,$242=.0,$243=.0,$245=0,$246=0,$248=.0,$249=.0,$251=0,$252=.0,$253=.0,$255=0,$256=.0,$_13=.0,$257=.0,$258=.0,$260=.0;
 var $261=.0,$262=0,$263=0,$264=0,$265=0,$266=.0,$267=.0,$268=0,$270=0,$271=.0,$272=.0,$273=.0,$274=0,$_14=.0,$275=.0,$276=0,$277=.0,$278=0,$279=0,$280=0;
 var $282=.0,$283=.0,$285=0,$286=0,$288=.0,$289=.0,$291=.0,$292=.0,$294=.0,$295=.0,$296=.0,$297=.0,$299=.0,$300=.0,$301=0,$302=0,$303=0,$304=0,$305=.0,$306=.0;
 var $307=0,$309=.0,$310=.0,$311=0,$_16=.0,$312=0,$313=0,$314=.0,$315=0,$316=.0,$317=0,$318=0,$319=0,$321=.0,$322=.0,$324=0,$325=0,$327=0,$328=.0,$329=0;
 var $330=.0,$331=.0,$332=.0,$334=0,$335=.0,$336=.0,$338=0,$339=.0,$340=0,$341=.0,$342=0,$343=.0,$344=0,$_17=.0,$345=.0,$346=.0,$347=.0,$348=.0,$350=.0,$351=.0;
 var $352=0,$353=0,$354=0,$355=0,$356=.0,$357=.0,$358=.0,$359=0,$361=0,$363=0,$outIdx_1=0,$365=0,$366=0,$367=0,$369=.0,$370=.0,$371=.0,$372=.0,$374=0,$375=.0;
 var $376=0,$377=.0,$378=.0,$380=0,$381=.0,$382=.0,$383=.0,$384=0,$_18=.0,$385=.0,$386=.0,$387=0,$388=.0,$389=.0,$390=.0,$392=.0,$393=0,$394=0,$395=0,$397=0;
 var $398=.0,$399=0,$400=.0,$401=.0,$402=.0,$404=0,$405=.0,$406=0,$407=.0,$408=.0,$410=0,$411=.0,$412=0,$413=.0,$414=0,$415=.0,$416=0,$_19=.0,$417=.0,$418=.0;
 var $419=0,$420=.0,$421=.0,$422=.0,$424=.0,$425=.0,$426=.0,$427=0,$428=0,$429=0,$431=.0,$432=.0,$433=.0,$434=.0,$436=0,$437=.0,$438=0,$439=.0,$440=.0,$442=0;
 var $443=.0,$444=.0,$445=.0,$446=0,$_20=.0,$447=.0,$448=.0,$449=0,$450=.0,$451=.0,$452=.0,$454=.0,$455=0,$456=0,$457=0,$459=0,$460=.0,$461=0,$462=.0,$463=.0;
 var $464=.0,$466=0,$467=.0,$468=0,$469=.0,$470=.0,$472=0,$473=.0,$474=0,$475=.0,$476=0,$477=.0,$478=0,$_21=.0,$479=.0,$480=.0,$481=0,$482=.0,$483=.0,$484=.0;
 var $486=.0,$487=.0,$488=.0,$489=0,$490=0,$491=0,$493=.0,$494=.0,$495=.0,$496=.0,$498=0,$499=.0,$500=0,$501=.0,$502=.0,$504=0,$505=.0,$506=.0,$507=.0,$508=0;
 var $_22=.0,$509=.0,$510=.0,$511=0,$512=.0,$513=.0,$514=.0,$516=.0,$517=0,$518=0,$519=0,$521=0,$522=.0,$523=0,$524=.0,$525=.0,$526=.0,$528=0,$529=.0,$530=0;
 var $531=.0,$532=.0,$534=0,$535=.0,$536=0,$537=.0,$538=0,$539=.0,$540=0,$_23=.0,$541=.0,$542=.0,$543=0,$544=.0,$545=.0,$546=.0,$548=.0,$549=.0,$550=.0,$551=0;
 var $552=0,$553=0,$555=0,$556=0,$557=.0,$558=0,$559=.0,$560=.0,$561=.0,$563=0,$564=0,$565=.0,$566=0,$567=.0,$568=.0,$570=0,$571=0,$572=.0,$573=0,$574=.0;
 var $575=0,$576=.0,$577=0,$_24=.0,$578=.0,$579=.0,$580=0,$581=.0,$582=.0,$583=.0,$585=.0,$586=0,$587=0,$588=0,$590=0,$591=.0,$592=0,$593=.0,$594=.0,$595=.0;
 var $597=0,$598=.0,$599=0,$600=.0,$601=.0,$603=0,$604=.0,$605=0,$606=.0,$607=0,$608=.0,$609=0,$_25=.0,$610=.0,$611=.0,$612=0,$613=.0,$614=.0,$615=.0,$617=.0;
 var $618=.0,$619=.0,$620=0,$621=0,$622=0,$623=0,$624=0,$625=0,$627=0,$628=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond26=$10|$or_cond5_not;
 if ($or_cond26) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLHAMMER_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+216)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+264)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=(($17+336)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($_startIdx)-($25))|0);
 $27=((($_startIdx)-(1))|0);
 $28=(($17+360)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=((($27)-($29))|0);
 $31=($19|0)>0;
 if ($31) {
  $32=((HEAP32[((272)>>2)])|0);
  $33=(($32+212)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $BodyPeriodTotal_040=0.0;$i_041=$20;
  while(1) {


   if (((($34|0))|0)==((2)|0)) {
    $54=(($inHigh+($i_041<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inClose+($i_041<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=(($inOpen+($i_041<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=$57<$59;
    $_=($60?$59:$57);
    $61=($55)-($_);
    $62=($60?$57:$59);
    $63=(($inLow+($i_041<<3))|0);
    $64=(+(HEAPF64[(($63)>>3)]));
    $65=($62)-($64);
    $66=($61)+($65);
    $68=$66;
   } else if (((($34|0))|0)==((1)|0)) {
    $48=(($inHigh+($i_041<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inLow+($i_041<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=($49)-($51);
    $68=$52;
   } else if (((($34|0))|0)==((0)|0)) {
    $41=(($inClose+($i_041<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=(($inOpen+($i_041<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=($42)-($44);
    $46=(+(Math_abs((+($45)))));
    $68=$46;
   } else {
    $68=0.0;
   }

   $69=($BodyPeriodTotal_040)+($68);
   $70=((($i_041)+(1))|0);
   $71=($70|0)<($_startIdx|0);
   if ($71) {
    $BodyPeriodTotal_040=$69;$i_041=$70;
   } else {
    $BodyPeriodTotal_0_lcssa=$69;
    break;
   }
  }
 } else {
  $BodyPeriodTotal_0_lcssa=0.0;
 }

 $35=($22|0)>0;
 if ($35) {
  $36=((HEAP32[((272)>>2)])|0);
  $37=(($36+260)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $ShadowLongPeriodTotal_036=0.0;$i_137=$23;
  while(1) {


   if (((($38|0))|0)==((0)|0)) {
    $78=(($inClose+($i_137<<3))|0);
    $79=(+(HEAPF64[(($78)>>3)]));
    $80=(($inOpen+($i_137<<3))|0);
    $81=(+(HEAPF64[(($80)>>3)]));
    $82=($79)-($81);
    $83=(+(Math_abs((+($82)))));
    $105=$83;
   } else if (((($38|0))|0)==((1)|0)) {
    $85=(($inHigh+($i_137<<3))|0);
    $86=(+(HEAPF64[(($85)>>3)]));
    $87=(($inLow+($i_137<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=($86)-($88);
    $105=$89;
   } else if (((($38|0))|0)==((2)|0)) {
    $91=(($inHigh+($i_137<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=(($inClose+($i_137<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=(($inOpen+($i_137<<3))|0);
    $96=(+(HEAPF64[(($95)>>3)]));
    $97=$94<$96;
    $_8=($97?$96:$94);
    $98=($92)-($_8);
    $99=($97?$94:$96);
    $100=(($inLow+($i_137<<3))|0);
    $101=(+(HEAPF64[(($100)>>3)]));
    $102=($99)-($101);
    $103=($98)+($102);
    $105=$103;
   } else {
    $105=0.0;
   }

   $106=($ShadowLongPeriodTotal_036)+($105);
   $107=((($i_137)+(1))|0);
   $108=($107|0)<($_startIdx|0);
   if ($108) {
    $ShadowLongPeriodTotal_036=$106;$i_137=$107;
   } else {
    $ShadowLongPeriodTotal_0_lcssa=$106;
    break;
   }
  }
 } else {
  $ShadowLongPeriodTotal_0_lcssa=0.0;
 }

 $72=($25|0)>0;
 if ($72) {
  $73=((HEAP32[((272)>>2)])|0);
  $74=(($73+332)|0);
  $75=((HEAP32[(($74)>>2)])|0);
  $ShadowVeryShortPeriodTotal_031=0.0;$i_232=$26;
  while(1) {


   if (((($75|0))|0)==((0)|0)) {
    $115=(($inClose+($i_232<<3))|0);
    $116=(+(HEAPF64[(($115)>>3)]));
    $117=(($inOpen+($i_232<<3))|0);
    $118=(+(HEAPF64[(($117)>>3)]));
    $119=($116)-($118);
    $120=(+(Math_abs((+($119)))));
    $142=$120;
   } else if (((($75|0))|0)==((1)|0)) {
    $122=(($inHigh+($i_232<<3))|0);
    $123=(+(HEAPF64[(($122)>>3)]));
    $124=(($inLow+($i_232<<3))|0);
    $125=(+(HEAPF64[(($124)>>3)]));
    $126=($123)-($125);
    $142=$126;
   } else if (((($75|0))|0)==((2)|0)) {
    $128=(($inHigh+($i_232<<3))|0);
    $129=(+(HEAPF64[(($128)>>3)]));
    $130=(($inClose+($i_232<<3))|0);
    $131=(+(HEAPF64[(($130)>>3)]));
    $132=(($inOpen+($i_232<<3))|0);
    $133=(+(HEAPF64[(($132)>>3)]));
    $134=$131<$133;
    $_9=($134?$133:$131);
    $135=($129)-($_9);
    $136=($134?$131:$133);
    $137=(($inLow+($i_232<<3))|0);
    $138=(+(HEAPF64[(($137)>>3)]));
    $139=($136)-($138);
    $140=($135)+($139);
    $142=$140;
   } else {
    $142=0.0;
   }

   $143=($ShadowVeryShortPeriodTotal_031)+($142);
   $144=((($i_232)+(1))|0);
   $145=($144|0)<($_startIdx|0);
   if ($145) {
    $ShadowVeryShortPeriodTotal_031=$143;$i_232=$144;
   } else {
    $ShadowVeryShortPeriodTotal_0_lcssa=$143;
    break;
   }
  }
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;
 }

 $109=($29|0)>0;
 if ($109) {
  $110=((HEAP32[((272)>>2)])|0);
  $111=(($110+356)|0);
  $112=((HEAP32[(($111)>>2)])|0);
  $NearPeriodTotal_028=0.0;$i_329=$30;
  while(1) {


   if (((($112|0))|0)==((0)|0)) {
    $151=(($inClose+($i_329<<3))|0);
    $152=(+(HEAPF64[(($151)>>3)]));
    $153=(($inOpen+($i_329<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=($152)-($154);
    $156=(+(Math_abs((+($155)))));
    $178=$156;
   } else if (((($112|0))|0)==((1)|0)) {
    $158=(($inHigh+($i_329<<3))|0);
    $159=(+(HEAPF64[(($158)>>3)]));
    $160=(($inLow+($i_329<<3))|0);
    $161=(+(HEAPF64[(($160)>>3)]));
    $162=($159)-($161);
    $178=$162;
   } else if (((($112|0))|0)==((2)|0)) {
    $164=(($inHigh+($i_329<<3))|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    $166=(($inClose+($i_329<<3))|0);
    $167=(+(HEAPF64[(($166)>>3)]));
    $168=(($inOpen+($i_329<<3))|0);
    $169=(+(HEAPF64[(($168)>>3)]));
    $170=$167<$169;
    $_10=($170?$169:$167);
    $171=($165)-($_10);
    $172=($170?$167:$169);
    $173=(($inLow+($i_329<<3))|0);
    $174=(+(HEAPF64[(($173)>>3)]));
    $175=($172)-($174);
    $176=($171)+($175);
    $178=$176;
   } else {
    $178=0.0;
   }

   $179=($NearPeriodTotal_028)+($178);
   $180=((($i_329)+(1))|0);
   $181=($180|0)<($27|0);
   if ($181) {
    $NearPeriodTotal_028=$179;$i_329=$180;
   } else {
    $NearPeriodTotal_0_lcssa=$179;
    break;
   }
  }
 } else {
  $NearPeriodTotal_0_lcssa=0.0;
 }

 $146=($12|0)>($endIdx|0);
 $smax=($146?$12:$endIdx);
 $147=($smax|0)>($startIdx|0);
 $smax44=($147?$smax:$startIdx);
 $148=($12|0)>($startIdx|0);
 $smax45=($148?$12:$startIdx);
 $NearTrailingIdx_0=$30;$ShadowVeryShortTrailingIdx_0=$26;$ShadowLongTrailingIdx_0=$23;$BodyTrailingIdx_0=$20;$outIdx_0=0;$i_4=$_startIdx;$NearPeriodTotal_1=$NearPeriodTotal_0_lcssa;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;$ShadowLongPeriodTotal_1=$ShadowLongPeriodTotal_0_lcssa;$BodyPeriodTotal_1=$BodyPeriodTotal_0_lcssa;
 while(1) {










  $183=(($inClose+($i_4<<3))|0);
  $184=(+(HEAPF64[(($183)>>3)]));
  $185=(($inOpen+($i_4<<3))|0);
  $186=(+(HEAPF64[(($185)>>3)]));
  $187=($184)-($186);
  $188=(+(Math_abs((+($187)))));
  $189=((HEAP32[((272)>>2)])|0);
  $190=(($189+224)|0);
  $191=(+(HEAPF64[(($190)>>3)]));
  $192=(($189+216)|0);
  $193=((HEAP32[(($192)>>2)])|0);
  $194=($193|0)==0;
  do {
   if ($194) {
    $199=(($189+212)|0);
    $200=((HEAP32[(($199)>>2)])|0);
    if (((($200|0))|0)==((1)|0)) {
     $202=(($inHigh+($i_4<<3))|0);
     $203=(+(HEAPF64[(($202)>>3)]));
     $204=(($inLow+($i_4<<3))|0);
     $205=(+(HEAPF64[(($204)>>3)]));
     $206=($203)-($205);
     $220=$206;
     break;
    } else if (((($200|0))|0)==((0)|0)) {
     $220=$188;
     break;
    }
    $208=($200|0)==2;
    if (!($208)) {
     $220=0.0;
     break;
    }
    $210=(($inHigh+($i_4<<3))|0);
    $211=(+(HEAPF64[(($210)>>3)]));
    $212=$184<$186;
    $_11=($212?$186:$184);
    $213=($211)-($_11);
    $214=($212?$184:$186);
    $215=(($inLow+($i_4<<3))|0);
    $216=(+(HEAPF64[(($215)>>3)]));
    $217=($214)-($216);
    $218=($213)+($217);
    $220=$218;
   } else {
    $196=(+((($193|0))|0));
    $197=($BodyPeriodTotal_1)/($196);
    $220=$197;
   }
  } while(0);

  $221=($191)*($220);
  $222=((HEAP32[((272)>>2)])|0);
  $223=(($222+212)|0);
  $224=((HEAP32[(($223)>>2)])|0);
  $225=($224|0)==2;
  $226=($225?(2.0):(1.0));
  $227=($221)/($226);
  $228=$188<$227;
  do {
   if ($228) {
    $230=(+(HEAPF64[(($183)>>3)]));
    $231=(+(HEAPF64[(($185)>>3)]));
    $232=$230<$231;
    $_12=($232?$230:$231);
    $233=(($inLow+($i_4<<3))|0);
    $234=(+(HEAPF64[(($233)>>3)]));
    $235=($_12)-($234);
    $236=(($222+272)|0);
    $237=(+(HEAPF64[(($236)>>3)]));
    $238=(($222+264)|0);
    $239=((HEAP32[(($238)>>2)])|0);
    $240=($239|0)==0;
    do {
     if ($240) {
      $245=(($222+260)|0);
      $246=((HEAP32[(($245)>>2)])|0);
      if (((($246|0))|0)==((0)|0)) {
       $248=($230)-($231);
       $249=(+(Math_abs((+($248)))));
       $260=$249;
       break;
      } else if (((($246|0))|0)==((1)|0)) {
       $251=(($inHigh+($i_4<<3))|0);
       $252=(+(HEAPF64[(($251)>>3)]));
       $253=($252)-($234);
       $260=$253;
       break;
      } else if (((($246|0))|0)==((2)|0)) {
       $255=(($inHigh+($i_4<<3))|0);
       $256=(+(HEAPF64[(($255)>>3)]));
       $_13=($232?$231:$230);
       $257=($256)-($_13);
       $258=($235)+($257);
       $260=$258;
       break;
      } else {
       $260=0.0;
       break;
      }
     } else {
      $242=(+((($239|0))|0));
      $243=($ShadowLongPeriodTotal_1)/($242);
      $260=$243;
     }
    } while(0);

    $261=($237)*($260);
    $262=((HEAP32[((272)>>2)])|0);
    $263=(($262+260)|0);
    $264=((HEAP32[(($263)>>2)])|0);
    $265=($264|0)==2;
    $266=($265?(2.0):(1.0));
    $267=($261)/($266);
    $268=$235>$267;
    if (!($268)) {
     label = 64;
     break;
    }
    $270=(($inHigh+($i_4<<3))|0);
    $271=(+(HEAPF64[(($270)>>3)]));
    $272=(+(HEAPF64[(($183)>>3)]));
    $273=(+(HEAPF64[(($185)>>3)]));
    $274=$272<$273;
    $_14=($274?$273:$272);
    $275=($271)-($_14);
    $276=(($262+344)|0);
    $277=(+(HEAPF64[(($276)>>3)]));
    $278=(($262+336)|0);
    $279=((HEAP32[(($278)>>2)])|0);
    $280=($279|0)==0;
    do {
     if ($280) {
      $285=(($262+332)|0);
      $286=((HEAP32[(($285)>>2)])|0);
      if (((($286|0))|0)==((0)|0)) {
       $288=($272)-($273);
       $289=(+(Math_abs((+($288)))));
       $299=$289;
       break;
      } else if (((($286|0))|0)==((1)|0)) {
       $291=(+(HEAPF64[(($233)>>3)]));
       $292=($271)-($291);
       $299=$292;
       break;
      } else if (((($286|0))|0)==((2)|0)) {
       $294=($274?$272:$273);
       $295=(+(HEAPF64[(($233)>>3)]));
       $296=($294)-($295);
       $297=($275)+($296);
       $299=$297;
       break;
      } else {
       $299=0.0;
       break;
      }
     } else {
      $282=(+((($279|0))|0));
      $283=($ShadowVeryShortPeriodTotal_1)/($282);
      $299=$283;
     }
    } while(0);

    $300=($277)*($299);
    $301=((HEAP32[((272)>>2)])|0);
    $302=(($301+332)|0);
    $303=((HEAP32[(($302)>>2)])|0);
    $304=($303|0)==2;
    $305=($304?(2.0):(1.0));
    $306=($300)/($305);
    $307=$275<$306;
    if (!($307)) {
     label = 64;
     break;
    }
    $309=(+(HEAPF64[(($183)>>3)]));
    $310=(+(HEAPF64[(($185)>>3)]));
    $311=$309<$310;
    $_16=($311?$309:$310);
    $312=((($i_4)-(1))|0);
    $313=(($inLow+($312<<3))|0);
    $314=(+(HEAPF64[(($313)>>3)]));
    $315=(($301+368)|0);
    $316=(+(HEAPF64[(($315)>>3)]));
    $317=(($301+360)|0);
    $318=((HEAP32[(($317)>>2)])|0);
    $319=($318|0)==0;
    do {
     if ($319) {
      $324=(($301+356)|0);
      $325=((HEAP32[(($324)>>2)])|0);
      if (((($325|0))|0)==((0)|0)) {
       $327=(($inClose+($312<<3))|0);
       $328=(+(HEAPF64[(($327)>>3)]));
       $329=(($inOpen+($312<<3))|0);
       $330=(+(HEAPF64[(($329)>>3)]));
       $331=($328)-($330);
       $332=(+(Math_abs((+($331)))));
       $350=$332;
       break;
      } else if (((($325|0))|0)==((2)|0)) {
       $338=(($inHigh+($312<<3))|0);
       $339=(+(HEAPF64[(($338)>>3)]));
       $340=(($inClose+($312<<3))|0);
       $341=(+(HEAPF64[(($340)>>3)]));
       $342=(($inOpen+($312<<3))|0);
       $343=(+(HEAPF64[(($342)>>3)]));
       $344=$341<$343;
       $_17=($344?$343:$341);
       $345=($339)-($_17);
       $346=($344?$341:$343);
       $347=($346)-($314);
       $348=($345)+($347);
       $350=$348;
       break;
      } else if (((($325|0))|0)==((1)|0)) {
       $334=(($inHigh+($312<<3))|0);
       $335=(+(HEAPF64[(($334)>>3)]));
       $336=($335)-($314);
       $350=$336;
       break;
      } else {
       $350=0.0;
       break;
      }
     } else {
      $321=(+((($318|0))|0));
      $322=($NearPeriodTotal_1)/($321);
      $350=$322;
     }
    } while(0);

    $351=($316)*($350);
    $352=((HEAP32[((272)>>2)])|0);
    $353=(($352+356)|0);
    $354=((HEAP32[(($353)>>2)])|0);
    $355=($354|0)==2;
    $356=($355?(2.0):(1.0));
    $357=($351)/($356);
    $358=($314)+($357);
    $359=$_16>$358;
    if ($359) {
     label = 64;
     break;
    }
    $361=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($361)>>2)]=100;
   } else {
    label = 64;
   }
  } while(0);
  if ((label|0) == 64) {
   label = 0;
   $363=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($363)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $365=((HEAP32[((272)>>2)])|0);
  $366=(($365+212)|0);
  $367=((HEAP32[(($366)>>2)])|0);
  if (((($367|0))|0)==((0)|0)) {
   $369=(+(HEAPF64[(($183)>>3)]));
   $370=(+(HEAPF64[(($185)>>3)]));
   $371=($369)-($370);
   $372=(+(Math_abs((+($371)))));
   $392=$372;
  } else if (((($367|0))|0)==((1)|0)) {
   $374=(($inHigh+($i_4<<3))|0);
   $375=(+(HEAPF64[(($374)>>3)]));
   $376=(($inLow+($i_4<<3))|0);
   $377=(+(HEAPF64[(($376)>>3)]));
   $378=($375)-($377);
   $392=$378;
  } else if (((($367|0))|0)==((2)|0)) {
   $380=(($inHigh+($i_4<<3))|0);
   $381=(+(HEAPF64[(($380)>>3)]));
   $382=(+(HEAPF64[(($183)>>3)]));
   $383=(+(HEAPF64[(($185)>>3)]));
   $384=$382<$383;
   $_18=($384?$383:$382);
   $385=($381)-($_18);
   $386=($384?$382:$383);
   $387=(($inLow+($i_4<<3))|0);
   $388=(+(HEAPF64[(($387)>>3)]));
   $389=($386)-($388);
   $390=($385)+($389);
   $392=$390;
  } else {
   $392=0.0;
  }

  $393=((HEAP32[((272)>>2)])|0);
  $394=(($393+212)|0);
  $395=((HEAP32[(($394)>>2)])|0);
  if (((($395|0))|0)==((0)|0)) {
   $397=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $398=(+(HEAPF64[(($397)>>3)]));
   $399=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $400=(+(HEAPF64[(($399)>>3)]));
   $401=($398)-($400);
   $402=(+(Math_abs((+($401)))));
   $424=$402;
  } else if (((($395|0))|0)==((1)|0)) {
   $404=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $405=(+(HEAPF64[(($404)>>3)]));
   $406=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $407=(+(HEAPF64[(($406)>>3)]));
   $408=($405)-($407);
   $424=$408;
  } else if (((($395|0))|0)==((2)|0)) {
   $410=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $411=(+(HEAPF64[(($410)>>3)]));
   $412=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $413=(+(HEAPF64[(($412)>>3)]));
   $414=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $415=(+(HEAPF64[(($414)>>3)]));
   $416=$413<$415;
   $_19=($416?$415:$413);
   $417=($411)-($_19);
   $418=($416?$413:$415);
   $419=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $420=(+(HEAPF64[(($419)>>3)]));
   $421=($418)-($420);
   $422=($417)+($421);
   $424=$422;
  } else {
   $424=0.0;
  }

  $425=($392)-($424);
  $426=($BodyPeriodTotal_1)+($425);
  $427=((HEAP32[((272)>>2)])|0);
  $428=(($427+260)|0);
  $429=((HEAP32[(($428)>>2)])|0);
  if (((($429|0))|0)==((0)|0)) {
   $431=(+(HEAPF64[(($183)>>3)]));
   $432=(+(HEAPF64[(($185)>>3)]));
   $433=($431)-($432);
   $434=(+(Math_abs((+($433)))));
   $454=$434;
  } else if (((($429|0))|0)==((1)|0)) {
   $436=(($inHigh+($i_4<<3))|0);
   $437=(+(HEAPF64[(($436)>>3)]));
   $438=(($inLow+($i_4<<3))|0);
   $439=(+(HEAPF64[(($438)>>3)]));
   $440=($437)-($439);
   $454=$440;
  } else if (((($429|0))|0)==((2)|0)) {
   $442=(($inHigh+($i_4<<3))|0);
   $443=(+(HEAPF64[(($442)>>3)]));
   $444=(+(HEAPF64[(($183)>>3)]));
   $445=(+(HEAPF64[(($185)>>3)]));
   $446=$444<$445;
   $_20=($446?$445:$444);
   $447=($443)-($_20);
   $448=($446?$444:$445);
   $449=(($inLow+($i_4<<3))|0);
   $450=(+(HEAPF64[(($449)>>3)]));
   $451=($448)-($450);
   $452=($447)+($451);
   $454=$452;
  } else {
   $454=0.0;
  }

  $455=((HEAP32[((272)>>2)])|0);
  $456=(($455+260)|0);
  $457=((HEAP32[(($456)>>2)])|0);
  if (((($457|0))|0)==((0)|0)) {
   $459=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $460=(+(HEAPF64[(($459)>>3)]));
   $461=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $462=(+(HEAPF64[(($461)>>3)]));
   $463=($460)-($462);
   $464=(+(Math_abs((+($463)))));
   $486=$464;
  } else if (((($457|0))|0)==((1)|0)) {
   $466=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $467=(+(HEAPF64[(($466)>>3)]));
   $468=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $469=(+(HEAPF64[(($468)>>3)]));
   $470=($467)-($469);
   $486=$470;
  } else if (((($457|0))|0)==((2)|0)) {
   $472=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $473=(+(HEAPF64[(($472)>>3)]));
   $474=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $475=(+(HEAPF64[(($474)>>3)]));
   $476=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $477=(+(HEAPF64[(($476)>>3)]));
   $478=$475<$477;
   $_21=($478?$477:$475);
   $479=($473)-($_21);
   $480=($478?$475:$477);
   $481=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $482=(+(HEAPF64[(($481)>>3)]));
   $483=($480)-($482);
   $484=($479)+($483);
   $486=$484;
  } else {
   $486=0.0;
  }

  $487=($454)-($486);
  $488=($ShadowLongPeriodTotal_1)+($487);
  $489=((HEAP32[((272)>>2)])|0);
  $490=(($489+332)|0);
  $491=((HEAP32[(($490)>>2)])|0);
  if (((($491|0))|0)==((1)|0)) {
   $498=(($inHigh+($i_4<<3))|0);
   $499=(+(HEAPF64[(($498)>>3)]));
   $500=(($inLow+($i_4<<3))|0);
   $501=(+(HEAPF64[(($500)>>3)]));
   $502=($499)-($501);
   $516=$502;
  } else if (((($491|0))|0)==((2)|0)) {
   $504=(($inHigh+($i_4<<3))|0);
   $505=(+(HEAPF64[(($504)>>3)]));
   $506=(+(HEAPF64[(($183)>>3)]));
   $507=(+(HEAPF64[(($185)>>3)]));
   $508=$506<$507;
   $_22=($508?$507:$506);
   $509=($505)-($_22);
   $510=($508?$506:$507);
   $511=(($inLow+($i_4<<3))|0);
   $512=(+(HEAPF64[(($511)>>3)]));
   $513=($510)-($512);
   $514=($509)+($513);
   $516=$514;
  } else if (((($491|0))|0)==((0)|0)) {
   $493=(+(HEAPF64[(($183)>>3)]));
   $494=(+(HEAPF64[(($185)>>3)]));
   $495=($493)-($494);
   $496=(+(Math_abs((+($495)))));
   $516=$496;
  } else {
   $516=0.0;
  }

  $517=((HEAP32[((272)>>2)])|0);
  $518=(($517+332)|0);
  $519=((HEAP32[(($518)>>2)])|0);
  if (((($519|0))|0)==((2)|0)) {
   $534=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $535=(+(HEAPF64[(($534)>>3)]));
   $536=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $537=(+(HEAPF64[(($536)>>3)]));
   $538=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $539=(+(HEAPF64[(($538)>>3)]));
   $540=$537<$539;
   $_23=($540?$539:$537);
   $541=($535)-($_23);
   $542=($540?$537:$539);
   $543=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $544=(+(HEAPF64[(($543)>>3)]));
   $545=($542)-($544);
   $546=($541)+($545);
   $548=$546;
  } else if (((($519|0))|0)==((0)|0)) {
   $521=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $522=(+(HEAPF64[(($521)>>3)]));
   $523=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $524=(+(HEAPF64[(($523)>>3)]));
   $525=($522)-($524);
   $526=(+(Math_abs((+($525)))));
   $548=$526;
  } else if (((($519|0))|0)==((1)|0)) {
   $528=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $529=(+(HEAPF64[(($528)>>3)]));
   $530=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $531=(+(HEAPF64[(($530)>>3)]));
   $532=($529)-($531);
   $548=$532;
  } else {
   $548=0.0;
  }

  $549=($516)-($548);
  $550=($ShadowVeryShortPeriodTotal_1)+($549);
  $551=((HEAP32[((272)>>2)])|0);
  $552=(($551+356)|0);
  $553=((HEAP32[(($552)>>2)])|0);
  if (((($553|0))|0)==((0)|0)) {
   $555=((($i_4)-(1))|0);
   $556=(($inClose+($555<<3))|0);
   $557=(+(HEAPF64[(($556)>>3)]));
   $558=(($inOpen+($555<<3))|0);
   $559=(+(HEAPF64[(($558)>>3)]));
   $560=($557)-($559);
   $561=(+(Math_abs((+($560)))));
   $585=$561;
  } else if (((($553|0))|0)==((1)|0)) {
   $563=((($i_4)-(1))|0);
   $564=(($inHigh+($563<<3))|0);
   $565=(+(HEAPF64[(($564)>>3)]));
   $566=(($inLow+($563<<3))|0);
   $567=(+(HEAPF64[(($566)>>3)]));
   $568=($565)-($567);
   $585=$568;
  } else if (((($553|0))|0)==((2)|0)) {
   $570=((($i_4)-(1))|0);
   $571=(($inHigh+($570<<3))|0);
   $572=(+(HEAPF64[(($571)>>3)]));
   $573=(($inClose+($570<<3))|0);
   $574=(+(HEAPF64[(($573)>>3)]));
   $575=(($inOpen+($570<<3))|0);
   $576=(+(HEAPF64[(($575)>>3)]));
   $577=$574<$576;
   $_24=($577?$576:$574);
   $578=($572)-($_24);
   $579=($577?$574:$576);
   $580=(($inLow+($570<<3))|0);
   $581=(+(HEAPF64[(($580)>>3)]));
   $582=($579)-($581);
   $583=($578)+($582);
   $585=$583;
  } else {
   $585=0.0;
  }

  $586=((HEAP32[((272)>>2)])|0);
  $587=(($586+356)|0);
  $588=((HEAP32[(($587)>>2)])|0);
  if (((($588|0))|0)==((2)|0)) {
   $603=(($inHigh+($NearTrailingIdx_0<<3))|0);
   $604=(+(HEAPF64[(($603)>>3)]));
   $605=(($inClose+($NearTrailingIdx_0<<3))|0);
   $606=(+(HEAPF64[(($605)>>3)]));
   $607=(($inOpen+($NearTrailingIdx_0<<3))|0);
   $608=(+(HEAPF64[(($607)>>3)]));
   $609=$606<$608;
   $_25=($609?$608:$606);
   $610=($604)-($_25);
   $611=($609?$606:$608);
   $612=(($inLow+($NearTrailingIdx_0<<3))|0);
   $613=(+(HEAPF64[(($612)>>3)]));
   $614=($611)-($613);
   $615=($610)+($614);
   $617=$615;
  } else if (((($588|0))|0)==((0)|0)) {
   $590=(($inClose+($NearTrailingIdx_0<<3))|0);
   $591=(+(HEAPF64[(($590)>>3)]));
   $592=(($inOpen+($NearTrailingIdx_0<<3))|0);
   $593=(+(HEAPF64[(($592)>>3)]));
   $594=($591)-($593);
   $595=(+(Math_abs((+($594)))));
   $617=$595;
  } else if (((($588|0))|0)==((1)|0)) {
   $597=(($inHigh+($NearTrailingIdx_0<<3))|0);
   $598=(+(HEAPF64[(($597)>>3)]));
   $599=(($inLow+($NearTrailingIdx_0<<3))|0);
   $600=(+(HEAPF64[(($599)>>3)]));
   $601=($598)-($600);
   $617=$601;
  } else {
   $617=0.0;
  }

  $618=($585)-($617);
  $619=($NearPeriodTotal_1)+($618);
  $620=((($i_4)+(1))|0);
  $621=((($BodyTrailingIdx_0)+(1))|0);
  $622=((($ShadowLongTrailingIdx_0)+(1))|0);
  $623=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $624=((($NearTrailingIdx_0)+(1))|0);
  $625=($i_4|0)<($endIdx|0);
  if ($625) {
   $NearTrailingIdx_0=$624;$ShadowVeryShortTrailingIdx_0=$623;$ShadowLongTrailingIdx_0=$622;$BodyTrailingIdx_0=$621;$outIdx_0=$outIdx_1;$i_4=$620;$NearPeriodTotal_1=$619;$ShadowVeryShortPeriodTotal_1=$550;$ShadowLongPeriodTotal_1=$488;$BodyPeriodTotal_1=$426;
  } else {
   break;
  }
 }
 $627=((($smax44)+(1))|0);
 $628=((($627)-($smax45))|0);
 HEAP32[(($outNBElement)>>2)]=$628;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLHANGINGMAN_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$__=0,$10=0,$11=0,$12=0,$13=0,$15=0,$16=0,$17=0,$18=0,$19=0;
 var $_2=0,$20=0,$21=0,$22=0,$_2_=0,$24=0,$25=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+264)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=(($1+336)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($_|0)>($8|0);
 $__=($9?$_:$8);
 $10=((HEAP32[((272)>>2)])|0);
 $11=(($10+360)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=($__|0)>($12|0);
 if (!($13)) {
  $24=$12;

  $25=((($24)+(1))|0);
  return (($25)|0);
 }
 $15=(($10+216)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=(($10+264)|0);
 $18=((HEAP32[(($17)>>2)])|0);
 $19=($16|0)>($18|0);
 $_2=($19?$16:$18);
 $20=(($10+336)|0);
 $21=((HEAP32[(($20)>>2)])|0);
 $22=($_2|0)>($21|0);
 $_2_=($22?$_2:$21);
 $24=$_2_;

 $25=((($24)+(1))|0);
 return (($25)|0);
}


function _TA_CDLHANGINGMAN($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond26=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$BodyPeriodTotal_0_lcssa=.0,$35=0,$36=0,$37=0;
 var $38=0,$i_041=0,$BodyPeriodTotal_040=.0,$41=0,$42=.0,$43=0,$44=.0,$45=.0,$46=.0,$48=0,$49=.0,$50=0,$51=.0,$52=.0,$54=0,$55=.0,$56=0,$57=.0,$58=0,$59=.0;
 var $60=0,$_=.0,$61=.0,$62=.0,$63=0,$64=.0,$65=.0,$66=.0,$68=.0,$69=.0,$70=0,$71=0,$ShadowLongPeriodTotal_0_lcssa=.0,$72=0,$73=0,$74=0,$75=0,$i_137=0,$ShadowLongPeriodTotal_036=.0,$78=0;
 var $79=.0,$80=0,$81=.0,$82=.0,$83=.0,$85=0,$86=.0,$87=0,$88=.0,$89=.0,$91=0,$92=.0,$93=0,$94=.0,$95=0,$96=.0,$97=0,$_8=.0,$98=.0,$99=.0;
 var $100=0,$101=.0,$102=.0,$103=.0,$105=.0,$106=.0,$107=0,$108=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$109=0,$110=0,$111=0,$112=0,$i_232=0,$ShadowVeryShortPeriodTotal_031=.0,$115=0,$116=.0,$117=0,$118=.0,$119=.0;
 var $120=.0,$122=0,$123=.0,$124=0,$125=.0,$126=.0,$128=0,$129=.0,$130=0,$131=.0,$132=0,$133=.0,$134=0,$_9=.0,$135=.0,$136=.0,$137=0,$138=.0,$139=.0,$140=.0;
 var $142=.0,$143=.0,$144=0,$145=0,$NearPeriodTotal_0_lcssa=.0,$146=0,$smax=0,$147=0,$smax44=0,$148=0,$smax45=0,$i_329=0,$NearPeriodTotal_028=.0,$151=0,$152=.0,$153=0,$154=.0,$155=.0,$156=.0,$158=0;
 var $159=.0,$160=0,$161=.0,$162=.0,$164=0,$165=.0,$166=0,$167=.0,$168=0,$169=.0,$170=0,$_10=.0,$171=.0,$172=.0,$173=0,$174=.0,$175=.0,$176=.0,$178=.0,$179=.0;
 var $180=0,$181=0,$BodyPeriodTotal_1=.0,$ShadowLongPeriodTotal_1=.0,$ShadowVeryShortPeriodTotal_1=.0,$NearPeriodTotal_1=.0,$i_4=0,$outIdx_0=0,$BodyTrailingIdx_0=0,$ShadowLongTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$NearTrailingIdx_0=0,$183=0,$184=.0,$185=0,$186=.0,$187=.0,$188=.0,$189=0,$190=0;
 var $191=.0,$192=0,$193=0,$194=0,$196=.0,$197=.0,$199=0,$200=0,$202=0,$203=.0,$204=0,$205=.0,$206=.0,$208=0,$210=0,$211=.0,$212=0,$_11=.0,$213=.0,$214=.0;
 var $215=0,$216=.0,$217=.0,$218=.0,$220=.0,$221=.0,$222=0,$223=0,$224=0,$225=0,$226=.0,$227=.0,$228=0,$230=.0,$231=.0,$232=0,$_12=.0,$233=0,$234=.0,$235=.0;
 var $236=0,$237=.0,$238=0,$239=0,$240=0,$242=.0,$243=.0,$245=0,$246=0,$248=.0,$249=.0,$251=0,$252=.0,$253=.0,$255=0,$256=.0,$_13=.0,$257=.0,$258=.0,$260=.0;
 var $261=.0,$262=0,$263=0,$264=0,$265=0,$266=.0,$267=.0,$268=0,$270=0,$271=.0,$272=.0,$273=.0,$274=0,$_14=.0,$275=.0,$276=0,$277=.0,$278=0,$279=0,$280=0;
 var $282=.0,$283=.0,$285=0,$286=0,$288=.0,$289=.0,$291=.0,$292=.0,$294=.0,$295=.0,$296=.0,$297=.0,$299=.0,$300=.0,$301=0,$302=0,$303=0,$304=0,$305=.0,$306=.0;
 var $307=0,$309=.0,$310=.0,$311=0,$_16=.0,$312=0,$313=0,$314=.0,$315=0,$316=.0,$317=0,$318=0,$319=0,$321=.0,$322=.0,$324=0,$325=0,$327=0,$328=.0,$329=0;
 var $330=.0,$331=.0,$332=.0,$334=0,$335=.0,$336=.0,$338=0,$339=.0,$340=0,$341=.0,$342=0,$_17=.0,$343=.0,$344=.0,$345=0,$346=.0,$347=.0,$348=.0,$350=.0,$351=.0;
 var $352=0,$353=0,$354=0,$355=0,$356=.0,$357=.0,$358=.0,$359=0,$361=0,$363=0,$outIdx_1=0,$365=0,$366=0,$367=0,$369=.0,$370=.0,$371=.0,$372=.0,$374=0,$375=.0;
 var $376=0,$377=.0,$378=.0,$380=0,$381=.0,$382=.0,$383=.0,$384=0,$_18=.0,$385=.0,$386=.0,$387=0,$388=.0,$389=.0,$390=.0,$392=.0,$393=0,$394=0,$395=0,$397=0;
 var $398=.0,$399=0,$400=.0,$401=.0,$402=.0,$404=0,$405=.0,$406=0,$407=.0,$408=.0,$410=0,$411=.0,$412=0,$413=.0,$414=0,$415=.0,$416=0,$_19=.0,$417=.0,$418=.0;
 var $419=0,$420=.0,$421=.0,$422=.0,$424=.0,$425=.0,$426=.0,$427=0,$428=0,$429=0,$431=.0,$432=.0,$433=.0,$434=.0,$436=0,$437=.0,$438=0,$439=.0,$440=.0,$442=0;
 var $443=.0,$444=.0,$445=.0,$446=0,$_20=.0,$447=.0,$448=.0,$449=0,$450=.0,$451=.0,$452=.0,$454=.0,$455=0,$456=0,$457=0,$459=0,$460=.0,$461=0,$462=.0,$463=.0;
 var $464=.0,$466=0,$467=.0,$468=0,$469=.0,$470=.0,$472=0,$473=.0,$474=0,$475=.0,$476=0,$477=.0,$478=0,$_21=.0,$479=.0,$480=.0,$481=0,$482=.0,$483=.0,$484=.0;
 var $486=.0,$487=.0,$488=.0,$489=0,$490=0,$491=0,$493=.0,$494=.0,$495=.0,$496=.0,$498=0,$499=.0,$500=0,$501=.0,$502=.0,$504=0,$505=.0,$506=.0,$507=.0,$508=0;
 var $_22=.0,$509=.0,$510=.0,$511=0,$512=.0,$513=.0,$514=.0,$516=.0,$517=0,$518=0,$519=0,$521=0,$522=.0,$523=0,$524=.0,$525=.0,$526=.0,$528=0,$529=.0,$530=0;
 var $531=.0,$532=.0,$534=0,$535=.0,$536=0,$537=.0,$538=0,$539=.0,$540=0,$_23=.0,$541=.0,$542=.0,$543=0,$544=.0,$545=.0,$546=.0,$548=.0,$549=.0,$550=.0,$551=0;
 var $552=0,$553=0,$555=0,$556=0,$557=.0,$558=0,$559=.0,$560=.0,$561=.0,$563=0,$564=0,$565=.0,$566=0,$567=.0,$568=.0,$570=0,$571=0,$572=.0,$573=0,$574=.0;
 var $575=0,$576=.0,$577=0,$_24=.0,$578=.0,$579=.0,$580=0,$581=.0,$582=.0,$583=.0,$585=.0,$586=0,$587=0,$588=0,$590=0,$591=.0,$592=0,$593=.0,$594=.0,$595=.0;
 var $597=0,$598=.0,$599=0,$600=.0,$601=.0,$603=0,$604=.0,$605=0,$606=.0,$607=0,$608=.0,$609=0,$_25=.0,$610=.0,$611=.0,$612=0,$613=.0,$614=.0,$615=.0,$617=.0;
 var $618=.0,$619=.0,$620=0,$621=0,$622=0,$623=0,$624=0,$625=0,$627=0,$628=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond26=$10|$or_cond5_not;
 if ($or_cond26) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLHANGINGMAN_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+216)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+264)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=(($17+336)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($_startIdx)-($25))|0);
 $27=((($_startIdx)-(1))|0);
 $28=(($17+360)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=((($27)-($29))|0);
 $31=($19|0)>0;
 if ($31) {
  $32=((HEAP32[((272)>>2)])|0);
  $33=(($32+212)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $BodyPeriodTotal_040=0.0;$i_041=$20;
  while(1) {


   if (((($34|0))|0)==((0)|0)) {
    $41=(($inClose+($i_041<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=(($inOpen+($i_041<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=($42)-($44);
    $46=(+(Math_abs((+($45)))));
    $68=$46;
   } else if (((($34|0))|0)==((1)|0)) {
    $48=(($inHigh+($i_041<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inLow+($i_041<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=($49)-($51);
    $68=$52;
   } else if (((($34|0))|0)==((2)|0)) {
    $54=(($inHigh+($i_041<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inClose+($i_041<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=(($inOpen+($i_041<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=$57<$59;
    $_=($60?$59:$57);
    $61=($55)-($_);
    $62=($60?$57:$59);
    $63=(($inLow+($i_041<<3))|0);
    $64=(+(HEAPF64[(($63)>>3)]));
    $65=($62)-($64);
    $66=($61)+($65);
    $68=$66;
   } else {
    $68=0.0;
   }

   $69=($BodyPeriodTotal_040)+($68);
   $70=((($i_041)+(1))|0);
   $71=($70|0)<($_startIdx|0);
   if ($71) {
    $BodyPeriodTotal_040=$69;$i_041=$70;
   } else {
    $BodyPeriodTotal_0_lcssa=$69;
    break;
   }
  }
 } else {
  $BodyPeriodTotal_0_lcssa=0.0;
 }

 $35=($22|0)>0;
 if ($35) {
  $36=((HEAP32[((272)>>2)])|0);
  $37=(($36+260)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $ShadowLongPeriodTotal_036=0.0;$i_137=$23;
  while(1) {


   if (((($38|0))|0)==((0)|0)) {
    $78=(($inClose+($i_137<<3))|0);
    $79=(+(HEAPF64[(($78)>>3)]));
    $80=(($inOpen+($i_137<<3))|0);
    $81=(+(HEAPF64[(($80)>>3)]));
    $82=($79)-($81);
    $83=(+(Math_abs((+($82)))));
    $105=$83;
   } else if (((($38|0))|0)==((2)|0)) {
    $91=(($inHigh+($i_137<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=(($inClose+($i_137<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=(($inOpen+($i_137<<3))|0);
    $96=(+(HEAPF64[(($95)>>3)]));
    $97=$94<$96;
    $_8=($97?$96:$94);
    $98=($92)-($_8);
    $99=($97?$94:$96);
    $100=(($inLow+($i_137<<3))|0);
    $101=(+(HEAPF64[(($100)>>3)]));
    $102=($99)-($101);
    $103=($98)+($102);
    $105=$103;
   } else if (((($38|0))|0)==((1)|0)) {
    $85=(($inHigh+($i_137<<3))|0);
    $86=(+(HEAPF64[(($85)>>3)]));
    $87=(($inLow+($i_137<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=($86)-($88);
    $105=$89;
   } else {
    $105=0.0;
   }

   $106=($ShadowLongPeriodTotal_036)+($105);
   $107=((($i_137)+(1))|0);
   $108=($107|0)<($_startIdx|0);
   if ($108) {
    $ShadowLongPeriodTotal_036=$106;$i_137=$107;
   } else {
    $ShadowLongPeriodTotal_0_lcssa=$106;
    break;
   }
  }
 } else {
  $ShadowLongPeriodTotal_0_lcssa=0.0;
 }

 $72=($25|0)>0;
 if ($72) {
  $73=((HEAP32[((272)>>2)])|0);
  $74=(($73+332)|0);
  $75=((HEAP32[(($74)>>2)])|0);
  $ShadowVeryShortPeriodTotal_031=0.0;$i_232=$26;
  while(1) {


   if (((($75|0))|0)==((1)|0)) {
    $122=(($inHigh+($i_232<<3))|0);
    $123=(+(HEAPF64[(($122)>>3)]));
    $124=(($inLow+($i_232<<3))|0);
    $125=(+(HEAPF64[(($124)>>3)]));
    $126=($123)-($125);
    $142=$126;
   } else if (((($75|0))|0)==((2)|0)) {
    $128=(($inHigh+($i_232<<3))|0);
    $129=(+(HEAPF64[(($128)>>3)]));
    $130=(($inClose+($i_232<<3))|0);
    $131=(+(HEAPF64[(($130)>>3)]));
    $132=(($inOpen+($i_232<<3))|0);
    $133=(+(HEAPF64[(($132)>>3)]));
    $134=$131<$133;
    $_9=($134?$133:$131);
    $135=($129)-($_9);
    $136=($134?$131:$133);
    $137=(($inLow+($i_232<<3))|0);
    $138=(+(HEAPF64[(($137)>>3)]));
    $139=($136)-($138);
    $140=($135)+($139);
    $142=$140;
   } else if (((($75|0))|0)==((0)|0)) {
    $115=(($inClose+($i_232<<3))|0);
    $116=(+(HEAPF64[(($115)>>3)]));
    $117=(($inOpen+($i_232<<3))|0);
    $118=(+(HEAPF64[(($117)>>3)]));
    $119=($116)-($118);
    $120=(+(Math_abs((+($119)))));
    $142=$120;
   } else {
    $142=0.0;
   }

   $143=($ShadowVeryShortPeriodTotal_031)+($142);
   $144=((($i_232)+(1))|0);
   $145=($144|0)<($_startIdx|0);
   if ($145) {
    $ShadowVeryShortPeriodTotal_031=$143;$i_232=$144;
   } else {
    $ShadowVeryShortPeriodTotal_0_lcssa=$143;
    break;
   }
  }
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;
 }

 $109=($29|0)>0;
 if ($109) {
  $110=((HEAP32[((272)>>2)])|0);
  $111=(($110+356)|0);
  $112=((HEAP32[(($111)>>2)])|0);
  $NearPeriodTotal_028=0.0;$i_329=$30;
  while(1) {


   if (((($112|0))|0)==((1)|0)) {
    $158=(($inHigh+($i_329<<3))|0);
    $159=(+(HEAPF64[(($158)>>3)]));
    $160=(($inLow+($i_329<<3))|0);
    $161=(+(HEAPF64[(($160)>>3)]));
    $162=($159)-($161);
    $178=$162;
   } else if (((($112|0))|0)==((0)|0)) {
    $151=(($inClose+($i_329<<3))|0);
    $152=(+(HEAPF64[(($151)>>3)]));
    $153=(($inOpen+($i_329<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=($152)-($154);
    $156=(+(Math_abs((+($155)))));
    $178=$156;
   } else if (((($112|0))|0)==((2)|0)) {
    $164=(($inHigh+($i_329<<3))|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    $166=(($inClose+($i_329<<3))|0);
    $167=(+(HEAPF64[(($166)>>3)]));
    $168=(($inOpen+($i_329<<3))|0);
    $169=(+(HEAPF64[(($168)>>3)]));
    $170=$167<$169;
    $_10=($170?$169:$167);
    $171=($165)-($_10);
    $172=($170?$167:$169);
    $173=(($inLow+($i_329<<3))|0);
    $174=(+(HEAPF64[(($173)>>3)]));
    $175=($172)-($174);
    $176=($171)+($175);
    $178=$176;
   } else {
    $178=0.0;
   }

   $179=($NearPeriodTotal_028)+($178);
   $180=((($i_329)+(1))|0);
   $181=($180|0)<($27|0);
   if ($181) {
    $NearPeriodTotal_028=$179;$i_329=$180;
   } else {
    $NearPeriodTotal_0_lcssa=$179;
    break;
   }
  }
 } else {
  $NearPeriodTotal_0_lcssa=0.0;
 }

 $146=($12|0)>($endIdx|0);
 $smax=($146?$12:$endIdx);
 $147=($smax|0)>($startIdx|0);
 $smax44=($147?$smax:$startIdx);
 $148=($12|0)>($startIdx|0);
 $smax45=($148?$12:$startIdx);
 $NearTrailingIdx_0=$30;$ShadowVeryShortTrailingIdx_0=$26;$ShadowLongTrailingIdx_0=$23;$BodyTrailingIdx_0=$20;$outIdx_0=0;$i_4=$_startIdx;$NearPeriodTotal_1=$NearPeriodTotal_0_lcssa;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;$ShadowLongPeriodTotal_1=$ShadowLongPeriodTotal_0_lcssa;$BodyPeriodTotal_1=$BodyPeriodTotal_0_lcssa;
 while(1) {










  $183=(($inClose+($i_4<<3))|0);
  $184=(+(HEAPF64[(($183)>>3)]));
  $185=(($inOpen+($i_4<<3))|0);
  $186=(+(HEAPF64[(($185)>>3)]));
  $187=($184)-($186);
  $188=(+(Math_abs((+($187)))));
  $189=((HEAP32[((272)>>2)])|0);
  $190=(($189+224)|0);
  $191=(+(HEAPF64[(($190)>>3)]));
  $192=(($189+216)|0);
  $193=((HEAP32[(($192)>>2)])|0);
  $194=($193|0)==0;
  do {
   if ($194) {
    $199=(($189+212)|0);
    $200=((HEAP32[(($199)>>2)])|0);
    if (((($200|0))|0)==((1)|0)) {
     $202=(($inHigh+($i_4<<3))|0);
     $203=(+(HEAPF64[(($202)>>3)]));
     $204=(($inLow+($i_4<<3))|0);
     $205=(+(HEAPF64[(($204)>>3)]));
     $206=($203)-($205);
     $220=$206;
     break;
    } else if (((($200|0))|0)==((0)|0)) {
     $220=$188;
     break;
    }
    $208=($200|0)==2;
    if (!($208)) {
     $220=0.0;
     break;
    }
    $210=(($inHigh+($i_4<<3))|0);
    $211=(+(HEAPF64[(($210)>>3)]));
    $212=$184<$186;
    $_11=($212?$186:$184);
    $213=($211)-($_11);
    $214=($212?$184:$186);
    $215=(($inLow+($i_4<<3))|0);
    $216=(+(HEAPF64[(($215)>>3)]));
    $217=($214)-($216);
    $218=($213)+($217);
    $220=$218;
   } else {
    $196=(+((($193|0))|0));
    $197=($BodyPeriodTotal_1)/($196);
    $220=$197;
   }
  } while(0);

  $221=($191)*($220);
  $222=((HEAP32[((272)>>2)])|0);
  $223=(($222+212)|0);
  $224=((HEAP32[(($223)>>2)])|0);
  $225=($224|0)==2;
  $226=($225?(2.0):(1.0));
  $227=($221)/($226);
  $228=$188<$227;
  do {
   if ($228) {
    $230=(+(HEAPF64[(($183)>>3)]));
    $231=(+(HEAPF64[(($185)>>3)]));
    $232=$230<$231;
    $_12=($232?$230:$231);
    $233=(($inLow+($i_4<<3))|0);
    $234=(+(HEAPF64[(($233)>>3)]));
    $235=($_12)-($234);
    $236=(($222+272)|0);
    $237=(+(HEAPF64[(($236)>>3)]));
    $238=(($222+264)|0);
    $239=((HEAP32[(($238)>>2)])|0);
    $240=($239|0)==0;
    do {
     if ($240) {
      $245=(($222+260)|0);
      $246=((HEAP32[(($245)>>2)])|0);
      if (((($246|0))|0)==((0)|0)) {
       $248=($230)-($231);
       $249=(+(Math_abs((+($248)))));
       $260=$249;
       break;
      } else if (((($246|0))|0)==((1)|0)) {
       $251=(($inHigh+($i_4<<3))|0);
       $252=(+(HEAPF64[(($251)>>3)]));
       $253=($252)-($234);
       $260=$253;
       break;
      } else if (((($246|0))|0)==((2)|0)) {
       $255=(($inHigh+($i_4<<3))|0);
       $256=(+(HEAPF64[(($255)>>3)]));
       $_13=($232?$231:$230);
       $257=($256)-($_13);
       $258=($235)+($257);
       $260=$258;
       break;
      } else {
       $260=0.0;
       break;
      }
     } else {
      $242=(+((($239|0))|0));
      $243=($ShadowLongPeriodTotal_1)/($242);
      $260=$243;
     }
    } while(0);

    $261=($237)*($260);
    $262=((HEAP32[((272)>>2)])|0);
    $263=(($262+260)|0);
    $264=((HEAP32[(($263)>>2)])|0);
    $265=($264|0)==2;
    $266=($265?(2.0):(1.0));
    $267=($261)/($266);
    $268=$235>$267;
    if (!($268)) {
     label = 64;
     break;
    }
    $270=(($inHigh+($i_4<<3))|0);
    $271=(+(HEAPF64[(($270)>>3)]));
    $272=(+(HEAPF64[(($183)>>3)]));
    $273=(+(HEAPF64[(($185)>>3)]));
    $274=$272<$273;
    $_14=($274?$273:$272);
    $275=($271)-($_14);
    $276=(($262+344)|0);
    $277=(+(HEAPF64[(($276)>>3)]));
    $278=(($262+336)|0);
    $279=((HEAP32[(($278)>>2)])|0);
    $280=($279|0)==0;
    do {
     if ($280) {
      $285=(($262+332)|0);
      $286=((HEAP32[(($285)>>2)])|0);
      if (((($286|0))|0)==((0)|0)) {
       $288=($272)-($273);
       $289=(+(Math_abs((+($288)))));
       $299=$289;
       break;
      } else if (((($286|0))|0)==((1)|0)) {
       $291=(+(HEAPF64[(($233)>>3)]));
       $292=($271)-($291);
       $299=$292;
       break;
      } else if (((($286|0))|0)==((2)|0)) {
       $294=($274?$272:$273);
       $295=(+(HEAPF64[(($233)>>3)]));
       $296=($294)-($295);
       $297=($275)+($296);
       $299=$297;
       break;
      } else {
       $299=0.0;
       break;
      }
     } else {
      $282=(+((($279|0))|0));
      $283=($ShadowVeryShortPeriodTotal_1)/($282);
      $299=$283;
     }
    } while(0);

    $300=($277)*($299);
    $301=((HEAP32[((272)>>2)])|0);
    $302=(($301+332)|0);
    $303=((HEAP32[(($302)>>2)])|0);
    $304=($303|0)==2;
    $305=($304?(2.0):(1.0));
    $306=($300)/($305);
    $307=$275<$306;
    if (!($307)) {
     label = 64;
     break;
    }
    $309=(+(HEAPF64[(($183)>>3)]));
    $310=(+(HEAPF64[(($185)>>3)]));
    $311=$309<$310;
    $_16=($311?$309:$310);
    $312=((($i_4)-(1))|0);
    $313=(($inHigh+($312<<3))|0);
    $314=(+(HEAPF64[(($313)>>3)]));
    $315=(($301+368)|0);
    $316=(+(HEAPF64[(($315)>>3)]));
    $317=(($301+360)|0);
    $318=((HEAP32[(($317)>>2)])|0);
    $319=($318|0)==0;
    do {
     if ($319) {
      $324=(($301+356)|0);
      $325=((HEAP32[(($324)>>2)])|0);
      if (((($325|0))|0)==((0)|0)) {
       $327=(($inClose+($312<<3))|0);
       $328=(+(HEAPF64[(($327)>>3)]));
       $329=(($inOpen+($312<<3))|0);
       $330=(+(HEAPF64[(($329)>>3)]));
       $331=($328)-($330);
       $332=(+(Math_abs((+($331)))));
       $350=$332;
       break;
      } else if (((($325|0))|0)==((1)|0)) {
       $334=(($inLow+($312<<3))|0);
       $335=(+(HEAPF64[(($334)>>3)]));
       $336=($314)-($335);
       $350=$336;
       break;
      } else if (((($325|0))|0)==((2)|0)) {
       $338=(($inClose+($312<<3))|0);
       $339=(+(HEAPF64[(($338)>>3)]));
       $340=(($inOpen+($312<<3))|0);
       $341=(+(HEAPF64[(($340)>>3)]));
       $342=$339<$341;
       $_17=($342?$341:$339);
       $343=($314)-($_17);
       $344=($342?$339:$341);
       $345=(($inLow+($312<<3))|0);
       $346=(+(HEAPF64[(($345)>>3)]));
       $347=($344)-($346);
       $348=($343)+($347);
       $350=$348;
       break;
      } else {
       $350=0.0;
       break;
      }
     } else {
      $321=(+((($318|0))|0));
      $322=($NearPeriodTotal_1)/($321);
      $350=$322;
     }
    } while(0);

    $351=($316)*($350);
    $352=((HEAP32[((272)>>2)])|0);
    $353=(($352+356)|0);
    $354=((HEAP32[(($353)>>2)])|0);
    $355=($354|0)==2;
    $356=($355?(2.0):(1.0));
    $357=($351)/($356);
    $358=($314)-($357);
    $359=$_16<$358;
    if ($359) {
     label = 64;
     break;
    }
    $361=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($361)>>2)]=-100;
   } else {
    label = 64;
   }
  } while(0);
  if ((label|0) == 64) {
   label = 0;
   $363=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($363)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $365=((HEAP32[((272)>>2)])|0);
  $366=(($365+212)|0);
  $367=((HEAP32[(($366)>>2)])|0);
  if (((($367|0))|0)==((0)|0)) {
   $369=(+(HEAPF64[(($183)>>3)]));
   $370=(+(HEAPF64[(($185)>>3)]));
   $371=($369)-($370);
   $372=(+(Math_abs((+($371)))));
   $392=$372;
  } else if (((($367|0))|0)==((1)|0)) {
   $374=(($inHigh+($i_4<<3))|0);
   $375=(+(HEAPF64[(($374)>>3)]));
   $376=(($inLow+($i_4<<3))|0);
   $377=(+(HEAPF64[(($376)>>3)]));
   $378=($375)-($377);
   $392=$378;
  } else if (((($367|0))|0)==((2)|0)) {
   $380=(($inHigh+($i_4<<3))|0);
   $381=(+(HEAPF64[(($380)>>3)]));
   $382=(+(HEAPF64[(($183)>>3)]));
   $383=(+(HEAPF64[(($185)>>3)]));
   $384=$382<$383;
   $_18=($384?$383:$382);
   $385=($381)-($_18);
   $386=($384?$382:$383);
   $387=(($inLow+($i_4<<3))|0);
   $388=(+(HEAPF64[(($387)>>3)]));
   $389=($386)-($388);
   $390=($385)+($389);
   $392=$390;
  } else {
   $392=0.0;
  }

  $393=((HEAP32[((272)>>2)])|0);
  $394=(($393+212)|0);
  $395=((HEAP32[(($394)>>2)])|0);
  if (((($395|0))|0)==((0)|0)) {
   $397=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $398=(+(HEAPF64[(($397)>>3)]));
   $399=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $400=(+(HEAPF64[(($399)>>3)]));
   $401=($398)-($400);
   $402=(+(Math_abs((+($401)))));
   $424=$402;
  } else if (((($395|0))|0)==((1)|0)) {
   $404=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $405=(+(HEAPF64[(($404)>>3)]));
   $406=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $407=(+(HEAPF64[(($406)>>3)]));
   $408=($405)-($407);
   $424=$408;
  } else if (((($395|0))|0)==((2)|0)) {
   $410=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $411=(+(HEAPF64[(($410)>>3)]));
   $412=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $413=(+(HEAPF64[(($412)>>3)]));
   $414=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $415=(+(HEAPF64[(($414)>>3)]));
   $416=$413<$415;
   $_19=($416?$415:$413);
   $417=($411)-($_19);
   $418=($416?$413:$415);
   $419=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $420=(+(HEAPF64[(($419)>>3)]));
   $421=($418)-($420);
   $422=($417)+($421);
   $424=$422;
  } else {
   $424=0.0;
  }

  $425=($392)-($424);
  $426=($BodyPeriodTotal_1)+($425);
  $427=((HEAP32[((272)>>2)])|0);
  $428=(($427+260)|0);
  $429=((HEAP32[(($428)>>2)])|0);
  if (((($429|0))|0)==((0)|0)) {
   $431=(+(HEAPF64[(($183)>>3)]));
   $432=(+(HEAPF64[(($185)>>3)]));
   $433=($431)-($432);
   $434=(+(Math_abs((+($433)))));
   $454=$434;
  } else if (((($429|0))|0)==((1)|0)) {
   $436=(($inHigh+($i_4<<3))|0);
   $437=(+(HEAPF64[(($436)>>3)]));
   $438=(($inLow+($i_4<<3))|0);
   $439=(+(HEAPF64[(($438)>>3)]));
   $440=($437)-($439);
   $454=$440;
  } else if (((($429|0))|0)==((2)|0)) {
   $442=(($inHigh+($i_4<<3))|0);
   $443=(+(HEAPF64[(($442)>>3)]));
   $444=(+(HEAPF64[(($183)>>3)]));
   $445=(+(HEAPF64[(($185)>>3)]));
   $446=$444<$445;
   $_20=($446?$445:$444);
   $447=($443)-($_20);
   $448=($446?$444:$445);
   $449=(($inLow+($i_4<<3))|0);
   $450=(+(HEAPF64[(($449)>>3)]));
   $451=($448)-($450);
   $452=($447)+($451);
   $454=$452;
  } else {
   $454=0.0;
  }

  $455=((HEAP32[((272)>>2)])|0);
  $456=(($455+260)|0);
  $457=((HEAP32[(($456)>>2)])|0);
  if (((($457|0))|0)==((0)|0)) {
   $459=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $460=(+(HEAPF64[(($459)>>3)]));
   $461=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $462=(+(HEAPF64[(($461)>>3)]));
   $463=($460)-($462);
   $464=(+(Math_abs((+($463)))));
   $486=$464;
  } else if (((($457|0))|0)==((1)|0)) {
   $466=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $467=(+(HEAPF64[(($466)>>3)]));
   $468=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $469=(+(HEAPF64[(($468)>>3)]));
   $470=($467)-($469);
   $486=$470;
  } else if (((($457|0))|0)==((2)|0)) {
   $472=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $473=(+(HEAPF64[(($472)>>3)]));
   $474=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $475=(+(HEAPF64[(($474)>>3)]));
   $476=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $477=(+(HEAPF64[(($476)>>3)]));
   $478=$475<$477;
   $_21=($478?$477:$475);
   $479=($473)-($_21);
   $480=($478?$475:$477);
   $481=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $482=(+(HEAPF64[(($481)>>3)]));
   $483=($480)-($482);
   $484=($479)+($483);
   $486=$484;
  } else {
   $486=0.0;
  }

  $487=($454)-($486);
  $488=($ShadowLongPeriodTotal_1)+($487);
  $489=((HEAP32[((272)>>2)])|0);
  $490=(($489+332)|0);
  $491=((HEAP32[(($490)>>2)])|0);
  if (((($491|0))|0)==((2)|0)) {
   $504=(($inHigh+($i_4<<3))|0);
   $505=(+(HEAPF64[(($504)>>3)]));
   $506=(+(HEAPF64[(($183)>>3)]));
   $507=(+(HEAPF64[(($185)>>3)]));
   $508=$506<$507;
   $_22=($508?$507:$506);
   $509=($505)-($_22);
   $510=($508?$506:$507);
   $511=(($inLow+($i_4<<3))|0);
   $512=(+(HEAPF64[(($511)>>3)]));
   $513=($510)-($512);
   $514=($509)+($513);
   $516=$514;
  } else if (((($491|0))|0)==((1)|0)) {
   $498=(($inHigh+($i_4<<3))|0);
   $499=(+(HEAPF64[(($498)>>3)]));
   $500=(($inLow+($i_4<<3))|0);
   $501=(+(HEAPF64[(($500)>>3)]));
   $502=($499)-($501);
   $516=$502;
  } else if (((($491|0))|0)==((0)|0)) {
   $493=(+(HEAPF64[(($183)>>3)]));
   $494=(+(HEAPF64[(($185)>>3)]));
   $495=($493)-($494);
   $496=(+(Math_abs((+($495)))));
   $516=$496;
  } else {
   $516=0.0;
  }

  $517=((HEAP32[((272)>>2)])|0);
  $518=(($517+332)|0);
  $519=((HEAP32[(($518)>>2)])|0);
  if (((($519|0))|0)==((1)|0)) {
   $528=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $529=(+(HEAPF64[(($528)>>3)]));
   $530=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $531=(+(HEAPF64[(($530)>>3)]));
   $532=($529)-($531);
   $548=$532;
  } else if (((($519|0))|0)==((2)|0)) {
   $534=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $535=(+(HEAPF64[(($534)>>3)]));
   $536=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $537=(+(HEAPF64[(($536)>>3)]));
   $538=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $539=(+(HEAPF64[(($538)>>3)]));
   $540=$537<$539;
   $_23=($540?$539:$537);
   $541=($535)-($_23);
   $542=($540?$537:$539);
   $543=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $544=(+(HEAPF64[(($543)>>3)]));
   $545=($542)-($544);
   $546=($541)+($545);
   $548=$546;
  } else if (((($519|0))|0)==((0)|0)) {
   $521=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $522=(+(HEAPF64[(($521)>>3)]));
   $523=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $524=(+(HEAPF64[(($523)>>3)]));
   $525=($522)-($524);
   $526=(+(Math_abs((+($525)))));
   $548=$526;
  } else {
   $548=0.0;
  }

  $549=($516)-($548);
  $550=($ShadowVeryShortPeriodTotal_1)+($549);
  $551=((HEAP32[((272)>>2)])|0);
  $552=(($551+356)|0);
  $553=((HEAP32[(($552)>>2)])|0);
  if (((($553|0))|0)==((0)|0)) {
   $555=((($i_4)-(1))|0);
   $556=(($inClose+($555<<3))|0);
   $557=(+(HEAPF64[(($556)>>3)]));
   $558=(($inOpen+($555<<3))|0);
   $559=(+(HEAPF64[(($558)>>3)]));
   $560=($557)-($559);
   $561=(+(Math_abs((+($560)))));
   $585=$561;
  } else if (((($553|0))|0)==((1)|0)) {
   $563=((($i_4)-(1))|0);
   $564=(($inHigh+($563<<3))|0);
   $565=(+(HEAPF64[(($564)>>3)]));
   $566=(($inLow+($563<<3))|0);
   $567=(+(HEAPF64[(($566)>>3)]));
   $568=($565)-($567);
   $585=$568;
  } else if (((($553|0))|0)==((2)|0)) {
   $570=((($i_4)-(1))|0);
   $571=(($inHigh+($570<<3))|0);
   $572=(+(HEAPF64[(($571)>>3)]));
   $573=(($inClose+($570<<3))|0);
   $574=(+(HEAPF64[(($573)>>3)]));
   $575=(($inOpen+($570<<3))|0);
   $576=(+(HEAPF64[(($575)>>3)]));
   $577=$574<$576;
   $_24=($577?$576:$574);
   $578=($572)-($_24);
   $579=($577?$574:$576);
   $580=(($inLow+($570<<3))|0);
   $581=(+(HEAPF64[(($580)>>3)]));
   $582=($579)-($581);
   $583=($578)+($582);
   $585=$583;
  } else {
   $585=0.0;
  }

  $586=((HEAP32[((272)>>2)])|0);
  $587=(($586+356)|0);
  $588=((HEAP32[(($587)>>2)])|0);
  if (((($588|0))|0)==((0)|0)) {
   $590=(($inClose+($NearTrailingIdx_0<<3))|0);
   $591=(+(HEAPF64[(($590)>>3)]));
   $592=(($inOpen+($NearTrailingIdx_0<<3))|0);
   $593=(+(HEAPF64[(($592)>>3)]));
   $594=($591)-($593);
   $595=(+(Math_abs((+($594)))));
   $617=$595;
  } else if (((($588|0))|0)==((2)|0)) {
   $603=(($inHigh+($NearTrailingIdx_0<<3))|0);
   $604=(+(HEAPF64[(($603)>>3)]));
   $605=(($inClose+($NearTrailingIdx_0<<3))|0);
   $606=(+(HEAPF64[(($605)>>3)]));
   $607=(($inOpen+($NearTrailingIdx_0<<3))|0);
   $608=(+(HEAPF64[(($607)>>3)]));
   $609=$606<$608;
   $_25=($609?$608:$606);
   $610=($604)-($_25);
   $611=($609?$606:$608);
   $612=(($inLow+($NearTrailingIdx_0<<3))|0);
   $613=(+(HEAPF64[(($612)>>3)]));
   $614=($611)-($613);
   $615=($610)+($614);
   $617=$615;
  } else if (((($588|0))|0)==((1)|0)) {
   $597=(($inHigh+($NearTrailingIdx_0<<3))|0);
   $598=(+(HEAPF64[(($597)>>3)]));
   $599=(($inLow+($NearTrailingIdx_0<<3))|0);
   $600=(+(HEAPF64[(($599)>>3)]));
   $601=($598)-($600);
   $617=$601;
  } else {
   $617=0.0;
  }

  $618=($585)-($617);
  $619=($NearPeriodTotal_1)+($618);
  $620=((($i_4)+(1))|0);
  $621=((($BodyTrailingIdx_0)+(1))|0);
  $622=((($ShadowLongTrailingIdx_0)+(1))|0);
  $623=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $624=((($NearTrailingIdx_0)+(1))|0);
  $625=($i_4|0)<($endIdx|0);
  if ($625) {
   $NearTrailingIdx_0=$624;$ShadowVeryShortTrailingIdx_0=$623;$ShadowLongTrailingIdx_0=$622;$BodyTrailingIdx_0=$621;$outIdx_0=$outIdx_1;$i_4=$620;$NearPeriodTotal_1=$619;$ShadowVeryShortPeriodTotal_1=$550;$ShadowLongPeriodTotal_1=$488;$BodyPeriodTotal_1=$426;
  } else {
   break;
  }
 }
 $627=((($smax44)+(1))|0);
 $628=((($627)-($smax45))|0);
 HEAP32[(($outNBElement)>>2)]=$628;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLHARAMI_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(1))|0);
 return (($7)|0);
}


function _TA_CDLHARAMI($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond19=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$BodyLongPeriodTotal_0_lcssa=.0,$29=0,$30=0,$31=0,$32=0,$i_024=0,$BodyLongPeriodTotal_023=.0,$35=0,$36=.0,$37=0;
 var $38=.0,$39=.0,$40=.0,$42=0,$43=.0,$44=0,$45=.0,$46=.0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$_=.0,$55=.0,$56=.0,$57=0,$58=.0;
 var $59=.0,$60=.0,$62=.0,$63=.0,$64=0,$65=0,$BodyShortPeriodTotal_0_lcssa=.0,$66=0,$smax=0,$67=0,$smax27=0,$68=0,$smax28=0,$i_122=0,$BodyShortPeriodTotal_021=.0,$71=0,$72=.0,$73=0,$74=.0,$75=.0;
 var $76=.0,$78=0,$79=.0,$80=0,$81=.0,$82=.0,$84=0,$85=.0,$86=0,$87=.0,$88=0,$89=.0,$90=0,$_8=.0,$91=.0,$92=.0,$93=0,$94=.0,$95=.0,$96=.0;
 var $98=.0,$99=.0,$100=0,$101=0,$BodyShortPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$103=0,$104=0,$105=.0,$106=0,$107=.0,$108=.0,$109=.0,$110=0,$111=0,$112=.0;
 var $113=0,$114=0,$115=0,$117=.0,$118=.0,$120=0,$121=0,$123=0,$124=.0,$125=0,$126=.0,$127=.0,$129=0,$131=0,$132=.0,$133=0,$_9=.0,$134=.0,$135=.0,$136=0;
 var $137=.0,$138=.0,$139=.0,$141=.0,$142=.0,$143=0,$144=0,$145=0,$146=0,$147=.0,$148=.0,$149=0,$151=0,$152=.0,$153=0,$154=.0,$155=.0,$156=.0,$157=0,$158=.0;
 var $159=0,$160=0,$161=0,$163=.0,$164=.0,$166=0,$167=0,$169=0,$170=.0,$171=0,$172=.0,$173=.0,$175=0,$177=0,$178=.0,$179=0,$_10=.0,$180=.0,$181=.0,$182=0;
 var $183=.0,$184=.0,$185=.0,$187=.0,$188=.0,$189=0,$190=0,$191=0,$192=0,$193=.0,$194=.0,$195=0,$197=.0,$198=.0,$199=0,$_11=.0,$200=.0,$201=.0,$202=0,$203=.0;
 var $204=0,$206=0,$_12=.0,$207=0,$208=.0,$209=0,$211=0,$212=0,$213=0,$215=.0,$216=.0,$217=0,$_13=.0,$218=.0,$219=.0,$220=0,$221=.0,$222=0,$224=0,$_14=.0;
 var $225=0,$226=.0,$227=0,$229=0,$230=0,$231=0,$233=0,$235=0,$outIdx_1=0,$237=0,$238=0,$239=0,$241=.0,$242=.0,$243=.0,$244=.0,$246=0,$247=.0,$248=0,$249=.0;
 var $250=.0,$252=0,$253=.0,$254=.0,$255=.0,$256=0,$_15=.0,$257=.0,$258=.0,$259=0,$260=.0,$261=.0,$262=.0,$264=.0,$265=0,$266=0,$267=0,$269=0,$270=.0,$271=0;
 var $272=.0,$273=.0,$274=.0,$276=0,$277=.0,$278=0,$279=.0,$280=.0,$282=0,$283=.0,$284=0,$285=.0,$286=0,$287=.0,$288=0,$_16=.0,$289=.0,$290=.0,$291=0,$292=.0;
 var $293=.0,$294=.0,$296=.0,$297=.0,$298=.0,$299=0,$300=0,$301=0,$303=0,$304=.0,$305=0,$306=.0,$307=.0,$308=.0,$310=0,$311=.0,$312=0,$313=.0,$314=.0,$316=0;
 var $317=.0,$318=0,$319=.0,$320=0,$321=.0,$322=0,$_17=.0,$323=.0,$324=.0,$325=0,$326=.0,$327=.0,$328=.0,$330=.0,$331=0,$332=0,$333=0,$335=0,$336=.0,$337=0;
 var $338=.0,$339=.0,$340=.0,$342=0,$343=.0,$344=0,$345=.0,$346=.0,$348=0,$349=.0,$350=0,$351=.0,$352=0,$353=.0,$354=0,$_18=.0,$355=.0,$356=.0,$357=0,$358=.0;
 var $359=.0,$360=.0,$362=.0,$363=.0,$364=.0,$365=0,$366=0,$367=0,$368=0,$370=0,$371=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond19=$10|$or_cond5_not;
 if ($or_cond19) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLHARAMI_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((($_startIdx)-(1))|0);
 $18=((HEAP32[((272)>>2)])|0);
 $19=(($18+168)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((($17)-($20))|0);
 $22=(($18+216)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=((($_startIdx)-($23))|0);
 $25=($20|0)>0;
 if ($25) {
  $26=((HEAP32[((272)>>2)])|0);
  $27=(($26+164)|0);
  $28=((HEAP32[(($27)>>2)])|0);
  $BodyLongPeriodTotal_023=0.0;$i_024=$21;
  while(1) {


   if (((($28|0))|0)==((0)|0)) {
    $35=(($inClose+($i_024<<3))|0);
    $36=(+(HEAPF64[(($35)>>3)]));
    $37=(($inOpen+($i_024<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=($36)-($38);
    $40=(+(Math_abs((+($39)))));
    $62=$40;
   } else if (((($28|0))|0)==((2)|0)) {
    $48=(($inHigh+($i_024<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inClose+($i_024<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inOpen+($i_024<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=$51<$53;
    $_=($54?$53:$51);
    $55=($49)-($_);
    $56=($54?$51:$53);
    $57=(($inLow+($i_024<<3))|0);
    $58=(+(HEAPF64[(($57)>>3)]));
    $59=($56)-($58);
    $60=($55)+($59);
    $62=$60;
   } else if (((($28|0))|0)==((1)|0)) {
    $42=(($inHigh+($i_024<<3))|0);
    $43=(+(HEAPF64[(($42)>>3)]));
    $44=(($inLow+($i_024<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=($43)-($45);
    $62=$46;
   } else {
    $62=0.0;
   }

   $63=($BodyLongPeriodTotal_023)+($62);
   $64=((($i_024)+(1))|0);
   $65=($64|0)<($17|0);
   if ($65) {
    $BodyLongPeriodTotal_023=$63;$i_024=$64;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$63;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $29=($23|0)>0;
 if ($29) {
  $30=((HEAP32[((272)>>2)])|0);
  $31=(($30+212)|0);
  $32=((HEAP32[(($31)>>2)])|0);
  $BodyShortPeriodTotal_021=0.0;$i_122=$24;
  while(1) {


   if (((($32|0))|0)==((1)|0)) {
    $78=(($inHigh+($i_122<<3))|0);
    $79=(+(HEAPF64[(($78)>>3)]));
    $80=(($inLow+($i_122<<3))|0);
    $81=(+(HEAPF64[(($80)>>3)]));
    $82=($79)-($81);
    $98=$82;
   } else if (((($32|0))|0)==((2)|0)) {
    $84=(($inHigh+($i_122<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=(($inClose+($i_122<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=(($inOpen+($i_122<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=$87<$89;
    $_8=($90?$89:$87);
    $91=($85)-($_8);
    $92=($90?$87:$89);
    $93=(($inLow+($i_122<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=($92)-($94);
    $96=($91)+($95);
    $98=$96;
   } else if (((($32|0))|0)==((0)|0)) {
    $71=(($inClose+($i_122<<3))|0);
    $72=(+(HEAPF64[(($71)>>3)]));
    $73=(($inOpen+($i_122<<3))|0);
    $74=(+(HEAPF64[(($73)>>3)]));
    $75=($72)-($74);
    $76=(+(Math_abs((+($75)))));
    $98=$76;
   } else {
    $98=0.0;
   }

   $99=($BodyShortPeriodTotal_021)+($98);
   $100=((($i_122)+(1))|0);
   $101=($100|0)<($_startIdx|0);
   if ($101) {
    $BodyShortPeriodTotal_021=$99;$i_122=$100;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$99;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;
 }

 $66=($12|0)>($endIdx|0);
 $smax=($66?$12:$endIdx);
 $67=($smax|0)>($startIdx|0);
 $smax27=($67?$smax:$startIdx);
 $68=($12|0)>($startIdx|0);
 $smax28=($68?$12:$startIdx);
 $BodyLongTrailingIdx_0=$21;$BodyShortTrailingIdx_0=$24;$outIdx_0=0;$i_2=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;
 while(1) {






  $103=((($i_2)-(1))|0);
  $104=(($inClose+($103<<3))|0);
  $105=(+(HEAPF64[(($104)>>3)]));
  $106=(($inOpen+($103<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=($105)-($107);
  $109=(+(Math_abs((+($108)))));
  $110=((HEAP32[((272)>>2)])|0);
  $111=(($110+176)|0);
  $112=(+(HEAPF64[(($111)>>3)]));
  $113=(($110+168)|0);
  $114=((HEAP32[(($113)>>2)])|0);
  $115=($114|0)==0;
  do {
   if ($115) {
    $120=(($110+164)|0);
    $121=((HEAP32[(($120)>>2)])|0);
    if (((($121|0))|0)==((1)|0)) {
     $123=(($inHigh+($103<<3))|0);
     $124=(+(HEAPF64[(($123)>>3)]));
     $125=(($inLow+($103<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=($124)-($126);
     $141=$127;
     break;
    } else if (((($121|0))|0)==((0)|0)) {
     $141=$109;
     break;
    }
    $129=($121|0)==2;
    if (!($129)) {
     $141=0.0;
     break;
    }
    $131=(($inHigh+($103<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=$105<$107;
    $_9=($133?$107:$105);
    $134=($132)-($_9);
    $135=($133?$105:$107);
    $136=(($inLow+($103<<3))|0);
    $137=(+(HEAPF64[(($136)>>3)]));
    $138=($135)-($137);
    $139=($134)+($138);
    $141=$139;
   } else {
    $117=(+((($114|0))|0));
    $118=($BodyLongPeriodTotal_1)/($117);
    $141=$118;
   }
  } while(0);

  $142=($112)*($141);
  $143=((HEAP32[((272)>>2)])|0);
  $144=(($143+164)|0);
  $145=((HEAP32[(($144)>>2)])|0);
  $146=($145|0)==2;
  $147=($146?(2.0):(1.0));
  $148=($142)/($147);
  $149=$109>$148;
  L44: do {
   if ($149) {
    $151=(($inClose+($i_2<<3))|0);
    $152=(+(HEAPF64[(($151)>>3)]));
    $153=(($inOpen+($i_2<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=($152)-($154);
    $156=(+(Math_abs((+($155)))));
    $157=(($143+224)|0);
    $158=(+(HEAPF64[(($157)>>3)]));
    $159=(($143+216)|0);
    $160=((HEAP32[(($159)>>2)])|0);
    $161=($160|0)==0;
    do {
     if ($161) {
      $166=(($143+212)|0);
      $167=((HEAP32[(($166)>>2)])|0);
      if (((($167|0))|0)==((1)|0)) {
       $169=(($inHigh+($i_2<<3))|0);
       $170=(+(HEAPF64[(($169)>>3)]));
       $171=(($inLow+($i_2<<3))|0);
       $172=(+(HEAPF64[(($171)>>3)]));
       $173=($170)-($172);
       $187=$173;
       break;
      } else if (((($167|0))|0)==((0)|0)) {
       $187=$156;
       break;
      }
      $175=($167|0)==2;
      if (!($175)) {
       $187=0.0;
       break;
      }
      $177=(($inHigh+($i_2<<3))|0);
      $178=(+(HEAPF64[(($177)>>3)]));
      $179=$152<$154;
      $_10=($179?$154:$152);
      $180=($178)-($_10);
      $181=($179?$152:$154);
      $182=(($inLow+($i_2<<3))|0);
      $183=(+(HEAPF64[(($182)>>3)]));
      $184=($181)-($183);
      $185=($180)+($184);
      $187=$185;
     } else {
      $163=(+((($160|0))|0));
      $164=($BodyShortPeriodTotal_1)/($163);
      $187=$164;
     }
    } while(0);

    $188=($158)*($187);
    $189=((HEAP32[((272)>>2)])|0);
    $190=(($189+212)|0);
    $191=((HEAP32[(($190)>>2)])|0);
    $192=($191|0)==2;
    $193=($192?(2.0):(1.0));
    $194=($188)/($193);
    $195=$156>$194;
    if ($195) {
     label = 42;
     break;
    }
    $197=(+(HEAPF64[(($151)>>3)]));
    $198=(+(HEAPF64[(($153)>>3)]));
    $199=$197>$198;
    $_11=($199?$197:$198);
    $200=(+(HEAPF64[(($104)>>3)]));
    $201=(+(HEAPF64[(($106)>>3)]));
    $202=$200>$201;
    $203=($202?$200:$201);
    $204=$_11<$203;
    do {
     if ($204) {
      $206=$197<$198;
      $_12=($206?$197:$198);
      $207=$200<$201;
      $208=($207?$200:$201);
      $209=$_12>$208;
      if (!($209)) {
       break;
      }
      $211=$200>=$201;
      $212=($211?-100:100);
      $213=(($outInteger+($outIdx_0<<2))|0);
      HEAP32[(($213)>>2)]=$212;
      break L44;
     }
    } while(0);
    $215=(+(HEAPF64[(($151)>>3)]));
    $216=(+(HEAPF64[(($153)>>3)]));
    $217=$215>$216;
    $_13=($217?$215:$216);
    $218=(+(HEAPF64[(($104)>>3)]));
    $219=(+(HEAPF64[(($106)>>3)]));
    $220=$218>$219;
    $221=($220?$218:$219);
    $222=$_13>$221;
    do {
     if (!($222)) {
      $224=$215<$216;
      $_14=($224?$215:$216);
      $225=$218<$219;
      $226=($225?$218:$219);
      $227=$_14<$226;
      if ($227) {
       break;
      }
      $229=$218>=$219;
      $230=($229?-80:80);
      $231=(($outInteger+($outIdx_0<<2))|0);
      HEAP32[(($231)>>2)]=$230;
      break L44;
     }
    } while(0);
    $233=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($233)>>2)]=0;
   } else {
    label = 42;
   }
  } while(0);
  if ((label|0) == 42) {
   label = 0;
   $235=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($235)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $237=((HEAP32[((272)>>2)])|0);
  $238=(($237+164)|0);
  $239=((HEAP32[(($238)>>2)])|0);
  if (((($239|0))|0)==((0)|0)) {
   $241=(+(HEAPF64[(($104)>>3)]));
   $242=(+(HEAPF64[(($106)>>3)]));
   $243=($241)-($242);
   $244=(+(Math_abs((+($243)))));
   $264=$244;
  } else if (((($239|0))|0)==((1)|0)) {
   $246=(($inHigh+($103<<3))|0);
   $247=(+(HEAPF64[(($246)>>3)]));
   $248=(($inLow+($103<<3))|0);
   $249=(+(HEAPF64[(($248)>>3)]));
   $250=($247)-($249);
   $264=$250;
  } else if (((($239|0))|0)==((2)|0)) {
   $252=(($inHigh+($103<<3))|0);
   $253=(+(HEAPF64[(($252)>>3)]));
   $254=(+(HEAPF64[(($104)>>3)]));
   $255=(+(HEAPF64[(($106)>>3)]));
   $256=$254<$255;
   $_15=($256?$255:$254);
   $257=($253)-($_15);
   $258=($256?$254:$255);
   $259=(($inLow+($103<<3))|0);
   $260=(+(HEAPF64[(($259)>>3)]));
   $261=($258)-($260);
   $262=($257)+($261);
   $264=$262;
  } else {
   $264=0.0;
  }

  $265=((HEAP32[((272)>>2)])|0);
  $266=(($265+164)|0);
  $267=((HEAP32[(($266)>>2)])|0);
  if (((($267|0))|0)==((0)|0)) {
   $269=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $270=(+(HEAPF64[(($269)>>3)]));
   $271=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $272=(+(HEAPF64[(($271)>>3)]));
   $273=($270)-($272);
   $274=(+(Math_abs((+($273)))));
   $296=$274;
  } else if (((($267|0))|0)==((1)|0)) {
   $276=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $277=(+(HEAPF64[(($276)>>3)]));
   $278=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $279=(+(HEAPF64[(($278)>>3)]));
   $280=($277)-($279);
   $296=$280;
  } else if (((($267|0))|0)==((2)|0)) {
   $282=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $283=(+(HEAPF64[(($282)>>3)]));
   $284=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $285=(+(HEAPF64[(($284)>>3)]));
   $286=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $287=(+(HEAPF64[(($286)>>3)]));
   $288=$285<$287;
   $_16=($288?$287:$285);
   $289=($283)-($_16);
   $290=($288?$285:$287);
   $291=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $292=(+(HEAPF64[(($291)>>3)]));
   $293=($290)-($292);
   $294=($289)+($293);
   $296=$294;
  } else {
   $296=0.0;
  }

  $297=($264)-($296);
  $298=($BodyLongPeriodTotal_1)+($297);
  $299=((HEAP32[((272)>>2)])|0);
  $300=(($299+212)|0);
  $301=((HEAP32[(($300)>>2)])|0);
  if (((($301|0))|0)==((0)|0)) {
   $303=(($inClose+($i_2<<3))|0);
   $304=(+(HEAPF64[(($303)>>3)]));
   $305=(($inOpen+($i_2<<3))|0);
   $306=(+(HEAPF64[(($305)>>3)]));
   $307=($304)-($306);
   $308=(+(Math_abs((+($307)))));
   $330=$308;
  } else if (((($301|0))|0)==((1)|0)) {
   $310=(($inHigh+($i_2<<3))|0);
   $311=(+(HEAPF64[(($310)>>3)]));
   $312=(($inLow+($i_2<<3))|0);
   $313=(+(HEAPF64[(($312)>>3)]));
   $314=($311)-($313);
   $330=$314;
  } else if (((($301|0))|0)==((2)|0)) {
   $316=(($inHigh+($i_2<<3))|0);
   $317=(+(HEAPF64[(($316)>>3)]));
   $318=(($inClose+($i_2<<3))|0);
   $319=(+(HEAPF64[(($318)>>3)]));
   $320=(($inOpen+($i_2<<3))|0);
   $321=(+(HEAPF64[(($320)>>3)]));
   $322=$319<$321;
   $_17=($322?$321:$319);
   $323=($317)-($_17);
   $324=($322?$319:$321);
   $325=(($inLow+($i_2<<3))|0);
   $326=(+(HEAPF64[(($325)>>3)]));
   $327=($324)-($326);
   $328=($323)+($327);
   $330=$328;
  } else {
   $330=0.0;
  }

  $331=((HEAP32[((272)>>2)])|0);
  $332=(($331+212)|0);
  $333=((HEAP32[(($332)>>2)])|0);
  if (((($333|0))|0)==((0)|0)) {
   $335=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $336=(+(HEAPF64[(($335)>>3)]));
   $337=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $338=(+(HEAPF64[(($337)>>3)]));
   $339=($336)-($338);
   $340=(+(Math_abs((+($339)))));
   $362=$340;
  } else if (((($333|0))|0)==((1)|0)) {
   $342=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $343=(+(HEAPF64[(($342)>>3)]));
   $344=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $345=(+(HEAPF64[(($344)>>3)]));
   $346=($343)-($345);
   $362=$346;
  } else if (((($333|0))|0)==((2)|0)) {
   $348=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $349=(+(HEAPF64[(($348)>>3)]));
   $350=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $351=(+(HEAPF64[(($350)>>3)]));
   $352=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $353=(+(HEAPF64[(($352)>>3)]));
   $354=$351<$353;
   $_18=($354?$353:$351);
   $355=($349)-($_18);
   $356=($354?$351:$353);
   $357=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $358=(+(HEAPF64[(($357)>>3)]));
   $359=($356)-($358);
   $360=($355)+($359);
   $362=$360;
  } else {
   $362=0.0;
  }

  $363=($330)-($362);
  $364=($BodyShortPeriodTotal_1)+($363);
  $365=((($i_2)+(1))|0);
  $366=((($BodyLongTrailingIdx_0)+(1))|0);
  $367=((($BodyShortTrailingIdx_0)+(1))|0);
  $368=($i_2|0)<($endIdx|0);
  if ($368) {
   $BodyLongTrailingIdx_0=$366;$BodyShortTrailingIdx_0=$367;$outIdx_0=$outIdx_1;$i_2=$365;$BodyLongPeriodTotal_1=$298;$BodyShortPeriodTotal_1=$364;
  } else {
   break;
  }
 }
 $370=((($smax27)+(1))|0);
 $371=((($370)-($smax28))|0);
 HEAP32[(($outNBElement)>>2)]=$371;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLHARAMICROSS_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+240)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(1))|0);
 return (($7)|0);
}


function _TA_CDLHARAMICROSS($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond19=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$BodyLongPeriodTotal_0_lcssa=.0,$29=0,$30=0,$31=0,$32=0,$i_024=0,$BodyLongPeriodTotal_023=.0,$35=0,$36=.0,$37=0;
 var $38=.0,$39=.0,$40=.0,$42=0,$43=.0,$44=0,$45=.0,$46=.0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$_=.0,$55=.0,$56=.0,$57=0,$58=.0;
 var $59=.0,$60=.0,$62=.0,$63=.0,$64=0,$65=0,$BodyDojiPeriodTotal_0_lcssa=.0,$66=0,$smax=0,$67=0,$smax27=0,$68=0,$smax28=0,$i_122=0,$BodyDojiPeriodTotal_021=.0,$71=0,$72=.0,$73=0,$74=.0,$75=.0;
 var $76=.0,$78=0,$79=.0,$80=0,$81=.0,$82=.0,$84=0,$85=.0,$86=0,$87=.0,$88=0,$89=.0,$90=0,$_8=.0,$91=.0,$92=.0,$93=0,$94=.0,$95=.0,$96=.0;
 var $98=.0,$99=.0,$100=0,$101=0,$BodyDojiPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyDojiTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$103=0,$104=0,$105=.0,$106=0,$107=.0,$108=.0,$109=.0,$110=0,$111=0,$112=.0;
 var $113=0,$114=0,$115=0,$117=.0,$118=.0,$120=0,$121=0,$123=0,$124=.0,$125=0,$126=.0,$127=.0,$129=0,$131=0,$132=.0,$133=0,$_9=.0,$134=.0,$135=.0,$136=0;
 var $137=.0,$138=.0,$139=.0,$141=.0,$142=.0,$143=0,$144=0,$145=0,$146=0,$147=.0,$148=.0,$149=0,$151=0,$152=.0,$153=0,$154=.0,$155=.0,$156=.0,$157=0,$158=.0;
 var $159=0,$160=0,$161=0,$163=.0,$164=.0,$166=0,$167=0,$169=0,$170=.0,$171=0,$172=.0,$173=.0,$175=0,$177=0,$178=.0,$179=0,$_10=.0,$180=.0,$181=.0,$182=0;
 var $183=.0,$184=.0,$185=.0,$187=.0,$188=.0,$189=0,$190=0,$191=0,$192=0,$193=.0,$194=.0,$195=0,$197=.0,$198=.0,$199=0,$_11=.0,$200=.0,$201=.0,$202=0,$203=.0;
 var $204=0,$206=0,$_12=.0,$207=0,$208=.0,$209=0,$211=0,$212=0,$213=0,$215=.0,$216=.0,$217=0,$_13=.0,$218=.0,$219=.0,$220=0,$221=.0,$222=0,$224=0,$_14=.0;
 var $225=0,$226=.0,$227=0,$229=0,$230=0,$231=0,$233=0,$235=0,$outIdx_1=0,$237=0,$238=0,$239=0,$241=.0,$242=.0,$243=.0,$244=.0,$246=0,$247=.0,$248=0,$249=.0;
 var $250=.0,$252=0,$253=.0,$254=.0,$255=.0,$256=0,$_15=.0,$257=.0,$258=.0,$259=0,$260=.0,$261=.0,$262=.0,$264=.0,$265=0,$266=0,$267=0,$269=0,$270=.0,$271=0;
 var $272=.0,$273=.0,$274=.0,$276=0,$277=.0,$278=0,$279=.0,$280=.0,$282=0,$283=.0,$284=0,$285=.0,$286=0,$287=.0,$288=0,$_16=.0,$289=.0,$290=.0,$291=0,$292=.0;
 var $293=.0,$294=.0,$296=.0,$297=.0,$298=.0,$299=0,$300=0,$301=0,$303=0,$304=.0,$305=0,$306=.0,$307=.0,$308=.0,$310=0,$311=.0,$312=0,$313=.0,$314=.0,$316=0;
 var $317=.0,$318=0,$319=.0,$320=0,$321=.0,$322=0,$_17=.0,$323=.0,$324=.0,$325=0,$326=.0,$327=.0,$328=.0,$330=.0,$331=0,$332=0,$333=0,$335=0,$336=.0,$337=0;
 var $338=.0,$339=.0,$340=.0,$342=0,$343=.0,$344=0,$345=.0,$346=.0,$348=0,$349=.0,$350=0,$351=.0,$352=0,$353=.0,$354=0,$_18=.0,$355=.0,$356=.0,$357=0,$358=.0;
 var $359=.0,$360=.0,$362=.0,$363=.0,$364=.0,$365=0,$366=0,$367=0,$368=0,$370=0,$371=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond19=$10|$or_cond5_not;
 if ($or_cond19) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLHARAMICROSS_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((($_startIdx)-(1))|0);
 $18=((HEAP32[((272)>>2)])|0);
 $19=(($18+168)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((($17)-($20))|0);
 $22=(($18+240)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=((($_startIdx)-($23))|0);
 $25=($20|0)>0;
 if ($25) {
  $26=((HEAP32[((272)>>2)])|0);
  $27=(($26+164)|0);
  $28=((HEAP32[(($27)>>2)])|0);
  $BodyLongPeriodTotal_023=0.0;$i_024=$21;
  while(1) {


   if (((($28|0))|0)==((0)|0)) {
    $35=(($inClose+($i_024<<3))|0);
    $36=(+(HEAPF64[(($35)>>3)]));
    $37=(($inOpen+($i_024<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=($36)-($38);
    $40=(+(Math_abs((+($39)))));
    $62=$40;
   } else if (((($28|0))|0)==((1)|0)) {
    $42=(($inHigh+($i_024<<3))|0);
    $43=(+(HEAPF64[(($42)>>3)]));
    $44=(($inLow+($i_024<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=($43)-($45);
    $62=$46;
   } else if (((($28|0))|0)==((2)|0)) {
    $48=(($inHigh+($i_024<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inClose+($i_024<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inOpen+($i_024<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=$51<$53;
    $_=($54?$53:$51);
    $55=($49)-($_);
    $56=($54?$51:$53);
    $57=(($inLow+($i_024<<3))|0);
    $58=(+(HEAPF64[(($57)>>3)]));
    $59=($56)-($58);
    $60=($55)+($59);
    $62=$60;
   } else {
    $62=0.0;
   }

   $63=($BodyLongPeriodTotal_023)+($62);
   $64=((($i_024)+(1))|0);
   $65=($64|0)<($17|0);
   if ($65) {
    $BodyLongPeriodTotal_023=$63;$i_024=$64;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$63;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $29=($23|0)>0;
 if ($29) {
  $30=((HEAP32[((272)>>2)])|0);
  $31=(($30+236)|0);
  $32=((HEAP32[(($31)>>2)])|0);
  $BodyDojiPeriodTotal_021=0.0;$i_122=$24;
  while(1) {


   if (((($32|0))|0)==((0)|0)) {
    $71=(($inClose+($i_122<<3))|0);
    $72=(+(HEAPF64[(($71)>>3)]));
    $73=(($inOpen+($i_122<<3))|0);
    $74=(+(HEAPF64[(($73)>>3)]));
    $75=($72)-($74);
    $76=(+(Math_abs((+($75)))));
    $98=$76;
   } else if (((($32|0))|0)==((1)|0)) {
    $78=(($inHigh+($i_122<<3))|0);
    $79=(+(HEAPF64[(($78)>>3)]));
    $80=(($inLow+($i_122<<3))|0);
    $81=(+(HEAPF64[(($80)>>3)]));
    $82=($79)-($81);
    $98=$82;
   } else if (((($32|0))|0)==((2)|0)) {
    $84=(($inHigh+($i_122<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=(($inClose+($i_122<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=(($inOpen+($i_122<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=$87<$89;
    $_8=($90?$89:$87);
    $91=($85)-($_8);
    $92=($90?$87:$89);
    $93=(($inLow+($i_122<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=($92)-($94);
    $96=($91)+($95);
    $98=$96;
   } else {
    $98=0.0;
   }

   $99=($BodyDojiPeriodTotal_021)+($98);
   $100=((($i_122)+(1))|0);
   $101=($100|0)<($_startIdx|0);
   if ($101) {
    $BodyDojiPeriodTotal_021=$99;$i_122=$100;
   } else {
    $BodyDojiPeriodTotal_0_lcssa=$99;
    break;
   }
  }
 } else {
  $BodyDojiPeriodTotal_0_lcssa=0.0;
 }

 $66=($12|0)>($endIdx|0);
 $smax=($66?$12:$endIdx);
 $67=($smax|0)>($startIdx|0);
 $smax27=($67?$smax:$startIdx);
 $68=($12|0)>($startIdx|0);
 $smax28=($68?$12:$startIdx);
 $BodyLongTrailingIdx_0=$21;$BodyDojiTrailingIdx_0=$24;$outIdx_0=0;$i_2=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyDojiPeriodTotal_1=$BodyDojiPeriodTotal_0_lcssa;
 while(1) {






  $103=((($i_2)-(1))|0);
  $104=(($inClose+($103<<3))|0);
  $105=(+(HEAPF64[(($104)>>3)]));
  $106=(($inOpen+($103<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=($105)-($107);
  $109=(+(Math_abs((+($108)))));
  $110=((HEAP32[((272)>>2)])|0);
  $111=(($110+176)|0);
  $112=(+(HEAPF64[(($111)>>3)]));
  $113=(($110+168)|0);
  $114=((HEAP32[(($113)>>2)])|0);
  $115=($114|0)==0;
  do {
   if ($115) {
    $120=(($110+164)|0);
    $121=((HEAP32[(($120)>>2)])|0);
    if (((($121|0))|0)==((1)|0)) {
     $123=(($inHigh+($103<<3))|0);
     $124=(+(HEAPF64[(($123)>>3)]));
     $125=(($inLow+($103<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=($124)-($126);
     $141=$127;
     break;
    } else if (((($121|0))|0)==((0)|0)) {
     $141=$109;
     break;
    }
    $129=($121|0)==2;
    if (!($129)) {
     $141=0.0;
     break;
    }
    $131=(($inHigh+($103<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=$105<$107;
    $_9=($133?$107:$105);
    $134=($132)-($_9);
    $135=($133?$105:$107);
    $136=(($inLow+($103<<3))|0);
    $137=(+(HEAPF64[(($136)>>3)]));
    $138=($135)-($137);
    $139=($134)+($138);
    $141=$139;
   } else {
    $117=(+((($114|0))|0));
    $118=($BodyLongPeriodTotal_1)/($117);
    $141=$118;
   }
  } while(0);

  $142=($112)*($141);
  $143=((HEAP32[((272)>>2)])|0);
  $144=(($143+164)|0);
  $145=((HEAP32[(($144)>>2)])|0);
  $146=($145|0)==2;
  $147=($146?(2.0):(1.0));
  $148=($142)/($147);
  $149=$109>$148;
  L44: do {
   if ($149) {
    $151=(($inClose+($i_2<<3))|0);
    $152=(+(HEAPF64[(($151)>>3)]));
    $153=(($inOpen+($i_2<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=($152)-($154);
    $156=(+(Math_abs((+($155)))));
    $157=(($143+248)|0);
    $158=(+(HEAPF64[(($157)>>3)]));
    $159=(($143+240)|0);
    $160=((HEAP32[(($159)>>2)])|0);
    $161=($160|0)==0;
    do {
     if ($161) {
      $166=(($143+236)|0);
      $167=((HEAP32[(($166)>>2)])|0);
      if (((($167|0))|0)==((0)|0)) {
       $187=$156;
       break;
      } else if (((($167|0))|0)==((1)|0)) {
       $169=(($inHigh+($i_2<<3))|0);
       $170=(+(HEAPF64[(($169)>>3)]));
       $171=(($inLow+($i_2<<3))|0);
       $172=(+(HEAPF64[(($171)>>3)]));
       $173=($170)-($172);
       $187=$173;
       break;
      }
      $175=($167|0)==2;
      if (!($175)) {
       $187=0.0;
       break;
      }
      $177=(($inHigh+($i_2<<3))|0);
      $178=(+(HEAPF64[(($177)>>3)]));
      $179=$152<$154;
      $_10=($179?$154:$152);
      $180=($178)-($_10);
      $181=($179?$152:$154);
      $182=(($inLow+($i_2<<3))|0);
      $183=(+(HEAPF64[(($182)>>3)]));
      $184=($181)-($183);
      $185=($180)+($184);
      $187=$185;
     } else {
      $163=(+((($160|0))|0));
      $164=($BodyDojiPeriodTotal_1)/($163);
      $187=$164;
     }
    } while(0);

    $188=($158)*($187);
    $189=((HEAP32[((272)>>2)])|0);
    $190=(($189+236)|0);
    $191=((HEAP32[(($190)>>2)])|0);
    $192=($191|0)==2;
    $193=($192?(2.0):(1.0));
    $194=($188)/($193);
    $195=$156>$194;
    if ($195) {
     label = 42;
     break;
    }
    $197=(+(HEAPF64[(($151)>>3)]));
    $198=(+(HEAPF64[(($153)>>3)]));
    $199=$197>$198;
    $_11=($199?$197:$198);
    $200=(+(HEAPF64[(($104)>>3)]));
    $201=(+(HEAPF64[(($106)>>3)]));
    $202=$200>$201;
    $203=($202?$200:$201);
    $204=$_11<$203;
    do {
     if ($204) {
      $206=$197<$198;
      $_12=($206?$197:$198);
      $207=$200<$201;
      $208=($207?$200:$201);
      $209=$_12>$208;
      if (!($209)) {
       break;
      }
      $211=$200>=$201;
      $212=($211?-100:100);
      $213=(($outInteger+($outIdx_0<<2))|0);
      HEAP32[(($213)>>2)]=$212;
      break L44;
     }
    } while(0);
    $215=(+(HEAPF64[(($151)>>3)]));
    $216=(+(HEAPF64[(($153)>>3)]));
    $217=$215>$216;
    $_13=($217?$215:$216);
    $218=(+(HEAPF64[(($104)>>3)]));
    $219=(+(HEAPF64[(($106)>>3)]));
    $220=$218>$219;
    $221=($220?$218:$219);
    $222=$_13>$221;
    do {
     if (!($222)) {
      $224=$215<$216;
      $_14=($224?$215:$216);
      $225=$218<$219;
      $226=($225?$218:$219);
      $227=$_14<$226;
      if ($227) {
       break;
      }
      $229=$218>=$219;
      $230=($229?-80:80);
      $231=(($outInteger+($outIdx_0<<2))|0);
      HEAP32[(($231)>>2)]=$230;
      break L44;
     }
    } while(0);
    $233=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($233)>>2)]=0;
   } else {
    label = 42;
   }
  } while(0);
  if ((label|0) == 42) {
   label = 0;
   $235=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($235)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $237=((HEAP32[((272)>>2)])|0);
  $238=(($237+164)|0);
  $239=((HEAP32[(($238)>>2)])|0);
  if (((($239|0))|0)==((0)|0)) {
   $241=(+(HEAPF64[(($104)>>3)]));
   $242=(+(HEAPF64[(($106)>>3)]));
   $243=($241)-($242);
   $244=(+(Math_abs((+($243)))));
   $264=$244;
  } else if (((($239|0))|0)==((1)|0)) {
   $246=(($inHigh+($103<<3))|0);
   $247=(+(HEAPF64[(($246)>>3)]));
   $248=(($inLow+($103<<3))|0);
   $249=(+(HEAPF64[(($248)>>3)]));
   $250=($247)-($249);
   $264=$250;
  } else if (((($239|0))|0)==((2)|0)) {
   $252=(($inHigh+($103<<3))|0);
   $253=(+(HEAPF64[(($252)>>3)]));
   $254=(+(HEAPF64[(($104)>>3)]));
   $255=(+(HEAPF64[(($106)>>3)]));
   $256=$254<$255;
   $_15=($256?$255:$254);
   $257=($253)-($_15);
   $258=($256?$254:$255);
   $259=(($inLow+($103<<3))|0);
   $260=(+(HEAPF64[(($259)>>3)]));
   $261=($258)-($260);
   $262=($257)+($261);
   $264=$262;
  } else {
   $264=0.0;
  }

  $265=((HEAP32[((272)>>2)])|0);
  $266=(($265+164)|0);
  $267=((HEAP32[(($266)>>2)])|0);
  if (((($267|0))|0)==((2)|0)) {
   $282=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $283=(+(HEAPF64[(($282)>>3)]));
   $284=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $285=(+(HEAPF64[(($284)>>3)]));
   $286=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $287=(+(HEAPF64[(($286)>>3)]));
   $288=$285<$287;
   $_16=($288?$287:$285);
   $289=($283)-($_16);
   $290=($288?$285:$287);
   $291=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $292=(+(HEAPF64[(($291)>>3)]));
   $293=($290)-($292);
   $294=($289)+($293);
   $296=$294;
  } else if (((($267|0))|0)==((1)|0)) {
   $276=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $277=(+(HEAPF64[(($276)>>3)]));
   $278=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $279=(+(HEAPF64[(($278)>>3)]));
   $280=($277)-($279);
   $296=$280;
  } else if (((($267|0))|0)==((0)|0)) {
   $269=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $270=(+(HEAPF64[(($269)>>3)]));
   $271=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $272=(+(HEAPF64[(($271)>>3)]));
   $273=($270)-($272);
   $274=(+(Math_abs((+($273)))));
   $296=$274;
  } else {
   $296=0.0;
  }

  $297=($264)-($296);
  $298=($BodyLongPeriodTotal_1)+($297);
  $299=((HEAP32[((272)>>2)])|0);
  $300=(($299+236)|0);
  $301=((HEAP32[(($300)>>2)])|0);
  if (((($301|0))|0)==((0)|0)) {
   $303=(($inClose+($i_2<<3))|0);
   $304=(+(HEAPF64[(($303)>>3)]));
   $305=(($inOpen+($i_2<<3))|0);
   $306=(+(HEAPF64[(($305)>>3)]));
   $307=($304)-($306);
   $308=(+(Math_abs((+($307)))));
   $330=$308;
  } else if (((($301|0))|0)==((2)|0)) {
   $316=(($inHigh+($i_2<<3))|0);
   $317=(+(HEAPF64[(($316)>>3)]));
   $318=(($inClose+($i_2<<3))|0);
   $319=(+(HEAPF64[(($318)>>3)]));
   $320=(($inOpen+($i_2<<3))|0);
   $321=(+(HEAPF64[(($320)>>3)]));
   $322=$319<$321;
   $_17=($322?$321:$319);
   $323=($317)-($_17);
   $324=($322?$319:$321);
   $325=(($inLow+($i_2<<3))|0);
   $326=(+(HEAPF64[(($325)>>3)]));
   $327=($324)-($326);
   $328=($323)+($327);
   $330=$328;
  } else if (((($301|0))|0)==((1)|0)) {
   $310=(($inHigh+($i_2<<3))|0);
   $311=(+(HEAPF64[(($310)>>3)]));
   $312=(($inLow+($i_2<<3))|0);
   $313=(+(HEAPF64[(($312)>>3)]));
   $314=($311)-($313);
   $330=$314;
  } else {
   $330=0.0;
  }

  $331=((HEAP32[((272)>>2)])|0);
  $332=(($331+236)|0);
  $333=((HEAP32[(($332)>>2)])|0);
  if (((($333|0))|0)==((1)|0)) {
   $342=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $343=(+(HEAPF64[(($342)>>3)]));
   $344=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $345=(+(HEAPF64[(($344)>>3)]));
   $346=($343)-($345);
   $362=$346;
  } else if (((($333|0))|0)==((2)|0)) {
   $348=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $349=(+(HEAPF64[(($348)>>3)]));
   $350=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $351=(+(HEAPF64[(($350)>>3)]));
   $352=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $353=(+(HEAPF64[(($352)>>3)]));
   $354=$351<$353;
   $_18=($354?$353:$351);
   $355=($349)-($_18);
   $356=($354?$351:$353);
   $357=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $358=(+(HEAPF64[(($357)>>3)]));
   $359=($356)-($358);
   $360=($355)+($359);
   $362=$360;
  } else if (((($333|0))|0)==((0)|0)) {
   $335=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $336=(+(HEAPF64[(($335)>>3)]));
   $337=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $338=(+(HEAPF64[(($337)>>3)]));
   $339=($336)-($338);
   $340=(+(Math_abs((+($339)))));
   $362=$340;
  } else {
   $362=0.0;
  }

  $363=($330)-($362);
  $364=($BodyDojiPeriodTotal_1)+($363);
  $365=((($i_2)+(1))|0);
  $366=((($BodyLongTrailingIdx_0)+(1))|0);
  $367=((($BodyDojiTrailingIdx_0)+(1))|0);
  $368=($i_2|0)<($endIdx|0);
  if ($368) {
   $BodyLongTrailingIdx_0=$366;$BodyDojiTrailingIdx_0=$367;$outIdx_0=$outIdx_1;$i_2=$365;$BodyLongPeriodTotal_1=$298;$BodyDojiPeriodTotal_1=$364;
  } else {
   break;
  }
 }
 $370=((($smax27)+(1))|0);
 $371=((($370)-($smax28))|0);
 HEAP32[(($outNBElement)>>2)]=$371;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLHIGHWAVE_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+288)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 return (($_)|0);
}


function _TA_CDLHIGHWAVE($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond18=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$BodyPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$smax28=0,$33=0,$smax29=0,$34=0,$35=0;
 var $36=0,$i_024=0,$BodyPeriodTotal_023=.0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0,$46=0,$47=.0,$48=0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$57=.0;
 var $58=0,$_=.0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0,$66=.0,$67=.0,$68=0,$69=0,$smax30=0,$i_1_lcssa=0,$ShadowPeriodTotal_0_lcssa=.0,$70=0,$smax=0,$71=0,$i_121=0,$ShadowPeriodTotal_020=.0;
 var $74=0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$_8=.0,$94=.0;
 var $95=.0,$96=0,$97=.0,$98=.0,$99=.0,$101=.0,$102=.0,$103=0,$104=0,$BodyPeriodTotal_1=.0,$ShadowPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyTrailingIdx_0=0,$ShadowTrailingIdx_0=0,$106=0,$107=.0,$108=0,$109=.0,$110=.0;
 var $111=.0,$112=0,$113=0,$114=.0,$115=0,$116=0,$117=0,$119=.0,$120=.0,$122=0,$123=0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$133=0,$134=.0,$135=0;
 var $_9=.0,$136=.0,$137=.0,$138=0,$139=.0,$140=.0,$141=.0,$143=.0,$144=.0,$145=0,$146=0,$147=0,$148=0,$149=.0,$150=.0,$151=0,$153=0,$154=.0,$155=.0,$156=.0;
 var $157=0,$_10=.0,$158=.0,$159=0,$160=.0,$161=0,$162=0,$163=0,$165=.0,$166=.0,$168=0,$169=0,$171=.0,$172=.0,$174=0,$175=.0,$176=.0,$178=.0,$179=0,$180=.0;
 var $181=.0,$182=.0,$184=.0,$185=.0,$186=0,$187=0,$188=0,$189=0,$190=.0,$191=.0,$192=0,$194=.0,$195=.0,$196=0,$_12=.0,$197=0,$198=.0,$199=.0,$200=0,$201=.0;
 var $202=0,$203=0,$204=0,$206=.0,$207=.0,$210=.0,$211=.0,$213=.0,$214=.0,$216=.0,$_13=.0,$217=.0,$218=.0,$220=.0,$221=.0,$222=0,$223=0,$224=0,$225=0,$226=.0;
 var $227=.0,$228=0,$230=.0,$231=.0,$232=0,$233=0,$234=0,$236=0,$outIdx_1=0,$238=0,$239=0,$240=0,$242=.0,$243=.0,$244=.0,$245=.0,$247=0,$248=.0,$249=0,$250=.0;
 var $251=.0,$253=0,$254=.0,$255=.0,$256=.0,$257=0,$_14=.0,$258=.0,$259=.0,$260=0,$261=.0,$262=.0,$263=.0,$265=.0,$266=0,$267=0,$268=0,$270=0,$271=.0,$272=0;
 var $273=.0,$274=.0,$275=.0,$277=0,$278=.0,$279=0,$280=.0,$281=.0,$283=0,$284=.0,$285=0,$286=.0,$287=0,$288=.0,$289=0,$_15=.0,$290=.0,$291=.0,$292=0,$293=.0;
 var $294=.0,$295=.0,$297=.0,$298=.0,$299=.0,$300=0,$301=0,$302=0,$304=.0,$305=.0,$306=.0,$307=.0,$309=0,$310=.0,$311=0,$312=.0,$313=.0,$315=0,$316=.0,$317=.0;
 var $318=.0,$319=0,$_16=.0,$320=.0,$321=.0,$322=0,$323=.0,$324=.0,$325=.0,$327=.0,$328=0,$329=0,$330=0,$332=0,$333=.0,$334=0,$335=.0,$336=.0,$337=.0,$339=0;
 var $340=.0,$341=0,$342=.0,$343=.0,$345=0,$346=.0,$347=0,$348=.0,$349=0,$350=.0,$351=0,$_17=.0,$352=.0,$353=.0,$354=0,$355=.0,$356=.0,$357=.0,$359=.0,$360=.0;
 var $361=.0,$362=0,$363=0,$364=0,$365=0,$367=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond18=$10|$or_cond5_not;
 if ($or_cond18) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLHIGHWAVE_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+216)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+288)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+212)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $BodyPeriodTotal_023=0.0;$i_024=$20;
  while(1) {


   if (((($27|0))|0)==((2)|0)) {
    $52=(($inHigh+($i_024<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inClose+($i_024<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inOpen+($i_024<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=$55<$57;
    $_=($58?$57:$55);
    $59=($53)-($_);
    $60=($58?$55:$57);
    $61=(($inLow+($i_024<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=($60)-($62);
    $64=($59)+($63);
    $66=$64;
   } else if (((($27|0))|0)==((0)|0)) {
    $39=(($inClose+($i_024<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inOpen+($i_024<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $44=(+(Math_abs((+($43)))));
    $66=$44;
   } else if (((($27|0))|0)==((1)|0)) {
    $46=(($inHigh+($i_024<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inLow+($i_024<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=($47)-($49);
    $66=$50;
   } else {
    $66=0.0;
   }

   $67=($BodyPeriodTotal_023)+($66);
   $68=((($i_024)+(1))|0);
   $69=($68|0)<($_startIdx|0);
   if ($69) {
    $BodyPeriodTotal_023=$67;$i_024=$68;
   } else {
    $BodyPeriodTotal_0_lcssa=$67;
    break;
   }
  }
 } else {
  $BodyPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+284)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=($12|0)>($startIdx|0);
  $smax28=($32?$12:$startIdx);
  $33=($12|0)>($startIdx|0);
  $smax29=($33?$12:$startIdx);
  $34=((($smax29)+(1))|0);
  $35=((($34)-($22))|0);
  $36=($smax28|0)>($35|0);
  $ShadowPeriodTotal_020=0.0;$i_121=$23;
  while(1) {


   if (((($31|0))|0)==((2)|0)) {
    $87=(($inHigh+($i_121<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inClose+($i_121<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inOpen+($i_121<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$90<$92;
    $_8=($93?$92:$90);
    $94=($88)-($_8);
    $95=($93?$90:$92);
    $96=(($inLow+($i_121<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $101=$99;
   } else if (((($31|0))|0)==((1)|0)) {
    $81=(($inHigh+($i_121<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($i_121<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $101=$85;
   } else if (((($31|0))|0)==((0)|0)) {
    $74=(($inClose+($i_121<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($i_121<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $101=$79;
   } else {
    $101=0.0;
   }

   $102=($ShadowPeriodTotal_020)+($101);
   $103=((($i_121)+(1))|0);
   $104=($103|0)<($_startIdx|0);
   if ($104) {
    $ShadowPeriodTotal_020=$102;$i_121=$103;
   } else {
    break;
   }
  }
  $smax30=($36?$smax28:$35);
  $ShadowPeriodTotal_0_lcssa=$102;$i_1_lcssa=$smax30;
 } else {
  $ShadowPeriodTotal_0_lcssa=0.0;$i_1_lcssa=$23;
 }


 $70=($i_1_lcssa|0)>($endIdx|0);
 $smax=($70?$i_1_lcssa:$endIdx);
 $71=((($smax)+(1))|0);
 $ShadowTrailingIdx_0=$23;$BodyTrailingIdx_0=$20;$outIdx_0=0;$i_2=$i_1_lcssa;$ShadowPeriodTotal_1=$ShadowPeriodTotal_0_lcssa;$BodyPeriodTotal_1=$BodyPeriodTotal_0_lcssa;
 while(1) {






  $106=(($inClose+($i_2<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=(($inOpen+($i_2<<3))|0);
  $109=(+(HEAPF64[(($108)>>3)]));
  $110=($107)-($109);
  $111=(+(Math_abs((+($110)))));
  $112=((HEAP32[((272)>>2)])|0);
  $113=(($112+224)|0);
  $114=(+(HEAPF64[(($113)>>3)]));
  $115=(($112+216)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  $117=($116|0)==0;
  do {
   if ($117) {
    $122=(($112+212)|0);
    $123=((HEAP32[(($122)>>2)])|0);
    if (((($123|0))|0)==((0)|0)) {
     $143=$111;
     break;
    } else if (((($123|0))|0)==((1)|0)) {
     $125=(($inHigh+($i_2<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=(($inLow+($i_2<<3))|0);
     $128=(+(HEAPF64[(($127)>>3)]));
     $129=($126)-($128);
     $143=$129;
     break;
    }
    $131=($123|0)==2;
    if (!($131)) {
     $143=0.0;
     break;
    }
    $133=(($inHigh+($i_2<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=$107<$109;
    $_9=($135?$109:$107);
    $136=($134)-($_9);
    $137=($135?$107:$109);
    $138=(($inLow+($i_2<<3))|0);
    $139=(+(HEAPF64[(($138)>>3)]));
    $140=($137)-($139);
    $141=($136)+($140);
    $143=$141;
   } else {
    $119=(+((($116|0))|0));
    $120=($BodyPeriodTotal_1)/($119);
    $143=$120;
   }
  } while(0);

  $144=($114)*($143);
  $145=((HEAP32[((272)>>2)])|0);
  $146=(($145+212)|0);
  $147=((HEAP32[(($146)>>2)])|0);
  $148=($147|0)==2;
  $149=($148?(2.0):(1.0));
  $150=($144)/($149);
  $151=$111<$150;
  do {
   if ($151) {
    $153=(($inHigh+($i_2<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=(+(HEAPF64[(($106)>>3)]));
    $156=(+(HEAPF64[(($108)>>3)]));
    $157=$155<$156;
    $_10=($157?$156:$155);
    $158=($154)-($_10);
    $159=(($145+296)|0);
    $160=(+(HEAPF64[(($159)>>3)]));
    $161=(($145+288)|0);
    $162=((HEAP32[(($161)>>2)])|0);
    $163=($162|0)==0;
    do {
     if ($163) {
      $168=(($145+284)|0);
      $169=((HEAP32[(($168)>>2)])|0);
      if (((($169|0))|0)==((0)|0)) {
       $171=($155)-($156);
       $172=(+(Math_abs((+($171)))));
       $184=$172;
       break;
      } else if (((($169|0))|0)==((2)|0)) {
       $178=($157?$155:$156);
       $179=(($inLow+($i_2<<3))|0);
       $180=(+(HEAPF64[(($179)>>3)]));
       $181=($178)-($180);
       $182=($158)+($181);
       $184=$182;
       break;
      } else if (((($169|0))|0)==((1)|0)) {
       $174=(($inLow+($i_2<<3))|0);
       $175=(+(HEAPF64[(($174)>>3)]));
       $176=($154)-($175);
       $184=$176;
       break;
      } else {
       $184=0.0;
       break;
      }
     } else {
      $165=(+((($162|0))|0));
      $166=($ShadowPeriodTotal_1)/($165);
      $184=$166;
     }
    } while(0);

    $185=($160)*($184);
    $186=((HEAP32[((272)>>2)])|0);
    $187=(($186+284)|0);
    $188=((HEAP32[(($187)>>2)])|0);
    $189=($188|0)==2;
    $190=($189?(2.0):(1.0));
    $191=($185)/($190);
    $192=$158>$191;
    if (!($192)) {
     label = 44;
     break;
    }
    $194=(+(HEAPF64[(($106)>>3)]));
    $195=(+(HEAPF64[(($108)>>3)]));
    $196=$194<$195;
    $_12=($196?$194:$195);
    $197=(($inLow+($i_2<<3))|0);
    $198=(+(HEAPF64[(($197)>>3)]));
    $199=($_12)-($198);
    $200=(($186+296)|0);
    $201=(+(HEAPF64[(($200)>>3)]));
    $202=(($186+288)|0);
    $203=((HEAP32[(($202)>>2)])|0);
    $204=($203|0)==0;
    do {
     if ($204) {
      if (((($188|0))|0)==((2)|0)) {
       $216=(+(HEAPF64[(($153)>>3)]));
       $_13=($196?$195:$194);
       $217=($216)-($_13);
       $218=($199)+($217);
       $220=$218;
       break;
      } else if (((($188|0))|0)==((0)|0)) {
       $210=($194)-($195);
       $211=(+(Math_abs((+($210)))));
       $220=$211;
       break;
      } else if (((($188|0))|0)==((1)|0)) {
       $213=(+(HEAPF64[(($153)>>3)]));
       $214=($213)-($198);
       $220=$214;
       break;
      } else {
       $220=0.0;
       break;
      }
     } else {
      $206=(+((($203|0))|0));
      $207=($ShadowPeriodTotal_1)/($206);
      $220=$207;
     }
    } while(0);

    $221=($201)*($220);
    $222=((HEAP32[((272)>>2)])|0);
    $223=(($222+284)|0);
    $224=((HEAP32[(($223)>>2)])|0);
    $225=($224|0)==2;
    $226=($225?(2.0):(1.0));
    $227=($221)/($226);
    $228=$199>$227;
    if (!($228)) {
     label = 44;
     break;
    }
    $230=(+(HEAPF64[(($106)>>3)]));
    $231=(+(HEAPF64[(($108)>>3)]));
    $232=$230>=$231;
    $233=($232?100:-100);
    $234=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($234)>>2)]=$233;
   } else {
    label = 44;
   }
  } while(0);
  if ((label|0) == 44) {
   label = 0;
   $236=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($236)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $238=((HEAP32[((272)>>2)])|0);
  $239=(($238+212)|0);
  $240=((HEAP32[(($239)>>2)])|0);
  if (((($240|0))|0)==((0)|0)) {
   $242=(+(HEAPF64[(($106)>>3)]));
   $243=(+(HEAPF64[(($108)>>3)]));
   $244=($242)-($243);
   $245=(+(Math_abs((+($244)))));
   $265=$245;
  } else if (((($240|0))|0)==((1)|0)) {
   $247=(($inHigh+($i_2<<3))|0);
   $248=(+(HEAPF64[(($247)>>3)]));
   $249=(($inLow+($i_2<<3))|0);
   $250=(+(HEAPF64[(($249)>>3)]));
   $251=($248)-($250);
   $265=$251;
  } else if (((($240|0))|0)==((2)|0)) {
   $253=(($inHigh+($i_2<<3))|0);
   $254=(+(HEAPF64[(($253)>>3)]));
   $255=(+(HEAPF64[(($106)>>3)]));
   $256=(+(HEAPF64[(($108)>>3)]));
   $257=$255<$256;
   $_14=($257?$256:$255);
   $258=($254)-($_14);
   $259=($257?$255:$256);
   $260=(($inLow+($i_2<<3))|0);
   $261=(+(HEAPF64[(($260)>>3)]));
   $262=($259)-($261);
   $263=($258)+($262);
   $265=$263;
  } else {
   $265=0.0;
  }

  $266=((HEAP32[((272)>>2)])|0);
  $267=(($266+212)|0);
  $268=((HEAP32[(($267)>>2)])|0);
  if (((($268|0))|0)==((0)|0)) {
   $270=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $271=(+(HEAPF64[(($270)>>3)]));
   $272=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $273=(+(HEAPF64[(($272)>>3)]));
   $274=($271)-($273);
   $275=(+(Math_abs((+($274)))));
   $297=$275;
  } else if (((($268|0))|0)==((1)|0)) {
   $277=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $278=(+(HEAPF64[(($277)>>3)]));
   $279=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $280=(+(HEAPF64[(($279)>>3)]));
   $281=($278)-($280);
   $297=$281;
  } else if (((($268|0))|0)==((2)|0)) {
   $283=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $284=(+(HEAPF64[(($283)>>3)]));
   $285=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $286=(+(HEAPF64[(($285)>>3)]));
   $287=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $288=(+(HEAPF64[(($287)>>3)]));
   $289=$286<$288;
   $_15=($289?$288:$286);
   $290=($284)-($_15);
   $291=($289?$286:$288);
   $292=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $293=(+(HEAPF64[(($292)>>3)]));
   $294=($291)-($293);
   $295=($290)+($294);
   $297=$295;
  } else {
   $297=0.0;
  }

  $298=($265)-($297);
  $299=($BodyPeriodTotal_1)+($298);
  $300=((HEAP32[((272)>>2)])|0);
  $301=(($300+284)|0);
  $302=((HEAP32[(($301)>>2)])|0);
  if (((($302|0))|0)==((0)|0)) {
   $304=(+(HEAPF64[(($106)>>3)]));
   $305=(+(HEAPF64[(($108)>>3)]));
   $306=($304)-($305);
   $307=(+(Math_abs((+($306)))));
   $327=$307;
  } else if (((($302|0))|0)==((1)|0)) {
   $309=(($inHigh+($i_2<<3))|0);
   $310=(+(HEAPF64[(($309)>>3)]));
   $311=(($inLow+($i_2<<3))|0);
   $312=(+(HEAPF64[(($311)>>3)]));
   $313=($310)-($312);
   $327=$313;
  } else if (((($302|0))|0)==((2)|0)) {
   $315=(($inHigh+($i_2<<3))|0);
   $316=(+(HEAPF64[(($315)>>3)]));
   $317=(+(HEAPF64[(($106)>>3)]));
   $318=(+(HEAPF64[(($108)>>3)]));
   $319=$317<$318;
   $_16=($319?$318:$317);
   $320=($316)-($_16);
   $321=($319?$317:$318);
   $322=(($inLow+($i_2<<3))|0);
   $323=(+(HEAPF64[(($322)>>3)]));
   $324=($321)-($323);
   $325=($320)+($324);
   $327=$325;
  } else {
   $327=0.0;
  }

  $328=((HEAP32[((272)>>2)])|0);
  $329=(($328+284)|0);
  $330=((HEAP32[(($329)>>2)])|0);
  if (((($330|0))|0)==((0)|0)) {
   $332=(($inClose+($ShadowTrailingIdx_0<<3))|0);
   $333=(+(HEAPF64[(($332)>>3)]));
   $334=(($inOpen+($ShadowTrailingIdx_0<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=($333)-($335);
   $337=(+(Math_abs((+($336)))));
   $359=$337;
  } else if (((($330|0))|0)==((1)|0)) {
   $339=(($inHigh+($ShadowTrailingIdx_0<<3))|0);
   $340=(+(HEAPF64[(($339)>>3)]));
   $341=(($inLow+($ShadowTrailingIdx_0<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=($340)-($342);
   $359=$343;
  } else if (((($330|0))|0)==((2)|0)) {
   $345=(($inHigh+($ShadowTrailingIdx_0<<3))|0);
   $346=(+(HEAPF64[(($345)>>3)]));
   $347=(($inClose+($ShadowTrailingIdx_0<<3))|0);
   $348=(+(HEAPF64[(($347)>>3)]));
   $349=(($inOpen+($ShadowTrailingIdx_0<<3))|0);
   $350=(+(HEAPF64[(($349)>>3)]));
   $351=$348<$350;
   $_17=($351?$350:$348);
   $352=($346)-($_17);
   $353=($351?$348:$350);
   $354=(($inLow+($ShadowTrailingIdx_0<<3))|0);
   $355=(+(HEAPF64[(($354)>>3)]));
   $356=($353)-($355);
   $357=($352)+($356);
   $359=$357;
  } else {
   $359=0.0;
  }

  $360=($327)-($359);
  $361=($ShadowPeriodTotal_1)+($360);
  $362=((($i_2)+(1))|0);
  $363=((($BodyTrailingIdx_0)+(1))|0);
  $364=((($ShadowTrailingIdx_0)+(1))|0);
  $365=($i_2|0)<($endIdx|0);
  if ($365) {
   $ShadowTrailingIdx_0=$364;$BodyTrailingIdx_0=$363;$outIdx_0=$outIdx_1;$i_2=$362;$ShadowPeriodTotal_1=$361;$BodyPeriodTotal_1=$299;
  } else {
   break;
  }
 }
 $367=((($71)-($i_1_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$367;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLHIKKAKE($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond8=0,$12=0,$_startIdx=0,$13=0,$16=0,$17=0,$smax=0;
 var $patternResult_013=0,$patternIdx_012=0,$i_09=0,$19=0,$20=0,$21=.0,$22=0,$23=0,$24=.0,$25=0,$27=0,$28=.0,$29=0,$30=.0,$31=0,$33=0,$34=.0,$35=0,$37=0,$38=.0;
 var $39=0,$41=.0,$42=.0,$43=0,$45=0,$46=.0,$47=.0,$48=0,$50=.0,$51=.0,$52=0,$53=0,$55=0,$56=0,$58=0,$60=0,$61=.0,$62=0,$63=0,$64=.0;
 var $65=0,$67=0,$69=0,$70=.0,$71=0,$72=0,$73=.0,$74=0,$patternIdx_1=0,$patternResult_1=0,$76=0,$77=0,$i_1=0,$outIdx_0=0,$patternIdx_2=0,$patternResult_2=0,$79=0,$80=0,$81=.0,$82=0;
 var $83=0,$84=.0,$85=0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$93=0,$94=.0,$95=0,$97=0,$98=.0,$99=0,$101=.0,$102=.0,$103=0,$105=0,$106=.0,$107=.0;
 var $108=0,$110=.0,$111=.0,$112=0,$113=0,$114=0,$116=0,$117=0,$119=0,$121=0,$122=.0,$123=0,$124=0,$125=.0,$126=0,$128=0,$130=0,$131=.0,$132=0,$133=0;
 var $134=.0,$135=0,$137=0,$138=0,$139=0,$141=0,$patternIdx_3=0,$patternResult_3=0,$outIdx_1=0,$143=0,$144=0,$146=0,$147=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond8=$10|$or_cond5_not;
 if ($or_cond8) {
  $_0=2;

  return (($_0)|0);
 }
 $12=($startIdx|0)<5;
 $_startIdx=($12?5:$startIdx);
 $13=($_startIdx|0)>($endIdx|0);
 if ($13) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $16=((($_startIdx)-(3))|0);
 $i_09=$16;$patternIdx_012=0;$patternResult_013=0;
 while(1) {



  $19=((($i_09)-(1))|0);
  $20=(($inHigh+($19<<3))|0);
  $21=(+(HEAPF64[(($20)>>3)]));
  $22=((($i_09)-(2))|0);
  $23=(($inHigh+($22<<3))|0);
  $24=(+(HEAPF64[(($23)>>3)]));
  $25=$21<$24;
  do {
   if ($25) {
    $27=(($inLow+($19<<3))|0);
    $28=(+(HEAPF64[(($27)>>3)]));
    $29=(($inLow+($22<<3))|0);
    $30=(+(HEAPF64[(($29)>>3)]));
    $31=$28>$30;
    if (!($31)) {
     label = 15;
     break;
    }
    $33=(($inHigh+($i_09<<3))|0);
    $34=(+(HEAPF64[(($33)>>3)]));
    $35=$34<$21;
    if ($35) {
     $37=(($inLow+($i_09<<3))|0);
     $38=(+(HEAPF64[(($37)>>3)]));
     $39=$38<$28;
     if (!($39)) {
      label = 12;
     }
    } else {
     label = 12;
    }
    if ((label|0) == 12) {
     label = 0;
     $41=(+(HEAPF64[(($33)>>3)]));
     $42=(+(HEAPF64[(($20)>>3)]));
     $43=$41>$42;
     if (!($43)) {
      label = 15;
      break;
     }
     $45=(($inLow+($i_09<<3))|0);
     $46=(+(HEAPF64[(($45)>>3)]));
     $47=(+(HEAPF64[(($27)>>3)]));
     $48=$46>$47;
     if (!($48)) {
      label = 15;
      break;
     }
    }
    $50=(+(HEAPF64[(($33)>>3)]));
    $51=(+(HEAPF64[(($20)>>3)]));
    $52=$50<$51;
    $53=($52?100:-100);
    $patternResult_1=$53;$patternIdx_1=$i_09;
   } else {
    label = 15;
   }
  } while(0);
  do {
   if ((label|0) == 15) {
    label = 0;
    $55=((($patternIdx_012)+(3))|0);
    $56=($i_09|0)>($55|0);
    if ($56) {
     $patternResult_1=$patternResult_013;$patternIdx_1=$patternIdx_012;
     break;
    }
    $58=($patternResult_013|0)>0;
    if ($58) {
     $60=(($inClose+($i_09<<3))|0);
     $61=(+(HEAPF64[(($60)>>3)]));
     $62=((($patternIdx_012)-(1))|0);
     $63=(($inHigh+($62<<3))|0);
     $64=(+(HEAPF64[(($63)>>3)]));
     $65=$61>$64;
     if (!($65)) {
      $patternResult_1=$patternResult_013;$patternIdx_1=$patternIdx_012;
      break;
     }
    } else {
     $67=($patternResult_013|0)<0;
     if (!($67)) {
      $patternResult_1=0;$patternIdx_1=$patternIdx_012;
      break;
     }
     $69=(($inClose+($i_09<<3))|0);
     $70=(+(HEAPF64[(($69)>>3)]));
     $71=((($patternIdx_012)-(1))|0);
     $72=(($inLow+($71<<3))|0);
     $73=(+(HEAPF64[(($72)>>3)]));
     $74=$70<$73;
     if (!($74)) {
      $patternResult_1=$patternResult_013;$patternIdx_1=$patternIdx_012;
      break;
     }
    }
    $patternResult_1=$patternResult_013;$patternIdx_1=0;
   }
  } while(0);


  $76=((($i_09)+(1))|0);
  $77=($76|0)<($_startIdx|0);
  if ($77) {
   $i_09=$76;$patternIdx_012=$patternIdx_1;$patternResult_013=$patternResult_1;
  } else {
   break;
  }
 }
 $17=($startIdx|0)>5;
 $smax=($17?$startIdx:5);
 $patternResult_2=$patternResult_1;$patternIdx_2=$patternIdx_1;$outIdx_0=0;$i_1=$_startIdx;
 while(1) {




  $79=((($i_1)-(1))|0);
  $80=(($inHigh+($79<<3))|0);
  $81=(+(HEAPF64[(($80)>>3)]));
  $82=((($i_1)-(2))|0);
  $83=(($inHigh+($82<<3))|0);
  $84=(+(HEAPF64[(($83)>>3)]));
  $85=$81<$84;
  do {
   if ($85) {
    $87=(($inLow+($79<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inLow+($82<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=$88>$90;
    if (!($91)) {
     label = 29;
     break;
    }
    $93=(($inHigh+($i_1<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=$94<$81;
    if ($95) {
     $97=(($inLow+($i_1<<3))|0);
     $98=(+(HEAPF64[(($97)>>3)]));
     $99=$98<$88;
     if (!($99)) {
      label = 26;
     }
    } else {
     label = 26;
    }
    if ((label|0) == 26) {
     label = 0;
     $101=(+(HEAPF64[(($93)>>3)]));
     $102=(+(HEAPF64[(($80)>>3)]));
     $103=$101>$102;
     if (!($103)) {
      label = 29;
      break;
     }
     $105=(($inLow+($i_1<<3))|0);
     $106=(+(HEAPF64[(($105)>>3)]));
     $107=(+(HEAPF64[(($87)>>3)]));
     $108=$106>$107;
     if (!($108)) {
      label = 29;
      break;
     }
    }
    $110=(+(HEAPF64[(($93)>>3)]));
    $111=(+(HEAPF64[(($80)>>3)]));
    $112=$110<$111;
    $113=($112?100:-100);
    $114=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($114)>>2)]=$113;
    $patternResult_3=$113;$patternIdx_3=$i_1;
   } else {
    label = 29;
   }
  } while(0);
  L46: do {
   if ((label|0) == 29) {
    label = 0;
    $116=((($patternIdx_2)+(3))|0);
    $117=($i_1|0)>($116|0);
    do {
     if (!($117)) {
      $119=($patternResult_2|0)>0;
      if ($119) {
       $121=(($inClose+($i_1<<3))|0);
       $122=(+(HEAPF64[(($121)>>3)]));
       $123=((($patternIdx_2)-(1))|0);
       $124=(($inHigh+($123<<3))|0);
       $125=(+(HEAPF64[(($124)>>3)]));
       $126=$122>$125;
       if (!($126)) {
        label = 32;
       }
      } else {
       label = 32;
      }
      if ((label|0) == 32) {
       label = 0;
       $128=($patternResult_2|0)<0;
       if (!($128)) {
        break;
       }
       $130=(($inClose+($i_1<<3))|0);
       $131=(+(HEAPF64[(($130)>>3)]));
       $132=((($patternIdx_2)-(1))|0);
       $133=(($inLow+($132<<3))|0);
       $134=(+(HEAPF64[(($133)>>3)]));
       $135=$131<$134;
       if (!($135)) {
        break;
       }
      }
      $137=($119?100:-100);
      $138=((($137)+($patternResult_2))|0);
      $139=(($outInteger+($outIdx_0<<2))|0);
      HEAP32[(($139)>>2)]=$138;
      $patternResult_3=$patternResult_2;$patternIdx_3=0;
      break L46;
     }
    } while(0);
    $141=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($141)>>2)]=0;
    $patternResult_3=$patternResult_2;$patternIdx_3=$patternIdx_2;
   }
  } while(0);


  $outIdx_1=((($outIdx_0)+(1))|0);
  $143=((($i_1)+(1))|0);
  $144=($i_1|0)<($endIdx|0);
  if ($144) {
   $patternResult_2=$patternResult_3;$patternIdx_2=$patternIdx_3;$outIdx_0=$outIdx_1;$i_1=$143;
  } else {
   break;
  }
 }
 $146=((($endIdx)+(1))|0);
 $147=((($146)-($smax))|0);
 HEAP32[(($outNBElement)>>2)]=$147;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLHIKKAKEMOD_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$phitmp=0,$_phitmp=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+360)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=($3|0)<1;
 $phitmp=((($3)+(5))|0);
 $_phitmp=($4?6:$phitmp);
 return (($_phitmp)|0);
}


function _TA_CDLHIKKAKEMOD($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond16=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$NearPeriodTotal_0_lcssa=.0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0;
 var $38=0,$smax33=0,$39=0,$smax34=0,$40=0,$41=0,$smax35=0,$i_029=0,$NearPeriodTotal_028=.0,$44=0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0,$52=0,$53=0,$54=.0,$55=0;
 var $56=.0,$57=.0,$59=0,$60=0,$61=.0,$62=0,$63=.0,$64=0,$65=.0,$66=0,$_=.0,$67=.0,$68=.0,$69=0,$70=.0,$71=.0,$72=.0,$74=.0,$75=.0,$76=0;
 var $77=0,$78=0,$79=0,$smax=0,$80=0,$smax30=0,$81=0,$smax31=0,$patternResult_027=0,$patternIdx_026=0,$NearTrailingIdx_025=0,$i_122=0,$NearPeriodTotal_118=.0,$83=0,$84=0,$85=.0,$86=0,$87=0,$88=.0,$89=0;
 var $91=0,$92=.0,$93=0,$94=.0,$95=0,$97=0,$98=0,$99=.0,$100=0,$102=0,$103=.0,$104=0,$106=0,$107=.0,$108=0,$110=0,$111=.0,$112=0,$114=0,$115=.0;
 var $116=.0,$117=0,$118=0,$120=.0,$121=.0,$123=0,$125=0,$126=.0,$127=.0,$128=.0,$130=.0,$132=0,$133=.0,$134=0,$_8=.0,$135=.0,$136=.0,$137=.0,$138=.0,$140=.0;
 var $141=.0,$142=0,$143=0,$144=.0,$145=.0,$146=.0,$147=0,$149=.0,$150=.0,$151=0,$153=0,$154=.0,$155=.0,$156=0,$158=0,$159=.0,$160=.0,$161=.0,$162=0,$163=0;
 var $165=.0,$166=.0,$168=0,$170=0,$171=.0,$172=.0,$173=.0,$175=.0,$176=.0,$178=0,$179=.0,$180=0,$_9=.0,$181=.0,$182=.0,$183=.0,$184=.0,$185=.0,$187=.0,$188=.0;
 var $189=0,$190=0,$191=.0,$192=.0,$193=.0,$194=0,$196=.0,$197=.0,$198=0,$199=0,$201=0,$202=0,$204=0,$206=0,$207=.0,$208=0,$209=0,$210=.0,$211=0,$213=0;
 var $215=0,$216=.0,$217=0,$218=0,$219=.0,$220=0,$patternIdx_1=0,$patternResult_1=0,$222=0,$223=.0,$224=0,$225=.0,$226=.0,$227=.0,$228=0,$229=0,$230=.0,$231=0,$232=.0,$233=.0;
 var $234=.0,$235=.0,$236=0,$237=.0,$238=.0,$239=0,$240=0,$241=.0,$242=0,$243=.0,$244=.0,$245=.0,$246=0,$247=.0,$248=0,$249=.0,$250=0,$_10=.0,$251=.0,$252=.0;
 var $253=0,$254=.0,$255=.0,$256=.0,$257=0,$258=0,$259=.0,$260=0,$261=.0,$262=0,$263=.0,$264=0,$_11=.0,$265=.0,$266=.0,$267=0,$268=.0,$269=.0,$270=.0,$272=.0;
 var $273=.0,$274=.0,$275=.0,$276=0,$277=0,$278=0,$NearPeriodTotal_2=.0,$i_2=0,$outIdx_0=0,$NearTrailingIdx_1=0,$patternIdx_2=0,$patternResult_2=0,$280=0,$281=0,$282=.0,$283=0,$284=0,$285=.0,$286=0,$288=0;
 var $289=.0,$290=0,$291=.0,$292=0,$294=0,$295=0,$296=.0,$297=0,$299=0,$300=.0,$301=0,$303=0,$304=.0,$305=0,$307=0,$308=.0,$309=0,$311=0,$312=.0,$313=0;
 var $314=0,$315=.0,$316=0,$317=0,$318=0,$320=.0,$321=.0,$323=0,$324=0,$326=0,$327=.0,$328=.0,$329=.0,$331=.0,$333=0,$334=.0,$335=0,$_12=.0,$336=.0,$337=.0;
 var $338=.0,$339=.0,$341=.0,$342=.0,$343=0,$344=0,$345=0,$346=0,$347=.0,$348=.0,$349=.0,$350=0,$352=.0,$353=.0,$354=0,$356=0,$357=.0,$358=.0,$359=0,$361=0;
 var $362=.0,$363=.0,$364=0,$365=0,$366=.0,$367=0,$368=0,$369=0,$371=.0,$372=.0,$374=0,$375=0,$377=0,$378=.0,$379=.0,$380=.0,$382=.0,$383=.0,$385=0,$386=.0;
 var $387=0,$_13=.0,$388=.0,$389=.0,$390=.0,$391=.0,$392=.0,$394=.0,$395=.0,$396=0,$397=0,$398=0,$399=0,$400=.0,$401=.0,$402=.0,$403=0,$405=.0,$406=.0,$407=0;
 var $408=0,$409=0,$411=0,$412=0,$414=0,$416=0,$417=.0,$418=0,$419=0,$420=.0,$421=0,$423=0,$425=0,$426=.0,$427=0,$428=0,$429=.0,$430=0,$432=0,$433=0;
 var $434=0,$436=0,$patternIdx_3=0,$patternResult_3=0,$outIdx_1=0,$438=0,$439=0,$440=0,$442=0,$443=.0,$444=0,$445=.0,$446=.0,$447=.0,$449=.0,$450=0,$451=.0,$452=.0,$454=.0,$455=0;
 var $456=.0,$457=0,$458=.0,$459=0,$_14=.0,$460=.0,$461=.0,$462=0,$463=.0,$464=.0,$465=.0,$467=.0,$468=0,$469=0,$470=0,$472=0,$473=0,$474=.0,$475=0,$476=.0;
 var $477=.0,$478=.0,$480=0,$481=0,$482=.0,$483=0,$484=.0,$485=.0,$487=0,$488=0,$489=.0,$490=0,$491=.0,$492=0,$493=.0,$494=0,$_15=.0,$495=.0,$496=.0,$497=0;
 var $498=.0,$499=.0,$500=.0,$502=.0,$503=.0,$504=.0,$505=0,$506=0,$507=0,$509=0,$510=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond16=$10|$or_cond5_not;
 if ($or_cond16) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLHIKKAKEMOD_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((($_startIdx)-(3))|0);
 $18=((HEAP32[((272)>>2)])|0);
 $19=(($18+360)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((($17)-($20))|0);
 $22=($20|0)>0;
 if ($22) {
  $23=((HEAP32[((272)>>2)])|0);
  $24=(($23+356)|0);
  $25=((HEAP32[(($24)>>2)])|0);
  $NearPeriodTotal_028=0.0;$i_029=$21;
  while(1) {


   if (((($25|0))|0)==((2)|0)) {
    $59=((($i_029)-(2))|0);
    $60=(($inHigh+($59<<3))|0);
    $61=(+(HEAPF64[(($60)>>3)]));
    $62=(($inClose+($59<<3))|0);
    $63=(+(HEAPF64[(($62)>>3)]));
    $64=(($inOpen+($59<<3))|0);
    $65=(+(HEAPF64[(($64)>>3)]));
    $66=$63<$65;
    $_=($66?$65:$63);
    $67=($61)-($_);
    $68=($66?$63:$65);
    $69=(($inLow+($59<<3))|0);
    $70=(+(HEAPF64[(($69)>>3)]));
    $71=($68)-($70);
    $72=($67)+($71);
    $74=$72;
   } else if (((($25|0))|0)==((1)|0)) {
    $52=((($i_029)-(2))|0);
    $53=(($inHigh+($52<<3))|0);
    $54=(+(HEAPF64[(($53)>>3)]));
    $55=(($inLow+($52<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=($54)-($56);
    $74=$57;
   } else if (((($25|0))|0)==((0)|0)) {
    $44=((($i_029)-(2))|0);
    $45=(($inClose+($44<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=(($inOpen+($44<<3))|0);
    $48=(+(HEAPF64[(($47)>>3)]));
    $49=($46)-($48);
    $50=(+(Math_abs((+($49)))));
    $74=$50;
   } else {
    $74=0.0;
   }

   $75=($NearPeriodTotal_028)+($74);
   $76=((($i_029)+(1))|0);
   $77=($76|0)<($17|0);
   if ($77) {
    $NearPeriodTotal_028=$75;$i_029=$76;
   } else {
    $NearPeriodTotal_0_lcssa=$75;
    break;
   }
  }
 } else {
  $NearPeriodTotal_0_lcssa=0.0;
 }

 $26=((HEAP32[((272)>>2)])|0);
 $27=(($26+368)|0);
 $28=(($26+360)|0);
 $29=(($26+356)|0);
 $30=(($26+356)|0);
 $31=(($26+368)|0);
 $32=(($26+360)|0);
 $33=(($26+356)|0);
 $34=((HEAP32[((272)>>2)])|0);
 $35=(($34+356)|0);
 $36=(($34+356)|0);
 $37=((HEAP32[(($36)>>2)])|0);
 $38=($12|0)>($startIdx|0);
 $smax33=($38?$12:$startIdx);
 $39=($12|0)>($startIdx|0);
 $smax34=($39?$12:$startIdx);
 $40=((($smax34)-(2))|0);
 $41=($smax33|0)>($40|0);
 $smax35=($41?$smax33:$40);
 $NearPeriodTotal_118=$NearPeriodTotal_0_lcssa;$i_122=$17;$NearTrailingIdx_025=$21;$patternIdx_026=0;$patternResult_027=0;
 while(1) {





  $83=((($i_122)-(2))|0);
  $84=(($inHigh+($83<<3))|0);
  $85=(+(HEAPF64[(($84)>>3)]));
  $86=((($i_122)-(3))|0);
  $87=(($inHigh+($86<<3))|0);
  $88=(+(HEAPF64[(($87)>>3)]));
  $89=$85<$88;
  do {
   if ($89) {
    $91=(($inLow+($83<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=(($inLow+($86<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=$92>$94;
    if (!($95)) {
     label = 38;
     break;
    }
    $97=((($i_122)-(1))|0);
    $98=(($inHigh+($97<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=$99<$85;
    if (!($100)) {
     label = 38;
     break;
    }
    $102=(($inLow+($97<<3))|0);
    $103=(+(HEAPF64[(($102)>>3)]));
    $104=$103>$92;
    if (!($104)) {
     label = 38;
     break;
    }
    $106=(($inHigh+($i_122<<3))|0);
    $107=(+(HEAPF64[(($106)>>3)]));
    $108=$107<$99;
    do {
     if ($108) {
      $110=(($inLow+($i_122<<3))|0);
      $111=(+(HEAPF64[(($110)>>3)]));
      $112=$111<$103;
      if (!($112)) {
       label = 28;
       break;
      }
      $114=(($inClose+($83<<3))|0);
      $115=(+(HEAPF64[(($114)>>3)]));
      $116=(+(HEAPF64[(($27)>>3)]));
      $117=((HEAP32[(($28)>>2)])|0);
      $118=($117|0)==0;
      do {
       if ($118) {
        $123=((HEAP32[(($29)>>2)])|0);
        if (((($123|0))|0)==((0)|0)) {
         $125=(($inOpen+($83<<3))|0);
         $126=(+(HEAPF64[(($125)>>3)]));
         $127=($115)-($126);
         $128=(+(Math_abs((+($127)))));
         $140=$128;
         break;
        } else if (((($123|0))|0)==((2)|0)) {
         $132=(($inOpen+($83<<3))|0);
         $133=(+(HEAPF64[(($132)>>3)]));
         $134=$115<$133;
         $_8=($134?$133:$115);
         $135=($85)-($_8);
         $136=($134?$115:$133);
         $137=($136)-($92);
         $138=($135)+($137);
         $140=$138;
         break;
        } else if (((($123|0))|0)==((1)|0)) {
         $130=($85)-($92);
         $140=$130;
         break;
        } else {
         $140=0.0;
         break;
        }
       } else {
        $120=(+((($117|0))|0));
        $121=($NearPeriodTotal_118)/($120);
        $140=$121;
       }
      } while(0);

      $141=($116)*($140);
      $142=((HEAP32[(($30)>>2)])|0);
      $143=($142|0)==2;
      $144=($143?(2.0):(1.0));
      $145=($141)/($144);
      $146=($92)+($145);
      $147=$115>$146;
      if ($147) {
       label = 28;
      }
     } else {
      label = 28;
     }
    } while(0);
    if ((label|0) == 28) {
     label = 0;
     $149=(+(HEAPF64[(($106)>>3)]));
     $150=(+(HEAPF64[(($98)>>3)]));
     $151=$149>$150;
     if (!($151)) {
      label = 38;
      break;
     }
     $153=(($inLow+($i_122<<3))|0);
     $154=(+(HEAPF64[(($153)>>3)]));
     $155=(+(HEAPF64[(($102)>>3)]));
     $156=$154>$155;
     if (!($156)) {
      label = 38;
      break;
     }
     $158=(($inClose+($83<<3))|0);
     $159=(+(HEAPF64[(($158)>>3)]));
     $160=(+(HEAPF64[(($84)>>3)]));
     $161=(+(HEAPF64[(($31)>>3)]));
     $162=((HEAP32[(($32)>>2)])|0);
     $163=($162|0)==0;
     do {
      if ($163) {
       $168=((HEAP32[(($33)>>2)])|0);
       if (((($168|0))|0)==((1)|0)) {
        $175=(+(HEAPF64[(($91)>>3)]));
        $176=($160)-($175);
        $187=$176;
        break;
       } else if (((($168|0))|0)==((0)|0)) {
        $170=(($inOpen+($83<<3))|0);
        $171=(+(HEAPF64[(($170)>>3)]));
        $172=($159)-($171);
        $173=(+(Math_abs((+($172)))));
        $187=$173;
        break;
       } else if (((($168|0))|0)==((2)|0)) {
        $178=(($inOpen+($83<<3))|0);
        $179=(+(HEAPF64[(($178)>>3)]));
        $180=$159<$179;
        $_9=($180?$179:$159);
        $181=($160)-($_9);
        $182=($180?$159:$179);
        $183=(+(HEAPF64[(($91)>>3)]));
        $184=($182)-($183);
        $185=($181)+($184);
        $187=$185;
        break;
       } else {
        $187=0.0;
        break;
       }
      } else {
       $165=(+((($162|0))|0));
       $166=($NearPeriodTotal_118)/($165);
       $187=$166;
      }
     } while(0);

     $188=($161)*($187);
     $189=((HEAP32[(($35)>>2)])|0);
     $190=($189|0)==2;
     $191=($190?(2.0):(1.0));
     $192=($188)/($191);
     $193=($160)-($192);
     $194=$159<$193;
     if ($194) {
      label = 38;
      break;
     }
    }
    $196=(+(HEAPF64[(($106)>>3)]));
    $197=(+(HEAPF64[(($98)>>3)]));
    $198=$196<$197;
    $199=($198?100:-100);
    $patternResult_1=$199;$patternIdx_1=$i_122;
   } else {
    label = 38;
   }
  } while(0);
  do {
   if ((label|0) == 38) {
    label = 0;
    $201=((($patternIdx_026)+(3))|0);
    $202=($i_122|0)>($201|0);
    if ($202) {
     $patternResult_1=$patternResult_027;$patternIdx_1=$patternIdx_026;
     break;
    }
    $204=($patternResult_027|0)>0;
    if ($204) {
     $206=(($inClose+($i_122<<3))|0);
     $207=(+(HEAPF64[(($206)>>3)]));
     $208=((($patternIdx_026)-(1))|0);
     $209=(($inHigh+($208<<3))|0);
     $210=(+(HEAPF64[(($209)>>3)]));
     $211=$207>$210;
     if (!($211)) {
      $patternResult_1=$patternResult_027;$patternIdx_1=$patternIdx_026;
      break;
     }
    } else {
     $213=($patternResult_027|0)<0;
     if (!($213)) {
      $patternResult_1=0;$patternIdx_1=$patternIdx_026;
      break;
     }
     $215=(($inClose+($i_122<<3))|0);
     $216=(+(HEAPF64[(($215)>>3)]));
     $217=((($patternIdx_026)-(1))|0);
     $218=(($inLow+($217<<3))|0);
     $219=(+(HEAPF64[(($218)>>3)]));
     $220=$216<$219;
     if (!($220)) {
      $patternResult_1=$patternResult_027;$patternIdx_1=$patternIdx_026;
      break;
     }
    }
    $patternResult_1=$patternResult_027;$patternIdx_1=0;
   }
  } while(0);


  if (((($37|0))|0)==((2)|0)) {
   $245=(+(HEAPF64[(($84)>>3)]));
   $246=(($inClose+($83<<3))|0);
   $247=(+(HEAPF64[(($246)>>3)]));
   $248=(($inOpen+($83<<3))|0);
   $249=(+(HEAPF64[(($248)>>3)]));
   $250=$247<$249;
   $_10=($250?$249:$247);
   $251=($245)-($_10);
   $252=($250?$247:$249);
   $253=(($inLow+($83<<3))|0);
   $254=(+(HEAPF64[(($253)>>3)]));
   $255=($252)-($254);
   $256=($251)+($255);
   $257=((($NearTrailingIdx_025)-(2))|0);
   $258=(($inHigh+($257<<3))|0);
   $259=(+(HEAPF64[(($258)>>3)]));
   $260=(($inClose+($257<<3))|0);
   $261=(+(HEAPF64[(($260)>>3)]));
   $262=(($inOpen+($257<<3))|0);
   $263=(+(HEAPF64[(($262)>>3)]));
   $264=$261<$263;
   $_11=($264?$263:$261);
   $265=($259)-($_11);
   $266=($264?$261:$263);
   $267=(($inLow+($257<<3))|0);
   $268=(+(HEAPF64[(($267)>>3)]));
   $269=($266)-($268);
   $270=($265)+($269);
   $273=$270;$272=$256;
  } else if (((($37|0))|0)==((0)|0)) {
   $222=(($inClose+($83<<3))|0);
   $223=(+(HEAPF64[(($222)>>3)]));
   $224=(($inOpen+($83<<3))|0);
   $225=(+(HEAPF64[(($224)>>3)]));
   $226=($223)-($225);
   $227=(+(Math_abs((+($226)))));
   $228=((($NearTrailingIdx_025)-(2))|0);
   $229=(($inClose+($228<<3))|0);
   $230=(+(HEAPF64[(($229)>>3)]));
   $231=(($inOpen+($228<<3))|0);
   $232=(+(HEAPF64[(($231)>>3)]));
   $233=($230)-($232);
   $234=(+(Math_abs((+($233)))));
   $273=$234;$272=$227;
  } else if (((($37|0))|0)==((1)|0)) {
   $235=(+(HEAPF64[(($84)>>3)]));
   $236=(($inLow+($83<<3))|0);
   $237=(+(HEAPF64[(($236)>>3)]));
   $238=($235)-($237);
   $239=((($NearTrailingIdx_025)-(2))|0);
   $240=(($inHigh+($239<<3))|0);
   $241=(+(HEAPF64[(($240)>>3)]));
   $242=(($inLow+($239<<3))|0);
   $243=(+(HEAPF64[(($242)>>3)]));
   $244=($241)-($243);
   $273=$244;$272=$238;
  } else {
   $273=0.0;$272=0.0;
  }


  $274=($272)-($273);
  $275=($NearPeriodTotal_118)+($274);
  $276=((($NearTrailingIdx_025)+(1))|0);
  $277=((($i_122)+(1))|0);
  $278=($277|0)<($_startIdx|0);
  if ($278) {
   $NearPeriodTotal_118=$275;$i_122=$277;$NearTrailingIdx_025=$276;$patternIdx_026=$patternIdx_1;$patternResult_027=$patternResult_1;
  } else {
   break;
  }
 }
 $78=((($smax35)-($20))|0);
 $79=($12|0)>($endIdx|0);
 $smax=($79?$12:$endIdx);
 $80=($smax|0)>($startIdx|0);
 $smax30=($80?$smax:$startIdx);
 $81=($12|0)>($startIdx|0);
 $smax31=($81?$12:$startIdx);
 $patternResult_2=$patternResult_1;$patternIdx_2=$patternIdx_1;$NearTrailingIdx_1=$78;$outIdx_0=0;$i_2=$_startIdx;$NearPeriodTotal_2=$275;
 while(1) {






  $280=((($i_2)-(2))|0);
  $281=(($inHigh+($280<<3))|0);
  $282=(+(HEAPF64[(($281)>>3)]));
  $283=((($i_2)-(3))|0);
  $284=(($inHigh+($283<<3))|0);
  $285=(+(HEAPF64[(($284)>>3)]));
  $286=$282<$285;
  do {
   if ($286) {
    $288=(($inLow+($280<<3))|0);
    $289=(+(HEAPF64[(($288)>>3)]));
    $290=(($inLow+($283<<3))|0);
    $291=(+(HEAPF64[(($290)>>3)]));
    $292=$289>$291;
    if (!($292)) {
     label = 72;
     break;
    }
    $294=((($i_2)-(1))|0);
    $295=(($inHigh+($294<<3))|0);
    $296=(+(HEAPF64[(($295)>>3)]));
    $297=$296<$282;
    if (!($297)) {
     label = 72;
     break;
    }
    $299=(($inLow+($294<<3))|0);
    $300=(+(HEAPF64[(($299)>>3)]));
    $301=$300>$289;
    if (!($301)) {
     label = 72;
     break;
    }
    $303=(($inHigh+($i_2<<3))|0);
    $304=(+(HEAPF64[(($303)>>3)]));
    $305=$304<$296;
    do {
     if ($305) {
      $307=(($inLow+($i_2<<3))|0);
      $308=(+(HEAPF64[(($307)>>3)]));
      $309=$308<$300;
      if (!($309)) {
       label = 62;
       break;
      }
      $311=(($inClose+($280<<3))|0);
      $312=(+(HEAPF64[(($311)>>3)]));
      $313=((HEAP32[((272)>>2)])|0);
      $314=(($313+368)|0);
      $315=(+(HEAPF64[(($314)>>3)]));
      $316=(($313+360)|0);
      $317=((HEAP32[(($316)>>2)])|0);
      $318=($317|0)==0;
      do {
       if ($318) {
        $323=(($313+356)|0);
        $324=((HEAP32[(($323)>>2)])|0);
        if (((($324|0))|0)==((0)|0)) {
         $326=(($inOpen+($280<<3))|0);
         $327=(+(HEAPF64[(($326)>>3)]));
         $328=($312)-($327);
         $329=(+(Math_abs((+($328)))));
         $341=$329;
         break;
        } else if (((($324|0))|0)==((1)|0)) {
         $331=($282)-($289);
         $341=$331;
         break;
        } else if (((($324|0))|0)==((2)|0)) {
         $333=(($inOpen+($280<<3))|0);
         $334=(+(HEAPF64[(($333)>>3)]));
         $335=$312<$334;
         $_12=($335?$334:$312);
         $336=($282)-($_12);
         $337=($335?$312:$334);
         $338=($337)-($289);
         $339=($336)+($338);
         $341=$339;
         break;
        } else {
         $341=0.0;
         break;
        }
       } else {
        $320=(+((($317|0))|0));
        $321=($NearPeriodTotal_2)/($320);
        $341=$321;
       }
      } while(0);

      $342=($315)*($341);
      $343=((HEAP32[((272)>>2)])|0);
      $344=(($343+356)|0);
      $345=((HEAP32[(($344)>>2)])|0);
      $346=($345|0)==2;
      $347=($346?(2.0):(1.0));
      $348=($342)/($347);
      $349=($289)+($348);
      $350=$312>$349;
      if ($350) {
       label = 62;
      }
     } else {
      label = 62;
     }
    } while(0);
    if ((label|0) == 62) {
     label = 0;
     $352=(+(HEAPF64[(($303)>>3)]));
     $353=(+(HEAPF64[(($295)>>3)]));
     $354=$352>$353;
     if (!($354)) {
      label = 72;
      break;
     }
     $356=(($inLow+($i_2<<3))|0);
     $357=(+(HEAPF64[(($356)>>3)]));
     $358=(+(HEAPF64[(($299)>>3)]));
     $359=$357>$358;
     if (!($359)) {
      label = 72;
      break;
     }
     $361=(($inClose+($280<<3))|0);
     $362=(+(HEAPF64[(($361)>>3)]));
     $363=(+(HEAPF64[(($281)>>3)]));
     $364=((HEAP32[((272)>>2)])|0);
     $365=(($364+368)|0);
     $366=(+(HEAPF64[(($365)>>3)]));
     $367=(($364+360)|0);
     $368=((HEAP32[(($367)>>2)])|0);
     $369=($368|0)==0;
     do {
      if ($369) {
       $374=(($364+356)|0);
       $375=((HEAP32[(($374)>>2)])|0);
       if (((($375|0))|0)==((2)|0)) {
        $385=(($inOpen+($280<<3))|0);
        $386=(+(HEAPF64[(($385)>>3)]));
        $387=$362<$386;
        $_13=($387?$386:$362);
        $388=($363)-($_13);
        $389=($387?$362:$386);
        $390=(+(HEAPF64[(($288)>>3)]));
        $391=($389)-($390);
        $392=($388)+($391);
        $394=$392;
        break;
       } else if (((($375|0))|0)==((0)|0)) {
        $377=(($inOpen+($280<<3))|0);
        $378=(+(HEAPF64[(($377)>>3)]));
        $379=($362)-($378);
        $380=(+(Math_abs((+($379)))));
        $394=$380;
        break;
       } else if (((($375|0))|0)==((1)|0)) {
        $382=(+(HEAPF64[(($288)>>3)]));
        $383=($363)-($382);
        $394=$383;
        break;
       } else {
        $394=0.0;
        break;
       }
      } else {
       $371=(+((($368|0))|0));
       $372=($NearPeriodTotal_2)/($371);
       $394=$372;
      }
     } while(0);

     $395=($366)*($394);
     $396=((HEAP32[((272)>>2)])|0);
     $397=(($396+356)|0);
     $398=((HEAP32[(($397)>>2)])|0);
     $399=($398|0)==2;
     $400=($399?(2.0):(1.0));
     $401=($395)/($400);
     $402=($363)-($401);
     $403=$362<$402;
     if ($403) {
      label = 72;
      break;
     }
    }
    $405=(+(HEAPF64[(($303)>>3)]));
    $406=(+(HEAPF64[(($295)>>3)]));
    $407=$405<$406;
    $408=($407?100:-100);
    $409=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($409)>>2)]=$408;
    $patternResult_3=$408;$patternIdx_3=$i_2;
   } else {
    label = 72;
   }
  } while(0);
  L101: do {
   if ((label|0) == 72) {
    label = 0;
    $411=((($patternIdx_2)+(3))|0);
    $412=($i_2|0)>($411|0);
    do {
     if (!($412)) {
      $414=($patternResult_2|0)>0;
      if ($414) {
       $416=(($inClose+($i_2<<3))|0);
       $417=(+(HEAPF64[(($416)>>3)]));
       $418=((($patternIdx_2)-(1))|0);
       $419=(($inHigh+($418<<3))|0);
       $420=(+(HEAPF64[(($419)>>3)]));
       $421=$417>$420;
       if (!($421)) {
        label = 75;
       }
      } else {
       label = 75;
      }
      if ((label|0) == 75) {
       label = 0;
       $423=($patternResult_2|0)<0;
       if (!($423)) {
        break;
       }
       $425=(($inClose+($i_2<<3))|0);
       $426=(+(HEAPF64[(($425)>>3)]));
       $427=((($patternIdx_2)-(1))|0);
       $428=(($inLow+($427<<3))|0);
       $429=(+(HEAPF64[(($428)>>3)]));
       $430=$426<$429;
       if (!($430)) {
        break;
       }
      }
      $432=($414?100:-100);
      $433=((($432)+($patternResult_2))|0);
      $434=(($outInteger+($outIdx_0<<2))|0);
      HEAP32[(($434)>>2)]=$433;
      $patternResult_3=$patternResult_2;$patternIdx_3=0;
      break L101;
     }
    } while(0);
    $436=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($436)>>2)]=0;
    $patternResult_3=$patternResult_2;$patternIdx_3=$patternIdx_2;
   }
  } while(0);


  $outIdx_1=((($outIdx_0)+(1))|0);
  $438=((HEAP32[((272)>>2)])|0);
  $439=(($438+356)|0);
  $440=((HEAP32[(($439)>>2)])|0);
  if (((($440|0))|0)==((0)|0)) {
   $442=(($inClose+($280<<3))|0);
   $443=(+(HEAPF64[(($442)>>3)]));
   $444=(($inOpen+($280<<3))|0);
   $445=(+(HEAPF64[(($444)>>3)]));
   $446=($443)-($445);
   $447=(+(Math_abs((+($446)))));
   $467=$447;
  } else if (((($440|0))|0)==((2)|0)) {
   $454=(+(HEAPF64[(($281)>>3)]));
   $455=(($inClose+($280<<3))|0);
   $456=(+(HEAPF64[(($455)>>3)]));
   $457=(($inOpen+($280<<3))|0);
   $458=(+(HEAPF64[(($457)>>3)]));
   $459=$456<$458;
   $_14=($459?$458:$456);
   $460=($454)-($_14);
   $461=($459?$456:$458);
   $462=(($inLow+($280<<3))|0);
   $463=(+(HEAPF64[(($462)>>3)]));
   $464=($461)-($463);
   $465=($460)+($464);
   $467=$465;
  } else if (((($440|0))|0)==((1)|0)) {
   $449=(+(HEAPF64[(($281)>>3)]));
   $450=(($inLow+($280<<3))|0);
   $451=(+(HEAPF64[(($450)>>3)]));
   $452=($449)-($451);
   $467=$452;
  } else {
   $467=0.0;
  }

  $468=((HEAP32[((272)>>2)])|0);
  $469=(($468+356)|0);
  $470=((HEAP32[(($469)>>2)])|0);
  if (((($470|0))|0)==((1)|0)) {
   $480=((($NearTrailingIdx_1)-(2))|0);
   $481=(($inHigh+($480<<3))|0);
   $482=(+(HEAPF64[(($481)>>3)]));
   $483=(($inLow+($480<<3))|0);
   $484=(+(HEAPF64[(($483)>>3)]));
   $485=($482)-($484);
   $502=$485;
  } else if (((($470|0))|0)==((2)|0)) {
   $487=((($NearTrailingIdx_1)-(2))|0);
   $488=(($inHigh+($487<<3))|0);
   $489=(+(HEAPF64[(($488)>>3)]));
   $490=(($inClose+($487<<3))|0);
   $491=(+(HEAPF64[(($490)>>3)]));
   $492=(($inOpen+($487<<3))|0);
   $493=(+(HEAPF64[(($492)>>3)]));
   $494=$491<$493;
   $_15=($494?$493:$491);
   $495=($489)-($_15);
   $496=($494?$491:$493);
   $497=(($inLow+($487<<3))|0);
   $498=(+(HEAPF64[(($497)>>3)]));
   $499=($496)-($498);
   $500=($495)+($499);
   $502=$500;
  } else if (((($470|0))|0)==((0)|0)) {
   $472=((($NearTrailingIdx_1)-(2))|0);
   $473=(($inClose+($472<<3))|0);
   $474=(+(HEAPF64[(($473)>>3)]));
   $475=(($inOpen+($472<<3))|0);
   $476=(+(HEAPF64[(($475)>>3)]));
   $477=($474)-($476);
   $478=(+(Math_abs((+($477)))));
   $502=$478;
  } else {
   $502=0.0;
  }

  $503=($467)-($502);
  $504=($NearPeriodTotal_2)+($503);
  $505=((($NearTrailingIdx_1)+(1))|0);
  $506=((($i_2)+(1))|0);
  $507=($i_2|0)<($endIdx|0);
  if ($507) {
   $patternResult_2=$patternResult_3;$patternIdx_2=$patternIdx_3;$NearTrailingIdx_1=$505;$outIdx_0=$outIdx_1;$i_2=$506;$NearPeriodTotal_2=$504;
  } else {
   break;
  }
 }
 $509=((($smax30)+(1))|0);
 $510=((($509)-($smax31))|0);
 HEAP32[(($outNBElement)>>2)]=$510;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLHOMINGPIGEON_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(1))|0);
 return (($7)|0);
}


function _TA_CDLHOMINGPIGEON($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond16=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$BodyLongPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$i_021=0,$BodyLongPeriodTotal_020=.0,$34=0,$35=0,$36=.0,$37=0;
 var $38=.0,$39=.0,$40=.0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$49=0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$_=.0,$57=.0,$58=.0;
 var $59=0,$60=.0,$61=.0,$62=.0,$64=.0,$65=.0,$66=0,$67=0,$BodyShortPeriodTotal_0_lcssa=.0,$68=0,$smax=0,$69=0,$smax24=0,$70=0,$smax25=0,$i_119=0,$BodyShortPeriodTotal_018=.0,$73=0,$74=.0,$75=0;
 var $76=.0,$77=.0,$78=.0,$80=0,$81=.0,$82=0,$83=.0,$84=.0,$86=0,$87=.0,$88=0,$89=.0,$90=0,$91=.0,$92=0,$_9=.0,$93=.0,$94=.0,$95=0,$96=.0;
 var $97=.0,$98=.0,$100=.0,$101=.0,$102=0,$103=0,$BodyShortPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$105=0,$106=0,$107=.0,$108=0,$109=.0,$110=0,$112=0,$113=.0;
 var $114=0,$115=.0,$not_7=0,$117=.0,$118=.0,$119=0,$120=0,$121=.0,$122=0,$123=0,$124=0,$126=.0,$127=.0,$129=0,$130=0,$132=0,$133=.0,$134=0,$135=.0,$136=.0;
 var $138=0,$140=0,$141=.0,$_10=.0,$142=.0,$143=0,$144=.0,$145=0,$146=.0,$147=.0,$148=.0,$150=.0,$151=.0,$152=0,$153=0,$154=0,$155=0,$156=.0,$157=.0,$158=0;
 var $160=.0,$161=.0,$162=.0,$163=.0,$164=0,$165=.0,$166=0,$167=0,$168=0,$170=.0,$171=.0,$173=0,$174=0,$176=0,$177=.0,$178=0,$179=.0,$180=.0,$182=0,$184=0;
 var $185=.0,$186=0,$_11=.0,$187=.0,$188=.0,$189=0,$190=.0,$191=.0,$192=.0,$194=.0,$195=.0,$196=0,$197=0,$198=0,$199=0,$200=.0,$201=.0,$202=0,$204=.0,$205=.0;
 var $206=0,$208=.0,$209=.0,$210=0,$212=0,$214=0,$outIdx_1=0,$216=0,$217=0,$218=0,$220=.0,$221=.0,$222=.0,$223=.0,$225=0,$226=.0,$227=0,$228=.0,$229=.0,$231=0;
 var $232=.0,$233=.0,$234=.0,$235=0,$_12=.0,$236=.0,$237=.0,$238=0,$239=.0,$240=.0,$241=.0,$243=.0,$244=0,$245=0,$246=0,$248=0,$249=0,$250=.0,$251=0,$252=.0;
 var $253=.0,$254=.0,$256=0,$257=0,$258=.0,$259=0,$260=.0,$261=.0,$263=0,$264=0,$265=.0,$266=0,$267=.0,$268=0,$269=.0,$270=0,$_13=.0,$271=.0,$272=.0,$273=0;
 var $274=.0,$275=.0,$276=.0,$278=.0,$279=.0,$280=.0,$281=0,$282=0,$283=0,$285=0,$286=.0,$287=0,$288=.0,$289=.0,$290=.0,$292=0,$293=.0,$294=0,$295=.0,$296=.0;
 var $298=0,$299=.0,$300=0,$301=.0,$302=0,$303=.0,$304=0,$_14=.0,$305=.0,$306=.0,$307=0,$308=.0,$309=.0,$310=.0,$312=.0,$313=0,$314=0,$315=0,$317=0,$318=.0;
 var $319=0,$320=.0,$321=.0,$322=.0,$324=0,$325=.0,$326=0,$327=.0,$328=.0,$330=0,$331=.0,$332=0,$333=.0,$334=0,$335=.0,$336=0,$_15=.0,$337=.0,$338=.0,$339=0;
 var $340=.0,$341=.0,$342=.0,$344=.0,$345=.0,$346=.0,$347=0,$348=0,$349=0,$350=0,$352=0,$353=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond16=$10|$or_cond5_not;
 if ($or_cond16) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLHOMINGPIGEON_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+168)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+216)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+164)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $BodyLongPeriodTotal_020=0.0;$i_021=$20;
  while(1) {


   if (((($27|0))|0)==((1)|0)) {
    $42=((($i_021)-(1))|0);
    $43=(($inHigh+($42<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=(($inLow+($42<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=($44)-($46);
    $64=$47;
   } else if (((($27|0))|0)==((2)|0)) {
    $49=((($i_021)-(1))|0);
    $50=(($inHigh+($49<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inClose+($49<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inOpen+($49<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=$53<$55;
    $_=($56?$55:$53);
    $57=($51)-($_);
    $58=($56?$53:$55);
    $59=(($inLow+($49<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=($57)+($61);
    $64=$62;
   } else if (((($27|0))|0)==((0)|0)) {
    $34=((($i_021)-(1))|0);
    $35=(($inClose+($34<<3))|0);
    $36=(+(HEAPF64[(($35)>>3)]));
    $37=(($inOpen+($34<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=($36)-($38);
    $40=(+(Math_abs((+($39)))));
    $64=$40;
   } else {
    $64=0.0;
   }

   $65=($BodyLongPeriodTotal_020)+($64);
   $66=((($i_021)+(1))|0);
   $67=($66|0)<($_startIdx|0);
   if ($67) {
    $BodyLongPeriodTotal_020=$65;$i_021=$66;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$65;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+212)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $BodyShortPeriodTotal_018=0.0;$i_119=$23;
  while(1) {


   if (((($31|0))|0)==((1)|0)) {
    $80=(($inHigh+($i_119<<3))|0);
    $81=(+(HEAPF64[(($80)>>3)]));
    $82=(($inLow+($i_119<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=($81)-($83);
    $100=$84;
   } else if (((($31|0))|0)==((2)|0)) {
    $86=(($inHigh+($i_119<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=(($inClose+($i_119<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=(($inOpen+($i_119<<3))|0);
    $91=(+(HEAPF64[(($90)>>3)]));
    $92=$89<$91;
    $_9=($92?$91:$89);
    $93=($87)-($_9);
    $94=($92?$89:$91);
    $95=(($inLow+($i_119<<3))|0);
    $96=(+(HEAPF64[(($95)>>3)]));
    $97=($94)-($96);
    $98=($93)+($97);
    $100=$98;
   } else if (((($31|0))|0)==((0)|0)) {
    $73=(($inClose+($i_119<<3))|0);
    $74=(+(HEAPF64[(($73)>>3)]));
    $75=(($inOpen+($i_119<<3))|0);
    $76=(+(HEAPF64[(($75)>>3)]));
    $77=($74)-($76);
    $78=(+(Math_abs((+($77)))));
    $100=$78;
   } else {
    $100=0.0;
   }

   $101=($BodyShortPeriodTotal_018)+($100);
   $102=((($i_119)+(1))|0);
   $103=($102|0)<($_startIdx|0);
   if ($103) {
    $BodyShortPeriodTotal_018=$101;$i_119=$102;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$101;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;
 }

 $68=($12|0)>($endIdx|0);
 $smax=($68?$12:$endIdx);
 $69=($smax|0)>($startIdx|0);
 $smax24=($69?$smax:$startIdx);
 $70=($12|0)>($startIdx|0);
 $smax25=($70?$12:$startIdx);
 $BodyLongTrailingIdx_0=$20;$BodyShortTrailingIdx_0=$23;$outIdx_0=0;$i_2=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;
 while(1) {






  $105=((($i_2)-(1))|0);
  $106=(($inClose+($105<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=(($inOpen+($105<<3))|0);
  $109=(+(HEAPF64[(($108)>>3)]));
  $110=$107>=$109;
  do {
   if ($110) {
    label = 40;
   } else {
    $112=(($inClose+($i_2<<3))|0);
    $113=(+(HEAPF64[(($112)>>3)]));
    $114=(($inOpen+($i_2<<3))|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $not_7=$113<$115;
    if (!($not_7)) {
     label = 40;
     break;
    }
    $117=($107)-($109);
    $118=(+(Math_abs((+($117)))));
    $119=((HEAP32[((272)>>2)])|0);
    $120=(($119+176)|0);
    $121=(+(HEAPF64[(($120)>>3)]));
    $122=(($119+168)|0);
    $123=((HEAP32[(($122)>>2)])|0);
    $124=($123|0)==0;
    do {
     if ($124) {
      $129=(($119+164)|0);
      $130=((HEAP32[(($129)>>2)])|0);
      if (((($130|0))|0)==((0)|0)) {
       $150=$118;
       break;
      } else if (((($130|0))|0)==((1)|0)) {
       $132=(($inHigh+($105<<3))|0);
       $133=(+(HEAPF64[(($132)>>3)]));
       $134=(($inLow+($105<<3))|0);
       $135=(+(HEAPF64[(($134)>>3)]));
       $136=($133)-($135);
       $150=$136;
       break;
      }
      $138=($130|0)==2;
      if (!($138)) {
       $150=0.0;
       break;
      }
      $140=(($inHigh+($105<<3))|0);
      $141=(+(HEAPF64[(($140)>>3)]));
      $_10=($110?$107:$109);
      $142=($141)-($_10);
      $143=$107<$109;
      $144=($143?$107:$109);
      $145=(($inLow+($105<<3))|0);
      $146=(+(HEAPF64[(($145)>>3)]));
      $147=($144)-($146);
      $148=($142)+($147);
      $150=$148;
     } else {
      $126=(+((($123|0))|0));
      $127=($BodyLongPeriodTotal_1)/($126);
      $150=$127;
     }
    } while(0);

    $151=($121)*($150);
    $152=((HEAP32[((272)>>2)])|0);
    $153=(($152+164)|0);
    $154=((HEAP32[(($153)>>2)])|0);
    $155=($154|0)==2;
    $156=($155?(2.0):(1.0));
    $157=($151)/($156);
    $158=$118>$157;
    if (!($158)) {
     label = 40;
     break;
    }
    $160=(+(HEAPF64[(($112)>>3)]));
    $161=(+(HEAPF64[(($114)>>3)]));
    $162=($160)-($161);
    $163=(+(Math_abs((+($162)))));
    $164=(($152+224)|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    $166=(($152+216)|0);
    $167=((HEAP32[(($166)>>2)])|0);
    $168=($167|0)==0;
    do {
     if ($168) {
      $173=(($152+212)|0);
      $174=((HEAP32[(($173)>>2)])|0);
      if (((($174|0))|0)==((0)|0)) {
       $194=$163;
       break;
      } else if (((($174|0))|0)==((1)|0)) {
       $176=(($inHigh+($i_2<<3))|0);
       $177=(+(HEAPF64[(($176)>>3)]));
       $178=(($inLow+($i_2<<3))|0);
       $179=(+(HEAPF64[(($178)>>3)]));
       $180=($177)-($179);
       $194=$180;
       break;
      }
      $182=($174|0)==2;
      if (!($182)) {
       $194=0.0;
       break;
      }
      $184=(($inHigh+($i_2<<3))|0);
      $185=(+(HEAPF64[(($184)>>3)]));
      $186=$160<$161;
      $_11=($186?$161:$160);
      $187=($185)-($_11);
      $188=($186?$160:$161);
      $189=(($inLow+($i_2<<3))|0);
      $190=(+(HEAPF64[(($189)>>3)]));
      $191=($188)-($190);
      $192=($187)+($191);
      $194=$192;
     } else {
      $170=(+((($167|0))|0));
      $171=($BodyShortPeriodTotal_1)/($170);
      $194=$171;
     }
    } while(0);

    $195=($165)*($194);
    $196=((HEAP32[((272)>>2)])|0);
    $197=(($196+212)|0);
    $198=((HEAP32[(($197)>>2)])|0);
    $199=($198|0)==2;
    $200=($199?(2.0):(1.0));
    $201=($195)/($200);
    $202=$163>$201;
    if ($202) {
     label = 40;
     break;
    }
    $204=(+(HEAPF64[(($114)>>3)]));
    $205=(+(HEAPF64[(($108)>>3)]));
    $206=$204<$205;
    if (!($206)) {
     label = 40;
     break;
    }
    $208=(+(HEAPF64[(($112)>>3)]));
    $209=(+(HEAPF64[(($106)>>3)]));
    $210=$208>$209;
    if (!($210)) {
     label = 40;
     break;
    }
    $212=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($212)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 40) {
   label = 0;
   $214=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($214)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $216=((HEAP32[((272)>>2)])|0);
  $217=(($216+164)|0);
  $218=((HEAP32[(($217)>>2)])|0);
  if (((($218|0))|0)==((0)|0)) {
   $220=(+(HEAPF64[(($106)>>3)]));
   $221=(+(HEAPF64[(($108)>>3)]));
   $222=($220)-($221);
   $223=(+(Math_abs((+($222)))));
   $243=$223;
  } else if (((($218|0))|0)==((1)|0)) {
   $225=(($inHigh+($105<<3))|0);
   $226=(+(HEAPF64[(($225)>>3)]));
   $227=(($inLow+($105<<3))|0);
   $228=(+(HEAPF64[(($227)>>3)]));
   $229=($226)-($228);
   $243=$229;
  } else if (((($218|0))|0)==((2)|0)) {
   $231=(($inHigh+($105<<3))|0);
   $232=(+(HEAPF64[(($231)>>3)]));
   $233=(+(HEAPF64[(($106)>>3)]));
   $234=(+(HEAPF64[(($108)>>3)]));
   $235=$233<$234;
   $_12=($235?$234:$233);
   $236=($232)-($_12);
   $237=($235?$233:$234);
   $238=(($inLow+($105<<3))|0);
   $239=(+(HEAPF64[(($238)>>3)]));
   $240=($237)-($239);
   $241=($236)+($240);
   $243=$241;
  } else {
   $243=0.0;
  }

  $244=((HEAP32[((272)>>2)])|0);
  $245=(($244+164)|0);
  $246=((HEAP32[(($245)>>2)])|0);
  if (((($246|0))|0)==((0)|0)) {
   $248=((($BodyLongTrailingIdx_0)-(1))|0);
   $249=(($inClose+($248<<3))|0);
   $250=(+(HEAPF64[(($249)>>3)]));
   $251=(($inOpen+($248<<3))|0);
   $252=(+(HEAPF64[(($251)>>3)]));
   $253=($250)-($252);
   $254=(+(Math_abs((+($253)))));
   $278=$254;
  } else if (((($246|0))|0)==((1)|0)) {
   $256=((($BodyLongTrailingIdx_0)-(1))|0);
   $257=(($inHigh+($256<<3))|0);
   $258=(+(HEAPF64[(($257)>>3)]));
   $259=(($inLow+($256<<3))|0);
   $260=(+(HEAPF64[(($259)>>3)]));
   $261=($258)-($260);
   $278=$261;
  } else if (((($246|0))|0)==((2)|0)) {
   $263=((($BodyLongTrailingIdx_0)-(1))|0);
   $264=(($inHigh+($263<<3))|0);
   $265=(+(HEAPF64[(($264)>>3)]));
   $266=(($inClose+($263<<3))|0);
   $267=(+(HEAPF64[(($266)>>3)]));
   $268=(($inOpen+($263<<3))|0);
   $269=(+(HEAPF64[(($268)>>3)]));
   $270=$267<$269;
   $_13=($270?$269:$267);
   $271=($265)-($_13);
   $272=($270?$267:$269);
   $273=(($inLow+($263<<3))|0);
   $274=(+(HEAPF64[(($273)>>3)]));
   $275=($272)-($274);
   $276=($271)+($275);
   $278=$276;
  } else {
   $278=0.0;
  }

  $279=($243)-($278);
  $280=($BodyLongPeriodTotal_1)+($279);
  $281=((HEAP32[((272)>>2)])|0);
  $282=(($281+212)|0);
  $283=((HEAP32[(($282)>>2)])|0);
  if (((($283|0))|0)==((0)|0)) {
   $285=(($inClose+($i_2<<3))|0);
   $286=(+(HEAPF64[(($285)>>3)]));
   $287=(($inOpen+($i_2<<3))|0);
   $288=(+(HEAPF64[(($287)>>3)]));
   $289=($286)-($288);
   $290=(+(Math_abs((+($289)))));
   $312=$290;
  } else if (((($283|0))|0)==((2)|0)) {
   $298=(($inHigh+($i_2<<3))|0);
   $299=(+(HEAPF64[(($298)>>3)]));
   $300=(($inClose+($i_2<<3))|0);
   $301=(+(HEAPF64[(($300)>>3)]));
   $302=(($inOpen+($i_2<<3))|0);
   $303=(+(HEAPF64[(($302)>>3)]));
   $304=$301<$303;
   $_14=($304?$303:$301);
   $305=($299)-($_14);
   $306=($304?$301:$303);
   $307=(($inLow+($i_2<<3))|0);
   $308=(+(HEAPF64[(($307)>>3)]));
   $309=($306)-($308);
   $310=($305)+($309);
   $312=$310;
  } else if (((($283|0))|0)==((1)|0)) {
   $292=(($inHigh+($i_2<<3))|0);
   $293=(+(HEAPF64[(($292)>>3)]));
   $294=(($inLow+($i_2<<3))|0);
   $295=(+(HEAPF64[(($294)>>3)]));
   $296=($293)-($295);
   $312=$296;
  } else {
   $312=0.0;
  }

  $313=((HEAP32[((272)>>2)])|0);
  $314=(($313+212)|0);
  $315=((HEAP32[(($314)>>2)])|0);
  if (((($315|0))|0)==((1)|0)) {
   $324=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $325=(+(HEAPF64[(($324)>>3)]));
   $326=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $327=(+(HEAPF64[(($326)>>3)]));
   $328=($325)-($327);
   $344=$328;
  } else if (((($315|0))|0)==((2)|0)) {
   $330=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $331=(+(HEAPF64[(($330)>>3)]));
   $332=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $333=(+(HEAPF64[(($332)>>3)]));
   $334=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=$333<$335;
   $_15=($336?$335:$333);
   $337=($331)-($_15);
   $338=($336?$333:$335);
   $339=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $340=(+(HEAPF64[(($339)>>3)]));
   $341=($338)-($340);
   $342=($337)+($341);
   $344=$342;
  } else if (((($315|0))|0)==((0)|0)) {
   $317=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $318=(+(HEAPF64[(($317)>>3)]));
   $319=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $320=(+(HEAPF64[(($319)>>3)]));
   $321=($318)-($320);
   $322=(+(Math_abs((+($321)))));
   $344=$322;
  } else {
   $344=0.0;
  }

  $345=($312)-($344);
  $346=($BodyShortPeriodTotal_1)+($345);
  $347=((($i_2)+(1))|0);
  $348=((($BodyLongTrailingIdx_0)+(1))|0);
  $349=((($BodyShortTrailingIdx_0)+(1))|0);
  $350=($i_2|0)<($endIdx|0);
  if ($350) {
   $BodyLongTrailingIdx_0=$348;$BodyShortTrailingIdx_0=$349;$outIdx_0=$outIdx_1;$i_2=$347;$BodyLongPeriodTotal_1=$280;$BodyShortPeriodTotal_1=$346;
  } else {
   break;
  }
 }
 $352=((($smax24)+(1))|0);
 $353=((($352)-($smax25))|0);
 HEAP32[(($outNBElement)>>2)]=$353;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLIDENTICAL3CROWS_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+336)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+408)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(2))|0);
 return (($7)|0);
}


function _TA_CDLIDENTICAL3CROWS($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $ShadowVeryShortPeriodTotal=0,$EqualPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond9=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond28=0,$12=0,$13=0,$_startIdx=0,$14=0;
 var $17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$_promoted37=.0;
 var $_promoted38=.0,$_promoted39=.0,$36=0,$37=0,$38=0,$39=0,$_promoted=.0,$_promoted33=.0,$41=.0,$42=.0,$43=.0,$i_035=0,$44=0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0,$51=0;
 var $52=0,$53=.0,$54=0,$55=.0,$56=.0,$57=.0,$58=0,$59=.0,$60=0,$61=.0,$62=.0,$63=.0,$64=0,$65=0,$66=.0,$67=0,$68=.0,$69=.0,$70=0,$71=0;
 var $72=.0,$73=0,$74=.0,$75=.0,$76=0,$77=.0,$78=0,$79=.0,$80=.0,$81=0,$82=0,$83=.0,$84=0,$85=.0,$86=0,$87=.0,$88=0,$_=.0,$89=.0,$90=.0;
 var $91=0,$92=.0,$93=.0,$94=.0,$95=0,$96=0,$97=.0,$98=0,$99=.0,$100=0,$101=.0,$102=0,$_10=.0,$103=.0,$104=.0,$105=0,$106=.0,$107=.0,$108=.0,$109=0;
 var $110=.0,$111=0,$112=.0,$113=0,$114=.0,$115=0,$_11=.0,$116=.0,$117=.0,$118=0,$119=.0,$120=.0,$121=.0,$_pn66=.0,$_pn67=.0,$124=.0,$125=.0,$126=.0,$127=.0,$128=0;
 var $129=0,$130=0,$smax=0,$131=0,$smax43=0,$132=0,$smax44=0,$134=.0,$135=.0,$i_132=0,$136=0,$137=0,$138=.0,$139=0,$140=.0,$141=.0,$142=.0,$143=0,$144=0,$145=.0;
 var $146=0,$147=.0,$148=.0,$149=.0,$150=0,$151=0,$152=.0,$153=0,$154=.0,$155=.0,$156=0,$157=0,$158=.0,$159=0,$160=.0,$161=.0,$162=0,$163=0,$164=.0,$165=0;
 var $166=.0,$167=0,$168=.0,$169=0,$_12=.0,$170=.0,$171=.0,$172=0,$173=.0,$174=.0,$175=.0,$176=0,$177=0,$178=.0,$179=0,$180=.0,$181=0,$182=.0,$183=0,$_13=.0;
 var $184=.0,$185=.0,$186=0,$187=.0,$188=.0,$189=.0,$_pn=.0,$192=.0,$193=.0,$194=.0,$195=0,$196=0,$i_2=0,$outIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$EqualTrailingIdx_0=0,$198=0,$199=0,$200=.0,$201=0;
 var $202=.0,$203=0,$205=0,$206=.0,$207=.0,$208=0,$209=0,$210=.0,$211=0,$212=0,$213=0,$215=.0,$216=.0,$217=.0,$219=0,$220=0,$222=.0,$223=.0,$225=0,$226=.0;
 var $227=.0,$229=0,$230=.0,$231=0,$_15=.0,$232=.0,$233=.0,$234=.0,$235=.0,$237=.0,$238=.0,$239=0,$240=0,$241=0,$242=0,$243=.0,$244=.0,$245=0,$247=0,$248=0;
 var $249=.0,$250=0,$251=.0,$252=0,$254=0,$255=.0,$256=.0,$257=0,$258=.0,$259=0,$260=0,$261=0,$263=.0,$264=.0,$265=.0,$268=.0,$269=.0,$271=0,$272=.0,$273=.0;
 var $275=0,$276=.0,$277=0,$_17=.0,$278=.0,$279=.0,$280=.0,$281=.0,$283=.0,$284=.0,$285=0,$286=0,$287=0,$288=0,$289=.0,$290=.0,$291=0,$293=0,$294=.0,$295=0;
 var $296=.0,$297=0,$299=0,$300=.0,$301=.0,$302=0,$303=.0,$304=0,$305=0,$306=0,$308=.0,$309=.0,$310=.0,$313=.0,$314=.0,$316=0,$317=.0,$318=.0,$320=0,$321=.0;
 var $322=0,$_19=.0,$323=.0,$324=.0,$325=.0,$326=.0,$328=.0,$329=.0,$330=0,$331=0,$332=0,$333=0,$334=.0,$335=.0,$336=0,$338=.0,$339=.0,$340=0,$342=.0,$343=0;
 var $345=.0,$346=0,$347=.0,$348=0,$349=0,$350=0,$352=.0,$353=.0,$354=.0,$356=0,$357=0,$359=.0,$360=.0,$361=.0,$363=0,$364=.0,$365=.0,$366=.0,$368=0,$369=.0;
 var $370=.0,$371=0,$_20=.0,$372=.0,$373=.0,$374=.0,$375=.0,$376=.0,$378=.0,$379=.0,$380=0,$381=0,$382=0,$383=0,$384=.0,$385=.0,$386=.0,$387=0,$389=.0,$390=.0;
 var $391=0,$392=.0,$393=0,$394=0,$395=0,$397=.0,$398=.0,$399=.0,$402=.0,$403=.0,$404=.0,$406=0,$407=.0,$408=.0,$409=.0,$412=0,$413=.0,$414=.0,$415=0,$_21=.0;
 var $416=.0,$417=.0,$418=.0,$419=.0,$420=.0,$422=.0,$423=.0,$424=0,$425=0,$426=0,$427=0,$428=.0,$429=.0,$430=.0,$431=0,$433=.0,$434=.0,$435=0,$436=.0,$437=0;
 var $438=0,$439=0,$441=.0,$442=.0,$443=.0,$446=.0,$447=.0,$448=.0,$450=0,$451=.0,$452=.0,$453=.0,$456=0,$457=.0,$458=.0,$459=0,$_22=.0,$460=.0,$461=.0,$462=.0;
 var $463=.0,$464=.0,$466=.0,$467=.0,$468=0,$469=0,$470=0,$471=0,$472=.0,$473=.0,$474=.0,$475=0,$477=.0,$478=.0,$479=0,$480=.0,$481=0,$482=0,$483=0,$485=.0;
 var $486=.0,$487=.0,$490=.0,$491=.0,$492=.0,$494=0,$495=.0,$496=.0,$497=.0,$500=0,$501=.0,$502=.0,$503=0,$_23=.0,$504=.0,$505=.0,$506=.0,$507=.0,$508=.0,$510=.0;
 var $511=.0,$512=0,$513=0,$514=0,$515=0,$516=.0,$517=.0,$518=.0,$519=0,$521=0,$523=0,$525=0,$526=0,$527=0,$totIdx_029=0,$529=0,$530=0,$531=.0,$532=0,$533=.0;
 var $534=.0,$535=.0,$536=0,$537=0,$538=.0,$539=0,$540=.0,$541=.0,$542=.0,$543=0,$544=0,$545=.0,$546=0,$547=.0,$548=.0,$549=0,$550=0,$551=.0,$552=0,$553=.0;
 var $554=.0,$555=0,$556=0,$557=.0,$558=0,$559=.0,$560=0,$561=.0,$562=0,$_24=.0,$563=.0,$564=.0,$565=0,$566=.0,$567=.0,$568=.0,$569=0,$570=0,$571=.0,$572=0;
 var $573=.0,$574=0,$575=.0,$576=0,$_25=.0,$577=.0,$578=.0,$579=0,$580=.0,$581=.0,$582=.0,$584=.0,$585=.0,$586=.0,$587=0,$588=.0,$589=.0,$590=0,$591=0,$593=0;
 var $594=0,$595=0,$596=0,$597=0,$598=.0,$599=0,$600=.0,$601=.0,$602=.0,$603=0,$604=0,$605=.0,$606=0,$607=.0,$608=.0,$609=.0,$610=0,$611=0,$612=.0,$613=0;
 var $614=.0,$615=.0,$616=0,$617=0,$618=.0,$619=0,$620=.0,$621=.0,$622=0,$623=0,$624=.0,$625=0,$626=.0,$627=0,$628=.0,$629=0,$_26=.0,$630=.0,$631=.0,$632=0;
 var $633=.0,$634=.0,$635=.0,$636=0,$637=0,$638=.0,$639=0,$640=.0,$641=0,$642=.0,$643=0,$_27=.0,$644=.0,$645=.0,$646=0,$647=.0,$648=.0,$649=.0,$651=.0,$652=.0;
 var $653=.0,$654=0,$655=.0,$656=.0,$658=0,$659=0,$_0=0,$661=0,$662=0,$663=.0,$664=0,$665=.0,$666=0,$667=.0,$668=0,$_26_1=.0,$669=.0,$670=.0,$671=0,$672=.0;
 var $673=.0,$674=.0,$675=0,$676=0,$677=.0,$678=0,$679=.0,$680=0,$681=.0,$682=0,$_27_1=.0,$683=.0,$684=.0,$685=0,$686=.0,$687=.0,$688=.0,$689=0,$690=0,$691=.0;
 var $692=0,$693=.0,$694=.0,$695=0,$696=0,$697=.0,$698=0,$699=.0,$700=.0,$701=0,$702=0,$703=.0,$704=0,$705=.0,$706=.0,$707=.0,$708=0,$709=0,$710=.0,$711=0;
 var $712=.0,$713=.0,$714=.0,$716=.0,$717=.0,$718=.0,$719=0,$720=.0,$721=.0,$outIdx_1=0,$722=0,$723=0,$724=0,$725=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $ShadowVeryShortPeriodTotal=((sp)|0);
 $EqualPeriodTotal=(((sp)+(24))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond9=$3|$4;
 if ($or_cond9) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond28=$10|$or_cond5_not;
 if ($or_cond28) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDLIDENTICAL3CROWS_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=(($ShadowVeryShortPeriodTotal+16)|0);
 $18=(($ShadowVeryShortPeriodTotal+8)|0);
 $19=(($ShadowVeryShortPeriodTotal)|0);
 $20=$ShadowVeryShortPeriodTotal;
 _memset((((($20)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $21=((HEAP32[((272)>>2)])|0);
 $22=(($21+336)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=((($_startIdx)-($23))|0);
 $25=(($EqualPeriodTotal+16)|0);
 $26=(($EqualPeriodTotal+8)|0);
 $27=$EqualPeriodTotal;
 _memset((((($27)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $28=((HEAP32[((272)>>2)])|0);
 $29=(($28+408)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=((($_startIdx)-($30))|0);
 $32=($23|0)>0;
 if ($32) {
  $33=((HEAP32[((272)>>2)])|0);
  $34=(($33+332)|0);
  $35=((HEAP32[(($34)>>2)])|0);
  $_promoted37=(+(HEAPF64[(($17)>>3)]));
  $_promoted38=(+(HEAPF64[(($18)>>3)]));
  $_promoted39=(+(HEAPF64[(($19)>>3)]));
  $i_035=$24;$43=$_promoted37;$42=$_promoted38;$41=$_promoted39;
  while(1) {




   if (((($35|0))|0)==((2)|0)) {
    $81=((($i_035)-(2))|0);
    $82=(($inHigh+($81<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inClose+($81<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=(($inOpen+($81<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=$85<$87;
    $_=($88?$87:$85);
    $89=($83)-($_);
    $90=($88?$85:$87);
    $91=(($inLow+($81<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=($90)-($92);
    $94=($89)+($93);
    $95=((($i_035)-(1))|0);
    $96=(($inHigh+($95<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=(($inClose+($95<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=(($inOpen+($95<<3))|0);
    $101=(+(HEAPF64[(($100)>>3)]));
    $102=$99<$101;
    $_10=($102?$101:$99);
    $103=($97)-($_10);
    $104=($102?$99:$101);
    $105=(($inLow+($95<<3))|0);
    $106=(+(HEAPF64[(($105)>>3)]));
    $107=($104)-($106);
    $108=($103)+($107);
    $109=(($inHigh+($i_035<<3))|0);
    $110=(+(HEAPF64[(($109)>>3)]));
    $111=(($inClose+($i_035<<3))|0);
    $112=(+(HEAPF64[(($111)>>3)]));
    $113=(($inOpen+($i_035<<3))|0);
    $114=(+(HEAPF64[(($113)>>3)]));
    $115=$112<$114;
    $_11=($115?$114:$112);
    $116=($110)-($_11);
    $117=($115?$112:$114);
    $118=(($inLow+($i_035<<3))|0);
    $119=(+(HEAPF64[(($118)>>3)]));
    $120=($117)-($119);
    $121=($116)+($120);
    $124=$121;$_pn67=$94;$_pn66=$108;
   } else if (((($35|0))|0)==((0)|0)) {
    $44=((($i_035)-(2))|0);
    $45=(($inClose+($44<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=(($inOpen+($44<<3))|0);
    $48=(+(HEAPF64[(($47)>>3)]));
    $49=($46)-($48);
    $50=(+(Math_abs((+($49)))));
    $51=((($i_035)-(1))|0);
    $52=(($inClose+($51<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inOpen+($51<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=($53)-($55);
    $57=(+(Math_abs((+($56)))));
    $58=(($inClose+($i_035<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=(($inOpen+($i_035<<3))|0);
    $61=(+(HEAPF64[(($60)>>3)]));
    $62=($59)-($61);
    $63=(+(Math_abs((+($62)))));
    $124=$63;$_pn67=$50;$_pn66=$57;
   } else if (((($35|0))|0)==((1)|0)) {
    $64=((($i_035)-(2))|0);
    $65=(($inHigh+($64<<3))|0);
    $66=(+(HEAPF64[(($65)>>3)]));
    $67=(($inLow+($64<<3))|0);
    $68=(+(HEAPF64[(($67)>>3)]));
    $69=($66)-($68);
    $70=((($i_035)-(1))|0);
    $71=(($inHigh+($70<<3))|0);
    $72=(+(HEAPF64[(($71)>>3)]));
    $73=(($inLow+($70<<3))|0);
    $74=(+(HEAPF64[(($73)>>3)]));
    $75=($72)-($74);
    $76=(($inHigh+($i_035<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=(($inLow+($i_035<<3))|0);
    $79=(+(HEAPF64[(($78)>>3)]));
    $80=($77)-($79);
    $124=$80;$_pn67=$69;$_pn66=$75;
   } else {
    $124=0.0;$_pn67=0.0;$_pn66=0.0;
   }



   $125=($_pn67)+($43);
   $126=($_pn66)+($42);
   $127=($124)+($41);
   $128=((($i_035)+(1))|0);
   $129=($128|0)<($_startIdx|0);
   if ($129) {
    $i_035=$128;$43=$125;$42=$126;$41=$127;
   } else {
    break;
   }
  }
  HEAPF64[(($17)>>3)]=$125;
  HEAPF64[(($18)>>3)]=$126;
  HEAPF64[(($19)>>3)]=$127;
 }
 $36=($30|0)>0;
 if ($36) {
  $37=((HEAP32[((272)>>2)])|0);
  $38=(($37+404)|0);
  $39=((HEAP32[(($38)>>2)])|0);
  $_promoted=(+(HEAPF64[(($25)>>3)]));
  $_promoted33=(+(HEAPF64[(($26)>>3)]));
  $i_132=$31;$135=$_promoted;$134=$_promoted33;
  while(1) {



   if (((($39|0))|0)==((1)|0)) {
    $150=((($i_132)-(2))|0);
    $151=(($inHigh+($150<<3))|0);
    $152=(+(HEAPF64[(($151)>>3)]));
    $153=(($inLow+($150<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=($152)-($154);
    $156=((($i_132)-(1))|0);
    $157=(($inHigh+($156<<3))|0);
    $158=(+(HEAPF64[(($157)>>3)]));
    $159=(($inLow+($156<<3))|0);
    $160=(+(HEAPF64[(($159)>>3)]));
    $161=($158)-($160);
    $192=$161;$_pn=$155;
   } else if (((($39|0))|0)==((0)|0)) {
    $136=((($i_132)-(2))|0);
    $137=(($inClose+($136<<3))|0);
    $138=(+(HEAPF64[(($137)>>3)]));
    $139=(($inOpen+($136<<3))|0);
    $140=(+(HEAPF64[(($139)>>3)]));
    $141=($138)-($140);
    $142=(+(Math_abs((+($141)))));
    $143=((($i_132)-(1))|0);
    $144=(($inClose+($143<<3))|0);
    $145=(+(HEAPF64[(($144)>>3)]));
    $146=(($inOpen+($143<<3))|0);
    $147=(+(HEAPF64[(($146)>>3)]));
    $148=($145)-($147);
    $149=(+(Math_abs((+($148)))));
    $192=$149;$_pn=$142;
   } else if (((($39|0))|0)==((2)|0)) {
    $162=((($i_132)-(2))|0);
    $163=(($inHigh+($162<<3))|0);
    $164=(+(HEAPF64[(($163)>>3)]));
    $165=(($inClose+($162<<3))|0);
    $166=(+(HEAPF64[(($165)>>3)]));
    $167=(($inOpen+($162<<3))|0);
    $168=(+(HEAPF64[(($167)>>3)]));
    $169=$166<$168;
    $_12=($169?$168:$166);
    $170=($164)-($_12);
    $171=($169?$166:$168);
    $172=(($inLow+($162<<3))|0);
    $173=(+(HEAPF64[(($172)>>3)]));
    $174=($171)-($173);
    $175=($170)+($174);
    $176=((($i_132)-(1))|0);
    $177=(($inHigh+($176<<3))|0);
    $178=(+(HEAPF64[(($177)>>3)]));
    $179=(($inClose+($176<<3))|0);
    $180=(+(HEAPF64[(($179)>>3)]));
    $181=(($inOpen+($176<<3))|0);
    $182=(+(HEAPF64[(($181)>>3)]));
    $183=$180<$182;
    $_13=($183?$182:$180);
    $184=($178)-($_13);
    $185=($183?$180:$182);
    $186=(($inLow+($176<<3))|0);
    $187=(+(HEAPF64[(($186)>>3)]));
    $188=($185)-($187);
    $189=($184)+($188);
    $192=$189;$_pn=$175;
   } else {
    $192=0.0;$_pn=0.0;
   }


   $193=($_pn)+($135);
   $194=($192)+($134);
   $195=((($i_132)+(1))|0);
   $196=($195|0)<($_startIdx|0);
   if ($196) {
    $i_132=$195;$135=$193;$134=$194;
   } else {
    break;
   }
  }
  HEAPF64[(($25)>>3)]=$193;
  HEAPF64[(($26)>>3)]=$194;
 }
 $130=($12|0)>($endIdx|0);
 $smax=($130?$12:$endIdx);
 $131=($smax|0)>($startIdx|0);
 $smax43=($131?$smax:$startIdx);
 $132=($12|0)>($startIdx|0);
 $smax44=($132?$12:$startIdx);
 $EqualTrailingIdx_0=$31;$ShadowVeryShortTrailingIdx_0=$24;$outIdx_0=0;$i_2=$_startIdx;
 while(1) {




  $198=((($i_2)-(2))|0);
  $199=(($inClose+($198<<3))|0);
  $200=(+(HEAPF64[(($199)>>3)]));
  $201=(($inOpen+($198<<3))|0);
  $202=(+(HEAPF64[(($201)>>3)]));
  $203=$200<$202;
  do {
   if ($203) {
    $205=(($inLow+($198<<3))|0);
    $206=(+(HEAPF64[(($205)>>3)]));
    $207=($200)-($206);
    $208=((HEAP32[((272)>>2)])|0);
    $209=(($208+344)|0);
    $210=(+(HEAPF64[(($209)>>3)]));
    $211=(($208+336)|0);
    $212=((HEAP32[(($211)>>2)])|0);
    $213=($212|0)==0;
    do {
     if ($213) {
      $219=(($208+332)|0);
      $220=((HEAP32[(($219)>>2)])|0);
      if (((($220|0))|0)==((2)|0)) {
       $229=(($inHigh+($198<<3))|0);
       $230=(+(HEAPF64[(($229)>>3)]));
       $231=$200<$202;
       $_15=($231?$202:$200);
       $232=($230)-($_15);
       $233=($231?$200:$202);
       $234=($233)-($206);
       $235=($234)+($232);
       $237=$235;
       break;
      } else if (((($220|0))|0)==((1)|0)) {
       $225=(($inHigh+($198<<3))|0);
       $226=(+(HEAPF64[(($225)>>3)]));
       $227=($226)-($206);
       $237=$227;
       break;
      } else if (((($220|0))|0)==((0)|0)) {
       $222=($200)-($202);
       $223=(+(Math_abs((+($222)))));
       $237=$223;
       break;
      } else {
       $237=0.0;
       break;
      }
     } else {
      $215=(+((($212|0))|0));
      $216=(+(HEAPF64[(($17)>>3)]));
      $217=($216)/($215);
      $237=$217;
     }
    } while(0);

    $238=($210)*($237);
    $239=((HEAP32[((272)>>2)])|0);
    $240=(($239+332)|0);
    $241=((HEAP32[(($240)>>2)])|0);
    $242=($241|0)==2;
    $243=($242?(2.0):(1.0));
    $244=($238)/($243);
    $245=$207<$244;
    if (!($245)) {
     label = 83;
     break;
    }
    $247=((($i_2)-(1))|0);
    $248=(($inClose+($247<<3))|0);
    $249=(+(HEAPF64[(($248)>>3)]));
    $250=(($inOpen+($247<<3))|0);
    $251=(+(HEAPF64[(($250)>>3)]));
    $252=$249<$251;
    if (!($252)) {
     label = 83;
     break;
    }
    $254=(($inLow+($247<<3))|0);
    $255=(+(HEAPF64[(($254)>>3)]));
    $256=($249)-($255);
    $257=(($239+344)|0);
    $258=(+(HEAPF64[(($257)>>3)]));
    $259=(($239+336)|0);
    $260=((HEAP32[(($259)>>2)])|0);
    $261=($260|0)==0;
    do {
     if ($261) {
      if (((($241|0))|0)==((0)|0)) {
       $268=($249)-($251);
       $269=(+(Math_abs((+($268)))));
       $283=$269;
       break;
      } else if (((($241|0))|0)==((2)|0)) {
       $275=(($inHigh+($247<<3))|0);
       $276=(+(HEAPF64[(($275)>>3)]));
       $277=$249<$251;
       $_17=($277?$251:$249);
       $278=($276)-($_17);
       $279=($277?$249:$251);
       $280=($279)-($255);
       $281=($280)+($278);
       $283=$281;
       break;
      } else if (((($241|0))|0)==((1)|0)) {
       $271=(($inHigh+($247<<3))|0);
       $272=(+(HEAPF64[(($271)>>3)]));
       $273=($272)-($255);
       $283=$273;
       break;
      } else {
       $283=0.0;
       break;
      }
     } else {
      $263=(+((($260|0))|0));
      $264=(+(HEAPF64[(($18)>>3)]));
      $265=($264)/($263);
      $283=$265;
     }
    } while(0);

    $284=($258)*($283);
    $285=((HEAP32[((272)>>2)])|0);
    $286=(($285+332)|0);
    $287=((HEAP32[(($286)>>2)])|0);
    $288=($287|0)==2;
    $289=($288?(2.0):(1.0));
    $290=($284)/($289);
    $291=$256<$290;
    if (!($291)) {
     label = 83;
     break;
    }
    $293=(($inClose+($i_2<<3))|0);
    $294=(+(HEAPF64[(($293)>>3)]));
    $295=(($inOpen+($i_2<<3))|0);
    $296=(+(HEAPF64[(($295)>>3)]));
    $297=$294<$296;
    if (!($297)) {
     label = 83;
     break;
    }
    $299=(($inLow+($i_2<<3))|0);
    $300=(+(HEAPF64[(($299)>>3)]));
    $301=($294)-($300);
    $302=(($285+344)|0);
    $303=(+(HEAPF64[(($302)>>3)]));
    $304=(($285+336)|0);
    $305=((HEAP32[(($304)>>2)])|0);
    $306=($305|0)==0;
    do {
     if ($306) {
      if (((($287|0))|0)==((0)|0)) {
       $313=($294)-($296);
       $314=(+(Math_abs((+($313)))));
       $328=$314;
       break;
      } else if (((($287|0))|0)==((1)|0)) {
       $316=(($inHigh+($i_2<<3))|0);
       $317=(+(HEAPF64[(($316)>>3)]));
       $318=($317)-($300);
       $328=$318;
       break;
      } else if (((($287|0))|0)==((2)|0)) {
       $320=(($inHigh+($i_2<<3))|0);
       $321=(+(HEAPF64[(($320)>>3)]));
       $322=$294<$296;
       $_19=($322?$296:$294);
       $323=($321)-($_19);
       $324=($322?$294:$296);
       $325=($324)-($300);
       $326=($325)+($323);
       $328=$326;
       break;
      } else {
       $328=0.0;
       break;
      }
     } else {
      $308=(+((($305|0))|0));
      $309=(+(HEAPF64[(($19)>>3)]));
      $310=($309)/($308);
      $328=$310;
     }
    } while(0);

    $329=($303)*($328);
    $330=((HEAP32[((272)>>2)])|0);
    $331=(($330+332)|0);
    $332=((HEAP32[(($331)>>2)])|0);
    $333=($332|0)==2;
    $334=($333?(2.0):(1.0));
    $335=($329)/($334);
    $336=$301<$335;
    if (!($336)) {
     label = 83;
     break;
    }
    $338=(+(HEAPF64[(($199)>>3)]));
    $339=(+(HEAPF64[(($248)>>3)]));
    $340=$338>$339;
    if (!($340)) {
     label = 83;
     break;
    }
    $342=(+(HEAPF64[(($293)>>3)]));
    $343=$339>$342;
    if (!($343)) {
     label = 83;
     break;
    }
    $345=(+(HEAPF64[(($250)>>3)]));
    $346=(($330+416)|0);
    $347=(+(HEAPF64[(($346)>>3)]));
    $348=(($330+408)|0);
    $349=((HEAP32[(($348)>>2)])|0);
    $350=($349|0)==0;
    do {
     if ($350) {
      $356=(($330+404)|0);
      $357=((HEAP32[(($356)>>2)])|0);
      if (((($357|0))|0)==((0)|0)) {
       $359=(+(HEAPF64[(($201)>>3)]));
       $360=($338)-($359);
       $361=(+(Math_abs((+($360)))));
       $378=$361;
       break;
      } else if (((($357|0))|0)==((2)|0)) {
       $368=(($inHigh+($198<<3))|0);
       $369=(+(HEAPF64[(($368)>>3)]));
       $370=(+(HEAPF64[(($201)>>3)]));
       $371=$338<$370;
       $_20=($371?$370:$338);
       $372=($369)-($_20);
       $373=($371?$338:$370);
       $374=(+(HEAPF64[(($205)>>3)]));
       $375=($373)-($374);
       $376=($372)+($375);
       $378=$376;
       break;
      } else if (((($357|0))|0)==((1)|0)) {
       $363=(($inHigh+($198<<3))|0);
       $364=(+(HEAPF64[(($363)>>3)]));
       $365=(+(HEAPF64[(($205)>>3)]));
       $366=($364)-($365);
       $378=$366;
       break;
      } else {
       $378=0.0;
       break;
      }
     } else {
      $352=(+((($349|0))|0));
      $353=(+(HEAPF64[(($25)>>3)]));
      $354=($353)/($352);
      $378=$354;
     }
    } while(0);

    $379=($347)*($378);
    $380=((HEAP32[((272)>>2)])|0);
    $381=(($380+404)|0);
    $382=((HEAP32[(($381)>>2)])|0);
    $383=($382|0)==2;
    $384=($383?(2.0):(1.0));
    $385=($379)/($384);
    $386=($338)+($385);
    $387=$345>$386;
    if ($387) {
     label = 83;
     break;
    }
    $389=(+(HEAPF64[(($250)>>3)]));
    $390=(+(HEAPF64[(($199)>>3)]));
    $391=(($380+416)|0);
    $392=(+(HEAPF64[(($391)>>3)]));
    $393=(($380+408)|0);
    $394=((HEAP32[(($393)>>2)])|0);
    $395=($394|0)==0;
    do {
     if ($395) {
      if (((($382|0))|0)==((1)|0)) {
       $406=(($inHigh+($198<<3))|0);
       $407=(+(HEAPF64[(($406)>>3)]));
       $408=(+(HEAPF64[(($205)>>3)]));
       $409=($407)-($408);
       $422=$409;
       break;
      } else if (((($382|0))|0)==((0)|0)) {
       $402=(+(HEAPF64[(($201)>>3)]));
       $403=($390)-($402);
       $404=(+(Math_abs((+($403)))));
       $422=$404;
       break;
      } else {
       if (!($383)) {
        $422=0.0;
        break;
       }
       $412=(($inHigh+($198<<3))|0);
       $413=(+(HEAPF64[(($412)>>3)]));
       $414=(+(HEAPF64[(($201)>>3)]));
       $415=$390<$414;
       $_21=($415?$414:$390);
       $416=($413)-($_21);
       $417=($415?$390:$414);
       $418=(+(HEAPF64[(($205)>>3)]));
       $419=($417)-($418);
       $420=($416)+($419);
       $422=$420;
       break;
      }
     } else {
      $397=(+((($394|0))|0));
      $398=(+(HEAPF64[(($25)>>3)]));
      $399=($398)/($397);
      $422=$399;
     }
    } while(0);

    $423=($392)*($422);
    $424=((HEAP32[((272)>>2)])|0);
    $425=(($424+404)|0);
    $426=((HEAP32[(($425)>>2)])|0);
    $427=($426|0)==2;
    $428=($427?(2.0):(1.0));
    $429=($423)/($428);
    $430=($390)-($429);
    $431=$389<$430;
    if ($431) {
     label = 83;
     break;
    }
    $433=(+(HEAPF64[(($295)>>3)]));
    $434=(+(HEAPF64[(($248)>>3)]));
    $435=(($424+416)|0);
    $436=(+(HEAPF64[(($435)>>3)]));
    $437=(($424+408)|0);
    $438=((HEAP32[(($437)>>2)])|0);
    $439=($438|0)==0;
    do {
     if ($439) {
      if (((($426|0))|0)==((1)|0)) {
       $450=(($inHigh+($247<<3))|0);
       $451=(+(HEAPF64[(($450)>>3)]));
       $452=(+(HEAPF64[(($254)>>3)]));
       $453=($451)-($452);
       $466=$453;
       break;
      } else if (((($426|0))|0)==((0)|0)) {
       $446=(+(HEAPF64[(($250)>>3)]));
       $447=($434)-($446);
       $448=(+(Math_abs((+($447)))));
       $466=$448;
       break;
      } else {
       if (!($427)) {
        $466=0.0;
        break;
       }
       $456=(($inHigh+($247<<3))|0);
       $457=(+(HEAPF64[(($456)>>3)]));
       $458=(+(HEAPF64[(($250)>>3)]));
       $459=$434<$458;
       $_22=($459?$458:$434);
       $460=($457)-($_22);
       $461=($459?$434:$458);
       $462=(+(HEAPF64[(($254)>>3)]));
       $463=($461)-($462);
       $464=($460)+($463);
       $466=$464;
       break;
      }
     } else {
      $441=(+((($438|0))|0));
      $442=(+(HEAPF64[(($26)>>3)]));
      $443=($442)/($441);
      $466=$443;
     }
    } while(0);

    $467=($436)*($466);
    $468=((HEAP32[((272)>>2)])|0);
    $469=(($468+404)|0);
    $470=((HEAP32[(($469)>>2)])|0);
    $471=($470|0)==2;
    $472=($471?(2.0):(1.0));
    $473=($467)/($472);
    $474=($434)+($473);
    $475=$433>$474;
    if ($475) {
     label = 83;
     break;
    }
    $477=(+(HEAPF64[(($295)>>3)]));
    $478=(+(HEAPF64[(($248)>>3)]));
    $479=(($468+416)|0);
    $480=(+(HEAPF64[(($479)>>3)]));
    $481=(($468+408)|0);
    $482=((HEAP32[(($481)>>2)])|0);
    $483=($482|0)==0;
    do {
     if ($483) {
      if (((($470|0))|0)==((0)|0)) {
       $490=(+(HEAPF64[(($250)>>3)]));
       $491=($478)-($490);
       $492=(+(Math_abs((+($491)))));
       $510=$492;
       break;
      } else if (((($470|0))|0)==((1)|0)) {
       $494=(($inHigh+($247<<3))|0);
       $495=(+(HEAPF64[(($494)>>3)]));
       $496=(+(HEAPF64[(($254)>>3)]));
       $497=($495)-($496);
       $510=$497;
       break;
      } else {
       if (!($471)) {
        $510=0.0;
        break;
       }
       $500=(($inHigh+($247<<3))|0);
       $501=(+(HEAPF64[(($500)>>3)]));
       $502=(+(HEAPF64[(($250)>>3)]));
       $503=$478<$502;
       $_23=($503?$502:$478);
       $504=($501)-($_23);
       $505=($503?$478:$502);
       $506=(+(HEAPF64[(($254)>>3)]));
       $507=($505)-($506);
       $508=($504)+($507);
       $510=$508;
       break;
      }
     } else {
      $485=(+((($482|0))|0));
      $486=(+(HEAPF64[(($26)>>3)]));
      $487=($486)/($485);
      $510=$487;
     }
    } while(0);

    $511=($480)*($510);
    $512=((HEAP32[((272)>>2)])|0);
    $513=(($512+404)|0);
    $514=((HEAP32[(($513)>>2)])|0);
    $515=($514|0)==2;
    $516=($515?(2.0):(1.0));
    $517=($511)/($516);
    $518=($478)-($517);
    $519=$477<$518;
    if ($519) {
     label = 83;
     break;
    }
    $521=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($521)>>2)]=-100;
   } else {
    label = 83;
   }
  } while(0);
  if ((label|0) == 83) {
   label = 0;
   $523=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($523)>>2)]=0;
  }
  $525=((HEAP32[((272)>>2)])|0);
  $526=(($525+332)|0);
  $527=((HEAP32[(($526)>>2)])|0);
  $totIdx_029=2;
  while(1) {

   if (((($527|0))|0)==((0)|0)) {
    $529=((($i_2)-($totIdx_029))|0);
    $530=(($inClose+($529<<3))|0);
    $531=(+(HEAPF64[(($530)>>3)]));
    $532=(($inOpen+($529<<3))|0);
    $533=(+(HEAPF64[(($532)>>3)]));
    $534=($531)-($533);
    $535=(+(Math_abs((+($534)))));
    $536=((($ShadowVeryShortTrailingIdx_0)-($totIdx_029))|0);
    $537=(($inClose+($536<<3))|0);
    $538=(+(HEAPF64[(($537)>>3)]));
    $539=(($inOpen+($536<<3))|0);
    $540=(+(HEAPF64[(($539)>>3)]));
    $541=($538)-($540);
    $542=(+(Math_abs((+($541)))));
    $585=$542;$584=$535;
   } else if (((($527|0))|0)==((1)|0)) {
    $543=((($i_2)-($totIdx_029))|0);
    $544=(($inHigh+($543<<3))|0);
    $545=(+(HEAPF64[(($544)>>3)]));
    $546=(($inLow+($543<<3))|0);
    $547=(+(HEAPF64[(($546)>>3)]));
    $548=($545)-($547);
    $549=((($ShadowVeryShortTrailingIdx_0)-($totIdx_029))|0);
    $550=(($inHigh+($549<<3))|0);
    $551=(+(HEAPF64[(($550)>>3)]));
    $552=(($inLow+($549<<3))|0);
    $553=(+(HEAPF64[(($552)>>3)]));
    $554=($551)-($553);
    $585=$554;$584=$548;
   } else if (((($527|0))|0)==((2)|0)) {
    $555=((($i_2)-($totIdx_029))|0);
    $556=(($inHigh+($555<<3))|0);
    $557=(+(HEAPF64[(($556)>>3)]));
    $558=(($inClose+($555<<3))|0);
    $559=(+(HEAPF64[(($558)>>3)]));
    $560=(($inOpen+($555<<3))|0);
    $561=(+(HEAPF64[(($560)>>3)]));
    $562=$559<$561;
    $_24=($562?$561:$559);
    $563=($557)-($_24);
    $564=($562?$559:$561);
    $565=(($inLow+($555<<3))|0);
    $566=(+(HEAPF64[(($565)>>3)]));
    $567=($564)-($566);
    $568=($563)+($567);
    $569=((($ShadowVeryShortTrailingIdx_0)-($totIdx_029))|0);
    $570=(($inHigh+($569<<3))|0);
    $571=(+(HEAPF64[(($570)>>3)]));
    $572=(($inClose+($569<<3))|0);
    $573=(+(HEAPF64[(($572)>>3)]));
    $574=(($inOpen+($569<<3))|0);
    $575=(+(HEAPF64[(($574)>>3)]));
    $576=$573<$575;
    $_25=($576?$575:$573);
    $577=($571)-($_25);
    $578=($576?$573:$575);
    $579=(($inLow+($569<<3))|0);
    $580=(+(HEAPF64[(($579)>>3)]));
    $581=($578)-($580);
    $582=($577)+($581);
    $585=$582;$584=$568;
   } else {
    $585=0.0;$584=0.0;
   }


   $586=($584)-($585);
   $587=(($ShadowVeryShortPeriodTotal+($totIdx_029<<3))|0);
   $588=(+(HEAPF64[(($587)>>3)]));
   $589=($588)+($586);
   HEAPF64[(($587)>>3)]=$589;
   $590=((($totIdx_029)-(1))|0);
   $591=($totIdx_029|0)>0;
   if ($591) {
    $totIdx_029=$590;
   } else {
    break;
   }
  }
  $593=((HEAP32[((272)>>2)])|0);
  $594=(($593+404)|0);
  $595=((HEAP32[(($594)>>2)])|0);
  if (((($595|0))|0)==((2)|0)) {
   $622=((($i_2)-(2))|0);
   $623=(($inHigh+($622<<3))|0);
   $624=(+(HEAPF64[(($623)>>3)]));
   $625=(($inClose+($622<<3))|0);
   $626=(+(HEAPF64[(($625)>>3)]));
   $627=(($inOpen+($622<<3))|0);
   $628=(+(HEAPF64[(($627)>>3)]));
   $629=$626<$628;
   $_26=($629?$628:$626);
   $630=($624)-($_26);
   $631=($629?$626:$628);
   $632=(($inLow+($622<<3))|0);
   $633=(+(HEAPF64[(($632)>>3)]));
   $634=($631)-($633);
   $635=($630)+($634);
   $636=((($EqualTrailingIdx_0)-(2))|0);
   $637=(($inHigh+($636<<3))|0);
   $638=(+(HEAPF64[(($637)>>3)]));
   $639=(($inClose+($636<<3))|0);
   $640=(+(HEAPF64[(($639)>>3)]));
   $641=(($inOpen+($636<<3))|0);
   $642=(+(HEAPF64[(($641)>>3)]));
   $643=$640<$642;
   $_27=($643?$642:$640);
   $644=($638)-($_27);
   $645=($643?$640:$642);
   $646=(($inLow+($636<<3))|0);
   $647=(+(HEAPF64[(($646)>>3)]));
   $648=($645)-($647);
   $649=($644)+($648);
   $652=$649;$651=$635;
  } else if (((($595|0))|0)==((0)|0)) {
   $596=((($i_2)-(2))|0);
   $597=(($inClose+($596<<3))|0);
   $598=(+(HEAPF64[(($597)>>3)]));
   $599=(($inOpen+($596<<3))|0);
   $600=(+(HEAPF64[(($599)>>3)]));
   $601=($598)-($600);
   $602=(+(Math_abs((+($601)))));
   $603=((($EqualTrailingIdx_0)-(2))|0);
   $604=(($inClose+($603<<3))|0);
   $605=(+(HEAPF64[(($604)>>3)]));
   $606=(($inOpen+($603<<3))|0);
   $607=(+(HEAPF64[(($606)>>3)]));
   $608=($605)-($607);
   $609=(+(Math_abs((+($608)))));
   $652=$609;$651=$602;
  } else if (((($595|0))|0)==((1)|0)) {
   $610=((($i_2)-(2))|0);
   $611=(($inHigh+($610<<3))|0);
   $612=(+(HEAPF64[(($611)>>3)]));
   $613=(($inLow+($610<<3))|0);
   $614=(+(HEAPF64[(($613)>>3)]));
   $615=($612)-($614);
   $616=((($EqualTrailingIdx_0)-(2))|0);
   $617=(($inHigh+($616<<3))|0);
   $618=(+(HEAPF64[(($617)>>3)]));
   $619=(($inLow+($616<<3))|0);
   $620=(+(HEAPF64[(($619)>>3)]));
   $621=($618)-($620);
   $652=$621;$651=$615;
  } else {
   $652=0.0;$651=0.0;
  }


  $653=($651)-($652);
  $654=(($EqualPeriodTotal+16)|0);
  $655=(+(HEAPF64[(($654)>>3)]));
  $656=($655)+($653);
  HEAPF64[(($654)>>3)]=$656;
  if (((($595|0))|0)==((2)|0)) {
   $661=((($i_2)-(1))|0);
   $662=(($inHigh+($661<<3))|0);
   $663=(+(HEAPF64[(($662)>>3)]));
   $664=(($inClose+($661<<3))|0);
   $665=(+(HEAPF64[(($664)>>3)]));
   $666=(($inOpen+($661<<3))|0);
   $667=(+(HEAPF64[(($666)>>3)]));
   $668=$665<$667;
   $_26_1=($668?$667:$665);
   $669=($663)-($_26_1);
   $670=($668?$665:$667);
   $671=(($inLow+($661<<3))|0);
   $672=(+(HEAPF64[(($671)>>3)]));
   $673=($670)-($672);
   $674=($669)+($673);
   $675=((($EqualTrailingIdx_0)-(1))|0);
   $676=(($inHigh+($675<<3))|0);
   $677=(+(HEAPF64[(($676)>>3)]));
   $678=(($inClose+($675<<3))|0);
   $679=(+(HEAPF64[(($678)>>3)]));
   $680=(($inOpen+($675<<3))|0);
   $681=(+(HEAPF64[(($680)>>3)]));
   $682=$679<$681;
   $_27_1=($682?$681:$679);
   $683=($677)-($_27_1);
   $684=($682?$679:$681);
   $685=(($inLow+($675<<3))|0);
   $686=(+(HEAPF64[(($685)>>3)]));
   $687=($684)-($686);
   $688=($683)+($687);
   $717=$688;$716=$674;
  } else if (((($595|0))|0)==((1)|0)) {
   $689=((($i_2)-(1))|0);
   $690=(($inHigh+($689<<3))|0);
   $691=(+(HEAPF64[(($690)>>3)]));
   $692=(($inLow+($689<<3))|0);
   $693=(+(HEAPF64[(($692)>>3)]));
   $694=($691)-($693);
   $695=((($EqualTrailingIdx_0)-(1))|0);
   $696=(($inHigh+($695<<3))|0);
   $697=(+(HEAPF64[(($696)>>3)]));
   $698=(($inLow+($695<<3))|0);
   $699=(+(HEAPF64[(($698)>>3)]));
   $700=($697)-($699);
   $717=$700;$716=$694;
  } else if (((($595|0))|0)==((0)|0)) {
   $701=((($i_2)-(1))|0);
   $702=(($inClose+($701<<3))|0);
   $703=(+(HEAPF64[(($702)>>3)]));
   $704=(($inOpen+($701<<3))|0);
   $705=(+(HEAPF64[(($704)>>3)]));
   $706=($703)-($705);
   $707=(+(Math_abs((+($706)))));
   $708=((($EqualTrailingIdx_0)-(1))|0);
   $709=(($inClose+($708<<3))|0);
   $710=(+(HEAPF64[(($709)>>3)]));
   $711=(($inOpen+($708<<3))|0);
   $712=(+(HEAPF64[(($711)>>3)]));
   $713=($710)-($712);
   $714=(+(Math_abs((+($713)))));
   $717=$714;$716=$707;
  } else {
   $717=0.0;$716=0.0;
  }


  $718=($716)-($717);
  $719=(($EqualPeriodTotal+8)|0);
  $720=(+(HEAPF64[(($719)>>3)]));
  $721=($720)+($718);
  HEAPF64[(($719)>>3)]=$721;
  $outIdx_1=((($outIdx_0)+(1))|0);
  $722=((($i_2)+(1))|0);
  $723=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $724=((($EqualTrailingIdx_0)+(1))|0);
  $725=($i_2|0)<($endIdx|0);
  if ($725) {
   $EqualTrailingIdx_0=$724;$ShadowVeryShortTrailingIdx_0=$723;$outIdx_0=$outIdx_1;$i_2=$722;
  } else {
   break;
  }
 }
 $658=((($smax43)+(1))|0);
 $659=((($658)-($smax44))|0);
 HEAP32[(($outNBElement)>>2)]=$659;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDLINNECK_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+408)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(1))|0);
 return (($7)|0);
}


function _TA_CDLINNECK($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond15=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$EqualPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$i_020=0,$EqualPeriodTotal_019=.0,$34=0,$35=0,$36=.0,$37=0;
 var $38=.0,$39=.0,$40=.0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$49=0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$_=.0,$57=.0,$58=.0;
 var $59=0,$60=.0,$61=.0,$62=.0,$64=.0,$65=.0,$66=0,$67=0,$BodyLongPeriodTotal_0_lcssa=.0,$68=0,$smax=0,$69=0,$smax23=0,$70=0,$smax24=0,$i_118=0,$BodyLongPeriodTotal_017=.0,$73=0,$74=0,$75=.0;
 var $76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=0,$83=.0,$84=0,$85=.0,$86=.0,$88=0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$94=.0,$95=0,$_8=.0,$96=.0;
 var $97=.0,$98=0,$99=.0,$100=.0,$101=.0,$103=.0,$104=.0,$105=0,$106=0,$EqualPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$EqualTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$108=0,$109=0,$110=.0,$111=0,$112=.0;
 var $113=0,$115=.0,$116=.0,$117=0,$118=0,$119=.0,$120=0,$121=0,$122=0,$124=.0,$125=.0,$127=0,$128=0,$130=0,$131=.0,$132=0,$133=.0,$134=.0,$136=0,$138=0;
 var $139=.0,$_9=.0,$140=.0,$141=0,$142=.0,$143=0,$144=.0,$145=.0,$146=.0,$148=.0,$149=.0,$150=0,$151=0,$152=0,$153=0,$154=.0,$155=.0,$156=0,$158=0,$159=.0;
 var $160=0,$161=.0,$162=0,$164=0,$165=.0,$166=0,$168=.0,$169=0,$170=.0,$171=0,$172=0,$173=0,$175=.0,$176=.0,$178=0,$179=0,$181=.0,$182=.0,$183=.0,$185=0;
 var $186=.0,$187=.0,$189=0,$190=.0,$191=.0,$192=0,$_10=.0,$193=.0,$194=.0,$195=.0,$196=.0,$198=.0,$199=.0,$200=0,$201=0,$202=0,$203=0,$204=.0,$205=.0,$206=.0;
 var $207=0,$209=.0,$210=.0,$211=0,$213=0,$215=0,$outIdx_1=0,$217=0,$218=0,$219=0,$221=.0,$222=.0,$223=.0,$224=.0,$226=0,$227=.0,$228=0,$229=.0,$230=.0,$232=0;
 var $233=.0,$234=.0,$235=.0,$236=0,$_11=.0,$237=.0,$238=.0,$239=0,$240=.0,$241=.0,$242=.0,$244=.0,$245=0,$246=0,$247=0,$249=0,$250=0,$251=.0,$252=0,$253=.0;
 var $254=.0,$255=.0,$257=0,$258=0,$259=.0,$260=0,$261=.0,$262=.0,$264=0,$265=0,$266=.0,$267=0,$268=.0,$269=0,$270=.0,$271=0,$_12=.0,$272=.0,$273=.0,$274=0;
 var $275=.0,$276=.0,$277=.0,$279=.0,$280=.0,$281=.0,$282=0,$283=0,$284=0,$286=.0,$287=.0,$288=.0,$289=.0,$291=0,$292=.0,$293=0,$294=.0,$295=.0,$297=0,$298=.0;
 var $299=.0,$300=.0,$301=0,$_13=.0,$302=.0,$303=.0,$304=0,$305=.0,$306=.0,$307=.0,$309=.0,$310=0,$311=0,$312=0,$314=0,$315=0,$316=.0,$317=0,$318=.0,$319=.0;
 var $320=.0,$322=0,$323=0,$324=.0,$325=0,$326=.0,$327=.0,$329=0,$330=0,$331=.0,$332=0,$333=.0,$334=0,$335=.0,$336=0,$_14=.0,$337=.0,$338=.0,$339=0,$340=.0;
 var $341=.0,$342=.0,$344=.0,$345=.0,$346=.0,$347=0,$348=0,$349=0,$350=0,$352=0,$353=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond15=$10|$or_cond5_not;
 if ($or_cond15) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLINNECK_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+408)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+168)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+404)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $EqualPeriodTotal_019=0.0;$i_020=$20;
  while(1) {


   if (((($27|0))|0)==((2)|0)) {
    $49=((($i_020)-(1))|0);
    $50=(($inHigh+($49<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inClose+($49<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inOpen+($49<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=$53<$55;
    $_=($56?$55:$53);
    $57=($51)-($_);
    $58=($56?$53:$55);
    $59=(($inLow+($49<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=($57)+($61);
    $64=$62;
   } else if (((($27|0))|0)==((0)|0)) {
    $34=((($i_020)-(1))|0);
    $35=(($inClose+($34<<3))|0);
    $36=(+(HEAPF64[(($35)>>3)]));
    $37=(($inOpen+($34<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=($36)-($38);
    $40=(+(Math_abs((+($39)))));
    $64=$40;
   } else if (((($27|0))|0)==((1)|0)) {
    $42=((($i_020)-(1))|0);
    $43=(($inHigh+($42<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=(($inLow+($42<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=($44)-($46);
    $64=$47;
   } else {
    $64=0.0;
   }

   $65=($EqualPeriodTotal_019)+($64);
   $66=((($i_020)+(1))|0);
   $67=($66|0)<($_startIdx|0);
   if ($67) {
    $EqualPeriodTotal_019=$65;$i_020=$66;
   } else {
    $EqualPeriodTotal_0_lcssa=$65;
    break;
   }
  }
 } else {
  $EqualPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+164)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $BodyLongPeriodTotal_017=0.0;$i_118=$23;
  while(1) {


   if (((($31|0))|0)==((2)|0)) {
    $88=((($i_118)-(1))|0);
    $89=(($inHigh+($88<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inClose+($88<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=(($inOpen+($88<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=$92<$94;
    $_8=($95?$94:$92);
    $96=($90)-($_8);
    $97=($95?$92:$94);
    $98=(($inLow+($88<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=($97)-($99);
    $101=($96)+($100);
    $103=$101;
   } else if (((($31|0))|0)==((1)|0)) {
    $81=((($i_118)-(1))|0);
    $82=(($inHigh+($81<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inLow+($81<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=($83)-($85);
    $103=$86;
   } else if (((($31|0))|0)==((0)|0)) {
    $73=((($i_118)-(1))|0);
    $74=(($inClose+($73<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($73<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $103=$79;
   } else {
    $103=0.0;
   }

   $104=($BodyLongPeriodTotal_017)+($103);
   $105=((($i_118)+(1))|0);
   $106=($105|0)<($_startIdx|0);
   if ($106) {
    $BodyLongPeriodTotal_017=$104;$i_118=$105;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$104;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $68=($12|0)>($endIdx|0);
 $smax=($68?$12:$endIdx);
 $69=($smax|0)>($startIdx|0);
 $smax23=($69?$smax:$startIdx);
 $70=($12|0)>($startIdx|0);
 $smax24=($70?$12:$startIdx);
 $BodyLongTrailingIdx_0=$23;$EqualTrailingIdx_0=$20;$outIdx_0=0;$i_2=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$EqualPeriodTotal_1=$EqualPeriodTotal_0_lcssa;
 while(1) {






  $108=((($i_2)-(1))|0);
  $109=(($inClose+($108<<3))|0);
  $110=(+(HEAPF64[(($109)>>3)]));
  $111=(($inOpen+($108<<3))|0);
  $112=(+(HEAPF64[(($111)>>3)]));
  $113=$110>=$112;
  do {
   if ($113) {
    label = 40;
   } else {
    $115=($110)-($112);
    $116=(+(Math_abs((+($115)))));
    $117=((HEAP32[((272)>>2)])|0);
    $118=(($117+176)|0);
    $119=(+(HEAPF64[(($118)>>3)]));
    $120=(($117+168)|0);
    $121=((HEAP32[(($120)>>2)])|0);
    $122=($121|0)==0;
    do {
     if ($122) {
      $127=(($117+164)|0);
      $128=((HEAP32[(($127)>>2)])|0);
      if (((($128|0))|0)==((0)|0)) {
       $148=$116;
       break;
      } else if (((($128|0))|0)==((1)|0)) {
       $130=(($inHigh+($108<<3))|0);
       $131=(+(HEAPF64[(($130)>>3)]));
       $132=(($inLow+($108<<3))|0);
       $133=(+(HEAPF64[(($132)>>3)]));
       $134=($131)-($133);
       $148=$134;
       break;
      }
      $136=($128|0)==2;
      if (!($136)) {
       $148=0.0;
       break;
      }
      $138=(($inHigh+($108<<3))|0);
      $139=(+(HEAPF64[(($138)>>3)]));
      $_9=($113?$110:$112);
      $140=($139)-($_9);
      $141=$110<$112;
      $142=($141?$110:$112);
      $143=(($inLow+($108<<3))|0);
      $144=(+(HEAPF64[(($143)>>3)]));
      $145=($142)-($144);
      $146=($140)+($145);
      $148=$146;
     } else {
      $124=(+((($121|0))|0));
      $125=($BodyLongPeriodTotal_1)/($124);
      $148=$125;
     }
    } while(0);

    $149=($119)*($148);
    $150=((HEAP32[((272)>>2)])|0);
    $151=(($150+164)|0);
    $152=((HEAP32[(($151)>>2)])|0);
    $153=($152|0)==2;
    $154=($153?(2.0):(1.0));
    $155=($149)/($154);
    $156=$116>$155;
    if (!($156)) {
     label = 40;
     break;
    }
    $158=(($inClose+($i_2<<3))|0);
    $159=(+(HEAPF64[(($158)>>3)]));
    $160=(($inOpen+($i_2<<3))|0);
    $161=(+(HEAPF64[(($160)>>3)]));
    $162=$159<$161;
    if ($162) {
     label = 40;
     break;
    }
    $164=(($inLow+($108<<3))|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    $166=$161<$165;
    if (!($166)) {
     label = 40;
     break;
    }
    $168=(+(HEAPF64[(($109)>>3)]));
    $169=(($150+416)|0);
    $170=(+(HEAPF64[(($169)>>3)]));
    $171=(($150+408)|0);
    $172=((HEAP32[(($171)>>2)])|0);
    $173=($172|0)==0;
    do {
     if ($173) {
      $178=(($150+404)|0);
      $179=((HEAP32[(($178)>>2)])|0);
      if (((($179|0))|0)==((0)|0)) {
       $181=(+(HEAPF64[(($111)>>3)]));
       $182=($168)-($181);
       $183=(+(Math_abs((+($182)))));
       $198=$183;
       break;
      } else if (((($179|0))|0)==((2)|0)) {
       $189=(($inHigh+($108<<3))|0);
       $190=(+(HEAPF64[(($189)>>3)]));
       $191=(+(HEAPF64[(($111)>>3)]));
       $192=$168<$191;
       $_10=($192?$191:$168);
       $193=($190)-($_10);
       $194=($192?$168:$191);
       $195=($194)-($165);
       $196=($193)+($195);
       $198=$196;
       break;
      } else if (((($179|0))|0)==((1)|0)) {
       $185=(($inHigh+($108<<3))|0);
       $186=(+(HEAPF64[(($185)>>3)]));
       $187=($186)-($165);
       $198=$187;
       break;
      } else {
       $198=0.0;
       break;
      }
     } else {
      $175=(+((($172|0))|0));
      $176=($EqualPeriodTotal_1)/($175);
      $198=$176;
     }
    } while(0);

    $199=($170)*($198);
    $200=((HEAP32[((272)>>2)])|0);
    $201=(($200+404)|0);
    $202=((HEAP32[(($201)>>2)])|0);
    $203=($202|0)==2;
    $204=($203?(2.0):(1.0));
    $205=($199)/($204);
    $206=($168)+($205);
    $207=$159>$206;
    if ($207) {
     label = 40;
     break;
    }
    $209=(+(HEAPF64[(($158)>>3)]));
    $210=(+(HEAPF64[(($109)>>3)]));
    $211=$209<$210;
    if ($211) {
     label = 40;
     break;
    }
    $213=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($213)>>2)]=-100;
   }
  } while(0);
  if ((label|0) == 40) {
   label = 0;
   $215=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($215)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $217=((HEAP32[((272)>>2)])|0);
  $218=(($217+404)|0);
  $219=((HEAP32[(($218)>>2)])|0);
  if (((($219|0))|0)==((1)|0)) {
   $226=(($inHigh+($108<<3))|0);
   $227=(+(HEAPF64[(($226)>>3)]));
   $228=(($inLow+($108<<3))|0);
   $229=(+(HEAPF64[(($228)>>3)]));
   $230=($227)-($229);
   $244=$230;
  } else if (((($219|0))|0)==((2)|0)) {
   $232=(($inHigh+($108<<3))|0);
   $233=(+(HEAPF64[(($232)>>3)]));
   $234=(+(HEAPF64[(($109)>>3)]));
   $235=(+(HEAPF64[(($111)>>3)]));
   $236=$234<$235;
   $_11=($236?$235:$234);
   $237=($233)-($_11);
   $238=($236?$234:$235);
   $239=(($inLow+($108<<3))|0);
   $240=(+(HEAPF64[(($239)>>3)]));
   $241=($238)-($240);
   $242=($237)+($241);
   $244=$242;
  } else if (((($219|0))|0)==((0)|0)) {
   $221=(+(HEAPF64[(($109)>>3)]));
   $222=(+(HEAPF64[(($111)>>3)]));
   $223=($221)-($222);
   $224=(+(Math_abs((+($223)))));
   $244=$224;
  } else {
   $244=0.0;
  }

  $245=((HEAP32[((272)>>2)])|0);
  $246=(($245+404)|0);
  $247=((HEAP32[(($246)>>2)])|0);
  if (((($247|0))|0)==((0)|0)) {
   $249=((($EqualTrailingIdx_0)-(1))|0);
   $250=(($inClose+($249<<3))|0);
   $251=(+(HEAPF64[(($250)>>3)]));
   $252=(($inOpen+($249<<3))|0);
   $253=(+(HEAPF64[(($252)>>3)]));
   $254=($251)-($253);
   $255=(+(Math_abs((+($254)))));
   $279=$255;
  } else if (((($247|0))|0)==((1)|0)) {
   $257=((($EqualTrailingIdx_0)-(1))|0);
   $258=(($inHigh+($257<<3))|0);
   $259=(+(HEAPF64[(($258)>>3)]));
   $260=(($inLow+($257<<3))|0);
   $261=(+(HEAPF64[(($260)>>3)]));
   $262=($259)-($261);
   $279=$262;
  } else if (((($247|0))|0)==((2)|0)) {
   $264=((($EqualTrailingIdx_0)-(1))|0);
   $265=(($inHigh+($264<<3))|0);
   $266=(+(HEAPF64[(($265)>>3)]));
   $267=(($inClose+($264<<3))|0);
   $268=(+(HEAPF64[(($267)>>3)]));
   $269=(($inOpen+($264<<3))|0);
   $270=(+(HEAPF64[(($269)>>3)]));
   $271=$268<$270;
   $_12=($271?$270:$268);
   $272=($266)-($_12);
   $273=($271?$268:$270);
   $274=(($inLow+($264<<3))|0);
   $275=(+(HEAPF64[(($274)>>3)]));
   $276=($273)-($275);
   $277=($272)+($276);
   $279=$277;
  } else {
   $279=0.0;
  }

  $280=($244)-($279);
  $281=($EqualPeriodTotal_1)+($280);
  $282=((HEAP32[((272)>>2)])|0);
  $283=(($282+164)|0);
  $284=((HEAP32[(($283)>>2)])|0);
  if (((($284|0))|0)==((0)|0)) {
   $286=(+(HEAPF64[(($109)>>3)]));
   $287=(+(HEAPF64[(($111)>>3)]));
   $288=($286)-($287);
   $289=(+(Math_abs((+($288)))));
   $309=$289;
  } else if (((($284|0))|0)==((1)|0)) {
   $291=(($inHigh+($108<<3))|0);
   $292=(+(HEAPF64[(($291)>>3)]));
   $293=(($inLow+($108<<3))|0);
   $294=(+(HEAPF64[(($293)>>3)]));
   $295=($292)-($294);
   $309=$295;
  } else if (((($284|0))|0)==((2)|0)) {
   $297=(($inHigh+($108<<3))|0);
   $298=(+(HEAPF64[(($297)>>3)]));
   $299=(+(HEAPF64[(($109)>>3)]));
   $300=(+(HEAPF64[(($111)>>3)]));
   $301=$299<$300;
   $_13=($301?$300:$299);
   $302=($298)-($_13);
   $303=($301?$299:$300);
   $304=(($inLow+($108<<3))|0);
   $305=(+(HEAPF64[(($304)>>3)]));
   $306=($303)-($305);
   $307=($302)+($306);
   $309=$307;
  } else {
   $309=0.0;
  }

  $310=((HEAP32[((272)>>2)])|0);
  $311=(($310+164)|0);
  $312=((HEAP32[(($311)>>2)])|0);
  if (((($312|0))|0)==((0)|0)) {
   $314=((($BodyLongTrailingIdx_0)-(1))|0);
   $315=(($inClose+($314<<3))|0);
   $316=(+(HEAPF64[(($315)>>3)]));
   $317=(($inOpen+($314<<3))|0);
   $318=(+(HEAPF64[(($317)>>3)]));
   $319=($316)-($318);
   $320=(+(Math_abs((+($319)))));
   $344=$320;
  } else if (((($312|0))|0)==((1)|0)) {
   $322=((($BodyLongTrailingIdx_0)-(1))|0);
   $323=(($inHigh+($322<<3))|0);
   $324=(+(HEAPF64[(($323)>>3)]));
   $325=(($inLow+($322<<3))|0);
   $326=(+(HEAPF64[(($325)>>3)]));
   $327=($324)-($326);
   $344=$327;
  } else if (((($312|0))|0)==((2)|0)) {
   $329=((($BodyLongTrailingIdx_0)-(1))|0);
   $330=(($inHigh+($329<<3))|0);
   $331=(+(HEAPF64[(($330)>>3)]));
   $332=(($inClose+($329<<3))|0);
   $333=(+(HEAPF64[(($332)>>3)]));
   $334=(($inOpen+($329<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=$333<$335;
   $_14=($336?$335:$333);
   $337=($331)-($_14);
   $338=($336?$333:$335);
   $339=(($inLow+($329<<3))|0);
   $340=(+(HEAPF64[(($339)>>3)]));
   $341=($338)-($340);
   $342=($337)+($341);
   $344=$342;
  } else {
   $344=0.0;
  }

  $345=($309)-($344);
  $346=($BodyLongPeriodTotal_1)+($345);
  $347=((($i_2)+(1))|0);
  $348=((($EqualTrailingIdx_0)+(1))|0);
  $349=((($BodyLongTrailingIdx_0)+(1))|0);
  $350=($i_2|0)<($endIdx|0);
  if ($350) {
   $BodyLongTrailingIdx_0=$349;$EqualTrailingIdx_0=$348;$outIdx_0=$outIdx_1;$i_2=$347;$BodyLongPeriodTotal_1=$346;$EqualPeriodTotal_1=$281;
  } else {
   break;
  }
 }
 $352=((($smax23)+(1))|0);
 $353=((($352)-($smax24))|0);
 HEAP32[(($outNBElement)>>2)]=$353;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLINVERTEDHAMMER_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$__=0,$10=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+264)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=(($1+336)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($_|0)>($8|0);
 $__=($9?$_:$8);
 $10=((($__)+(1))|0);
 return (($10)|0);
}


function _TA_CDLINVERTEDHAMMER($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond22=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$BodyPeriodTotal_0_lcssa=.0,$31=0,$32=0,$33=0,$34=0,$i_033=0,$BodyPeriodTotal_032=.0,$37=0;
 var $38=.0,$39=0,$40=.0,$41=.0,$42=.0,$44=0,$45=.0,$46=0,$47=.0,$48=.0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$_=.0,$57=.0,$58=.0;
 var $59=0,$60=.0,$61=.0,$62=.0,$64=.0,$65=.0,$66=0,$67=0,$ShadowLongPeriodTotal_0_lcssa=.0,$68=0,$69=0,$70=0,$71=0,$72=0,$smax37=0,$73=0,$smax38=0,$74=0,$75=0,$76=0;
 var $i_129=0,$ShadowLongPeriodTotal_028=.0,$79=0,$80=.0,$81=0,$82=.0,$83=.0,$84=.0,$86=0,$87=.0,$88=0,$89=.0,$90=.0,$92=0,$93=.0,$94=0,$95=.0,$96=0,$97=.0,$98=0;
 var $_8=.0,$99=.0,$100=.0,$101=0,$102=.0,$103=.0,$104=.0,$106=.0,$107=.0,$108=0,$109=0,$smax39=0,$i_2_lcssa=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$110=0,$smax=0,$111=0,$i_225=0,$ShadowVeryShortPeriodTotal_024=.0,$114=0;
 var $115=.0,$116=0,$117=.0,$118=.0,$119=.0,$121=0,$122=.0,$123=0,$124=.0,$125=.0,$127=0,$128=.0,$129=0,$130=.0,$131=0,$132=.0,$133=0,$_9=.0,$134=.0,$135=.0;
 var $136=0,$137=.0,$138=.0,$139=.0,$141=.0,$142=.0,$143=0,$144=0,$BodyPeriodTotal_1=.0,$ShadowLongPeriodTotal_1=.0,$ShadowVeryShortPeriodTotal_1=.0,$i_3=0,$outIdx_0=0,$BodyTrailingIdx_0=0,$ShadowLongTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$146=0,$147=.0,$148=0,$149=.0;
 var $150=.0,$151=.0,$152=0,$153=0,$154=.0,$155=0,$156=0,$157=0,$159=.0,$160=.0,$162=0,$163=0,$165=0,$166=.0,$167=0,$168=.0,$169=.0,$171=0,$173=0,$174=.0;
 var $175=0,$_10=.0,$176=.0,$177=.0,$178=0,$179=.0,$180=.0,$181=.0,$183=.0,$184=.0,$185=0,$186=0,$187=0,$188=0,$189=.0,$190=.0,$191=0,$193=0,$194=.0,$195=.0;
 var $196=.0,$197=0,$_11=.0,$198=.0,$199=0,$200=.0,$201=0,$202=0,$203=0,$205=.0,$206=.0,$208=0,$209=0,$211=.0,$212=.0,$214=0,$215=.0,$216=.0,$218=.0,$219=0;
 var $220=.0,$221=.0,$222=.0,$224=.0,$225=.0,$226=0,$227=0,$228=0,$229=0,$230=.0,$231=.0,$232=0,$234=.0,$235=.0,$236=0,$_13=.0,$237=0,$238=.0,$239=.0,$240=0;
 var $241=.0,$242=0,$243=0,$244=0,$246=.0,$247=.0,$249=0,$250=0,$252=.0,$253=.0,$255=.0,$256=.0,$258=.0,$_14=.0,$259=.0,$260=.0,$262=.0,$263=.0,$264=0,$265=0;
 var $266=0,$267=0,$268=.0,$269=.0,$270=0,$272=.0,$273=.0,$274=0,$_15=.0,$275=0,$276=0,$277=.0,$278=0,$279=.0,$280=0,$281=.0,$282=0,$284=0,$286=0,$outIdx_1=0;
 var $288=0,$289=0,$290=0,$292=.0,$293=.0,$294=.0,$295=.0,$297=0,$298=.0,$299=0,$300=.0,$301=.0,$303=0,$304=.0,$305=.0,$306=.0,$307=0,$_16=.0,$308=.0,$309=.0;
 var $310=0,$311=.0,$312=.0,$313=.0,$315=.0,$316=0,$317=0,$318=0,$320=0,$321=.0,$322=0,$323=.0,$324=.0,$325=.0,$327=0,$328=.0,$329=0,$330=.0,$331=.0,$333=0;
 var $334=.0,$335=0,$336=.0,$337=0,$338=.0,$339=0,$_17=.0,$340=.0,$341=.0,$342=0,$343=.0,$344=.0,$345=.0,$347=.0,$348=.0,$349=.0,$350=0,$351=0,$352=0,$354=.0;
 var $355=.0,$356=.0,$357=.0,$359=0,$360=.0,$361=0,$362=.0,$363=.0,$365=0,$366=.0,$367=.0,$368=.0,$369=0,$_18=.0,$370=.0,$371=.0,$372=0,$373=.0,$374=.0,$375=.0;
 var $377=.0,$378=0,$379=0,$380=0,$382=0,$383=.0,$384=0,$385=.0,$386=.0,$387=.0,$389=0,$390=.0,$391=0,$392=.0,$393=.0,$395=0,$396=.0,$397=0,$398=.0,$399=0;
 var $400=.0,$401=0,$_19=.0,$402=.0,$403=.0,$404=0,$405=.0,$406=.0,$407=.0,$409=.0,$410=.0,$411=.0,$412=0,$413=0,$414=0,$416=.0,$417=.0,$418=.0,$419=.0,$421=0;
 var $422=.0,$423=0,$424=.0,$425=.0,$427=0,$428=.0,$429=.0,$430=.0,$431=0,$_20=.0,$432=.0,$433=.0,$434=0,$435=.0,$436=.0,$437=.0,$439=.0,$440=0,$441=0,$442=0;
 var $444=0,$445=.0,$446=0,$447=.0,$448=.0,$449=.0,$451=0,$452=.0,$453=0,$454=.0,$455=.0,$457=0,$458=.0,$459=0,$460=.0,$461=0,$462=.0,$463=0,$_21=.0,$464=.0;
 var $465=.0,$466=0,$467=.0,$468=.0,$469=.0,$471=.0,$472=.0,$473=.0,$474=0,$475=0,$476=0,$477=0,$478=0,$480=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond22=$10|$or_cond5_not;
 if ($or_cond22) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLINVERTEDHAMMER_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+216)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+264)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=(($17+336)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($_startIdx)-($25))|0);
 $27=($19|0)>0;
 if ($27) {
  $28=((HEAP32[((272)>>2)])|0);
  $29=(($28+212)|0);
  $30=((HEAP32[(($29)>>2)])|0);
  $BodyPeriodTotal_032=0.0;$i_033=$20;
  while(1) {


   if (((($30|0))|0)==((0)|0)) {
    $37=(($inClose+($i_033<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=(($inOpen+($i_033<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=($38)-($40);
    $42=(+(Math_abs((+($41)))));
    $64=$42;
   } else if (((($30|0))|0)==((1)|0)) {
    $44=(($inHigh+($i_033<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=(($inLow+($i_033<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=($45)-($47);
    $64=$48;
   } else if (((($30|0))|0)==((2)|0)) {
    $50=(($inHigh+($i_033<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inClose+($i_033<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inOpen+($i_033<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=$53<$55;
    $_=($56?$55:$53);
    $57=($51)-($_);
    $58=($56?$53:$55);
    $59=(($inLow+($i_033<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=($57)+($61);
    $64=$62;
   } else {
    $64=0.0;
   }

   $65=($BodyPeriodTotal_032)+($64);
   $66=((($i_033)+(1))|0);
   $67=($66|0)<($_startIdx|0);
   if ($67) {
    $BodyPeriodTotal_032=$65;$i_033=$66;
   } else {
    $BodyPeriodTotal_0_lcssa=$65;
    break;
   }
  }
 } else {
  $BodyPeriodTotal_0_lcssa=0.0;
 }

 $31=($22|0)>0;
 if ($31) {
  $32=((HEAP32[((272)>>2)])|0);
  $33=(($32+260)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $ShadowLongPeriodTotal_028=0.0;$i_129=$23;
  while(1) {


   if (((($34|0))|0)==((0)|0)) {
    $79=(($inClose+($i_129<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=(($inOpen+($i_129<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=($80)-($82);
    $84=(+(Math_abs((+($83)))));
    $106=$84;
   } else if (((($34|0))|0)==((1)|0)) {
    $86=(($inHigh+($i_129<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=(($inLow+($i_129<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=($87)-($89);
    $106=$90;
   } else if (((($34|0))|0)==((2)|0)) {
    $92=(($inHigh+($i_129<<3))|0);
    $93=(+(HEAPF64[(($92)>>3)]));
    $94=(($inClose+($i_129<<3))|0);
    $95=(+(HEAPF64[(($94)>>3)]));
    $96=(($inOpen+($i_129<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=$95<$97;
    $_8=($98?$97:$95);
    $99=($93)-($_8);
    $100=($98?$95:$97);
    $101=(($inLow+($i_129<<3))|0);
    $102=(+(HEAPF64[(($101)>>3)]));
    $103=($100)-($102);
    $104=($99)+($103);
    $106=$104;
   } else {
    $106=0.0;
   }

   $107=($ShadowLongPeriodTotal_028)+($106);
   $108=((($i_129)+(1))|0);
   $109=($108|0)<($_startIdx|0);
   if ($109) {
    $ShadowLongPeriodTotal_028=$107;$i_129=$108;
   } else {
    $ShadowLongPeriodTotal_0_lcssa=$107;
    break;
   }
  }
 } else {
  $ShadowLongPeriodTotal_0_lcssa=0.0;
 }

 $68=($25|0)>0;
 if ($68) {
  $69=((HEAP32[((272)>>2)])|0);
  $70=(($69+332)|0);
  $71=((HEAP32[(($70)>>2)])|0);
  $72=($12|0)>($startIdx|0);
  $smax37=($72?$12:$startIdx);
  $73=($12|0)>($startIdx|0);
  $smax38=($73?$12:$startIdx);
  $74=((($smax38)+(1))|0);
  $75=((($74)-($25))|0);
  $76=($smax37|0)>($75|0);
  $ShadowVeryShortPeriodTotal_024=0.0;$i_225=$26;
  while(1) {


   if (((($71|0))|0)==((2)|0)) {
    $127=(($inHigh+($i_225<<3))|0);
    $128=(+(HEAPF64[(($127)>>3)]));
    $129=(($inClose+($i_225<<3))|0);
    $130=(+(HEAPF64[(($129)>>3)]));
    $131=(($inOpen+($i_225<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=$130<$132;
    $_9=($133?$132:$130);
    $134=($128)-($_9);
    $135=($133?$130:$132);
    $136=(($inLow+($i_225<<3))|0);
    $137=(+(HEAPF64[(($136)>>3)]));
    $138=($135)-($137);
    $139=($134)+($138);
    $141=$139;
   } else if (((($71|0))|0)==((0)|0)) {
    $114=(($inClose+($i_225<<3))|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $116=(($inOpen+($i_225<<3))|0);
    $117=(+(HEAPF64[(($116)>>3)]));
    $118=($115)-($117);
    $119=(+(Math_abs((+($118)))));
    $141=$119;
   } else if (((($71|0))|0)==((1)|0)) {
    $121=(($inHigh+($i_225<<3))|0);
    $122=(+(HEAPF64[(($121)>>3)]));
    $123=(($inLow+($i_225<<3))|0);
    $124=(+(HEAPF64[(($123)>>3)]));
    $125=($122)-($124);
    $141=$125;
   } else {
    $141=0.0;
   }

   $142=($ShadowVeryShortPeriodTotal_024)+($141);
   $143=((($i_225)+(1))|0);
   $144=($143|0)<($_startIdx|0);
   if ($144) {
    $ShadowVeryShortPeriodTotal_024=$142;$i_225=$143;
   } else {
    break;
   }
  }
  $smax39=($76?$smax37:$75);
  $ShadowVeryShortPeriodTotal_0_lcssa=$142;$i_2_lcssa=$smax39;
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;$i_2_lcssa=$26;
 }


 $110=($i_2_lcssa|0)>($endIdx|0);
 $smax=($110?$i_2_lcssa:$endIdx);
 $111=((($smax)+(1))|0);
 $ShadowVeryShortTrailingIdx_0=$26;$ShadowLongTrailingIdx_0=$23;$BodyTrailingIdx_0=$20;$outIdx_0=0;$i_3=$i_2_lcssa;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;$ShadowLongPeriodTotal_1=$ShadowLongPeriodTotal_0_lcssa;$BodyPeriodTotal_1=$BodyPeriodTotal_0_lcssa;
 while(1) {








  $146=(($inClose+($i_3<<3))|0);
  $147=(+(HEAPF64[(($146)>>3)]));
  $148=(($inOpen+($i_3<<3))|0);
  $149=(+(HEAPF64[(($148)>>3)]));
  $150=($147)-($149);
  $151=(+(Math_abs((+($150)))));
  $152=((HEAP32[((272)>>2)])|0);
  $153=(($152+224)|0);
  $154=(+(HEAPF64[(($153)>>3)]));
  $155=(($152+216)|0);
  $156=((HEAP32[(($155)>>2)])|0);
  $157=($156|0)==0;
  do {
   if ($157) {
    $162=(($152+212)|0);
    $163=((HEAP32[(($162)>>2)])|0);
    if (((($163|0))|0)==((1)|0)) {
     $165=(($inHigh+($i_3<<3))|0);
     $166=(+(HEAPF64[(($165)>>3)]));
     $167=(($inLow+($i_3<<3))|0);
     $168=(+(HEAPF64[(($167)>>3)]));
     $169=($166)-($168);
     $183=$169;
     break;
    } else if (((($163|0))|0)==((0)|0)) {
     $183=$151;
     break;
    }
    $171=($163|0)==2;
    if (!($171)) {
     $183=0.0;
     break;
    }
    $173=(($inHigh+($i_3<<3))|0);
    $174=(+(HEAPF64[(($173)>>3)]));
    $175=$147<$149;
    $_10=($175?$149:$147);
    $176=($174)-($_10);
    $177=($175?$147:$149);
    $178=(($inLow+($i_3<<3))|0);
    $179=(+(HEAPF64[(($178)>>3)]));
    $180=($177)-($179);
    $181=($176)+($180);
    $183=$181;
   } else {
    $159=(+((($156|0))|0));
    $160=($BodyPeriodTotal_1)/($159);
    $183=$160;
   }
  } while(0);

  $184=($154)*($183);
  $185=((HEAP32[((272)>>2)])|0);
  $186=(($185+212)|0);
  $187=((HEAP32[(($186)>>2)])|0);
  $188=($187|0)==2;
  $189=($188?(2.0):(1.0));
  $190=($184)/($189);
  $191=$151<$190;
  do {
   if ($191) {
    $193=(($inHigh+($i_3<<3))|0);
    $194=(+(HEAPF64[(($193)>>3)]));
    $195=(+(HEAPF64[(($146)>>3)]));
    $196=(+(HEAPF64[(($148)>>3)]));
    $197=$195<$196;
    $_11=($197?$196:$195);
    $198=($194)-($_11);
    $199=(($185+272)|0);
    $200=(+(HEAPF64[(($199)>>3)]));
    $201=(($185+264)|0);
    $202=((HEAP32[(($201)>>2)])|0);
    $203=($202|0)==0;
    do {
     if ($203) {
      $208=(($185+260)|0);
      $209=((HEAP32[(($208)>>2)])|0);
      if (((($209|0))|0)==((0)|0)) {
       $211=($195)-($196);
       $212=(+(Math_abs((+($211)))));
       $224=$212;
       break;
      } else if (((($209|0))|0)==((2)|0)) {
       $218=($197?$195:$196);
       $219=(($inLow+($i_3<<3))|0);
       $220=(+(HEAPF64[(($219)>>3)]));
       $221=($218)-($220);
       $222=($198)+($221);
       $224=$222;
       break;
      } else if (((($209|0))|0)==((1)|0)) {
       $214=(($inLow+($i_3<<3))|0);
       $215=(+(HEAPF64[(($214)>>3)]));
       $216=($194)-($215);
       $224=$216;
       break;
      } else {
       $224=0.0;
       break;
      }
     } else {
      $205=(+((($202|0))|0));
      $206=($ShadowLongPeriodTotal_1)/($205);
      $224=$206;
     }
    } while(0);

    $225=($200)*($224);
    $226=((HEAP32[((272)>>2)])|0);
    $227=(($226+260)|0);
    $228=((HEAP32[(($227)>>2)])|0);
    $229=($228|0)==2;
    $230=($229?(2.0):(1.0));
    $231=($225)/($230);
    $232=$198>$231;
    if (!($232)) {
     label = 52;
     break;
    }
    $234=(+(HEAPF64[(($146)>>3)]));
    $235=(+(HEAPF64[(($148)>>3)]));
    $236=$234<$235;
    $_13=($236?$234:$235);
    $237=(($inLow+($i_3<<3))|0);
    $238=(+(HEAPF64[(($237)>>3)]));
    $239=($_13)-($238);
    $240=(($226+344)|0);
    $241=(+(HEAPF64[(($240)>>3)]));
    $242=(($226+336)|0);
    $243=((HEAP32[(($242)>>2)])|0);
    $244=($243|0)==0;
    do {
     if ($244) {
      $249=(($226+332)|0);
      $250=((HEAP32[(($249)>>2)])|0);
      if (((($250|0))|0)==((1)|0)) {
       $255=(+(HEAPF64[(($193)>>3)]));
       $256=($255)-($238);
       $262=$256;
       break;
      } else if (((($250|0))|0)==((2)|0)) {
       $258=(+(HEAPF64[(($193)>>3)]));
       $_14=($236?$235:$234);
       $259=($258)-($_14);
       $260=($239)+($259);
       $262=$260;
       break;
      } else if (((($250|0))|0)==((0)|0)) {
       $252=($234)-($235);
       $253=(+(Math_abs((+($252)))));
       $262=$253;
       break;
      } else {
       $262=0.0;
       break;
      }
     } else {
      $246=(+((($243|0))|0));
      $247=($ShadowVeryShortPeriodTotal_1)/($246);
      $262=$247;
     }
    } while(0);

    $263=($241)*($262);
    $264=((HEAP32[((272)>>2)])|0);
    $265=(($264+332)|0);
    $266=((HEAP32[(($265)>>2)])|0);
    $267=($266|0)==2;
    $268=($267?(2.0):(1.0));
    $269=($263)/($268);
    $270=$239<$269;
    if (!($270)) {
     label = 52;
     break;
    }
    $272=(+(HEAPF64[(($148)>>3)]));
    $273=(+(HEAPF64[(($146)>>3)]));
    $274=$272>$273;
    $_15=($274?$272:$273);
    $275=((($i_3)-(1))|0);
    $276=(($inOpen+($275<<3))|0);
    $277=(+(HEAPF64[(($276)>>3)]));
    $278=(($inClose+($275<<3))|0);
    $279=(+(HEAPF64[(($278)>>3)]));
    $280=$277<$279;
    $281=($280?$277:$279);
    $282=$_15<$281;
    if (!($282)) {
     label = 52;
     break;
    }
    $284=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($284)>>2)]=100;
   } else {
    label = 52;
   }
  } while(0);
  if ((label|0) == 52) {
   label = 0;
   $286=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($286)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $288=((HEAP32[((272)>>2)])|0);
  $289=(($288+212)|0);
  $290=((HEAP32[(($289)>>2)])|0);
  if (((($290|0))|0)==((2)|0)) {
   $303=(($inHigh+($i_3<<3))|0);
   $304=(+(HEAPF64[(($303)>>3)]));
   $305=(+(HEAPF64[(($146)>>3)]));
   $306=(+(HEAPF64[(($148)>>3)]));
   $307=$305<$306;
   $_16=($307?$306:$305);
   $308=($304)-($_16);
   $309=($307?$305:$306);
   $310=(($inLow+($i_3<<3))|0);
   $311=(+(HEAPF64[(($310)>>3)]));
   $312=($309)-($311);
   $313=($308)+($312);
   $315=$313;
  } else if (((($290|0))|0)==((0)|0)) {
   $292=(+(HEAPF64[(($146)>>3)]));
   $293=(+(HEAPF64[(($148)>>3)]));
   $294=($292)-($293);
   $295=(+(Math_abs((+($294)))));
   $315=$295;
  } else if (((($290|0))|0)==((1)|0)) {
   $297=(($inHigh+($i_3<<3))|0);
   $298=(+(HEAPF64[(($297)>>3)]));
   $299=(($inLow+($i_3<<3))|0);
   $300=(+(HEAPF64[(($299)>>3)]));
   $301=($298)-($300);
   $315=$301;
  } else {
   $315=0.0;
  }

  $316=((HEAP32[((272)>>2)])|0);
  $317=(($316+212)|0);
  $318=((HEAP32[(($317)>>2)])|0);
  if (((($318|0))|0)==((0)|0)) {
   $320=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $321=(+(HEAPF64[(($320)>>3)]));
   $322=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $323=(+(HEAPF64[(($322)>>3)]));
   $324=($321)-($323);
   $325=(+(Math_abs((+($324)))));
   $347=$325;
  } else if (((($318|0))|0)==((1)|0)) {
   $327=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $328=(+(HEAPF64[(($327)>>3)]));
   $329=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $330=(+(HEAPF64[(($329)>>3)]));
   $331=($328)-($330);
   $347=$331;
  } else if (((($318|0))|0)==((2)|0)) {
   $333=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $334=(+(HEAPF64[(($333)>>3)]));
   $335=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $336=(+(HEAPF64[(($335)>>3)]));
   $337=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $338=(+(HEAPF64[(($337)>>3)]));
   $339=$336<$338;
   $_17=($339?$338:$336);
   $340=($334)-($_17);
   $341=($339?$336:$338);
   $342=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $343=(+(HEAPF64[(($342)>>3)]));
   $344=($341)-($343);
   $345=($340)+($344);
   $347=$345;
  } else {
   $347=0.0;
  }

  $348=($315)-($347);
  $349=($BodyPeriodTotal_1)+($348);
  $350=((HEAP32[((272)>>2)])|0);
  $351=(($350+260)|0);
  $352=((HEAP32[(($351)>>2)])|0);
  if (((($352|0))|0)==((2)|0)) {
   $365=(($inHigh+($i_3<<3))|0);
   $366=(+(HEAPF64[(($365)>>3)]));
   $367=(+(HEAPF64[(($146)>>3)]));
   $368=(+(HEAPF64[(($148)>>3)]));
   $369=$367<$368;
   $_18=($369?$368:$367);
   $370=($366)-($_18);
   $371=($369?$367:$368);
   $372=(($inLow+($i_3<<3))|0);
   $373=(+(HEAPF64[(($372)>>3)]));
   $374=($371)-($373);
   $375=($370)+($374);
   $377=$375;
  } else if (((($352|0))|0)==((0)|0)) {
   $354=(+(HEAPF64[(($146)>>3)]));
   $355=(+(HEAPF64[(($148)>>3)]));
   $356=($354)-($355);
   $357=(+(Math_abs((+($356)))));
   $377=$357;
  } else if (((($352|0))|0)==((1)|0)) {
   $359=(($inHigh+($i_3<<3))|0);
   $360=(+(HEAPF64[(($359)>>3)]));
   $361=(($inLow+($i_3<<3))|0);
   $362=(+(HEAPF64[(($361)>>3)]));
   $363=($360)-($362);
   $377=$363;
  } else {
   $377=0.0;
  }

  $378=((HEAP32[((272)>>2)])|0);
  $379=(($378+260)|0);
  $380=((HEAP32[(($379)>>2)])|0);
  if (((($380|0))|0)==((0)|0)) {
   $382=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $383=(+(HEAPF64[(($382)>>3)]));
   $384=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $385=(+(HEAPF64[(($384)>>3)]));
   $386=($383)-($385);
   $387=(+(Math_abs((+($386)))));
   $409=$387;
  } else if (((($380|0))|0)==((1)|0)) {
   $389=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $390=(+(HEAPF64[(($389)>>3)]));
   $391=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $392=(+(HEAPF64[(($391)>>3)]));
   $393=($390)-($392);
   $409=$393;
  } else if (((($380|0))|0)==((2)|0)) {
   $395=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $396=(+(HEAPF64[(($395)>>3)]));
   $397=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $398=(+(HEAPF64[(($397)>>3)]));
   $399=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $400=(+(HEAPF64[(($399)>>3)]));
   $401=$398<$400;
   $_19=($401?$400:$398);
   $402=($396)-($_19);
   $403=($401?$398:$400);
   $404=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $405=(+(HEAPF64[(($404)>>3)]));
   $406=($403)-($405);
   $407=($402)+($406);
   $409=$407;
  } else {
   $409=0.0;
  }

  $410=($377)-($409);
  $411=($ShadowLongPeriodTotal_1)+($410);
  $412=((HEAP32[((272)>>2)])|0);
  $413=(($412+332)|0);
  $414=((HEAP32[(($413)>>2)])|0);
  if (((($414|0))|0)==((1)|0)) {
   $421=(($inHigh+($i_3<<3))|0);
   $422=(+(HEAPF64[(($421)>>3)]));
   $423=(($inLow+($i_3<<3))|0);
   $424=(+(HEAPF64[(($423)>>3)]));
   $425=($422)-($424);
   $439=$425;
  } else if (((($414|0))|0)==((2)|0)) {
   $427=(($inHigh+($i_3<<3))|0);
   $428=(+(HEAPF64[(($427)>>3)]));
   $429=(+(HEAPF64[(($146)>>3)]));
   $430=(+(HEAPF64[(($148)>>3)]));
   $431=$429<$430;
   $_20=($431?$430:$429);
   $432=($428)-($_20);
   $433=($431?$429:$430);
   $434=(($inLow+($i_3<<3))|0);
   $435=(+(HEAPF64[(($434)>>3)]));
   $436=($433)-($435);
   $437=($432)+($436);
   $439=$437;
  } else if (((($414|0))|0)==((0)|0)) {
   $416=(+(HEAPF64[(($146)>>3)]));
   $417=(+(HEAPF64[(($148)>>3)]));
   $418=($416)-($417);
   $419=(+(Math_abs((+($418)))));
   $439=$419;
  } else {
   $439=0.0;
  }

  $440=((HEAP32[((272)>>2)])|0);
  $441=(($440+332)|0);
  $442=((HEAP32[(($441)>>2)])|0);
  if (((($442|0))|0)==((0)|0)) {
   $444=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $445=(+(HEAPF64[(($444)>>3)]));
   $446=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $447=(+(HEAPF64[(($446)>>3)]));
   $448=($445)-($447);
   $449=(+(Math_abs((+($448)))));
   $471=$449;
  } else if (((($442|0))|0)==((1)|0)) {
   $451=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $452=(+(HEAPF64[(($451)>>3)]));
   $453=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $454=(+(HEAPF64[(($453)>>3)]));
   $455=($452)-($454);
   $471=$455;
  } else if (((($442|0))|0)==((2)|0)) {
   $457=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $458=(+(HEAPF64[(($457)>>3)]));
   $459=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $460=(+(HEAPF64[(($459)>>3)]));
   $461=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $462=(+(HEAPF64[(($461)>>3)]));
   $463=$460<$462;
   $_21=($463?$462:$460);
   $464=($458)-($_21);
   $465=($463?$460:$462);
   $466=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $467=(+(HEAPF64[(($466)>>3)]));
   $468=($465)-($467);
   $469=($464)+($468);
   $471=$469;
  } else {
   $471=0.0;
  }

  $472=($439)-($471);
  $473=($ShadowVeryShortPeriodTotal_1)+($472);
  $474=((($i_3)+(1))|0);
  $475=((($BodyTrailingIdx_0)+(1))|0);
  $476=((($ShadowLongTrailingIdx_0)+(1))|0);
  $477=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $478=($i_3|0)<($endIdx|0);
  if ($478) {
   $ShadowVeryShortTrailingIdx_0=$477;$ShadowLongTrailingIdx_0=$476;$BodyTrailingIdx_0=$475;$outIdx_0=$outIdx_1;$i_3=$474;$ShadowVeryShortPeriodTotal_1=$473;$ShadowLongPeriodTotal_1=$411;$BodyPeriodTotal_1=$349;
  } else {
   break;
  }
 }
 $480=((($111)-($i_2_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$480;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLKICKING_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+336)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(1))|0);
 return (($7)|0);
}


function _TA_CDLKICKING($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $ShadowVeryShortPeriodTotal=0,$BodyLongPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond25=0,$12=0,$13=0,$_startIdx=0,$14=0;
 var $17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$_promoted33=.0,$_promoted34=.0;
 var $35=0,$36=0,$37=0,$38=0,$_promoted=.0,$_promoted29=.0,$40=.0,$41=.0,$i_031=0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$48=.0,$49=0,$50=.0,$51=0,$52=.0;
 var $53=.0,$54=.0,$55=0,$56=0,$57=.0,$58=0,$59=.0,$60=.0,$61=0,$62=.0,$63=0,$64=.0,$65=.0,$66=0,$67=0,$68=.0,$69=0,$70=.0,$71=0,$72=.0;
 var $73=0,$_=.0,$74=.0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$80=0,$81=.0,$82=0,$83=.0,$84=0,$85=.0,$86=0,$_8=.0,$87=.0,$88=.0,$89=0,$90=.0;
 var $91=.0,$92=.0,$_pn53=.0,$95=.0,$96=.0,$97=.0,$98=0,$99=0,$100=0,$smax=0,$101=0,$smax37=0,$102=0,$smax38=0,$104=.0,$105=.0,$i_128=0,$106=0,$107=0,$108=.0;
 var $109=0,$110=.0,$111=.0,$112=.0,$113=0,$114=.0,$115=0,$116=.0,$117=.0,$118=.0,$119=0,$120=0,$121=.0,$122=0,$123=.0,$124=.0,$125=0,$126=.0,$127=0,$128=.0;
 var $129=.0,$130=0,$131=0,$132=.0,$133=0,$134=.0,$135=0,$136=.0,$137=0,$_9=.0,$138=.0,$139=.0,$140=0,$141=.0,$142=.0,$143=.0,$144=0,$145=.0,$146=0,$147=.0;
 var $148=0,$149=.0,$150=0,$_10=.0,$151=.0,$152=.0,$153=0,$154=.0,$155=.0,$156=.0,$_pn=.0,$159=.0,$160=.0,$161=.0,$162=0,$163=0,$i_2=0,$outIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0;
 var $165=0,$166=0,$167=.0,$168=0,$169=.0,$170=0,$171=0,$172=0,$173=.0,$174=0,$175=.0,$176=0,$177=0,$178=0,$180=.0,$181=.0,$182=0,$183=0,$184=.0,$185=0;
 var $186=0,$187=0,$189=.0,$190=.0,$191=.0,$193=0,$194=0,$196=0,$197=.0,$198=0,$199=.0,$200=.0,$202=0,$204=0,$205=.0,$_11=.0,$206=.0,$207=0,$208=.0,$209=0;
 var $210=.0,$211=.0,$212=.0,$214=.0,$215=.0,$216=0,$217=0,$218=0,$219=0,$220=.0,$221=.0,$222=0,$224=0,$225=.0,$226=.0,$227=.0,$228=0,$_12=.0,$229=.0,$230=0;
 var $231=.0,$232=0,$233=0,$234=0,$236=.0,$237=.0,$238=.0,$240=0,$241=0,$243=.0,$244=.0,$246=0,$247=.0,$248=.0,$250=.0,$251=0,$252=.0,$253=.0,$254=.0,$256=.0;
 var $257=.0,$258=0,$259=0,$260=0,$261=0,$262=.0,$263=.0,$264=0,$266=.0,$267=.0,$268=0,$_14=.0,$269=0,$270=.0,$271=.0,$272=0,$273=.0,$274=0,$275=0,$276=0;
 var $278=.0,$279=.0,$280=.0,$283=.0,$284=.0,$286=.0,$287=.0,$289=.0,$_15=.0,$290=.0,$291=.0,$293=.0,$294=.0,$295=0,$296=0,$297=0,$298=0,$299=.0,$300=.0,$301=0;
 var $303=.0,$304=.0,$305=.0,$306=.0,$307=0,$308=.0,$309=0,$310=0,$311=0,$313=.0,$314=.0,$315=.0,$317=0,$318=0,$320=0,$321=.0,$322=0,$323=.0,$324=.0,$326=0;
 var $328=0,$329=.0,$330=0,$_16=.0,$331=.0,$332=.0,$333=0,$334=.0,$335=.0,$336=.0,$338=.0,$339=.0,$340=0,$341=0,$342=0,$343=0,$344=.0,$345=.0,$346=0,$348=0;
 var $349=.0,$350=.0,$351=.0,$352=0,$_17=.0,$353=.0,$354=0,$355=.0,$356=0,$357=0,$358=0,$360=.0,$361=.0,$362=.0,$364=0,$365=0,$367=.0,$368=.0,$370=0,$371=.0;
 var $372=.0,$374=.0,$375=0,$376=.0,$377=.0,$378=.0,$380=.0,$381=.0,$382=0,$383=0,$384=0,$385=0,$386=.0,$387=.0,$388=0,$390=.0,$391=.0,$392=0,$_19=.0,$393=0;
 var $394=.0,$395=.0,$396=0,$397=.0,$398=0,$399=0,$400=0,$402=.0,$403=.0,$404=.0,$407=.0,$408=.0,$410=.0,$411=.0,$413=.0,$_20=.0,$414=.0,$415=.0,$417=.0,$418=.0;
 var $419=0,$420=0,$421=0,$422=0,$423=.0,$424=.0,$425=0,$427=.0,$428=.0,$not_=0,$430=.0,$431=.0,$432=0,$434=.0,$435=.0,$436=0,$438=.0,$439=.0,$440=0,$442=.0;
 var $443=.0,$444=0,$445=0,$446=0,$448=0,$450=0,$451=0,$452=0,$453=0,$454=0,$totIdx_026=0,$456=0,$457=0,$458=.0,$459=0,$460=.0,$461=.0,$462=.0,$463=0,$464=0;
 var $465=.0,$466=0,$467=.0,$468=.0,$469=.0,$470=0,$471=0,$472=.0,$473=0,$474=.0,$475=.0,$476=0,$477=0,$478=.0,$479=0,$480=.0,$481=.0,$482=0,$483=0,$484=.0;
 var $485=0,$486=.0,$487=0,$488=.0,$489=0,$_21=.0,$490=.0,$491=.0,$492=0,$493=.0,$494=.0,$495=.0,$496=0,$497=0,$498=.0,$499=0,$500=.0,$501=0,$502=.0,$503=0;
 var $_22=.0,$504=.0,$505=.0,$506=0,$507=.0,$508=.0,$509=.0,$511=.0,$512=.0,$513=.0,$514=0,$515=.0,$516=.0,$517=0,$518=0,$519=.0,$520=0,$521=.0,$522=.0,$523=.0;
 var $524=0,$525=0,$526=.0,$527=0,$528=.0,$529=.0,$530=.0,$531=0,$532=0,$533=.0,$534=0,$535=.0,$536=.0,$537=0,$538=0,$539=.0,$540=0,$541=.0,$542=.0,$543=0;
 var $544=0,$545=.0,$546=0,$547=.0,$548=0,$549=.0,$550=0,$_23=.0,$551=.0,$552=.0,$553=0,$554=.0,$555=.0,$556=.0,$557=0,$558=0,$559=.0,$560=0,$561=.0,$562=0;
 var $563=.0,$564=0,$_24=.0,$565=.0,$566=.0,$567=0,$568=.0,$569=.0,$570=.0,$572=.0,$573=.0,$574=.0,$575=0,$576=.0,$577=.0,$578=0,$579=0,$outIdx_1=0,$581=0,$582=0;
 var $583=0,$584=0,$586=0,$587=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $ShadowVeryShortPeriodTotal=((sp)|0);
 $BodyLongPeriodTotal=(((sp)+(16))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond25=$10|$or_cond5_not;
 if ($or_cond25) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDLKICKING_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=(($ShadowVeryShortPeriodTotal+8)|0);
 $18=(($ShadowVeryShortPeriodTotal)|0);
 $19=$ShadowVeryShortPeriodTotal;
 _memset((((($19)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 $20=((HEAP32[((272)>>2)])|0);
 $21=(($20+336)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=(($BodyLongPeriodTotal+8)|0);
 $25=(($BodyLongPeriodTotal)|0);
 $26=$BodyLongPeriodTotal;
 _memset((((($26)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 $27=((HEAP32[((272)>>2)])|0);
 $28=(($27+168)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=((($_startIdx)-($29))|0);
 $31=($22|0)>0;
 if ($31) {
  $32=((HEAP32[((272)>>2)])|0);
  $33=(($32+332)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $_promoted33=(+(HEAPF64[(($17)>>3)]));
  $_promoted34=(+(HEAPF64[(($18)>>3)]));
  $i_031=$23;$41=$_promoted33;$40=$_promoted34;
  while(1) {



   if (((($34|0))|0)==((2)|0)) {
    $66=((($i_031)-(1))|0);
    $67=(($inHigh+($66<<3))|0);
    $68=(+(HEAPF64[(($67)>>3)]));
    $69=(($inClose+($66<<3))|0);
    $70=(+(HEAPF64[(($69)>>3)]));
    $71=(($inOpen+($66<<3))|0);
    $72=(+(HEAPF64[(($71)>>3)]));
    $73=$70<$72;
    $_=($73?$72:$70);
    $74=($68)-($_);
    $75=($73?$70:$72);
    $76=(($inLow+($66<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=($74)+($78);
    $80=(($inHigh+($i_031<<3))|0);
    $81=(+(HEAPF64[(($80)>>3)]));
    $82=(($inClose+($i_031<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inOpen+($i_031<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=$83<$85;
    $_8=($86?$85:$83);
    $87=($81)-($_8);
    $88=($86?$83:$85);
    $89=(($inLow+($i_031<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=($88)-($90);
    $92=($87)+($91);
    $95=$92;$_pn53=$79;
   } else if (((($34|0))|0)==((1)|0)) {
    $55=((($i_031)-(1))|0);
    $56=(($inHigh+($55<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=(($inLow+($55<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=($57)-($59);
    $61=(($inHigh+($i_031<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=(($inLow+($i_031<<3))|0);
    $64=(+(HEAPF64[(($63)>>3)]));
    $65=($62)-($64);
    $95=$65;$_pn53=$60;
   } else if (((($34|0))|0)==((0)|0)) {
    $42=((($i_031)-(1))|0);
    $43=(($inClose+($42<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=(($inOpen+($42<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=($44)-($46);
    $48=(+(Math_abs((+($47)))));
    $49=(($inClose+($i_031<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=(($inOpen+($i_031<<3))|0);
    $52=(+(HEAPF64[(($51)>>3)]));
    $53=($50)-($52);
    $54=(+(Math_abs((+($53)))));
    $95=$54;$_pn53=$48;
   } else {
    $95=0.0;$_pn53=0.0;
   }


   $96=($_pn53)+($41);
   $97=($95)+($40);
   $98=((($i_031)+(1))|0);
   $99=($98|0)<($_startIdx|0);
   if ($99) {
    $i_031=$98;$41=$96;$40=$97;
   } else {
    break;
   }
  }
  HEAPF64[(($17)>>3)]=$96;
  HEAPF64[(($18)>>3)]=$97;
 }
 $35=($29|0)>0;
 if ($35) {
  $36=((HEAP32[((272)>>2)])|0);
  $37=(($36+164)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $_promoted=(+(HEAPF64[(($24)>>3)]));
  $_promoted29=(+(HEAPF64[(($25)>>3)]));
  $i_128=$30;$105=$_promoted;$104=$_promoted29;
  while(1) {



   if (((($38|0))|0)==((2)|0)) {
    $130=((($i_128)-(1))|0);
    $131=(($inHigh+($130<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=(($inClose+($130<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=(($inOpen+($130<<3))|0);
    $136=(+(HEAPF64[(($135)>>3)]));
    $137=$134<$136;
    $_9=($137?$136:$134);
    $138=($132)-($_9);
    $139=($137?$134:$136);
    $140=(($inLow+($130<<3))|0);
    $141=(+(HEAPF64[(($140)>>3)]));
    $142=($139)-($141);
    $143=($138)+($142);
    $144=(($inHigh+($i_128<<3))|0);
    $145=(+(HEAPF64[(($144)>>3)]));
    $146=(($inClose+($i_128<<3))|0);
    $147=(+(HEAPF64[(($146)>>3)]));
    $148=(($inOpen+($i_128<<3))|0);
    $149=(+(HEAPF64[(($148)>>3)]));
    $150=$147<$149;
    $_10=($150?$149:$147);
    $151=($145)-($_10);
    $152=($150?$147:$149);
    $153=(($inLow+($i_128<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=($152)-($154);
    $156=($151)+($155);
    $159=$156;$_pn=$143;
   } else if (((($38|0))|0)==((1)|0)) {
    $119=((($i_128)-(1))|0);
    $120=(($inHigh+($119<<3))|0);
    $121=(+(HEAPF64[(($120)>>3)]));
    $122=(($inLow+($119<<3))|0);
    $123=(+(HEAPF64[(($122)>>3)]));
    $124=($121)-($123);
    $125=(($inHigh+($i_128<<3))|0);
    $126=(+(HEAPF64[(($125)>>3)]));
    $127=(($inLow+($i_128<<3))|0);
    $128=(+(HEAPF64[(($127)>>3)]));
    $129=($126)-($128);
    $159=$129;$_pn=$124;
   } else if (((($38|0))|0)==((0)|0)) {
    $106=((($i_128)-(1))|0);
    $107=(($inClose+($106<<3))|0);
    $108=(+(HEAPF64[(($107)>>3)]));
    $109=(($inOpen+($106<<3))|0);
    $110=(+(HEAPF64[(($109)>>3)]));
    $111=($108)-($110);
    $112=(+(Math_abs((+($111)))));
    $113=(($inClose+($i_128<<3))|0);
    $114=(+(HEAPF64[(($113)>>3)]));
    $115=(($inOpen+($i_128<<3))|0);
    $116=(+(HEAPF64[(($115)>>3)]));
    $117=($114)-($116);
    $118=(+(Math_abs((+($117)))));
    $159=$118;$_pn=$112;
   } else {
    $159=0.0;$_pn=0.0;
   }


   $160=($_pn)+($105);
   $161=($159)+($104);
   $162=((($i_128)+(1))|0);
   $163=($162|0)<($_startIdx|0);
   if ($163) {
    $i_128=$162;$105=$160;$104=$161;
   } else {
    break;
   }
  }
  HEAPF64[(($24)>>3)]=$160;
  HEAPF64[(($25)>>3)]=$161;
 }
 $100=($12|0)>($endIdx|0);
 $smax=($100?$12:$endIdx);
 $101=($smax|0)>($startIdx|0);
 $smax37=($101?$smax:$startIdx);
 $102=($12|0)>($startIdx|0);
 $smax38=($102?$12:$startIdx);
 $BodyLongTrailingIdx_0=$30;$ShadowVeryShortTrailingIdx_0=$23;$outIdx_0=0;$i_2=$_startIdx;
 while(1) {




  $165=((($i_2)-(1))|0);
  $166=(($inClose+($165<<3))|0);
  $167=(+(HEAPF64[(($166)>>3)]));
  $168=(($inOpen+($165<<3))|0);
  $169=(+(HEAPF64[(($168)>>3)]));
  $170=$167>=$169;
  $171=($170?1:-1);
  $172=(($inClose+($i_2<<3))|0);
  $173=(+(HEAPF64[(($172)>>3)]));
  $174=(($inOpen+($i_2<<3))|0);
  $175=(+(HEAPF64[(($174)>>3)]));
  $176=$173>=$175;
  $177=($176?-1:1);
  $178=($171|0)==($177|0);
  do {
   if ($178) {
    $180=($167)-($169);
    $181=(+(Math_abs((+($180)))));
    $182=((HEAP32[((272)>>2)])|0);
    $183=(($182+176)|0);
    $184=(+(HEAPF64[(($183)>>3)]));
    $185=(($182+168)|0);
    $186=((HEAP32[(($185)>>2)])|0);
    $187=($186|0)==0;
    do {
     if ($187) {
      $193=(($182+164)|0);
      $194=((HEAP32[(($193)>>2)])|0);
      if (((($194|0))|0)==((0)|0)) {
       $214=$181;
       break;
      } else if (((($194|0))|0)==((1)|0)) {
       $196=(($inHigh+($165<<3))|0);
       $197=(+(HEAPF64[(($196)>>3)]));
       $198=(($inLow+($165<<3))|0);
       $199=(+(HEAPF64[(($198)>>3)]));
       $200=($197)-($199);
       $214=$200;
       break;
      }
      $202=($194|0)==2;
      if (!($202)) {
       $214=0.0;
       break;
      }
      $204=(($inHigh+($165<<3))|0);
      $205=(+(HEAPF64[(($204)>>3)]));
      $_11=($170?$167:$169);
      $206=($205)-($_11);
      $207=$167<$169;
      $208=($207?$167:$169);
      $209=(($inLow+($165<<3))|0);
      $210=(+(HEAPF64[(($209)>>3)]));
      $211=($208)-($210);
      $212=($206)+($211);
      $214=$212;
     } else {
      $189=(+((($186|0))|0));
      $190=(+(HEAPF64[(($24)>>3)]));
      $191=($190)/($189);
      $214=$191;
     }
    } while(0);

    $215=($184)*($214);
    $216=((HEAP32[((272)>>2)])|0);
    $217=(($216+164)|0);
    $218=((HEAP32[(($217)>>2)])|0);
    $219=($218|0)==2;
    $220=($219?(2.0):(1.0));
    $221=($215)/($220);
    $222=$181>$221;
    if (!($222)) {
     label = 73;
     break;
    }
    $224=(($inHigh+($165<<3))|0);
    $225=(+(HEAPF64[(($224)>>3)]));
    $226=(+(HEAPF64[(($166)>>3)]));
    $227=(+(HEAPF64[(($168)>>3)]));
    $228=$226<$227;
    $_12=($228?$227:$226);
    $229=($225)-($_12);
    $230=(($216+344)|0);
    $231=(+(HEAPF64[(($230)>>3)]));
    $232=(($216+336)|0);
    $233=((HEAP32[(($232)>>2)])|0);
    $234=($233|0)==0;
    do {
     if ($234) {
      $240=(($216+332)|0);
      $241=((HEAP32[(($240)>>2)])|0);
      if (((($241|0))|0)==((0)|0)) {
       $243=($226)-($227);
       $244=(+(Math_abs((+($243)))));
       $256=$244;
       break;
      } else if (((($241|0))|0)==((1)|0)) {
       $246=(($inLow+($165<<3))|0);
       $247=(+(HEAPF64[(($246)>>3)]));
       $248=($225)-($247);
       $256=$248;
       break;
      } else if (((($241|0))|0)==((2)|0)) {
       $250=($228?$226:$227);
       $251=(($inLow+($165<<3))|0);
       $252=(+(HEAPF64[(($251)>>3)]));
       $253=($250)-($252);
       $254=($229)+($253);
       $256=$254;
       break;
      } else {
       $256=0.0;
       break;
      }
     } else {
      $236=(+((($233|0))|0));
      $237=(+(HEAPF64[(($17)>>3)]));
      $238=($237)/($236);
      $256=$238;
     }
    } while(0);

    $257=($231)*($256);
    $258=((HEAP32[((272)>>2)])|0);
    $259=(($258+332)|0);
    $260=((HEAP32[(($259)>>2)])|0);
    $261=($260|0)==2;
    $262=($261?(2.0):(1.0));
    $263=($257)/($262);
    $264=$229<$263;
    if (!($264)) {
     label = 73;
     break;
    }
    $266=(+(HEAPF64[(($166)>>3)]));
    $267=(+(HEAPF64[(($168)>>3)]));
    $268=$266<$267;
    $_14=($268?$266:$267);
    $269=(($inLow+($165<<3))|0);
    $270=(+(HEAPF64[(($269)>>3)]));
    $271=($_14)-($270);
    $272=(($258+344)|0);
    $273=(+(HEAPF64[(($272)>>3)]));
    $274=(($258+336)|0);
    $275=((HEAP32[(($274)>>2)])|0);
    $276=($275|0)==0;
    do {
     if ($276) {
      if (((($260|0))|0)==((1)|0)) {
       $286=(+(HEAPF64[(($224)>>3)]));
       $287=($286)-($270);
       $293=$287;
       break;
      } else if (((($260|0))|0)==((2)|0)) {
       $289=(+(HEAPF64[(($224)>>3)]));
       $_15=($268?$267:$266);
       $290=($289)-($_15);
       $291=($271)+($290);
       $293=$291;
       break;
      } else if (((($260|0))|0)==((0)|0)) {
       $283=($266)-($267);
       $284=(+(Math_abs((+($283)))));
       $293=$284;
       break;
      } else {
       $293=0.0;
       break;
      }
     } else {
      $278=(+((($275|0))|0));
      $279=(+(HEAPF64[(($17)>>3)]));
      $280=($279)/($278);
      $293=$280;
     }
    } while(0);

    $294=($273)*($293);
    $295=((HEAP32[((272)>>2)])|0);
    $296=(($295+332)|0);
    $297=((HEAP32[(($296)>>2)])|0);
    $298=($297|0)==2;
    $299=($298?(2.0):(1.0));
    $300=($294)/($299);
    $301=$271<$300;
    if (!($301)) {
     label = 73;
     break;
    }
    $303=(+(HEAPF64[(($172)>>3)]));
    $304=(+(HEAPF64[(($174)>>3)]));
    $305=($303)-($304);
    $306=(+(Math_abs((+($305)))));
    $307=(($295+176)|0);
    $308=(+(HEAPF64[(($307)>>3)]));
    $309=(($295+168)|0);
    $310=((HEAP32[(($309)>>2)])|0);
    $311=($310|0)==0;
    do {
     if ($311) {
      $317=(($295+164)|0);
      $318=((HEAP32[(($317)>>2)])|0);
      if (((($318|0))|0)==((1)|0)) {
       $320=(($inHigh+($i_2<<3))|0);
       $321=(+(HEAPF64[(($320)>>3)]));
       $322=(($inLow+($i_2<<3))|0);
       $323=(+(HEAPF64[(($322)>>3)]));
       $324=($321)-($323);
       $338=$324;
       break;
      } else if (((($318|0))|0)==((0)|0)) {
       $338=$306;
       break;
      }
      $326=($318|0)==2;
      if (!($326)) {
       $338=0.0;
       break;
      }
      $328=(($inHigh+($i_2<<3))|0);
      $329=(+(HEAPF64[(($328)>>3)]));
      $330=$303<$304;
      $_16=($330?$304:$303);
      $331=($329)-($_16);
      $332=($330?$303:$304);
      $333=(($inLow+($i_2<<3))|0);
      $334=(+(HEAPF64[(($333)>>3)]));
      $335=($332)-($334);
      $336=($331)+($335);
      $338=$336;
     } else {
      $313=(+((($310|0))|0));
      $314=(+(HEAPF64[(($25)>>3)]));
      $315=($314)/($313);
      $338=$315;
     }
    } while(0);

    $339=($308)*($338);
    $340=((HEAP32[((272)>>2)])|0);
    $341=(($340+164)|0);
    $342=((HEAP32[(($341)>>2)])|0);
    $343=($342|0)==2;
    $344=($343?(2.0):(1.0));
    $345=($339)/($344);
    $346=$306>$345;
    if (!($346)) {
     label = 73;
     break;
    }
    $348=(($inHigh+($i_2<<3))|0);
    $349=(+(HEAPF64[(($348)>>3)]));
    $350=(+(HEAPF64[(($172)>>3)]));
    $351=(+(HEAPF64[(($174)>>3)]));
    $352=$350<$351;
    $_17=($352?$351:$350);
    $353=($349)-($_17);
    $354=(($340+344)|0);
    $355=(+(HEAPF64[(($354)>>3)]));
    $356=(($340+336)|0);
    $357=((HEAP32[(($356)>>2)])|0);
    $358=($357|0)==0;
    do {
     if ($358) {
      $364=(($340+332)|0);
      $365=((HEAP32[(($364)>>2)])|0);
      if (((($365|0))|0)==((0)|0)) {
       $367=($350)-($351);
       $368=(+(Math_abs((+($367)))));
       $380=$368;
       break;
      } else if (((($365|0))|0)==((1)|0)) {
       $370=(($inLow+($i_2<<3))|0);
       $371=(+(HEAPF64[(($370)>>3)]));
       $372=($349)-($371);
       $380=$372;
       break;
      } else if (((($365|0))|0)==((2)|0)) {
       $374=($352?$350:$351);
       $375=(($inLow+($i_2<<3))|0);
       $376=(+(HEAPF64[(($375)>>3)]));
       $377=($374)-($376);
       $378=($353)+($377);
       $380=$378;
       break;
      } else {
       $380=0.0;
       break;
      }
     } else {
      $360=(+((($357|0))|0));
      $361=(+(HEAPF64[(($18)>>3)]));
      $362=($361)/($360);
      $380=$362;
     }
    } while(0);

    $381=($355)*($380);
    $382=((HEAP32[((272)>>2)])|0);
    $383=(($382+332)|0);
    $384=((HEAP32[(($383)>>2)])|0);
    $385=($384|0)==2;
    $386=($385?(2.0):(1.0));
    $387=($381)/($386);
    $388=$353<$387;
    if (!($388)) {
     label = 73;
     break;
    }
    $390=(+(HEAPF64[(($172)>>3)]));
    $391=(+(HEAPF64[(($174)>>3)]));
    $392=$390<$391;
    $_19=($392?$390:$391);
    $393=(($inLow+($i_2<<3))|0);
    $394=(+(HEAPF64[(($393)>>3)]));
    $395=($_19)-($394);
    $396=(($382+344)|0);
    $397=(+(HEAPF64[(($396)>>3)]));
    $398=(($382+336)|0);
    $399=((HEAP32[(($398)>>2)])|0);
    $400=($399|0)==0;
    do {
     if ($400) {
      if (((($384|0))|0)==((0)|0)) {
       $407=($390)-($391);
       $408=(+(Math_abs((+($407)))));
       $417=$408;
       break;
      } else if (((($384|0))|0)==((1)|0)) {
       $410=(+(HEAPF64[(($348)>>3)]));
       $411=($410)-($394);
       $417=$411;
       break;
      } else if (((($384|0))|0)==((2)|0)) {
       $413=(+(HEAPF64[(($348)>>3)]));
       $_20=($392?$391:$390);
       $414=($413)-($_20);
       $415=($395)+($414);
       $417=$415;
       break;
      } else {
       $417=0.0;
       break;
      }
     } else {
      $402=(+((($399|0))|0));
      $403=(+(HEAPF64[(($18)>>3)]));
      $404=($403)/($402);
      $417=$404;
     }
    } while(0);

    $418=($397)*($417);
    $419=((HEAP32[((272)>>2)])|0);
    $420=(($419+332)|0);
    $421=((HEAP32[(($420)>>2)])|0);
    $422=($421|0)==2;
    $423=($422?(2.0):(1.0));
    $424=($418)/($423);
    $425=$395<$424;
    if (!($425)) {
     label = 73;
     break;
    }
    $427=(+(HEAPF64[(($166)>>3)]));
    $428=(+(HEAPF64[(($168)>>3)]));
    $not_=$427<$428;
    if ($not_) {
     $430=(+(HEAPF64[(($393)>>3)]));
     $431=(+(HEAPF64[(($224)>>3)]));
     $432=$430>$431;
     if (!($432)) {
      label = 70;
     }
    } else {
     label = 70;
    }
    if ((label|0) == 70) {
     label = 0;
     $434=(+(HEAPF64[(($166)>>3)]));
     $435=(+(HEAPF64[(($168)>>3)]));
     $436=$434<$435;
     if ($436) {
      label = 73;
      break;
     }
     $438=(+(HEAPF64[(($348)>>3)]));
     $439=(+(HEAPF64[(($269)>>3)]));
     $440=$438<$439;
     if (!($440)) {
      label = 73;
      break;
     }
    }
    $442=(+(HEAPF64[(($172)>>3)]));
    $443=(+(HEAPF64[(($174)>>3)]));
    $444=$442>=$443;
    $445=($444?100:-100);
    $446=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($446)>>2)]=$445;
   } else {
    label = 73;
   }
  } while(0);
  if ((label|0) == 73) {
   label = 0;
   $448=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($448)>>2)]=0;
  }
  $450=((HEAP32[((272)>>2)])|0);
  $451=(($450+164)|0);
  $452=((HEAP32[(($451)>>2)])|0);
  $453=(($450+332)|0);
  $454=((HEAP32[(($453)>>2)])|0);
  $totIdx_026=1;
  while(1) {

   if (((($452|0))|0)==((0)|0)) {
    $456=((($i_2)-($totIdx_026))|0);
    $457=(($inClose+($456<<3))|0);
    $458=(+(HEAPF64[(($457)>>3)]));
    $459=(($inOpen+($456<<3))|0);
    $460=(+(HEAPF64[(($459)>>3)]));
    $461=($458)-($460);
    $462=(+(Math_abs((+($461)))));
    $463=((($BodyLongTrailingIdx_0)-($totIdx_026))|0);
    $464=(($inClose+($463<<3))|0);
    $465=(+(HEAPF64[(($464)>>3)]));
    $466=(($inOpen+($463<<3))|0);
    $467=(+(HEAPF64[(($466)>>3)]));
    $468=($465)-($467);
    $469=(+(Math_abs((+($468)))));
    $512=$469;$511=$462;
   } else if (((($452|0))|0)==((1)|0)) {
    $470=((($i_2)-($totIdx_026))|0);
    $471=(($inHigh+($470<<3))|0);
    $472=(+(HEAPF64[(($471)>>3)]));
    $473=(($inLow+($470<<3))|0);
    $474=(+(HEAPF64[(($473)>>3)]));
    $475=($472)-($474);
    $476=((($BodyLongTrailingIdx_0)-($totIdx_026))|0);
    $477=(($inHigh+($476<<3))|0);
    $478=(+(HEAPF64[(($477)>>3)]));
    $479=(($inLow+($476<<3))|0);
    $480=(+(HEAPF64[(($479)>>3)]));
    $481=($478)-($480);
    $512=$481;$511=$475;
   } else if (((($452|0))|0)==((2)|0)) {
    $482=((($i_2)-($totIdx_026))|0);
    $483=(($inHigh+($482<<3))|0);
    $484=(+(HEAPF64[(($483)>>3)]));
    $485=(($inClose+($482<<3))|0);
    $486=(+(HEAPF64[(($485)>>3)]));
    $487=(($inOpen+($482<<3))|0);
    $488=(+(HEAPF64[(($487)>>3)]));
    $489=$486<$488;
    $_21=($489?$488:$486);
    $490=($484)-($_21);
    $491=($489?$486:$488);
    $492=(($inLow+($482<<3))|0);
    $493=(+(HEAPF64[(($492)>>3)]));
    $494=($491)-($493);
    $495=($490)+($494);
    $496=((($BodyLongTrailingIdx_0)-($totIdx_026))|0);
    $497=(($inHigh+($496<<3))|0);
    $498=(+(HEAPF64[(($497)>>3)]));
    $499=(($inClose+($496<<3))|0);
    $500=(+(HEAPF64[(($499)>>3)]));
    $501=(($inOpen+($496<<3))|0);
    $502=(+(HEAPF64[(($501)>>3)]));
    $503=$500<$502;
    $_22=($503?$502:$500);
    $504=($498)-($_22);
    $505=($503?$500:$502);
    $506=(($inLow+($496<<3))|0);
    $507=(+(HEAPF64[(($506)>>3)]));
    $508=($505)-($507);
    $509=($504)+($508);
    $512=$509;$511=$495;
   } else {
    $512=0.0;$511=0.0;
   }


   $513=($511)-($512);
   $514=(($BodyLongPeriodTotal+($totIdx_026<<3))|0);
   $515=(+(HEAPF64[(($514)>>3)]));
   $516=($515)+($513);
   HEAPF64[(($514)>>3)]=$516;
   if (((($454|0))|0)==((1)|0)) {
    $531=((($i_2)-($totIdx_026))|0);
    $532=(($inHigh+($531<<3))|0);
    $533=(+(HEAPF64[(($532)>>3)]));
    $534=(($inLow+($531<<3))|0);
    $535=(+(HEAPF64[(($534)>>3)]));
    $536=($533)-($535);
    $537=((($ShadowVeryShortTrailingIdx_0)-($totIdx_026))|0);
    $538=(($inHigh+($537<<3))|0);
    $539=(+(HEAPF64[(($538)>>3)]));
    $540=(($inLow+($537<<3))|0);
    $541=(+(HEAPF64[(($540)>>3)]));
    $542=($539)-($541);
    $573=$542;$572=$536;
   } else if (((($454|0))|0)==((2)|0)) {
    $543=((($i_2)-($totIdx_026))|0);
    $544=(($inHigh+($543<<3))|0);
    $545=(+(HEAPF64[(($544)>>3)]));
    $546=(($inClose+($543<<3))|0);
    $547=(+(HEAPF64[(($546)>>3)]));
    $548=(($inOpen+($543<<3))|0);
    $549=(+(HEAPF64[(($548)>>3)]));
    $550=$547<$549;
    $_23=($550?$549:$547);
    $551=($545)-($_23);
    $552=($550?$547:$549);
    $553=(($inLow+($543<<3))|0);
    $554=(+(HEAPF64[(($553)>>3)]));
    $555=($552)-($554);
    $556=($551)+($555);
    $557=((($ShadowVeryShortTrailingIdx_0)-($totIdx_026))|0);
    $558=(($inHigh+($557<<3))|0);
    $559=(+(HEAPF64[(($558)>>3)]));
    $560=(($inClose+($557<<3))|0);
    $561=(+(HEAPF64[(($560)>>3)]));
    $562=(($inOpen+($557<<3))|0);
    $563=(+(HEAPF64[(($562)>>3)]));
    $564=$561<$563;
    $_24=($564?$563:$561);
    $565=($559)-($_24);
    $566=($564?$561:$563);
    $567=(($inLow+($557<<3))|0);
    $568=(+(HEAPF64[(($567)>>3)]));
    $569=($566)-($568);
    $570=($565)+($569);
    $573=$570;$572=$556;
   } else if (((($454|0))|0)==((0)|0)) {
    $517=((($i_2)-($totIdx_026))|0);
    $518=(($inClose+($517<<3))|0);
    $519=(+(HEAPF64[(($518)>>3)]));
    $520=(($inOpen+($517<<3))|0);
    $521=(+(HEAPF64[(($520)>>3)]));
    $522=($519)-($521);
    $523=(+(Math_abs((+($522)))));
    $524=((($ShadowVeryShortTrailingIdx_0)-($totIdx_026))|0);
    $525=(($inClose+($524<<3))|0);
    $526=(+(HEAPF64[(($525)>>3)]));
    $527=(($inOpen+($524<<3))|0);
    $528=(+(HEAPF64[(($527)>>3)]));
    $529=($526)-($528);
    $530=(+(Math_abs((+($529)))));
    $573=$530;$572=$523;
   } else {
    $573=0.0;$572=0.0;
   }


   $574=($572)-($573);
   $575=(($ShadowVeryShortPeriodTotal+($totIdx_026<<3))|0);
   $576=(+(HEAPF64[(($575)>>3)]));
   $577=($576)+($574);
   HEAPF64[(($575)>>3)]=$577;
   $578=((($totIdx_026)-(1))|0);
   $579=($totIdx_026|0)>0;
   if ($579) {
    $totIdx_026=$578;
   } else {
    break;
   }
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $581=((($i_2)+(1))|0);
  $582=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $583=((($BodyLongTrailingIdx_0)+(1))|0);
  $584=($i_2|0)<($endIdx|0);
  if ($584) {
   $BodyLongTrailingIdx_0=$583;$ShadowVeryShortTrailingIdx_0=$582;$outIdx_0=$outIdx_1;$i_2=$581;
  } else {
   break;
  }
 }
 $586=((($smax37)+(1))|0);
 $587=((($586)-($smax38))|0);
 HEAP32[(($outNBElement)>>2)]=$587;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDLKICKINGBYLENGTH_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+336)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(1))|0);
 return (($7)|0);
}


function _TA_CDLKICKINGBYLENGTH($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $ShadowVeryShortPeriodTotal=0,$BodyLongPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond25=0,$12=0,$13=0,$_startIdx=0,$14=0;
 var $17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$_promoted33=.0,$_promoted34=.0;
 var $35=0,$36=0,$37=0,$38=0,$_promoted=.0,$_promoted29=.0,$40=.0,$41=.0,$i_031=0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$48=.0,$49=0,$50=.0,$51=0,$52=.0;
 var $53=.0,$54=.0,$55=0,$56=0,$57=.0,$58=0,$59=.0,$60=.0,$61=0,$62=.0,$63=0,$64=.0,$65=.0,$66=0,$67=0,$68=.0,$69=0,$70=.0,$71=0,$72=.0;
 var $73=0,$_=.0,$74=.0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$80=0,$81=.0,$82=0,$83=.0,$84=0,$85=.0,$86=0,$_8=.0,$87=.0,$88=.0,$89=0,$90=.0;
 var $91=.0,$92=.0,$_pn53=.0,$95=.0,$96=.0,$97=.0,$98=0,$99=0,$100=0,$smax=0,$101=0,$smax37=0,$102=0,$smax38=0,$104=.0,$105=.0,$i_128=0,$106=0,$107=0,$108=.0;
 var $109=0,$110=.0,$111=.0,$112=.0,$113=0,$114=.0,$115=0,$116=.0,$117=.0,$118=.0,$119=0,$120=0,$121=.0,$122=0,$123=.0,$124=.0,$125=0,$126=.0,$127=0,$128=.0;
 var $129=.0,$130=0,$131=0,$132=.0,$133=0,$134=.0,$135=0,$136=.0,$137=0,$_9=.0,$138=.0,$139=.0,$140=0,$141=.0,$142=.0,$143=.0,$144=0,$145=.0,$146=0,$147=.0;
 var $148=0,$149=.0,$150=0,$_10=.0,$151=.0,$152=.0,$153=0,$154=.0,$155=.0,$156=.0,$_pn=.0,$159=.0,$160=.0,$161=.0,$162=0,$163=0,$i_2=0,$outIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0;
 var $165=0,$166=0,$167=.0,$168=0,$169=.0,$170=0,$171=0,$172=0,$173=.0,$174=0,$175=.0,$176=0,$177=0,$178=0,$180=.0,$181=.0,$182=0,$183=0,$184=.0,$185=0;
 var $186=0,$187=0,$189=.0,$190=.0,$191=.0,$193=0,$194=0,$196=0,$197=.0,$198=0,$199=.0,$200=.0,$202=0,$204=0,$205=.0,$_11=.0,$206=.0,$207=0,$208=.0,$209=0;
 var $210=.0,$211=.0,$212=.0,$214=.0,$215=.0,$216=0,$217=0,$218=0,$219=0,$220=.0,$221=.0,$222=0,$224=0,$225=.0,$226=.0,$227=.0,$228=0,$_12=.0,$229=.0,$230=0;
 var $231=.0,$232=0,$233=0,$234=0,$236=.0,$237=.0,$238=.0,$240=0,$241=0,$243=.0,$244=.0,$246=0,$247=.0,$248=.0,$250=.0,$251=0,$252=.0,$253=.0,$254=.0,$256=.0;
 var $257=.0,$258=0,$259=0,$260=0,$261=0,$262=.0,$263=.0,$264=0,$266=.0,$267=.0,$268=0,$_14=.0,$269=0,$270=.0,$271=.0,$272=0,$273=.0,$274=0,$275=0,$276=0;
 var $278=.0,$279=.0,$280=.0,$283=.0,$284=.0,$286=.0,$287=.0,$289=.0,$_15=.0,$290=.0,$291=.0,$293=.0,$294=.0,$295=0,$296=0,$297=0,$298=0,$299=.0,$300=.0,$301=0;
 var $303=.0,$304=.0,$305=.0,$306=.0,$307=0,$308=.0,$309=0,$310=0,$311=0,$313=.0,$314=.0,$315=.0,$317=0,$318=0,$320=0,$321=.0,$322=0,$323=.0,$324=.0,$326=0;
 var $328=0,$329=.0,$330=0,$_16=.0,$331=.0,$332=.0,$333=0,$334=.0,$335=.0,$336=.0,$338=.0,$339=.0,$340=0,$341=0,$342=0,$343=0,$344=.0,$345=.0,$346=0,$348=0;
 var $349=.0,$350=.0,$351=.0,$352=0,$_17=.0,$353=.0,$354=0,$355=.0,$356=0,$357=0,$358=0,$360=.0,$361=.0,$362=.0,$364=0,$365=0,$367=.0,$368=.0,$370=0,$371=.0;
 var $372=.0,$374=.0,$375=0,$376=.0,$377=.0,$378=.0,$380=.0,$381=.0,$382=0,$383=0,$384=0,$385=0,$386=.0,$387=.0,$388=0,$390=.0,$391=.0,$392=0,$_19=.0,$393=0;
 var $394=.0,$395=.0,$396=0,$397=.0,$398=0,$399=0,$400=0,$402=.0,$403=.0,$404=.0,$407=.0,$408=.0,$410=.0,$411=.0,$413=.0,$_20=.0,$414=.0,$415=.0,$417=.0,$418=.0;
 var $419=0,$420=0,$421=0,$422=0,$423=.0,$424=.0,$425=0,$427=.0,$428=.0,$not_=0,$430=.0,$431=.0,$432=0,$434=.0,$435=.0,$436=0,$438=.0,$439=.0,$440=0,$442=.0;
 var $443=.0,$444=.0,$445=.0,$446=.0,$447=.0,$448=.0,$449=.0,$450=0,$451=0,$452=0,$453=.0,$454=0,$455=.0,$456=0,$457=0,$458=0,$460=0,$462=0,$463=0,$464=0;
 var $465=0,$466=0,$totIdx_026=0,$468=0,$469=0,$470=.0,$471=0,$472=.0,$473=.0,$474=.0,$475=0,$476=0,$477=.0,$478=0,$479=.0,$480=.0,$481=.0,$482=0,$483=0,$484=.0;
 var $485=0,$486=.0,$487=.0,$488=0,$489=0,$490=.0,$491=0,$492=.0,$493=.0,$494=0,$495=0,$496=.0,$497=0,$498=.0,$499=0,$500=.0,$501=0,$_21=.0,$502=.0,$503=.0;
 var $504=0,$505=.0,$506=.0,$507=.0,$508=0,$509=0,$510=.0,$511=0,$512=.0,$513=0,$514=.0,$515=0,$_22=.0,$516=.0,$517=.0,$518=0,$519=.0,$520=.0,$521=.0,$523=.0;
 var $524=.0,$525=.0,$526=0,$527=.0,$528=.0,$529=0,$530=0,$531=.0,$532=0,$533=.0,$534=.0,$535=.0,$536=0,$537=0,$538=.0,$539=0,$540=.0,$541=.0,$542=.0,$543=0;
 var $544=0,$545=.0,$546=0,$547=.0,$548=.0,$549=0,$550=0,$551=.0,$552=0,$553=.0,$554=.0,$555=0,$556=0,$557=.0,$558=0,$559=.0,$560=0,$561=.0,$562=0,$_23=.0;
 var $563=.0,$564=.0,$565=0,$566=.0,$567=.0,$568=.0,$569=0,$570=0,$571=.0,$572=0,$573=.0,$574=0,$575=.0,$576=0,$_24=.0,$577=.0,$578=.0,$579=0,$580=.0,$581=.0;
 var $582=.0,$584=.0,$585=.0,$586=.0,$587=0,$588=.0,$589=.0,$590=0,$591=0,$outIdx_1=0,$593=0,$594=0,$595=0,$596=0,$598=0,$599=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $ShadowVeryShortPeriodTotal=((sp)|0);
 $BodyLongPeriodTotal=(((sp)+(16))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond25=$10|$or_cond5_not;
 if ($or_cond25) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDLKICKINGBYLENGTH_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=(($ShadowVeryShortPeriodTotal+8)|0);
 $18=(($ShadowVeryShortPeriodTotal)|0);
 $19=$ShadowVeryShortPeriodTotal;
 _memset((((($19)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 $20=((HEAP32[((272)>>2)])|0);
 $21=(($20+336)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=(($BodyLongPeriodTotal+8)|0);
 $25=(($BodyLongPeriodTotal)|0);
 $26=$BodyLongPeriodTotal;
 _memset((((($26)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 $27=((HEAP32[((272)>>2)])|0);
 $28=(($27+168)|0);
 $29=((HEAP32[(($28)>>2)])|0);
 $30=((($_startIdx)-($29))|0);
 $31=($22|0)>0;
 if ($31) {
  $32=((HEAP32[((272)>>2)])|0);
  $33=(($32+332)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $_promoted33=(+(HEAPF64[(($17)>>3)]));
  $_promoted34=(+(HEAPF64[(($18)>>3)]));
  $i_031=$23;$41=$_promoted33;$40=$_promoted34;
  while(1) {



   if (((($34|0))|0)==((0)|0)) {
    $42=((($i_031)-(1))|0);
    $43=(($inClose+($42<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=(($inOpen+($42<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=($44)-($46);
    $48=(+(Math_abs((+($47)))));
    $49=(($inClose+($i_031<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=(($inOpen+($i_031<<3))|0);
    $52=(+(HEAPF64[(($51)>>3)]));
    $53=($50)-($52);
    $54=(+(Math_abs((+($53)))));
    $95=$54;$_pn53=$48;
   } else if (((($34|0))|0)==((1)|0)) {
    $55=((($i_031)-(1))|0);
    $56=(($inHigh+($55<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=(($inLow+($55<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=($57)-($59);
    $61=(($inHigh+($i_031<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=(($inLow+($i_031<<3))|0);
    $64=(+(HEAPF64[(($63)>>3)]));
    $65=($62)-($64);
    $95=$65;$_pn53=$60;
   } else if (((($34|0))|0)==((2)|0)) {
    $66=((($i_031)-(1))|0);
    $67=(($inHigh+($66<<3))|0);
    $68=(+(HEAPF64[(($67)>>3)]));
    $69=(($inClose+($66<<3))|0);
    $70=(+(HEAPF64[(($69)>>3)]));
    $71=(($inOpen+($66<<3))|0);
    $72=(+(HEAPF64[(($71)>>3)]));
    $73=$70<$72;
    $_=($73?$72:$70);
    $74=($68)-($_);
    $75=($73?$70:$72);
    $76=(($inLow+($66<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=($74)+($78);
    $80=(($inHigh+($i_031<<3))|0);
    $81=(+(HEAPF64[(($80)>>3)]));
    $82=(($inClose+($i_031<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inOpen+($i_031<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=$83<$85;
    $_8=($86?$85:$83);
    $87=($81)-($_8);
    $88=($86?$83:$85);
    $89=(($inLow+($i_031<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=($88)-($90);
    $92=($87)+($91);
    $95=$92;$_pn53=$79;
   } else {
    $95=0.0;$_pn53=0.0;
   }


   $96=($_pn53)+($41);
   $97=($95)+($40);
   $98=((($i_031)+(1))|0);
   $99=($98|0)<($_startIdx|0);
   if ($99) {
    $i_031=$98;$41=$96;$40=$97;
   } else {
    break;
   }
  }
  HEAPF64[(($17)>>3)]=$96;
  HEAPF64[(($18)>>3)]=$97;
 }
 $35=($29|0)>0;
 if ($35) {
  $36=((HEAP32[((272)>>2)])|0);
  $37=(($36+164)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $_promoted=(+(HEAPF64[(($24)>>3)]));
  $_promoted29=(+(HEAPF64[(($25)>>3)]));
  $i_128=$30;$105=$_promoted;$104=$_promoted29;
  while(1) {



   if (((($38|0))|0)==((0)|0)) {
    $106=((($i_128)-(1))|0);
    $107=(($inClose+($106<<3))|0);
    $108=(+(HEAPF64[(($107)>>3)]));
    $109=(($inOpen+($106<<3))|0);
    $110=(+(HEAPF64[(($109)>>3)]));
    $111=($108)-($110);
    $112=(+(Math_abs((+($111)))));
    $113=(($inClose+($i_128<<3))|0);
    $114=(+(HEAPF64[(($113)>>3)]));
    $115=(($inOpen+($i_128<<3))|0);
    $116=(+(HEAPF64[(($115)>>3)]));
    $117=($114)-($116);
    $118=(+(Math_abs((+($117)))));
    $159=$118;$_pn=$112;
   } else if (((($38|0))|0)==((2)|0)) {
    $130=((($i_128)-(1))|0);
    $131=(($inHigh+($130<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=(($inClose+($130<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=(($inOpen+($130<<3))|0);
    $136=(+(HEAPF64[(($135)>>3)]));
    $137=$134<$136;
    $_9=($137?$136:$134);
    $138=($132)-($_9);
    $139=($137?$134:$136);
    $140=(($inLow+($130<<3))|0);
    $141=(+(HEAPF64[(($140)>>3)]));
    $142=($139)-($141);
    $143=($138)+($142);
    $144=(($inHigh+($i_128<<3))|0);
    $145=(+(HEAPF64[(($144)>>3)]));
    $146=(($inClose+($i_128<<3))|0);
    $147=(+(HEAPF64[(($146)>>3)]));
    $148=(($inOpen+($i_128<<3))|0);
    $149=(+(HEAPF64[(($148)>>3)]));
    $150=$147<$149;
    $_10=($150?$149:$147);
    $151=($145)-($_10);
    $152=($150?$147:$149);
    $153=(($inLow+($i_128<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=($152)-($154);
    $156=($151)+($155);
    $159=$156;$_pn=$143;
   } else if (((($38|0))|0)==((1)|0)) {
    $119=((($i_128)-(1))|0);
    $120=(($inHigh+($119<<3))|0);
    $121=(+(HEAPF64[(($120)>>3)]));
    $122=(($inLow+($119<<3))|0);
    $123=(+(HEAPF64[(($122)>>3)]));
    $124=($121)-($123);
    $125=(($inHigh+($i_128<<3))|0);
    $126=(+(HEAPF64[(($125)>>3)]));
    $127=(($inLow+($i_128<<3))|0);
    $128=(+(HEAPF64[(($127)>>3)]));
    $129=($126)-($128);
    $159=$129;$_pn=$124;
   } else {
    $159=0.0;$_pn=0.0;
   }


   $160=($_pn)+($105);
   $161=($159)+($104);
   $162=((($i_128)+(1))|0);
   $163=($162|0)<($_startIdx|0);
   if ($163) {
    $i_128=$162;$105=$160;$104=$161;
   } else {
    break;
   }
  }
  HEAPF64[(($24)>>3)]=$160;
  HEAPF64[(($25)>>3)]=$161;
 }
 $100=($12|0)>($endIdx|0);
 $smax=($100?$12:$endIdx);
 $101=($smax|0)>($startIdx|0);
 $smax37=($101?$smax:$startIdx);
 $102=($12|0)>($startIdx|0);
 $smax38=($102?$12:$startIdx);
 $BodyLongTrailingIdx_0=$30;$ShadowVeryShortTrailingIdx_0=$23;$outIdx_0=0;$i_2=$_startIdx;
 while(1) {




  $165=((($i_2)-(1))|0);
  $166=(($inClose+($165<<3))|0);
  $167=(+(HEAPF64[(($166)>>3)]));
  $168=(($inOpen+($165<<3))|0);
  $169=(+(HEAPF64[(($168)>>3)]));
  $170=$167>=$169;
  $171=($170?1:-1);
  $172=(($inClose+($i_2<<3))|0);
  $173=(+(HEAPF64[(($172)>>3)]));
  $174=(($inOpen+($i_2<<3))|0);
  $175=(+(HEAPF64[(($174)>>3)]));
  $176=$173>=$175;
  $177=($176?-1:1);
  $178=($171|0)==($177|0);
  do {
   if ($178) {
    $180=($167)-($169);
    $181=(+(Math_abs((+($180)))));
    $182=((HEAP32[((272)>>2)])|0);
    $183=(($182+176)|0);
    $184=(+(HEAPF64[(($183)>>3)]));
    $185=(($182+168)|0);
    $186=((HEAP32[(($185)>>2)])|0);
    $187=($186|0)==0;
    do {
     if ($187) {
      $193=(($182+164)|0);
      $194=((HEAP32[(($193)>>2)])|0);
      if (((($194|0))|0)==((1)|0)) {
       $196=(($inHigh+($165<<3))|0);
       $197=(+(HEAPF64[(($196)>>3)]));
       $198=(($inLow+($165<<3))|0);
       $199=(+(HEAPF64[(($198)>>3)]));
       $200=($197)-($199);
       $214=$200;
       break;
      } else if (((($194|0))|0)==((0)|0)) {
       $214=$181;
       break;
      }
      $202=($194|0)==2;
      if (!($202)) {
       $214=0.0;
       break;
      }
      $204=(($inHigh+($165<<3))|0);
      $205=(+(HEAPF64[(($204)>>3)]));
      $_11=($170?$167:$169);
      $206=($205)-($_11);
      $207=$167<$169;
      $208=($207?$167:$169);
      $209=(($inLow+($165<<3))|0);
      $210=(+(HEAPF64[(($209)>>3)]));
      $211=($208)-($210);
      $212=($206)+($211);
      $214=$212;
     } else {
      $189=(+((($186|0))|0));
      $190=(+(HEAPF64[(($24)>>3)]));
      $191=($190)/($189);
      $214=$191;
     }
    } while(0);

    $215=($184)*($214);
    $216=((HEAP32[((272)>>2)])|0);
    $217=(($216+164)|0);
    $218=((HEAP32[(($217)>>2)])|0);
    $219=($218|0)==2;
    $220=($219?(2.0):(1.0));
    $221=($215)/($220);
    $222=$181>$221;
    if (!($222)) {
     label = 73;
     break;
    }
    $224=(($inHigh+($165<<3))|0);
    $225=(+(HEAPF64[(($224)>>3)]));
    $226=(+(HEAPF64[(($166)>>3)]));
    $227=(+(HEAPF64[(($168)>>3)]));
    $228=$226<$227;
    $_12=($228?$227:$226);
    $229=($225)-($_12);
    $230=(($216+344)|0);
    $231=(+(HEAPF64[(($230)>>3)]));
    $232=(($216+336)|0);
    $233=((HEAP32[(($232)>>2)])|0);
    $234=($233|0)==0;
    do {
     if ($234) {
      $240=(($216+332)|0);
      $241=((HEAP32[(($240)>>2)])|0);
      if (((($241|0))|0)==((0)|0)) {
       $243=($226)-($227);
       $244=(+(Math_abs((+($243)))));
       $256=$244;
       break;
      } else if (((($241|0))|0)==((1)|0)) {
       $246=(($inLow+($165<<3))|0);
       $247=(+(HEAPF64[(($246)>>3)]));
       $248=($225)-($247);
       $256=$248;
       break;
      } else if (((($241|0))|0)==((2)|0)) {
       $250=($228?$226:$227);
       $251=(($inLow+($165<<3))|0);
       $252=(+(HEAPF64[(($251)>>3)]));
       $253=($250)-($252);
       $254=($229)+($253);
       $256=$254;
       break;
      } else {
       $256=0.0;
       break;
      }
     } else {
      $236=(+((($233|0))|0));
      $237=(+(HEAPF64[(($17)>>3)]));
      $238=($237)/($236);
      $256=$238;
     }
    } while(0);

    $257=($231)*($256);
    $258=((HEAP32[((272)>>2)])|0);
    $259=(($258+332)|0);
    $260=((HEAP32[(($259)>>2)])|0);
    $261=($260|0)==2;
    $262=($261?(2.0):(1.0));
    $263=($257)/($262);
    $264=$229<$263;
    if (!($264)) {
     label = 73;
     break;
    }
    $266=(+(HEAPF64[(($166)>>3)]));
    $267=(+(HEAPF64[(($168)>>3)]));
    $268=$266<$267;
    $_14=($268?$266:$267);
    $269=(($inLow+($165<<3))|0);
    $270=(+(HEAPF64[(($269)>>3)]));
    $271=($_14)-($270);
    $272=(($258+344)|0);
    $273=(+(HEAPF64[(($272)>>3)]));
    $274=(($258+336)|0);
    $275=((HEAP32[(($274)>>2)])|0);
    $276=($275|0)==0;
    do {
     if ($276) {
      if (((($260|0))|0)==((1)|0)) {
       $286=(+(HEAPF64[(($224)>>3)]));
       $287=($286)-($270);
       $293=$287;
       break;
      } else if (((($260|0))|0)==((0)|0)) {
       $283=($266)-($267);
       $284=(+(Math_abs((+($283)))));
       $293=$284;
       break;
      } else if (((($260|0))|0)==((2)|0)) {
       $289=(+(HEAPF64[(($224)>>3)]));
       $_15=($268?$267:$266);
       $290=($289)-($_15);
       $291=($271)+($290);
       $293=$291;
       break;
      } else {
       $293=0.0;
       break;
      }
     } else {
      $278=(+((($275|0))|0));
      $279=(+(HEAPF64[(($17)>>3)]));
      $280=($279)/($278);
      $293=$280;
     }
    } while(0);

    $294=($273)*($293);
    $295=((HEAP32[((272)>>2)])|0);
    $296=(($295+332)|0);
    $297=((HEAP32[(($296)>>2)])|0);
    $298=($297|0)==2;
    $299=($298?(2.0):(1.0));
    $300=($294)/($299);
    $301=$271<$300;
    if (!($301)) {
     label = 73;
     break;
    }
    $303=(+(HEAPF64[(($172)>>3)]));
    $304=(+(HEAPF64[(($174)>>3)]));
    $305=($303)-($304);
    $306=(+(Math_abs((+($305)))));
    $307=(($295+176)|0);
    $308=(+(HEAPF64[(($307)>>3)]));
    $309=(($295+168)|0);
    $310=((HEAP32[(($309)>>2)])|0);
    $311=($310|0)==0;
    do {
     if ($311) {
      $317=(($295+164)|0);
      $318=((HEAP32[(($317)>>2)])|0);
      if (((($318|0))|0)==((1)|0)) {
       $320=(($inHigh+($i_2<<3))|0);
       $321=(+(HEAPF64[(($320)>>3)]));
       $322=(($inLow+($i_2<<3))|0);
       $323=(+(HEAPF64[(($322)>>3)]));
       $324=($321)-($323);
       $338=$324;
       break;
      } else if (((($318|0))|0)==((0)|0)) {
       $338=$306;
       break;
      }
      $326=($318|0)==2;
      if (!($326)) {
       $338=0.0;
       break;
      }
      $328=(($inHigh+($i_2<<3))|0);
      $329=(+(HEAPF64[(($328)>>3)]));
      $330=$303<$304;
      $_16=($330?$304:$303);
      $331=($329)-($_16);
      $332=($330?$303:$304);
      $333=(($inLow+($i_2<<3))|0);
      $334=(+(HEAPF64[(($333)>>3)]));
      $335=($332)-($334);
      $336=($331)+($335);
      $338=$336;
     } else {
      $313=(+((($310|0))|0));
      $314=(+(HEAPF64[(($25)>>3)]));
      $315=($314)/($313);
      $338=$315;
     }
    } while(0);

    $339=($308)*($338);
    $340=((HEAP32[((272)>>2)])|0);
    $341=(($340+164)|0);
    $342=((HEAP32[(($341)>>2)])|0);
    $343=($342|0)==2;
    $344=($343?(2.0):(1.0));
    $345=($339)/($344);
    $346=$306>$345;
    if (!($346)) {
     label = 73;
     break;
    }
    $348=(($inHigh+($i_2<<3))|0);
    $349=(+(HEAPF64[(($348)>>3)]));
    $350=(+(HEAPF64[(($172)>>3)]));
    $351=(+(HEAPF64[(($174)>>3)]));
    $352=$350<$351;
    $_17=($352?$351:$350);
    $353=($349)-($_17);
    $354=(($340+344)|0);
    $355=(+(HEAPF64[(($354)>>3)]));
    $356=(($340+336)|0);
    $357=((HEAP32[(($356)>>2)])|0);
    $358=($357|0)==0;
    do {
     if ($358) {
      $364=(($340+332)|0);
      $365=((HEAP32[(($364)>>2)])|0);
      if (((($365|0))|0)==((0)|0)) {
       $367=($350)-($351);
       $368=(+(Math_abs((+($367)))));
       $380=$368;
       break;
      } else if (((($365|0))|0)==((1)|0)) {
       $370=(($inLow+($i_2<<3))|0);
       $371=(+(HEAPF64[(($370)>>3)]));
       $372=($349)-($371);
       $380=$372;
       break;
      } else if (((($365|0))|0)==((2)|0)) {
       $374=($352?$350:$351);
       $375=(($inLow+($i_2<<3))|0);
       $376=(+(HEAPF64[(($375)>>3)]));
       $377=($374)-($376);
       $378=($353)+($377);
       $380=$378;
       break;
      } else {
       $380=0.0;
       break;
      }
     } else {
      $360=(+((($357|0))|0));
      $361=(+(HEAPF64[(($18)>>3)]));
      $362=($361)/($360);
      $380=$362;
     }
    } while(0);

    $381=($355)*($380);
    $382=((HEAP32[((272)>>2)])|0);
    $383=(($382+332)|0);
    $384=((HEAP32[(($383)>>2)])|0);
    $385=($384|0)==2;
    $386=($385?(2.0):(1.0));
    $387=($381)/($386);
    $388=$353<$387;
    if (!($388)) {
     label = 73;
     break;
    }
    $390=(+(HEAPF64[(($172)>>3)]));
    $391=(+(HEAPF64[(($174)>>3)]));
    $392=$390<$391;
    $_19=($392?$390:$391);
    $393=(($inLow+($i_2<<3))|0);
    $394=(+(HEAPF64[(($393)>>3)]));
    $395=($_19)-($394);
    $396=(($382+344)|0);
    $397=(+(HEAPF64[(($396)>>3)]));
    $398=(($382+336)|0);
    $399=((HEAP32[(($398)>>2)])|0);
    $400=($399|0)==0;
    do {
     if ($400) {
      if (((($384|0))|0)==((0)|0)) {
       $407=($390)-($391);
       $408=(+(Math_abs((+($407)))));
       $417=$408;
       break;
      } else if (((($384|0))|0)==((1)|0)) {
       $410=(+(HEAPF64[(($348)>>3)]));
       $411=($410)-($394);
       $417=$411;
       break;
      } else if (((($384|0))|0)==((2)|0)) {
       $413=(+(HEAPF64[(($348)>>3)]));
       $_20=($392?$391:$390);
       $414=($413)-($_20);
       $415=($395)+($414);
       $417=$415;
       break;
      } else {
       $417=0.0;
       break;
      }
     } else {
      $402=(+((($399|0))|0));
      $403=(+(HEAPF64[(($18)>>3)]));
      $404=($403)/($402);
      $417=$404;
     }
    } while(0);

    $418=($397)*($417);
    $419=((HEAP32[((272)>>2)])|0);
    $420=(($419+332)|0);
    $421=((HEAP32[(($420)>>2)])|0);
    $422=($421|0)==2;
    $423=($422?(2.0):(1.0));
    $424=($418)/($423);
    $425=$395<$424;
    if (!($425)) {
     label = 73;
     break;
    }
    $427=(+(HEAPF64[(($166)>>3)]));
    $428=(+(HEAPF64[(($168)>>3)]));
    $not_=$427<$428;
    if ($not_) {
     $430=(+(HEAPF64[(($393)>>3)]));
     $431=(+(HEAPF64[(($224)>>3)]));
     $432=$430>$431;
     if (!($432)) {
      label = 70;
     }
    } else {
     label = 70;
    }
    if ((label|0) == 70) {
     label = 0;
     $434=(+(HEAPF64[(($166)>>3)]));
     $435=(+(HEAPF64[(($168)>>3)]));
     $436=$434<$435;
     if ($436) {
      label = 73;
      break;
     }
     $438=(+(HEAPF64[(($348)>>3)]));
     $439=(+(HEAPF64[(($269)>>3)]));
     $440=$438<$439;
     if (!($440)) {
      label = 73;
      break;
     }
    }
    $442=(+(HEAPF64[(($172)>>3)]));
    $443=(+(HEAPF64[(($174)>>3)]));
    $444=($442)-($443);
    $445=(+(Math_abs((+($444)))));
    $446=(+(HEAPF64[(($166)>>3)]));
    $447=(+(HEAPF64[(($168)>>3)]));
    $448=($446)-($447);
    $449=(+(Math_abs((+($448)))));
    $450=$445>$449;
    $451=($450?$i_2:$165);
    $452=(($inClose+($451<<3))|0);
    $453=(+(HEAPF64[(($452)>>3)]));
    $454=(($inOpen+($451<<3))|0);
    $455=(+(HEAPF64[(($454)>>3)]));
    $456=$453>=$455;
    $457=($456?100:-100);
    $458=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($458)>>2)]=$457;
   } else {
    label = 73;
   }
  } while(0);
  if ((label|0) == 73) {
   label = 0;
   $460=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($460)>>2)]=0;
  }
  $462=((HEAP32[((272)>>2)])|0);
  $463=(($462+164)|0);
  $464=((HEAP32[(($463)>>2)])|0);
  $465=(($462+332)|0);
  $466=((HEAP32[(($465)>>2)])|0);
  $totIdx_026=1;
  while(1) {

   if (((($464|0))|0)==((0)|0)) {
    $468=((($i_2)-($totIdx_026))|0);
    $469=(($inClose+($468<<3))|0);
    $470=(+(HEAPF64[(($469)>>3)]));
    $471=(($inOpen+($468<<3))|0);
    $472=(+(HEAPF64[(($471)>>3)]));
    $473=($470)-($472);
    $474=(+(Math_abs((+($473)))));
    $475=((($BodyLongTrailingIdx_0)-($totIdx_026))|0);
    $476=(($inClose+($475<<3))|0);
    $477=(+(HEAPF64[(($476)>>3)]));
    $478=(($inOpen+($475<<3))|0);
    $479=(+(HEAPF64[(($478)>>3)]));
    $480=($477)-($479);
    $481=(+(Math_abs((+($480)))));
    $524=$481;$523=$474;
   } else if (((($464|0))|0)==((1)|0)) {
    $482=((($i_2)-($totIdx_026))|0);
    $483=(($inHigh+($482<<3))|0);
    $484=(+(HEAPF64[(($483)>>3)]));
    $485=(($inLow+($482<<3))|0);
    $486=(+(HEAPF64[(($485)>>3)]));
    $487=($484)-($486);
    $488=((($BodyLongTrailingIdx_0)-($totIdx_026))|0);
    $489=(($inHigh+($488<<3))|0);
    $490=(+(HEAPF64[(($489)>>3)]));
    $491=(($inLow+($488<<3))|0);
    $492=(+(HEAPF64[(($491)>>3)]));
    $493=($490)-($492);
    $524=$493;$523=$487;
   } else if (((($464|0))|0)==((2)|0)) {
    $494=((($i_2)-($totIdx_026))|0);
    $495=(($inHigh+($494<<3))|0);
    $496=(+(HEAPF64[(($495)>>3)]));
    $497=(($inClose+($494<<3))|0);
    $498=(+(HEAPF64[(($497)>>3)]));
    $499=(($inOpen+($494<<3))|0);
    $500=(+(HEAPF64[(($499)>>3)]));
    $501=$498<$500;
    $_21=($501?$500:$498);
    $502=($496)-($_21);
    $503=($501?$498:$500);
    $504=(($inLow+($494<<3))|0);
    $505=(+(HEAPF64[(($504)>>3)]));
    $506=($503)-($505);
    $507=($502)+($506);
    $508=((($BodyLongTrailingIdx_0)-($totIdx_026))|0);
    $509=(($inHigh+($508<<3))|0);
    $510=(+(HEAPF64[(($509)>>3)]));
    $511=(($inClose+($508<<3))|0);
    $512=(+(HEAPF64[(($511)>>3)]));
    $513=(($inOpen+($508<<3))|0);
    $514=(+(HEAPF64[(($513)>>3)]));
    $515=$512<$514;
    $_22=($515?$514:$512);
    $516=($510)-($_22);
    $517=($515?$512:$514);
    $518=(($inLow+($508<<3))|0);
    $519=(+(HEAPF64[(($518)>>3)]));
    $520=($517)-($519);
    $521=($516)+($520);
    $524=$521;$523=$507;
   } else {
    $524=0.0;$523=0.0;
   }


   $525=($523)-($524);
   $526=(($BodyLongPeriodTotal+($totIdx_026<<3))|0);
   $527=(+(HEAPF64[(($526)>>3)]));
   $528=($527)+($525);
   HEAPF64[(($526)>>3)]=$528;
   if (((($466|0))|0)==((0)|0)) {
    $529=((($i_2)-($totIdx_026))|0);
    $530=(($inClose+($529<<3))|0);
    $531=(+(HEAPF64[(($530)>>3)]));
    $532=(($inOpen+($529<<3))|0);
    $533=(+(HEAPF64[(($532)>>3)]));
    $534=($531)-($533);
    $535=(+(Math_abs((+($534)))));
    $536=((($ShadowVeryShortTrailingIdx_0)-($totIdx_026))|0);
    $537=(($inClose+($536<<3))|0);
    $538=(+(HEAPF64[(($537)>>3)]));
    $539=(($inOpen+($536<<3))|0);
    $540=(+(HEAPF64[(($539)>>3)]));
    $541=($538)-($540);
    $542=(+(Math_abs((+($541)))));
    $585=$542;$584=$535;
   } else if (((($466|0))|0)==((1)|0)) {
    $543=((($i_2)-($totIdx_026))|0);
    $544=(($inHigh+($543<<3))|0);
    $545=(+(HEAPF64[(($544)>>3)]));
    $546=(($inLow+($543<<3))|0);
    $547=(+(HEAPF64[(($546)>>3)]));
    $548=($545)-($547);
    $549=((($ShadowVeryShortTrailingIdx_0)-($totIdx_026))|0);
    $550=(($inHigh+($549<<3))|0);
    $551=(+(HEAPF64[(($550)>>3)]));
    $552=(($inLow+($549<<3))|0);
    $553=(+(HEAPF64[(($552)>>3)]));
    $554=($551)-($553);
    $585=$554;$584=$548;
   } else if (((($466|0))|0)==((2)|0)) {
    $555=((($i_2)-($totIdx_026))|0);
    $556=(($inHigh+($555<<3))|0);
    $557=(+(HEAPF64[(($556)>>3)]));
    $558=(($inClose+($555<<3))|0);
    $559=(+(HEAPF64[(($558)>>3)]));
    $560=(($inOpen+($555<<3))|0);
    $561=(+(HEAPF64[(($560)>>3)]));
    $562=$559<$561;
    $_23=($562?$561:$559);
    $563=($557)-($_23);
    $564=($562?$559:$561);
    $565=(($inLow+($555<<3))|0);
    $566=(+(HEAPF64[(($565)>>3)]));
    $567=($564)-($566);
    $568=($563)+($567);
    $569=((($ShadowVeryShortTrailingIdx_0)-($totIdx_026))|0);
    $570=(($inHigh+($569<<3))|0);
    $571=(+(HEAPF64[(($570)>>3)]));
    $572=(($inClose+($569<<3))|0);
    $573=(+(HEAPF64[(($572)>>3)]));
    $574=(($inOpen+($569<<3))|0);
    $575=(+(HEAPF64[(($574)>>3)]));
    $576=$573<$575;
    $_24=($576?$575:$573);
    $577=($571)-($_24);
    $578=($576?$573:$575);
    $579=(($inLow+($569<<3))|0);
    $580=(+(HEAPF64[(($579)>>3)]));
    $581=($578)-($580);
    $582=($577)+($581);
    $585=$582;$584=$568;
   } else {
    $585=0.0;$584=0.0;
   }


   $586=($584)-($585);
   $587=(($ShadowVeryShortPeriodTotal+($totIdx_026<<3))|0);
   $588=(+(HEAPF64[(($587)>>3)]));
   $589=($588)+($586);
   HEAPF64[(($587)>>3)]=$589;
   $590=((($totIdx_026)-(1))|0);
   $591=($totIdx_026|0)>0;
   if ($591) {
    $totIdx_026=$590;
   } else {
    break;
   }
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $593=((($i_2)+(1))|0);
  $594=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $595=((($BodyLongTrailingIdx_0)+(1))|0);
  $596=($i_2|0)<($endIdx|0);
  if ($596) {
   $BodyLongTrailingIdx_0=$595;$ShadowVeryShortTrailingIdx_0=$594;$outIdx_0=$outIdx_1;$i_2=$593;
  } else {
   break;
  }
 }
 $598=((($smax37)+(1))|0);
 $599=((($598)-($smax38))|0);
 HEAP32[(($outNBElement)>>2)]=$599;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDLLADDERBOTTOM_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+336)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((($3)+(4))|0);
 return (($4)|0);
}


function _TA_CDLLADDERBOTTOM($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond10=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond19=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$25=0,$smax=0,$26=0,$smax22=0,$27=0,$smax23=0,$i_021=0,$ShadowVeryShortPeriodTotal_020=.0,$30=0,$31=0,$32=.0,$33=0,$34=.0;
 var $35=.0,$36=.0,$38=0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$45=0,$46=0,$47=.0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$_=.0,$53=.0,$54=.0,$55=0;
 var $56=.0,$57=.0,$58=.0,$60=.0,$61=.0,$62=0,$63=0,$ShadowVeryShortPeriodTotal_1=.0,$i_1=0,$outIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$65=0,$66=0,$67=.0,$68=0,$69=.0,$not_=0,$71=0,$72=0,$73=.0;
 var $74=0,$75=.0,$not_7=0,$77=0,$78=0,$79=.0,$80=0,$81=.0,$not_8=0,$82=0,$or_cond11=0,$83=0,$or_cond12=0,$84=0,$or_cond13=0,$85=0,$or_cond14=0,$87=0,$88=0,$89=.0;
 var $90=0,$91=.0,$92=0,$94=0,$95=.0,$96=.0,$97=0,$98=0,$99=.0,$100=0,$101=0,$102=0,$104=.0,$105=.0,$107=0,$108=0,$110=.0,$111=.0,$113=0,$114=.0;
 var $115=.0,$117=0,$_16=.0,$118=.0,$119=.0,$120=0,$121=.0,$122=.0,$123=.0,$125=.0,$126=.0,$127=0,$128=0,$129=0,$130=0,$131=.0,$132=.0,$133=0,$135=0,$136=.0;
 var $137=0,$138=.0,$139=0,$141=.0,$142=0,$144=.0,$145=0,$147=0,$149=0,$outIdx_1=0,$151=0,$152=0,$153=0,$155=0,$156=0,$157=.0,$158=0,$159=.0,$160=.0,$161=.0;
 var $163=0,$164=0,$165=.0,$166=0,$167=.0,$168=.0,$170=0,$171=0,$172=.0,$173=0,$174=.0,$175=0,$176=.0,$177=0,$_17=.0,$178=.0,$179=.0,$180=0,$181=.0,$182=.0;
 var $183=.0,$185=.0,$186=0,$187=0,$188=0,$190=0,$191=0,$192=.0,$193=0,$194=.0,$195=.0,$196=.0,$198=0,$199=0,$200=.0,$201=0,$202=.0,$203=.0,$205=0,$206=0;
 var $207=.0,$208=0,$209=.0,$210=0,$211=.0,$212=0,$_18=.0,$213=.0,$214=.0,$215=0,$216=.0,$217=.0,$218=.0,$220=.0,$221=.0,$222=.0,$223=0,$224=0,$225=0,$227=0;
 var $228=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond10=$3|$4;
 if ($or_cond10) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond19=$10|$or_cond5_not;
 if ($or_cond19) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLLADDERBOTTOM_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+336)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=($19|0)>0;
 if ($21) {
  $22=((HEAP32[((272)>>2)])|0);
  $23=(($22+332)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $ShadowVeryShortPeriodTotal_020=0.0;$i_021=$20;
  while(1) {


   if (((($24|0))|0)==((1)|0)) {
    $38=((($i_021)-(1))|0);
    $39=(($inHigh+($38<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inLow+($38<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $60=$43;
   } else if (((($24|0))|0)==((0)|0)) {
    $30=((($i_021)-(1))|0);
    $31=(($inClose+($30<<3))|0);
    $32=(+(HEAPF64[(($31)>>3)]));
    $33=(($inOpen+($30<<3))|0);
    $34=(+(HEAPF64[(($33)>>3)]));
    $35=($32)-($34);
    $36=(+(Math_abs((+($35)))));
    $60=$36;
   } else if (((($24|0))|0)==((2)|0)) {
    $45=((($i_021)-(1))|0);
    $46=(($inHigh+($45<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inClose+($45<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inOpen+($45<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=$49<$51;
    $_=($52?$51:$49);
    $53=($47)-($_);
    $54=($52?$49:$51);
    $55=(($inLow+($45<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=($54)-($56);
    $58=($53)+($57);
    $60=$58;
   } else {
    $60=0.0;
   }

   $61=($ShadowVeryShortPeriodTotal_020)+($60);
   $62=((($i_021)+(1))|0);
   $63=($62|0)<($_startIdx|0);
   if ($63) {
    $ShadowVeryShortPeriodTotal_020=$61;$i_021=$62;
   } else {
    $ShadowVeryShortPeriodTotal_0_lcssa=$61;
    break;
   }
  }
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;
 }

 $25=($12|0)>($endIdx|0);
 $smax=($25?$12:$endIdx);
 $26=($smax|0)>($startIdx|0);
 $smax22=($26?$smax:$startIdx);
 $27=($12|0)>($startIdx|0);
 $smax23=($27?$12:$startIdx);
 $ShadowVeryShortTrailingIdx_0=$20;$outIdx_0=0;$i_1=$_startIdx;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;
 while(1) {




  $65=((($i_1)-(4))|0);
  $66=(($inClose+($65<<3))|0);
  $67=(+(HEAPF64[(($66)>>3)]));
  $68=(($inOpen+($65<<3))|0);
  $69=(+(HEAPF64[(($68)>>3)]));
  $not_=$67<$69;
  do {
   if ($not_) {
    $71=((($i_1)-(3))|0);
    $72=(($inClose+($71<<3))|0);
    $73=(+(HEAPF64[(($72)>>3)]));
    $74=(($inOpen+($71<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $not_7=$73<$75;
    if (!($not_7)) {
     label = 29;
     break;
    }
    $77=((($i_1)-(2))|0);
    $78=(($inClose+($77<<3))|0);
    $79=(+(HEAPF64[(($78)>>3)]));
    $80=(($inOpen+($77<<3))|0);
    $81=(+(HEAPF64[(($80)>>3)]));
    $not_8=$79<$81;
    $82=$69>$75;
    $or_cond11=$not_8&$82;
    $83=$75>$81;
    $or_cond12=$or_cond11&$83;
    $84=$67>$73;
    $or_cond13=$or_cond12&$84;
    $85=$73>$79;
    $or_cond14=$or_cond13&$85;
    if (!($or_cond14)) {
     label = 29;
     break;
    }
    $87=((($i_1)-(1))|0);
    $88=(($inClose+($87<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=(($inOpen+($87<<3))|0);
    $91=(+(HEAPF64[(($90)>>3)]));
    $92=$89<$91;
    if (!($92)) {
     label = 29;
     break;
    }
    $94=(($inHigh+($87<<3))|0);
    $95=(+(HEAPF64[(($94)>>3)]));
    $96=($95)-($91);
    $97=((HEAP32[((272)>>2)])|0);
    $98=(($97+344)|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=(($97+336)|0);
    $101=((HEAP32[(($100)>>2)])|0);
    $102=($101|0)==0;
    do {
     if ($102) {
      $107=(($97+332)|0);
      $108=((HEAP32[(($107)>>2)])|0);
      if (((($108|0))|0)==((0)|0)) {
       $110=($89)-($91);
       $111=(+(Math_abs((+($110)))));
       $125=$111;
       break;
      } else if (((($108|0))|0)==((2)|0)) {
       $117=$89<$91;
       $_16=($117?$91:$89);
       $118=($95)-($_16);
       $119=($117?$89:$91);
       $120=(($inLow+($87<<3))|0);
       $121=(+(HEAPF64[(($120)>>3)]));
       $122=($119)-($121);
       $123=($118)+($122);
       $125=$123;
       break;
      } else if (((($108|0))|0)==((1)|0)) {
       $113=(($inLow+($87<<3))|0);
       $114=(+(HEAPF64[(($113)>>3)]));
       $115=($95)-($114);
       $125=$115;
       break;
      } else {
       $125=0.0;
       break;
      }
     } else {
      $104=(+((($101|0))|0));
      $105=($ShadowVeryShortPeriodTotal_1)/($104);
      $125=$105;
     }
    } while(0);

    $126=($99)*($125);
    $127=((HEAP32[((272)>>2)])|0);
    $128=(($127+332)|0);
    $129=((HEAP32[(($128)>>2)])|0);
    $130=($129|0)==2;
    $131=($130?(2.0):(1.0));
    $132=($126)/($131);
    $133=$96>$132;
    if (!($133)) {
     label = 29;
     break;
    }
    $135=(($inClose+($i_1<<3))|0);
    $136=(+(HEAPF64[(($135)>>3)]));
    $137=(($inOpen+($i_1<<3))|0);
    $138=(+(HEAPF64[(($137)>>3)]));
    $139=$136<$138;
    if ($139) {
     label = 29;
     break;
    }
    $141=(+(HEAPF64[(($90)>>3)]));
    $142=$138>$141;
    if (!($142)) {
     label = 29;
     break;
    }
    $144=(+(HEAPF64[(($94)>>3)]));
    $145=$136>$144;
    if (!($145)) {
     label = 29;
     break;
    }
    $147=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($147)>>2)]=100;
   } else {
    label = 29;
   }
  } while(0);
  if ((label|0) == 29) {
   label = 0;
   $149=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($149)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $151=((HEAP32[((272)>>2)])|0);
  $152=(($151+332)|0);
  $153=((HEAP32[(($152)>>2)])|0);
  if (((($153|0))|0)==((1)|0)) {
   $163=((($i_1)-(1))|0);
   $164=(($inHigh+($163<<3))|0);
   $165=(+(HEAPF64[(($164)>>3)]));
   $166=(($inLow+($163<<3))|0);
   $167=(+(HEAPF64[(($166)>>3)]));
   $168=($165)-($167);
   $185=$168;
  } else if (((($153|0))|0)==((0)|0)) {
   $155=((($i_1)-(1))|0);
   $156=(($inClose+($155<<3))|0);
   $157=(+(HEAPF64[(($156)>>3)]));
   $158=(($inOpen+($155<<3))|0);
   $159=(+(HEAPF64[(($158)>>3)]));
   $160=($157)-($159);
   $161=(+(Math_abs((+($160)))));
   $185=$161;
  } else if (((($153|0))|0)==((2)|0)) {
   $170=((($i_1)-(1))|0);
   $171=(($inHigh+($170<<3))|0);
   $172=(+(HEAPF64[(($171)>>3)]));
   $173=(($inClose+($170<<3))|0);
   $174=(+(HEAPF64[(($173)>>3)]));
   $175=(($inOpen+($170<<3))|0);
   $176=(+(HEAPF64[(($175)>>3)]));
   $177=$174<$176;
   $_17=($177?$176:$174);
   $178=($172)-($_17);
   $179=($177?$174:$176);
   $180=(($inLow+($170<<3))|0);
   $181=(+(HEAPF64[(($180)>>3)]));
   $182=($179)-($181);
   $183=($178)+($182);
   $185=$183;
  } else {
   $185=0.0;
  }

  $186=((HEAP32[((272)>>2)])|0);
  $187=(($186+332)|0);
  $188=((HEAP32[(($187)>>2)])|0);
  if (((($188|0))|0)==((0)|0)) {
   $190=((($ShadowVeryShortTrailingIdx_0)-(1))|0);
   $191=(($inClose+($190<<3))|0);
   $192=(+(HEAPF64[(($191)>>3)]));
   $193=(($inOpen+($190<<3))|0);
   $194=(+(HEAPF64[(($193)>>3)]));
   $195=($192)-($194);
   $196=(+(Math_abs((+($195)))));
   $220=$196;
  } else if (((($188|0))|0)==((1)|0)) {
   $198=((($ShadowVeryShortTrailingIdx_0)-(1))|0);
   $199=(($inHigh+($198<<3))|0);
   $200=(+(HEAPF64[(($199)>>3)]));
   $201=(($inLow+($198<<3))|0);
   $202=(+(HEAPF64[(($201)>>3)]));
   $203=($200)-($202);
   $220=$203;
  } else if (((($188|0))|0)==((2)|0)) {
   $205=((($ShadowVeryShortTrailingIdx_0)-(1))|0);
   $206=(($inHigh+($205<<3))|0);
   $207=(+(HEAPF64[(($206)>>3)]));
   $208=(($inClose+($205<<3))|0);
   $209=(+(HEAPF64[(($208)>>3)]));
   $210=(($inOpen+($205<<3))|0);
   $211=(+(HEAPF64[(($210)>>3)]));
   $212=$209<$211;
   $_18=($212?$211:$209);
   $213=($207)-($_18);
   $214=($212?$209:$211);
   $215=(($inLow+($205<<3))|0);
   $216=(+(HEAPF64[(($215)>>3)]));
   $217=($214)-($216);
   $218=($213)+($217);
   $220=$218;
  } else {
   $220=0.0;
  }

  $221=($185)-($220);
  $222=($ShadowVeryShortPeriodTotal_1)+($221);
  $223=((($i_1)+(1))|0);
  $224=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $225=($i_1|0)<($endIdx|0);
  if ($225) {
   $ShadowVeryShortTrailingIdx_0=$224;$outIdx_0=$outIdx_1;$i_1=$223;$ShadowVeryShortPeriodTotal_1=$222;
  } else {
   break;
  }
 }
 $227=((($smax22)+(1))|0);
 $228=((($227)-($smax23))|0);
 HEAP32[(($outNBElement)>>2)]=$228;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLLONGLEGGEDDOJI_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+240)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+264)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 return (($_)|0);
}


function _TA_CDLLONGLEGGEDDOJI($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond18=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$BodyDojiPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$smax28=0,$33=0,$smax29=0,$34=0,$35=0;
 var $36=0,$i_024=0,$BodyDojiPeriodTotal_023=.0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0,$46=0,$47=.0,$48=0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$57=.0;
 var $58=0,$_=.0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0,$66=.0,$67=.0,$68=0,$69=0,$smax30=0,$i_1_lcssa=0,$ShadowLongPeriodTotal_0_lcssa=.0,$70=0,$smax=0,$71=0,$i_121=0,$ShadowLongPeriodTotal_020=.0;
 var $74=0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$_8=.0,$94=.0;
 var $95=.0,$96=0,$97=.0,$98=.0,$99=.0,$101=.0,$102=.0,$103=0,$104=0,$BodyDojiPeriodTotal_1=.0,$ShadowLongPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyDojiTrailingIdx_0=0,$ShadowLongTrailingIdx_0=0,$106=0,$107=.0,$108=0,$109=.0,$110=.0;
 var $111=.0,$112=0,$113=0,$114=.0,$115=0,$116=0,$117=0,$119=.0,$120=.0,$122=0,$123=0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$133=0,$134=.0,$135=0;
 var $_9=.0,$136=.0,$137=.0,$138=0,$139=.0,$140=.0,$141=.0,$143=.0,$144=.0,$145=0,$146=0,$147=0,$148=0,$149=.0,$150=.0,$151=0,$153=.0,$154=.0,$155=0,$_10=.0;
 var $156=0,$157=.0,$158=.0,$159=0,$160=.0,$161=0,$162=0,$163=0,$165=.0,$166=.0,$168=0,$169=0,$171=.0,$172=.0,$174=0,$175=.0,$176=.0,$178=0,$179=.0,$_11=.0;
 var $180=.0,$181=.0,$183=.0,$184=.0,$185=0,$186=0,$187=0,$188=0,$189=.0,$190=.0,$191=0,$193=0,$194=.0,$195=.0,$196=.0,$197=0,$_12=.0,$198=.0,$199=0,$200=.0;
 var $201=0,$202=0,$203=0,$205=.0,$206=.0,$209=.0,$210=.0,$212=.0,$213=.0,$215=.0,$216=.0,$217=.0,$218=.0,$220=.0,$221=.0,$222=0,$223=0,$224=0,$225=0,$226=.0;
 var $227=.0,$228=0,$230=0,$232=0,$outIdx_1=0,$234=0,$235=0,$236=0,$238=.0,$239=.0,$240=.0,$241=.0,$243=0,$244=.0,$245=0,$246=.0,$247=.0,$249=0,$250=.0,$251=.0;
 var $252=.0,$253=0,$_14=.0,$254=.0,$255=.0,$256=0,$257=.0,$258=.0,$259=.0,$261=.0,$262=0,$263=0,$264=0,$266=0,$267=.0,$268=0,$269=.0,$270=.0,$271=.0,$273=0;
 var $274=.0,$275=0,$276=.0,$277=.0,$279=0,$280=.0,$281=0,$282=.0,$283=0,$284=.0,$285=0,$_15=.0,$286=.0,$287=.0,$288=0,$289=.0,$290=.0,$291=.0,$293=.0,$294=.0;
 var $295=.0,$296=0,$297=0,$298=0,$300=.0,$301=.0,$302=.0,$303=.0,$305=0,$306=.0,$307=0,$308=.0,$309=.0,$311=0,$312=.0,$313=.0,$314=.0,$315=0,$_16=.0,$316=.0;
 var $317=.0,$318=0,$319=.0,$320=.0,$321=.0,$323=.0,$324=0,$325=0,$326=0,$328=0,$329=.0,$330=0,$331=.0,$332=.0,$333=.0,$335=0,$336=.0,$337=0,$338=.0,$339=.0;
 var $341=0,$342=.0,$343=0,$344=.0,$345=0,$346=.0,$347=0,$_17=.0,$348=.0,$349=.0,$350=0,$351=.0,$352=.0,$353=.0,$355=.0,$356=.0,$357=.0,$358=0,$359=0,$360=0;
 var $361=0,$363=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond18=$10|$or_cond5_not;
 if ($or_cond18) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLLONGLEGGEDDOJI_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+240)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+264)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+236)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $BodyDojiPeriodTotal_023=0.0;$i_024=$20;
  while(1) {


   if (((($27|0))|0)==((2)|0)) {
    $52=(($inHigh+($i_024<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inClose+($i_024<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inOpen+($i_024<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=$55<$57;
    $_=($58?$57:$55);
    $59=($53)-($_);
    $60=($58?$55:$57);
    $61=(($inLow+($i_024<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=($60)-($62);
    $64=($59)+($63);
    $66=$64;
   } else if (((($27|0))|0)==((0)|0)) {
    $39=(($inClose+($i_024<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inOpen+($i_024<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $44=(+(Math_abs((+($43)))));
    $66=$44;
   } else if (((($27|0))|0)==((1)|0)) {
    $46=(($inHigh+($i_024<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inLow+($i_024<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=($47)-($49);
    $66=$50;
   } else {
    $66=0.0;
   }

   $67=($BodyDojiPeriodTotal_023)+($66);
   $68=((($i_024)+(1))|0);
   $69=($68|0)<($_startIdx|0);
   if ($69) {
    $BodyDojiPeriodTotal_023=$67;$i_024=$68;
   } else {
    $BodyDojiPeriodTotal_0_lcssa=$67;
    break;
   }
  }
 } else {
  $BodyDojiPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+260)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=($12|0)>($startIdx|0);
  $smax28=($32?$12:$startIdx);
  $33=($12|0)>($startIdx|0);
  $smax29=($33?$12:$startIdx);
  $34=((($smax29)+(1))|0);
  $35=((($34)-($22))|0);
  $36=($smax28|0)>($35|0);
  $ShadowLongPeriodTotal_020=0.0;$i_121=$23;
  while(1) {


   if (((($31|0))|0)==((0)|0)) {
    $74=(($inClose+($i_121<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($i_121<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $101=$79;
   } else if (((($31|0))|0)==((2)|0)) {
    $87=(($inHigh+($i_121<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inClose+($i_121<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inOpen+($i_121<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$90<$92;
    $_8=($93?$92:$90);
    $94=($88)-($_8);
    $95=($93?$90:$92);
    $96=(($inLow+($i_121<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $101=$99;
   } else if (((($31|0))|0)==((1)|0)) {
    $81=(($inHigh+($i_121<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($i_121<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $101=$85;
   } else {
    $101=0.0;
   }

   $102=($ShadowLongPeriodTotal_020)+($101);
   $103=((($i_121)+(1))|0);
   $104=($103|0)<($_startIdx|0);
   if ($104) {
    $ShadowLongPeriodTotal_020=$102;$i_121=$103;
   } else {
    break;
   }
  }
  $smax30=($36?$smax28:$35);
  $ShadowLongPeriodTotal_0_lcssa=$102;$i_1_lcssa=$smax30;
 } else {
  $ShadowLongPeriodTotal_0_lcssa=0.0;$i_1_lcssa=$23;
 }


 $70=($i_1_lcssa|0)>($endIdx|0);
 $smax=($70?$i_1_lcssa:$endIdx);
 $71=((($smax)+(1))|0);
 $ShadowLongTrailingIdx_0=$23;$BodyDojiTrailingIdx_0=$20;$outIdx_0=0;$i_2=$i_1_lcssa;$ShadowLongPeriodTotal_1=$ShadowLongPeriodTotal_0_lcssa;$BodyDojiPeriodTotal_1=$BodyDojiPeriodTotal_0_lcssa;
 while(1) {






  $106=(($inClose+($i_2<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=(($inOpen+($i_2<<3))|0);
  $109=(+(HEAPF64[(($108)>>3)]));
  $110=($107)-($109);
  $111=(+(Math_abs((+($110)))));
  $112=((HEAP32[((272)>>2)])|0);
  $113=(($112+248)|0);
  $114=(+(HEAPF64[(($113)>>3)]));
  $115=(($112+240)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  $117=($116|0)==0;
  do {
   if ($117) {
    $122=(($112+236)|0);
    $123=((HEAP32[(($122)>>2)])|0);
    if (((($123|0))|0)==((1)|0)) {
     $125=(($inHigh+($i_2<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=(($inLow+($i_2<<3))|0);
     $128=(+(HEAPF64[(($127)>>3)]));
     $129=($126)-($128);
     $143=$129;
     break;
    } else if (((($123|0))|0)==((0)|0)) {
     $143=$111;
     break;
    }
    $131=($123|0)==2;
    if (!($131)) {
     $143=0.0;
     break;
    }
    $133=(($inHigh+($i_2<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=$107<$109;
    $_9=($135?$109:$107);
    $136=($134)-($_9);
    $137=($135?$107:$109);
    $138=(($inLow+($i_2<<3))|0);
    $139=(+(HEAPF64[(($138)>>3)]));
    $140=($137)-($139);
    $141=($136)+($140);
    $143=$141;
   } else {
    $119=(+((($116|0))|0));
    $120=($BodyDojiPeriodTotal_1)/($119);
    $143=$120;
   }
  } while(0);

  $144=($114)*($143);
  $145=((HEAP32[((272)>>2)])|0);
  $146=(($145+236)|0);
  $147=((HEAP32[(($146)>>2)])|0);
  $148=($147|0)==2;
  $149=($148?(2.0):(1.0));
  $150=($144)/($149);
  $151=$111>$150;
  do {
   if ($151) {
    label = 44;
   } else {
    $153=(+(HEAPF64[(($106)>>3)]));
    $154=(+(HEAPF64[(($108)>>3)]));
    $155=$153<$154;
    $_10=($155?$153:$154);
    $156=(($inLow+($i_2<<3))|0);
    $157=(+(HEAPF64[(($156)>>3)]));
    $158=($_10)-($157);
    $159=(($145+272)|0);
    $160=(+(HEAPF64[(($159)>>3)]));
    $161=(($145+264)|0);
    $162=((HEAP32[(($161)>>2)])|0);
    $163=($162|0)==0;
    do {
     if ($163) {
      $168=(($145+260)|0);
      $169=((HEAP32[(($168)>>2)])|0);
      if (((($169|0))|0)==((1)|0)) {
       $174=(($inHigh+($i_2<<3))|0);
       $175=(+(HEAPF64[(($174)>>3)]));
       $176=($175)-($157);
       $183=$176;
       break;
      } else if (((($169|0))|0)==((0)|0)) {
       $171=($153)-($154);
       $172=(+(Math_abs((+($171)))));
       $183=$172;
       break;
      } else if (((($169|0))|0)==((2)|0)) {
       $178=(($inHigh+($i_2<<3))|0);
       $179=(+(HEAPF64[(($178)>>3)]));
       $_11=($155?$154:$153);
       $180=($179)-($_11);
       $181=($158)+($180);
       $183=$181;
       break;
      } else {
       $183=0.0;
       break;
      }
     } else {
      $165=(+((($162|0))|0));
      $166=($ShadowLongPeriodTotal_1)/($165);
      $183=$166;
     }
    } while(0);

    $184=($160)*($183);
    $185=((HEAP32[((272)>>2)])|0);
    $186=(($185+260)|0);
    $187=((HEAP32[(($186)>>2)])|0);
    $188=($187|0)==2;
    $189=($188?(2.0):(1.0));
    $190=($184)/($189);
    $191=$158>$190;
    if (!($191)) {
     $193=(($inHigh+($i_2<<3))|0);
     $194=(+(HEAPF64[(($193)>>3)]));
     $195=(+(HEAPF64[(($106)>>3)]));
     $196=(+(HEAPF64[(($108)>>3)]));
     $197=$195<$196;
     $_12=($197?$196:$195);
     $198=($194)-($_12);
     $199=(($185+272)|0);
     $200=(+(HEAPF64[(($199)>>3)]));
     $201=(($185+264)|0);
     $202=((HEAP32[(($201)>>2)])|0);
     $203=($202|0)==0;
     do {
      if ($203) {
       if (((($187|0))|0)==((0)|0)) {
        $209=($195)-($196);
        $210=(+(Math_abs((+($209)))));
        $220=$210;
        break;
       } else if (((($187|0))|0)==((2)|0)) {
        $215=($197?$195:$196);
        $216=(+(HEAPF64[(($156)>>3)]));
        $217=($215)-($216);
        $218=($198)+($217);
        $220=$218;
        break;
       } else if (((($187|0))|0)==((1)|0)) {
        $212=(+(HEAPF64[(($156)>>3)]));
        $213=($194)-($212);
        $220=$213;
        break;
       } else {
        $220=0.0;
        break;
       }
      } else {
       $205=(+((($202|0))|0));
       $206=($ShadowLongPeriodTotal_1)/($205);
       $220=$206;
      }
     } while(0);

     $221=($200)*($220);
     $222=((HEAP32[((272)>>2)])|0);
     $223=(($222+260)|0);
     $224=((HEAP32[(($223)>>2)])|0);
     $225=($224|0)==2;
     $226=($225?(2.0):(1.0));
     $227=($221)/($226);
     $228=$198>$227;
     if (!($228)) {
      label = 44;
      break;
     }
    }
    $230=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($230)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 44) {
   label = 0;
   $232=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($232)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $234=((HEAP32[((272)>>2)])|0);
  $235=(($234+236)|0);
  $236=((HEAP32[(($235)>>2)])|0);
  if (((($236|0))|0)==((0)|0)) {
   $238=(+(HEAPF64[(($106)>>3)]));
   $239=(+(HEAPF64[(($108)>>3)]));
   $240=($238)-($239);
   $241=(+(Math_abs((+($240)))));
   $261=$241;
  } else if (((($236|0))|0)==((1)|0)) {
   $243=(($inHigh+($i_2<<3))|0);
   $244=(+(HEAPF64[(($243)>>3)]));
   $245=(($inLow+($i_2<<3))|0);
   $246=(+(HEAPF64[(($245)>>3)]));
   $247=($244)-($246);
   $261=$247;
  } else if (((($236|0))|0)==((2)|0)) {
   $249=(($inHigh+($i_2<<3))|0);
   $250=(+(HEAPF64[(($249)>>3)]));
   $251=(+(HEAPF64[(($106)>>3)]));
   $252=(+(HEAPF64[(($108)>>3)]));
   $253=$251<$252;
   $_14=($253?$252:$251);
   $254=($250)-($_14);
   $255=($253?$251:$252);
   $256=(($inLow+($i_2<<3))|0);
   $257=(+(HEAPF64[(($256)>>3)]));
   $258=($255)-($257);
   $259=($254)+($258);
   $261=$259;
  } else {
   $261=0.0;
  }

  $262=((HEAP32[((272)>>2)])|0);
  $263=(($262+236)|0);
  $264=((HEAP32[(($263)>>2)])|0);
  if (((($264|0))|0)==((2)|0)) {
   $279=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $280=(+(HEAPF64[(($279)>>3)]));
   $281=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $282=(+(HEAPF64[(($281)>>3)]));
   $283=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $284=(+(HEAPF64[(($283)>>3)]));
   $285=$282<$284;
   $_15=($285?$284:$282);
   $286=($280)-($_15);
   $287=($285?$282:$284);
   $288=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $289=(+(HEAPF64[(($288)>>3)]));
   $290=($287)-($289);
   $291=($286)+($290);
   $293=$291;
  } else if (((($264|0))|0)==((1)|0)) {
   $273=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $274=(+(HEAPF64[(($273)>>3)]));
   $275=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $276=(+(HEAPF64[(($275)>>3)]));
   $277=($274)-($276);
   $293=$277;
  } else if (((($264|0))|0)==((0)|0)) {
   $266=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $267=(+(HEAPF64[(($266)>>3)]));
   $268=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $269=(+(HEAPF64[(($268)>>3)]));
   $270=($267)-($269);
   $271=(+(Math_abs((+($270)))));
   $293=$271;
  } else {
   $293=0.0;
  }

  $294=($261)-($293);
  $295=($BodyDojiPeriodTotal_1)+($294);
  $296=((HEAP32[((272)>>2)])|0);
  $297=(($296+260)|0);
  $298=((HEAP32[(($297)>>2)])|0);
  if (((($298|0))|0)==((0)|0)) {
   $300=(+(HEAPF64[(($106)>>3)]));
   $301=(+(HEAPF64[(($108)>>3)]));
   $302=($300)-($301);
   $303=(+(Math_abs((+($302)))));
   $323=$303;
  } else if (((($298|0))|0)==((1)|0)) {
   $305=(($inHigh+($i_2<<3))|0);
   $306=(+(HEAPF64[(($305)>>3)]));
   $307=(($inLow+($i_2<<3))|0);
   $308=(+(HEAPF64[(($307)>>3)]));
   $309=($306)-($308);
   $323=$309;
  } else if (((($298|0))|0)==((2)|0)) {
   $311=(($inHigh+($i_2<<3))|0);
   $312=(+(HEAPF64[(($311)>>3)]));
   $313=(+(HEAPF64[(($106)>>3)]));
   $314=(+(HEAPF64[(($108)>>3)]));
   $315=$313<$314;
   $_16=($315?$314:$313);
   $316=($312)-($_16);
   $317=($315?$313:$314);
   $318=(($inLow+($i_2<<3))|0);
   $319=(+(HEAPF64[(($318)>>3)]));
   $320=($317)-($319);
   $321=($316)+($320);
   $323=$321;
  } else {
   $323=0.0;
  }

  $324=((HEAP32[((272)>>2)])|0);
  $325=(($324+260)|0);
  $326=((HEAP32[(($325)>>2)])|0);
  if (((($326|0))|0)==((1)|0)) {
   $335=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $336=(+(HEAPF64[(($335)>>3)]));
   $337=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $338=(+(HEAPF64[(($337)>>3)]));
   $339=($336)-($338);
   $355=$339;
  } else if (((($326|0))|0)==((2)|0)) {
   $341=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $344=(+(HEAPF64[(($343)>>3)]));
   $345=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $346=(+(HEAPF64[(($345)>>3)]));
   $347=$344<$346;
   $_17=($347?$346:$344);
   $348=($342)-($_17);
   $349=($347?$344:$346);
   $350=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $351=(+(HEAPF64[(($350)>>3)]));
   $352=($349)-($351);
   $353=($348)+($352);
   $355=$353;
  } else if (((($326|0))|0)==((0)|0)) {
   $328=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $329=(+(HEAPF64[(($328)>>3)]));
   $330=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $331=(+(HEAPF64[(($330)>>3)]));
   $332=($329)-($331);
   $333=(+(Math_abs((+($332)))));
   $355=$333;
  } else {
   $355=0.0;
  }

  $356=($323)-($355);
  $357=($ShadowLongPeriodTotal_1)+($356);
  $358=((($i_2)+(1))|0);
  $359=((($BodyDojiTrailingIdx_0)+(1))|0);
  $360=((($ShadowLongTrailingIdx_0)+(1))|0);
  $361=($i_2|0)<($endIdx|0);
  if ($361) {
   $ShadowLongTrailingIdx_0=$360;$BodyDojiTrailingIdx_0=$359;$outIdx_0=$outIdx_1;$i_2=$358;$ShadowLongPeriodTotal_1=$357;$BodyDojiPeriodTotal_1=$295;
  } else {
   break;
  }
 }
 $363=((($71)-($i_1_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$363;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLLONGLINE_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+168)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+312)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 return (($_)|0);
}


function _TA_CDLLONGLINE($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond18=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$BodyPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$smax28=0,$33=0,$smax29=0,$34=0,$35=0;
 var $36=0,$i_024=0,$BodyPeriodTotal_023=.0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0,$46=0,$47=.0,$48=0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$57=.0;
 var $58=0,$_=.0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0,$66=.0,$67=.0,$68=0,$69=0,$smax30=0,$i_1_lcssa=0,$ShadowPeriodTotal_0_lcssa=.0,$70=0,$smax=0,$71=0,$i_121=0,$ShadowPeriodTotal_020=.0;
 var $74=0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$_8=.0,$94=.0;
 var $95=.0,$96=0,$97=.0,$98=.0,$99=.0,$101=.0,$102=.0,$103=0,$104=0,$BodyPeriodTotal_1=.0,$ShadowPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyTrailingIdx_0=0,$ShadowTrailingIdx_0=0,$106=0,$107=.0,$108=0,$109=.0,$110=.0;
 var $111=.0,$112=0,$113=0,$114=.0,$115=0,$116=0,$117=0,$119=.0,$120=.0,$122=0,$123=0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$133=0,$134=.0,$135=0;
 var $_9=.0,$136=.0,$137=.0,$138=0,$139=.0,$140=.0,$141=.0,$143=.0,$144=.0,$145=0,$146=0,$147=0,$148=0,$149=.0,$150=.0,$151=0,$153=0,$154=.0,$155=.0,$156=.0;
 var $157=0,$_10=.0,$158=.0,$159=0,$160=.0,$161=0,$162=0,$163=0,$165=.0,$166=.0,$168=0,$169=0,$171=.0,$172=.0,$174=0,$175=.0,$176=.0,$178=.0,$179=0,$180=.0;
 var $181=.0,$182=.0,$184=.0,$185=.0,$186=0,$187=0,$188=0,$189=0,$190=.0,$191=.0,$192=0,$194=.0,$195=.0,$196=0,$_12=.0,$197=0,$198=.0,$199=.0,$200=0,$201=.0;
 var $202=0,$203=0,$204=0,$206=.0,$207=.0,$210=.0,$211=.0,$213=.0,$214=.0,$216=.0,$_13=.0,$217=.0,$218=.0,$220=.0,$221=.0,$222=0,$223=0,$224=0,$225=0,$226=.0;
 var $227=.0,$228=0,$230=.0,$231=.0,$232=0,$233=0,$234=0,$236=0,$outIdx_1=0,$238=0,$239=0,$240=0,$242=.0,$243=.0,$244=.0,$245=.0,$247=0,$248=.0,$249=0,$250=.0;
 var $251=.0,$253=0,$254=.0,$255=.0,$256=.0,$257=0,$_14=.0,$258=.0,$259=.0,$260=0,$261=.0,$262=.0,$263=.0,$265=.0,$266=0,$267=0,$268=0,$270=0,$271=.0,$272=0;
 var $273=.0,$274=.0,$275=.0,$277=0,$278=.0,$279=0,$280=.0,$281=.0,$283=0,$284=.0,$285=0,$286=.0,$287=0,$288=.0,$289=0,$_15=.0,$290=.0,$291=.0,$292=0,$293=.0;
 var $294=.0,$295=.0,$297=.0,$298=.0,$299=.0,$300=0,$301=0,$302=0,$304=.0,$305=.0,$306=.0,$307=.0,$309=0,$310=.0,$311=0,$312=.0,$313=.0,$315=0,$316=.0,$317=.0;
 var $318=.0,$319=0,$_16=.0,$320=.0,$321=.0,$322=0,$323=.0,$324=.0,$325=.0,$327=.0,$328=0,$329=0,$330=0,$332=0,$333=.0,$334=0,$335=.0,$336=.0,$337=.0,$339=0;
 var $340=.0,$341=0,$342=.0,$343=.0,$345=0,$346=.0,$347=0,$348=.0,$349=0,$350=.0,$351=0,$_17=.0,$352=.0,$353=.0,$354=0,$355=.0,$356=.0,$357=.0,$359=.0,$360=.0;
 var $361=.0,$362=0,$363=0,$364=0,$365=0,$367=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond18=$10|$or_cond5_not;
 if ($or_cond18) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLLONGLINE_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+168)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+312)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+164)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $BodyPeriodTotal_023=0.0;$i_024=$20;
  while(1) {


   if (((($27|0))|0)==((2)|0)) {
    $52=(($inHigh+($i_024<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inClose+($i_024<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inOpen+($i_024<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=$55<$57;
    $_=($58?$57:$55);
    $59=($53)-($_);
    $60=($58?$55:$57);
    $61=(($inLow+($i_024<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=($60)-($62);
    $64=($59)+($63);
    $66=$64;
   } else if (((($27|0))|0)==((0)|0)) {
    $39=(($inClose+($i_024<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inOpen+($i_024<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $44=(+(Math_abs((+($43)))));
    $66=$44;
   } else if (((($27|0))|0)==((1)|0)) {
    $46=(($inHigh+($i_024<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inLow+($i_024<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=($47)-($49);
    $66=$50;
   } else {
    $66=0.0;
   }

   $67=($BodyPeriodTotal_023)+($66);
   $68=((($i_024)+(1))|0);
   $69=($68|0)<($_startIdx|0);
   if ($69) {
    $BodyPeriodTotal_023=$67;$i_024=$68;
   } else {
    $BodyPeriodTotal_0_lcssa=$67;
    break;
   }
  }
 } else {
  $BodyPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+308)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=($12|0)>($startIdx|0);
  $smax28=($32?$12:$startIdx);
  $33=($12|0)>($startIdx|0);
  $smax29=($33?$12:$startIdx);
  $34=((($smax29)+(1))|0);
  $35=((($34)-($22))|0);
  $36=($smax28|0)>($35|0);
  $ShadowPeriodTotal_020=0.0;$i_121=$23;
  while(1) {


   if (((($31|0))|0)==((2)|0)) {
    $87=(($inHigh+($i_121<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inClose+($i_121<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inOpen+($i_121<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$90<$92;
    $_8=($93?$92:$90);
    $94=($88)-($_8);
    $95=($93?$90:$92);
    $96=(($inLow+($i_121<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $101=$99;
   } else if (((($31|0))|0)==((1)|0)) {
    $81=(($inHigh+($i_121<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($i_121<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $101=$85;
   } else if (((($31|0))|0)==((0)|0)) {
    $74=(($inClose+($i_121<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($i_121<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $101=$79;
   } else {
    $101=0.0;
   }

   $102=($ShadowPeriodTotal_020)+($101);
   $103=((($i_121)+(1))|0);
   $104=($103|0)<($_startIdx|0);
   if ($104) {
    $ShadowPeriodTotal_020=$102;$i_121=$103;
   } else {
    break;
   }
  }
  $smax30=($36?$smax28:$35);
  $ShadowPeriodTotal_0_lcssa=$102;$i_1_lcssa=$smax30;
 } else {
  $ShadowPeriodTotal_0_lcssa=0.0;$i_1_lcssa=$23;
 }


 $70=($i_1_lcssa|0)>($endIdx|0);
 $smax=($70?$i_1_lcssa:$endIdx);
 $71=((($smax)+(1))|0);
 $ShadowTrailingIdx_0=$23;$BodyTrailingIdx_0=$20;$outIdx_0=0;$i_2=$i_1_lcssa;$ShadowPeriodTotal_1=$ShadowPeriodTotal_0_lcssa;$BodyPeriodTotal_1=$BodyPeriodTotal_0_lcssa;
 while(1) {






  $106=(($inClose+($i_2<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=(($inOpen+($i_2<<3))|0);
  $109=(+(HEAPF64[(($108)>>3)]));
  $110=($107)-($109);
  $111=(+(Math_abs((+($110)))));
  $112=((HEAP32[((272)>>2)])|0);
  $113=(($112+176)|0);
  $114=(+(HEAPF64[(($113)>>3)]));
  $115=(($112+168)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  $117=($116|0)==0;
  do {
   if ($117) {
    $122=(($112+164)|0);
    $123=((HEAP32[(($122)>>2)])|0);
    if (((($123|0))|0)==((1)|0)) {
     $125=(($inHigh+($i_2<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=(($inLow+($i_2<<3))|0);
     $128=(+(HEAPF64[(($127)>>3)]));
     $129=($126)-($128);
     $143=$129;
     break;
    } else if (((($123|0))|0)==((0)|0)) {
     $143=$111;
     break;
    }
    $131=($123|0)==2;
    if (!($131)) {
     $143=0.0;
     break;
    }
    $133=(($inHigh+($i_2<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=$107<$109;
    $_9=($135?$109:$107);
    $136=($134)-($_9);
    $137=($135?$107:$109);
    $138=(($inLow+($i_2<<3))|0);
    $139=(+(HEAPF64[(($138)>>3)]));
    $140=($137)-($139);
    $141=($136)+($140);
    $143=$141;
   } else {
    $119=(+((($116|0))|0));
    $120=($BodyPeriodTotal_1)/($119);
    $143=$120;
   }
  } while(0);

  $144=($114)*($143);
  $145=((HEAP32[((272)>>2)])|0);
  $146=(($145+164)|0);
  $147=((HEAP32[(($146)>>2)])|0);
  $148=($147|0)==2;
  $149=($148?(2.0):(1.0));
  $150=($144)/($149);
  $151=$111>$150;
  do {
   if ($151) {
    $153=(($inHigh+($i_2<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=(+(HEAPF64[(($106)>>3)]));
    $156=(+(HEAPF64[(($108)>>3)]));
    $157=$155<$156;
    $_10=($157?$156:$155);
    $158=($154)-($_10);
    $159=(($145+320)|0);
    $160=(+(HEAPF64[(($159)>>3)]));
    $161=(($145+312)|0);
    $162=((HEAP32[(($161)>>2)])|0);
    $163=($162|0)==0;
    do {
     if ($163) {
      $168=(($145+308)|0);
      $169=((HEAP32[(($168)>>2)])|0);
      if (((($169|0))|0)==((0)|0)) {
       $171=($155)-($156);
       $172=(+(Math_abs((+($171)))));
       $184=$172;
       break;
      } else if (((($169|0))|0)==((2)|0)) {
       $178=($157?$155:$156);
       $179=(($inLow+($i_2<<3))|0);
       $180=(+(HEAPF64[(($179)>>3)]));
       $181=($178)-($180);
       $182=($158)+($181);
       $184=$182;
       break;
      } else if (((($169|0))|0)==((1)|0)) {
       $174=(($inLow+($i_2<<3))|0);
       $175=(+(HEAPF64[(($174)>>3)]));
       $176=($154)-($175);
       $184=$176;
       break;
      } else {
       $184=0.0;
       break;
      }
     } else {
      $165=(+((($162|0))|0));
      $166=($ShadowPeriodTotal_1)/($165);
      $184=$166;
     }
    } while(0);

    $185=($160)*($184);
    $186=((HEAP32[((272)>>2)])|0);
    $187=(($186+308)|0);
    $188=((HEAP32[(($187)>>2)])|0);
    $189=($188|0)==2;
    $190=($189?(2.0):(1.0));
    $191=($185)/($190);
    $192=$158<$191;
    if (!($192)) {
     label = 44;
     break;
    }
    $194=(+(HEAPF64[(($106)>>3)]));
    $195=(+(HEAPF64[(($108)>>3)]));
    $196=$194<$195;
    $_12=($196?$194:$195);
    $197=(($inLow+($i_2<<3))|0);
    $198=(+(HEAPF64[(($197)>>3)]));
    $199=($_12)-($198);
    $200=(($186+320)|0);
    $201=(+(HEAPF64[(($200)>>3)]));
    $202=(($186+312)|0);
    $203=((HEAP32[(($202)>>2)])|0);
    $204=($203|0)==0;
    do {
     if ($204) {
      if (((($188|0))|0)==((1)|0)) {
       $213=(+(HEAPF64[(($153)>>3)]));
       $214=($213)-($198);
       $220=$214;
       break;
      } else if (((($188|0))|0)==((2)|0)) {
       $216=(+(HEAPF64[(($153)>>3)]));
       $_13=($196?$195:$194);
       $217=($216)-($_13);
       $218=($199)+($217);
       $220=$218;
       break;
      } else if (((($188|0))|0)==((0)|0)) {
       $210=($194)-($195);
       $211=(+(Math_abs((+($210)))));
       $220=$211;
       break;
      } else {
       $220=0.0;
       break;
      }
     } else {
      $206=(+((($203|0))|0));
      $207=($ShadowPeriodTotal_1)/($206);
      $220=$207;
     }
    } while(0);

    $221=($201)*($220);
    $222=((HEAP32[((272)>>2)])|0);
    $223=(($222+308)|0);
    $224=((HEAP32[(($223)>>2)])|0);
    $225=($224|0)==2;
    $226=($225?(2.0):(1.0));
    $227=($221)/($226);
    $228=$199<$227;
    if (!($228)) {
     label = 44;
     break;
    }
    $230=(+(HEAPF64[(($106)>>3)]));
    $231=(+(HEAPF64[(($108)>>3)]));
    $232=$230>=$231;
    $233=($232?100:-100);
    $234=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($234)>>2)]=$233;
   } else {
    label = 44;
   }
  } while(0);
  if ((label|0) == 44) {
   label = 0;
   $236=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($236)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $238=((HEAP32[((272)>>2)])|0);
  $239=(($238+164)|0);
  $240=((HEAP32[(($239)>>2)])|0);
  if (((($240|0))|0)==((1)|0)) {
   $247=(($inHigh+($i_2<<3))|0);
   $248=(+(HEAPF64[(($247)>>3)]));
   $249=(($inLow+($i_2<<3))|0);
   $250=(+(HEAPF64[(($249)>>3)]));
   $251=($248)-($250);
   $265=$251;
  } else if (((($240|0))|0)==((0)|0)) {
   $242=(+(HEAPF64[(($106)>>3)]));
   $243=(+(HEAPF64[(($108)>>3)]));
   $244=($242)-($243);
   $245=(+(Math_abs((+($244)))));
   $265=$245;
  } else if (((($240|0))|0)==((2)|0)) {
   $253=(($inHigh+($i_2<<3))|0);
   $254=(+(HEAPF64[(($253)>>3)]));
   $255=(+(HEAPF64[(($106)>>3)]));
   $256=(+(HEAPF64[(($108)>>3)]));
   $257=$255<$256;
   $_14=($257?$256:$255);
   $258=($254)-($_14);
   $259=($257?$255:$256);
   $260=(($inLow+($i_2<<3))|0);
   $261=(+(HEAPF64[(($260)>>3)]));
   $262=($259)-($261);
   $263=($258)+($262);
   $265=$263;
  } else {
   $265=0.0;
  }

  $266=((HEAP32[((272)>>2)])|0);
  $267=(($266+164)|0);
  $268=((HEAP32[(($267)>>2)])|0);
  if (((($268|0))|0)==((2)|0)) {
   $283=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $284=(+(HEAPF64[(($283)>>3)]));
   $285=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $286=(+(HEAPF64[(($285)>>3)]));
   $287=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $288=(+(HEAPF64[(($287)>>3)]));
   $289=$286<$288;
   $_15=($289?$288:$286);
   $290=($284)-($_15);
   $291=($289?$286:$288);
   $292=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $293=(+(HEAPF64[(($292)>>3)]));
   $294=($291)-($293);
   $295=($290)+($294);
   $297=$295;
  } else if (((($268|0))|0)==((0)|0)) {
   $270=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $271=(+(HEAPF64[(($270)>>3)]));
   $272=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $273=(+(HEAPF64[(($272)>>3)]));
   $274=($271)-($273);
   $275=(+(Math_abs((+($274)))));
   $297=$275;
  } else if (((($268|0))|0)==((1)|0)) {
   $277=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $278=(+(HEAPF64[(($277)>>3)]));
   $279=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $280=(+(HEAPF64[(($279)>>3)]));
   $281=($278)-($280);
   $297=$281;
  } else {
   $297=0.0;
  }

  $298=($265)-($297);
  $299=($BodyPeriodTotal_1)+($298);
  $300=((HEAP32[((272)>>2)])|0);
  $301=(($300+308)|0);
  $302=((HEAP32[(($301)>>2)])|0);
  if (((($302|0))|0)==((1)|0)) {
   $309=(($inHigh+($i_2<<3))|0);
   $310=(+(HEAPF64[(($309)>>3)]));
   $311=(($inLow+($i_2<<3))|0);
   $312=(+(HEAPF64[(($311)>>3)]));
   $313=($310)-($312);
   $327=$313;
  } else if (((($302|0))|0)==((2)|0)) {
   $315=(($inHigh+($i_2<<3))|0);
   $316=(+(HEAPF64[(($315)>>3)]));
   $317=(+(HEAPF64[(($106)>>3)]));
   $318=(+(HEAPF64[(($108)>>3)]));
   $319=$317<$318;
   $_16=($319?$318:$317);
   $320=($316)-($_16);
   $321=($319?$317:$318);
   $322=(($inLow+($i_2<<3))|0);
   $323=(+(HEAPF64[(($322)>>3)]));
   $324=($321)-($323);
   $325=($320)+($324);
   $327=$325;
  } else if (((($302|0))|0)==((0)|0)) {
   $304=(+(HEAPF64[(($106)>>3)]));
   $305=(+(HEAPF64[(($108)>>3)]));
   $306=($304)-($305);
   $307=(+(Math_abs((+($306)))));
   $327=$307;
  } else {
   $327=0.0;
  }

  $328=((HEAP32[((272)>>2)])|0);
  $329=(($328+308)|0);
  $330=((HEAP32[(($329)>>2)])|0);
  if (((($330|0))|0)==((0)|0)) {
   $332=(($inClose+($ShadowTrailingIdx_0<<3))|0);
   $333=(+(HEAPF64[(($332)>>3)]));
   $334=(($inOpen+($ShadowTrailingIdx_0<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=($333)-($335);
   $337=(+(Math_abs((+($336)))));
   $359=$337;
  } else if (((($330|0))|0)==((1)|0)) {
   $339=(($inHigh+($ShadowTrailingIdx_0<<3))|0);
   $340=(+(HEAPF64[(($339)>>3)]));
   $341=(($inLow+($ShadowTrailingIdx_0<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=($340)-($342);
   $359=$343;
  } else if (((($330|0))|0)==((2)|0)) {
   $345=(($inHigh+($ShadowTrailingIdx_0<<3))|0);
   $346=(+(HEAPF64[(($345)>>3)]));
   $347=(($inClose+($ShadowTrailingIdx_0<<3))|0);
   $348=(+(HEAPF64[(($347)>>3)]));
   $349=(($inOpen+($ShadowTrailingIdx_0<<3))|0);
   $350=(+(HEAPF64[(($349)>>3)]));
   $351=$348<$350;
   $_17=($351?$350:$348);
   $352=($346)-($_17);
   $353=($351?$348:$350);
   $354=(($inLow+($ShadowTrailingIdx_0<<3))|0);
   $355=(+(HEAPF64[(($354)>>3)]));
   $356=($353)-($355);
   $357=($352)+($356);
   $359=$357;
  } else {
   $359=0.0;
  }

  $360=($327)-($359);
  $361=($ShadowPeriodTotal_1)+($360);
  $362=((($i_2)+(1))|0);
  $363=((($BodyTrailingIdx_0)+(1))|0);
  $364=((($ShadowTrailingIdx_0)+(1))|0);
  $365=($i_2|0)<($endIdx|0);
  if ($365) {
   $ShadowTrailingIdx_0=$364;$BodyTrailingIdx_0=$363;$outIdx_0=$outIdx_1;$i_2=$362;$ShadowPeriodTotal_1=$361;$BodyPeriodTotal_1=$299;
  } else {
   break;
  }
 }
 $367=((($71)-($i_1_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$367;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLMARUBOZU_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+168)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+336)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 return (($_)|0);
}


function _TA_CDLMARUBOZU($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond18=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$BodyLongPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$smax28=0,$33=0,$smax29=0,$34=0,$35=0;
 var $36=0,$i_024=0,$BodyLongPeriodTotal_023=.0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0,$46=0,$47=.0,$48=0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$57=.0;
 var $58=0,$_=.0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0,$66=.0,$67=.0,$68=0,$69=0,$smax30=0,$i_1_lcssa=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$70=0,$smax=0,$71=0,$i_121=0,$ShadowVeryShortPeriodTotal_020=.0;
 var $74=0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$_8=.0,$94=.0;
 var $95=.0,$96=0,$97=.0,$98=.0,$99=.0,$101=.0,$102=.0,$103=0,$104=0,$BodyLongPeriodTotal_1=.0,$ShadowVeryShortPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyLongTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$106=0,$107=.0,$108=0,$109=.0,$110=.0;
 var $111=.0,$112=0,$113=0,$114=.0,$115=0,$116=0,$117=0,$119=.0,$120=.0,$122=0,$123=0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$133=0,$134=.0,$135=0;
 var $_9=.0,$136=.0,$137=.0,$138=0,$139=.0,$140=.0,$141=.0,$143=.0,$144=.0,$145=0,$146=0,$147=0,$148=0,$149=.0,$150=.0,$151=0,$153=0,$154=.0,$155=.0,$156=.0;
 var $157=0,$_10=.0,$158=.0,$159=0,$160=.0,$161=0,$162=0,$163=0,$165=.0,$166=.0,$168=0,$169=0,$171=.0,$172=.0,$174=0,$175=.0,$176=.0,$178=.0,$179=0,$180=.0;
 var $181=.0,$182=.0,$184=.0,$185=.0,$186=0,$187=0,$188=0,$189=0,$190=.0,$191=.0,$192=0,$194=.0,$195=.0,$196=0,$_12=.0,$197=0,$198=.0,$199=.0,$200=0,$201=.0;
 var $202=0,$203=0,$204=0,$206=.0,$207=.0,$210=.0,$211=.0,$213=.0,$214=.0,$216=.0,$_13=.0,$217=.0,$218=.0,$220=.0,$221=.0,$222=0,$223=0,$224=0,$225=0,$226=.0;
 var $227=.0,$228=0,$230=.0,$231=.0,$232=0,$233=0,$234=0,$236=0,$outIdx_1=0,$238=0,$239=0,$240=0,$242=.0,$243=.0,$244=.0,$245=.0,$247=0,$248=.0,$249=0,$250=.0;
 var $251=.0,$253=0,$254=.0,$255=.0,$256=.0,$257=0,$_14=.0,$258=.0,$259=.0,$260=0,$261=.0,$262=.0,$263=.0,$265=.0,$266=0,$267=0,$268=0,$270=0,$271=.0,$272=0;
 var $273=.0,$274=.0,$275=.0,$277=0,$278=.0,$279=0,$280=.0,$281=.0,$283=0,$284=.0,$285=0,$286=.0,$287=0,$288=.0,$289=0,$_15=.0,$290=.0,$291=.0,$292=0,$293=.0;
 var $294=.0,$295=.0,$297=.0,$298=.0,$299=.0,$300=0,$301=0,$302=0,$304=.0,$305=.0,$306=.0,$307=.0,$309=0,$310=.0,$311=0,$312=.0,$313=.0,$315=0,$316=.0,$317=.0;
 var $318=.0,$319=0,$_16=.0,$320=.0,$321=.0,$322=0,$323=.0,$324=.0,$325=.0,$327=.0,$328=0,$329=0,$330=0,$332=0,$333=.0,$334=0,$335=.0,$336=.0,$337=.0,$339=0;
 var $340=.0,$341=0,$342=.0,$343=.0,$345=0,$346=.0,$347=0,$348=.0,$349=0,$350=.0,$351=0,$_17=.0,$352=.0,$353=.0,$354=0,$355=.0,$356=.0,$357=.0,$359=.0,$360=.0;
 var $361=.0,$362=0,$363=0,$364=0,$365=0,$367=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond18=$10|$or_cond5_not;
 if ($or_cond18) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLMARUBOZU_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+168)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+336)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+164)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $BodyLongPeriodTotal_023=0.0;$i_024=$20;
  while(1) {


   if (((($27|0))|0)==((1)|0)) {
    $46=(($inHigh+($i_024<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inLow+($i_024<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=($47)-($49);
    $66=$50;
   } else if (((($27|0))|0)==((0)|0)) {
    $39=(($inClose+($i_024<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inOpen+($i_024<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $44=(+(Math_abs((+($43)))));
    $66=$44;
   } else if (((($27|0))|0)==((2)|0)) {
    $52=(($inHigh+($i_024<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inClose+($i_024<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inOpen+($i_024<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=$55<$57;
    $_=($58?$57:$55);
    $59=($53)-($_);
    $60=($58?$55:$57);
    $61=(($inLow+($i_024<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=($60)-($62);
    $64=($59)+($63);
    $66=$64;
   } else {
    $66=0.0;
   }

   $67=($BodyLongPeriodTotal_023)+($66);
   $68=((($i_024)+(1))|0);
   $69=($68|0)<($_startIdx|0);
   if ($69) {
    $BodyLongPeriodTotal_023=$67;$i_024=$68;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$67;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+332)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=($12|0)>($startIdx|0);
  $smax28=($32?$12:$startIdx);
  $33=($12|0)>($startIdx|0);
  $smax29=($33?$12:$startIdx);
  $34=((($smax29)+(1))|0);
  $35=((($34)-($22))|0);
  $36=($smax28|0)>($35|0);
  $ShadowVeryShortPeriodTotal_020=0.0;$i_121=$23;
  while(1) {


   if (((($31|0))|0)==((0)|0)) {
    $74=(($inClose+($i_121<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($i_121<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $101=$79;
   } else if (((($31|0))|0)==((2)|0)) {
    $87=(($inHigh+($i_121<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inClose+($i_121<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inOpen+($i_121<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$90<$92;
    $_8=($93?$92:$90);
    $94=($88)-($_8);
    $95=($93?$90:$92);
    $96=(($inLow+($i_121<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $101=$99;
   } else if (((($31|0))|0)==((1)|0)) {
    $81=(($inHigh+($i_121<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($i_121<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $101=$85;
   } else {
    $101=0.0;
   }

   $102=($ShadowVeryShortPeriodTotal_020)+($101);
   $103=((($i_121)+(1))|0);
   $104=($103|0)<($_startIdx|0);
   if ($104) {
    $ShadowVeryShortPeriodTotal_020=$102;$i_121=$103;
   } else {
    break;
   }
  }
  $smax30=($36?$smax28:$35);
  $ShadowVeryShortPeriodTotal_0_lcssa=$102;$i_1_lcssa=$smax30;
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;$i_1_lcssa=$23;
 }


 $70=($i_1_lcssa|0)>($endIdx|0);
 $smax=($70?$i_1_lcssa:$endIdx);
 $71=((($smax)+(1))|0);
 $ShadowVeryShortTrailingIdx_0=$23;$BodyLongTrailingIdx_0=$20;$outIdx_0=0;$i_2=$i_1_lcssa;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;
 while(1) {






  $106=(($inClose+($i_2<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=(($inOpen+($i_2<<3))|0);
  $109=(+(HEAPF64[(($108)>>3)]));
  $110=($107)-($109);
  $111=(+(Math_abs((+($110)))));
  $112=((HEAP32[((272)>>2)])|0);
  $113=(($112+176)|0);
  $114=(+(HEAPF64[(($113)>>3)]));
  $115=(($112+168)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  $117=($116|0)==0;
  do {
   if ($117) {
    $122=(($112+164)|0);
    $123=((HEAP32[(($122)>>2)])|0);
    if (((($123|0))|0)==((0)|0)) {
     $143=$111;
     break;
    } else if (((($123|0))|0)==((1)|0)) {
     $125=(($inHigh+($i_2<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=(($inLow+($i_2<<3))|0);
     $128=(+(HEAPF64[(($127)>>3)]));
     $129=($126)-($128);
     $143=$129;
     break;
    }
    $131=($123|0)==2;
    if (!($131)) {
     $143=0.0;
     break;
    }
    $133=(($inHigh+($i_2<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=$107<$109;
    $_9=($135?$109:$107);
    $136=($134)-($_9);
    $137=($135?$107:$109);
    $138=(($inLow+($i_2<<3))|0);
    $139=(+(HEAPF64[(($138)>>3)]));
    $140=($137)-($139);
    $141=($136)+($140);
    $143=$141;
   } else {
    $119=(+((($116|0))|0));
    $120=($BodyLongPeriodTotal_1)/($119);
    $143=$120;
   }
  } while(0);

  $144=($114)*($143);
  $145=((HEAP32[((272)>>2)])|0);
  $146=(($145+164)|0);
  $147=((HEAP32[(($146)>>2)])|0);
  $148=($147|0)==2;
  $149=($148?(2.0):(1.0));
  $150=($144)/($149);
  $151=$111>$150;
  do {
   if ($151) {
    $153=(($inHigh+($i_2<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=(+(HEAPF64[(($106)>>3)]));
    $156=(+(HEAPF64[(($108)>>3)]));
    $157=$155<$156;
    $_10=($157?$156:$155);
    $158=($154)-($_10);
    $159=(($145+344)|0);
    $160=(+(HEAPF64[(($159)>>3)]));
    $161=(($145+336)|0);
    $162=((HEAP32[(($161)>>2)])|0);
    $163=($162|0)==0;
    do {
     if ($163) {
      $168=(($145+332)|0);
      $169=((HEAP32[(($168)>>2)])|0);
      if (((($169|0))|0)==((0)|0)) {
       $171=($155)-($156);
       $172=(+(Math_abs((+($171)))));
       $184=$172;
       break;
      } else if (((($169|0))|0)==((1)|0)) {
       $174=(($inLow+($i_2<<3))|0);
       $175=(+(HEAPF64[(($174)>>3)]));
       $176=($154)-($175);
       $184=$176;
       break;
      } else if (((($169|0))|0)==((2)|0)) {
       $178=($157?$155:$156);
       $179=(($inLow+($i_2<<3))|0);
       $180=(+(HEAPF64[(($179)>>3)]));
       $181=($178)-($180);
       $182=($158)+($181);
       $184=$182;
       break;
      } else {
       $184=0.0;
       break;
      }
     } else {
      $165=(+((($162|0))|0));
      $166=($ShadowVeryShortPeriodTotal_1)/($165);
      $184=$166;
     }
    } while(0);

    $185=($160)*($184);
    $186=((HEAP32[((272)>>2)])|0);
    $187=(($186+332)|0);
    $188=((HEAP32[(($187)>>2)])|0);
    $189=($188|0)==2;
    $190=($189?(2.0):(1.0));
    $191=($185)/($190);
    $192=$158<$191;
    if (!($192)) {
     label = 44;
     break;
    }
    $194=(+(HEAPF64[(($106)>>3)]));
    $195=(+(HEAPF64[(($108)>>3)]));
    $196=$194<$195;
    $_12=($196?$194:$195);
    $197=(($inLow+($i_2<<3))|0);
    $198=(+(HEAPF64[(($197)>>3)]));
    $199=($_12)-($198);
    $200=(($186+344)|0);
    $201=(+(HEAPF64[(($200)>>3)]));
    $202=(($186+336)|0);
    $203=((HEAP32[(($202)>>2)])|0);
    $204=($203|0)==0;
    do {
     if ($204) {
      if (((($188|0))|0)==((1)|0)) {
       $213=(+(HEAPF64[(($153)>>3)]));
       $214=($213)-($198);
       $220=$214;
       break;
      } else if (((($188|0))|0)==((2)|0)) {
       $216=(+(HEAPF64[(($153)>>3)]));
       $_13=($196?$195:$194);
       $217=($216)-($_13);
       $218=($199)+($217);
       $220=$218;
       break;
      } else if (((($188|0))|0)==((0)|0)) {
       $210=($194)-($195);
       $211=(+(Math_abs((+($210)))));
       $220=$211;
       break;
      } else {
       $220=0.0;
       break;
      }
     } else {
      $206=(+((($203|0))|0));
      $207=($ShadowVeryShortPeriodTotal_1)/($206);
      $220=$207;
     }
    } while(0);

    $221=($201)*($220);
    $222=((HEAP32[((272)>>2)])|0);
    $223=(($222+332)|0);
    $224=((HEAP32[(($223)>>2)])|0);
    $225=($224|0)==2;
    $226=($225?(2.0):(1.0));
    $227=($221)/($226);
    $228=$199<$227;
    if (!($228)) {
     label = 44;
     break;
    }
    $230=(+(HEAPF64[(($106)>>3)]));
    $231=(+(HEAPF64[(($108)>>3)]));
    $232=$230>=$231;
    $233=($232?100:-100);
    $234=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($234)>>2)]=$233;
   } else {
    label = 44;
   }
  } while(0);
  if ((label|0) == 44) {
   label = 0;
   $236=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($236)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $238=((HEAP32[((272)>>2)])|0);
  $239=(($238+164)|0);
  $240=((HEAP32[(($239)>>2)])|0);
  if (((($240|0))|0)==((2)|0)) {
   $253=(($inHigh+($i_2<<3))|0);
   $254=(+(HEAPF64[(($253)>>3)]));
   $255=(+(HEAPF64[(($106)>>3)]));
   $256=(+(HEAPF64[(($108)>>3)]));
   $257=$255<$256;
   $_14=($257?$256:$255);
   $258=($254)-($_14);
   $259=($257?$255:$256);
   $260=(($inLow+($i_2<<3))|0);
   $261=(+(HEAPF64[(($260)>>3)]));
   $262=($259)-($261);
   $263=($258)+($262);
   $265=$263;
  } else if (((($240|0))|0)==((0)|0)) {
   $242=(+(HEAPF64[(($106)>>3)]));
   $243=(+(HEAPF64[(($108)>>3)]));
   $244=($242)-($243);
   $245=(+(Math_abs((+($244)))));
   $265=$245;
  } else if (((($240|0))|0)==((1)|0)) {
   $247=(($inHigh+($i_2<<3))|0);
   $248=(+(HEAPF64[(($247)>>3)]));
   $249=(($inLow+($i_2<<3))|0);
   $250=(+(HEAPF64[(($249)>>3)]));
   $251=($248)-($250);
   $265=$251;
  } else {
   $265=0.0;
  }

  $266=((HEAP32[((272)>>2)])|0);
  $267=(($266+164)|0);
  $268=((HEAP32[(($267)>>2)])|0);
  if (((($268|0))|0)==((2)|0)) {
   $283=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $284=(+(HEAPF64[(($283)>>3)]));
   $285=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $286=(+(HEAPF64[(($285)>>3)]));
   $287=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $288=(+(HEAPF64[(($287)>>3)]));
   $289=$286<$288;
   $_15=($289?$288:$286);
   $290=($284)-($_15);
   $291=($289?$286:$288);
   $292=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $293=(+(HEAPF64[(($292)>>3)]));
   $294=($291)-($293);
   $295=($290)+($294);
   $297=$295;
  } else if (((($268|0))|0)==((1)|0)) {
   $277=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $278=(+(HEAPF64[(($277)>>3)]));
   $279=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $280=(+(HEAPF64[(($279)>>3)]));
   $281=($278)-($280);
   $297=$281;
  } else if (((($268|0))|0)==((0)|0)) {
   $270=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $271=(+(HEAPF64[(($270)>>3)]));
   $272=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $273=(+(HEAPF64[(($272)>>3)]));
   $274=($271)-($273);
   $275=(+(Math_abs((+($274)))));
   $297=$275;
  } else {
   $297=0.0;
  }

  $298=($265)-($297);
  $299=($BodyLongPeriodTotal_1)+($298);
  $300=((HEAP32[((272)>>2)])|0);
  $301=(($300+332)|0);
  $302=((HEAP32[(($301)>>2)])|0);
  if (((($302|0))|0)==((0)|0)) {
   $304=(+(HEAPF64[(($106)>>3)]));
   $305=(+(HEAPF64[(($108)>>3)]));
   $306=($304)-($305);
   $307=(+(Math_abs((+($306)))));
   $327=$307;
  } else if (((($302|0))|0)==((2)|0)) {
   $315=(($inHigh+($i_2<<3))|0);
   $316=(+(HEAPF64[(($315)>>3)]));
   $317=(+(HEAPF64[(($106)>>3)]));
   $318=(+(HEAPF64[(($108)>>3)]));
   $319=$317<$318;
   $_16=($319?$318:$317);
   $320=($316)-($_16);
   $321=($319?$317:$318);
   $322=(($inLow+($i_2<<3))|0);
   $323=(+(HEAPF64[(($322)>>3)]));
   $324=($321)-($323);
   $325=($320)+($324);
   $327=$325;
  } else if (((($302|0))|0)==((1)|0)) {
   $309=(($inHigh+($i_2<<3))|0);
   $310=(+(HEAPF64[(($309)>>3)]));
   $311=(($inLow+($i_2<<3))|0);
   $312=(+(HEAPF64[(($311)>>3)]));
   $313=($310)-($312);
   $327=$313;
  } else {
   $327=0.0;
  }

  $328=((HEAP32[((272)>>2)])|0);
  $329=(($328+332)|0);
  $330=((HEAP32[(($329)>>2)])|0);
  if (((($330|0))|0)==((0)|0)) {
   $332=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $333=(+(HEAPF64[(($332)>>3)]));
   $334=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=($333)-($335);
   $337=(+(Math_abs((+($336)))));
   $359=$337;
  } else if (((($330|0))|0)==((2)|0)) {
   $345=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $346=(+(HEAPF64[(($345)>>3)]));
   $347=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $348=(+(HEAPF64[(($347)>>3)]));
   $349=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $350=(+(HEAPF64[(($349)>>3)]));
   $351=$348<$350;
   $_17=($351?$350:$348);
   $352=($346)-($_17);
   $353=($351?$348:$350);
   $354=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $355=(+(HEAPF64[(($354)>>3)]));
   $356=($353)-($355);
   $357=($352)+($356);
   $359=$357;
  } else if (((($330|0))|0)==((1)|0)) {
   $339=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $340=(+(HEAPF64[(($339)>>3)]));
   $341=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=($340)-($342);
   $359=$343;
  } else {
   $359=0.0;
  }

  $360=($327)-($359);
  $361=($ShadowVeryShortPeriodTotal_1)+($360);
  $362=((($i_2)+(1))|0);
  $363=((($BodyLongTrailingIdx_0)+(1))|0);
  $364=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $365=($i_2|0)<($endIdx|0);
  if ($365) {
   $ShadowVeryShortTrailingIdx_0=$364;$BodyLongTrailingIdx_0=$363;$outIdx_0=$outIdx_1;$i_2=$362;$ShadowVeryShortPeriodTotal_1=$361;$BodyLongPeriodTotal_1=$299;
  } else {
   break;
  }
 }
 $367=((($71)-($i_1_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$367;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLMATCHINGLOW_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+408)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((($3)+(1))|0);
 return (($4)|0);
}


function _TA_CDLMATCHINGLOW($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond13=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$EqualPeriodTotal_0_lcssa=.0,$25=0,$smax=0,$26=0,$smax16=0,$27=0,$smax17=0,$i_015=0,$EqualPeriodTotal_014=.0,$30=0,$31=0,$32=.0,$33=0,$34=.0;
 var $35=.0,$36=.0,$38=0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$45=0,$46=0,$47=.0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$_=.0,$53=.0,$54=.0,$55=0;
 var $56=.0,$57=.0,$58=.0,$60=.0,$61=.0,$62=0,$63=0,$EqualPeriodTotal_1=.0,$i_1=0,$outIdx_0=0,$EqualTrailingIdx_0=0,$65=0,$66=0,$67=.0,$68=0,$69=.0,$70=0,$72=0,$73=.0,$74=0;
 var $75=.0,$not_7=0,$77=0,$78=0,$79=.0,$80=0,$81=0,$82=0,$84=.0,$85=.0,$87=0,$88=0,$90=.0,$91=.0,$93=0,$94=.0,$95=0,$96=.0,$97=.0,$99=0;
 var $100=.0,$_9=.0,$101=.0,$102=0,$103=.0,$104=0,$105=.0,$106=.0,$107=.0,$109=.0,$110=.0,$111=0,$112=0,$113=0,$114=0,$115=.0,$116=.0,$117=.0,$118=0,$120=.0;
 var $121=.0,$122=0,$123=.0,$124=0,$125=0,$126=0,$128=.0,$129=.0,$132=.0,$133=.0,$134=.0,$136=0,$137=.0,$138=0,$139=.0,$140=.0,$143=0,$144=.0,$145=.0,$146=0;
 var $_10=.0,$147=.0,$148=.0,$149=0,$150=.0,$151=.0,$152=.0,$154=.0,$155=.0,$156=0,$157=0,$158=0,$159=0,$160=.0,$161=.0,$162=.0,$163=0,$165=0,$167=0,$outIdx_1=0;
 var $169=0,$170=0,$171=0,$173=.0,$174=.0,$175=.0,$176=.0,$178=0,$179=.0,$180=0,$181=.0,$182=.0,$184=0,$185=.0,$186=.0,$187=.0,$188=0,$_11=.0,$189=.0,$190=.0;
 var $191=0,$192=.0,$193=.0,$194=.0,$196=.0,$197=0,$198=0,$199=0,$201=0,$202=0,$203=.0,$204=0,$205=.0,$206=.0,$207=.0,$209=0,$210=0,$211=.0,$212=0,$213=.0;
 var $214=.0,$216=0,$217=0,$218=.0,$219=0,$220=.0,$221=0,$222=.0,$223=0,$_12=.0,$224=.0,$225=.0,$226=0,$227=.0,$228=.0,$229=.0,$231=.0,$232=.0,$233=.0,$234=0;
 var $235=0,$236=0,$238=0,$239=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond13=$10|$or_cond5_not;
 if ($or_cond13) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLMATCHINGLOW_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+408)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=($19|0)>0;
 if ($21) {
  $22=((HEAP32[((272)>>2)])|0);
  $23=(($22+404)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $EqualPeriodTotal_014=0.0;$i_015=$20;
  while(1) {


   if (((($24|0))|0)==((2)|0)) {
    $45=((($i_015)-(1))|0);
    $46=(($inHigh+($45<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inClose+($45<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inOpen+($45<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=$49<$51;
    $_=($52?$51:$49);
    $53=($47)-($_);
    $54=($52?$49:$51);
    $55=(($inLow+($45<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=($54)-($56);
    $58=($53)+($57);
    $60=$58;
   } else if (((($24|0))|0)==((0)|0)) {
    $30=((($i_015)-(1))|0);
    $31=(($inClose+($30<<3))|0);
    $32=(+(HEAPF64[(($31)>>3)]));
    $33=(($inOpen+($30<<3))|0);
    $34=(+(HEAPF64[(($33)>>3)]));
    $35=($32)-($34);
    $36=(+(Math_abs((+($35)))));
    $60=$36;
   } else if (((($24|0))|0)==((1)|0)) {
    $38=((($i_015)-(1))|0);
    $39=(($inHigh+($38<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inLow+($38<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $60=$43;
   } else {
    $60=0.0;
   }

   $61=($EqualPeriodTotal_014)+($60);
   $62=((($i_015)+(1))|0);
   $63=($62|0)<($_startIdx|0);
   if ($63) {
    $EqualPeriodTotal_014=$61;$i_015=$62;
   } else {
    $EqualPeriodTotal_0_lcssa=$61;
    break;
   }
  }
 } else {
  $EqualPeriodTotal_0_lcssa=0.0;
 }

 $25=($12|0)>($endIdx|0);
 $smax=($25?$12:$endIdx);
 $26=($smax|0)>($startIdx|0);
 $smax16=($26?$smax:$startIdx);
 $27=($12|0)>($startIdx|0);
 $smax17=($27?$12:$startIdx);
 $EqualTrailingIdx_0=$20;$outIdx_0=0;$i_1=$_startIdx;$EqualPeriodTotal_1=$EqualPeriodTotal_0_lcssa;
 while(1) {




  $65=((($i_1)-(1))|0);
  $66=(($inClose+($65<<3))|0);
  $67=(+(HEAPF64[(($66)>>3)]));
  $68=(($inOpen+($65<<3))|0);
  $69=(+(HEAPF64[(($68)>>3)]));
  $70=$67>=$69;
  do {
   if ($70) {
    label = 32;
   } else {
    $72=(($inClose+($i_1<<3))|0);
    $73=(+(HEAPF64[(($72)>>3)]));
    $74=(($inOpen+($i_1<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $not_7=$73<$75;
    if (!($not_7)) {
     label = 32;
     break;
    }
    $77=((HEAP32[((272)>>2)])|0);
    $78=(($77+416)|0);
    $79=(+(HEAPF64[(($78)>>3)]));
    $80=(($77+408)|0);
    $81=((HEAP32[(($80)>>2)])|0);
    $82=($81|0)==0;
    do {
     if ($82) {
      $87=(($77+404)|0);
      $88=((HEAP32[(($87)>>2)])|0);
      if (((($88|0))|0)==((2)|0)) {
       $99=(($inHigh+($65<<3))|0);
       $100=(+(HEAPF64[(($99)>>3)]));
       $_9=($70?$67:$69);
       $101=($100)-($_9);
       $102=$67<$69;
       $103=($102?$67:$69);
       $104=(($inLow+($65<<3))|0);
       $105=(+(HEAPF64[(($104)>>3)]));
       $106=($103)-($105);
       $107=($101)+($106);
       $109=$107;
       break;
      } else if (((($88|0))|0)==((0)|0)) {
       $90=($67)-($69);
       $91=(+(Math_abs((+($90)))));
       $109=$91;
       break;
      } else if (((($88|0))|0)==((1)|0)) {
       $93=(($inHigh+($65<<3))|0);
       $94=(+(HEAPF64[(($93)>>3)]));
       $95=(($inLow+($65<<3))|0);
       $96=(+(HEAPF64[(($95)>>3)]));
       $97=($94)-($96);
       $109=$97;
       break;
      } else {
       $109=0.0;
       break;
      }
     } else {
      $84=(+((($81|0))|0));
      $85=($EqualPeriodTotal_1)/($84);
      $109=$85;
     }
    } while(0);

    $110=($79)*($109);
    $111=((HEAP32[((272)>>2)])|0);
    $112=(($111+404)|0);
    $113=((HEAP32[(($112)>>2)])|0);
    $114=($113|0)==2;
    $115=($114?(2.0):(1.0));
    $116=($110)/($115);
    $117=($67)+($116);
    $118=$73>$117;
    if ($118) {
     label = 32;
     break;
    }
    $120=(+(HEAPF64[(($72)>>3)]));
    $121=(+(HEAPF64[(($66)>>3)]));
    $122=(($111+416)|0);
    $123=(+(HEAPF64[(($122)>>3)]));
    $124=(($111+408)|0);
    $125=((HEAP32[(($124)>>2)])|0);
    $126=($125|0)==0;
    do {
     if ($126) {
      if (((($113|0))|0)==((0)|0)) {
       $132=(+(HEAPF64[(($68)>>3)]));
       $133=($121)-($132);
       $134=(+(Math_abs((+($133)))));
       $154=$134;
       break;
      } else if (((($113|0))|0)==((1)|0)) {
       $136=(($inHigh+($65<<3))|0);
       $137=(+(HEAPF64[(($136)>>3)]));
       $138=(($inLow+($65<<3))|0);
       $139=(+(HEAPF64[(($138)>>3)]));
       $140=($137)-($139);
       $154=$140;
       break;
      } else {
       if (!($114)) {
        $154=0.0;
        break;
       }
       $143=(($inHigh+($65<<3))|0);
       $144=(+(HEAPF64[(($143)>>3)]));
       $145=(+(HEAPF64[(($68)>>3)]));
       $146=$121<$145;
       $_10=($146?$145:$121);
       $147=($144)-($_10);
       $148=($146?$121:$145);
       $149=(($inLow+($65<<3))|0);
       $150=(+(HEAPF64[(($149)>>3)]));
       $151=($148)-($150);
       $152=($147)+($151);
       $154=$152;
       break;
      }
     } else {
      $128=(+((($125|0))|0));
      $129=($EqualPeriodTotal_1)/($128);
      $154=$129;
     }
    } while(0);

    $155=($123)*($154);
    $156=((HEAP32[((272)>>2)])|0);
    $157=(($156+404)|0);
    $158=((HEAP32[(($157)>>2)])|0);
    $159=($158|0)==2;
    $160=($159?(2.0):(1.0));
    $161=($155)/($160);
    $162=($121)-($161);
    $163=$120<$162;
    if ($163) {
     label = 32;
     break;
    }
    $165=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($165)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 32) {
   label = 0;
   $167=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($167)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $169=((HEAP32[((272)>>2)])|0);
  $170=(($169+404)|0);
  $171=((HEAP32[(($170)>>2)])|0);
  if (((($171|0))|0)==((1)|0)) {
   $178=(($inHigh+($65<<3))|0);
   $179=(+(HEAPF64[(($178)>>3)]));
   $180=(($inLow+($65<<3))|0);
   $181=(+(HEAPF64[(($180)>>3)]));
   $182=($179)-($181);
   $196=$182;
  } else if (((($171|0))|0)==((2)|0)) {
   $184=(($inHigh+($65<<3))|0);
   $185=(+(HEAPF64[(($184)>>3)]));
   $186=(+(HEAPF64[(($66)>>3)]));
   $187=(+(HEAPF64[(($68)>>3)]));
   $188=$186<$187;
   $_11=($188?$187:$186);
   $189=($185)-($_11);
   $190=($188?$186:$187);
   $191=(($inLow+($65<<3))|0);
   $192=(+(HEAPF64[(($191)>>3)]));
   $193=($190)-($192);
   $194=($189)+($193);
   $196=$194;
  } else if (((($171|0))|0)==((0)|0)) {
   $173=(+(HEAPF64[(($66)>>3)]));
   $174=(+(HEAPF64[(($68)>>3)]));
   $175=($173)-($174);
   $176=(+(Math_abs((+($175)))));
   $196=$176;
  } else {
   $196=0.0;
  }

  $197=((HEAP32[((272)>>2)])|0);
  $198=(($197+404)|0);
  $199=((HEAP32[(($198)>>2)])|0);
  if (((($199|0))|0)==((1)|0)) {
   $209=((($EqualTrailingIdx_0)-(1))|0);
   $210=(($inHigh+($209<<3))|0);
   $211=(+(HEAPF64[(($210)>>3)]));
   $212=(($inLow+($209<<3))|0);
   $213=(+(HEAPF64[(($212)>>3)]));
   $214=($211)-($213);
   $231=$214;
  } else if (((($199|0))|0)==((0)|0)) {
   $201=((($EqualTrailingIdx_0)-(1))|0);
   $202=(($inClose+($201<<3))|0);
   $203=(+(HEAPF64[(($202)>>3)]));
   $204=(($inOpen+($201<<3))|0);
   $205=(+(HEAPF64[(($204)>>3)]));
   $206=($203)-($205);
   $207=(+(Math_abs((+($206)))));
   $231=$207;
  } else if (((($199|0))|0)==((2)|0)) {
   $216=((($EqualTrailingIdx_0)-(1))|0);
   $217=(($inHigh+($216<<3))|0);
   $218=(+(HEAPF64[(($217)>>3)]));
   $219=(($inClose+($216<<3))|0);
   $220=(+(HEAPF64[(($219)>>3)]));
   $221=(($inOpen+($216<<3))|0);
   $222=(+(HEAPF64[(($221)>>3)]));
   $223=$220<$222;
   $_12=($223?$222:$220);
   $224=($218)-($_12);
   $225=($223?$220:$222);
   $226=(($inLow+($216<<3))|0);
   $227=(+(HEAPF64[(($226)>>3)]));
   $228=($225)-($227);
   $229=($224)+($228);
   $231=$229;
  } else {
   $231=0.0;
  }

  $232=($196)-($231);
  $233=($EqualPeriodTotal_1)+($232);
  $234=((($i_1)+(1))|0);
  $235=((($EqualTrailingIdx_0)+(1))|0);
  $236=($i_1|0)<($endIdx|0);
  if ($236) {
   $EqualTrailingIdx_0=$235;$outIdx_0=$outIdx_1;$i_1=$234;$EqualPeriodTotal_1=$233;
  } else {
   break;
  }
 }
 $238=((($smax16)+(1))|0);
 $239=((($238)-($smax17))|0);
 HEAP32[(($outNBElement)>>2)]=$239;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLMATHOLD_Lookback($optInPenetration){
 $optInPenetration=+($optInPenetration);
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$_=0,$12=0,$_02=0,label=0;

 $1=$optInPenetration==(-4.0e+37);
 do {
  if (!($1)) {
   $3=$optInPenetration<(0.0);
   $4=$optInPenetration>(3.0e+37);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_02=-1;
   } else {
    break;
   }

   return (($_02)|0);
  }
 } while(0);
 $6=((HEAP32[((272)>>2)])|0);
 $7=(($6+216)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($6+168)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)>($10|0);
 $_=($11?$8:$10);
 $12=((($_)+(4))|0);
 $_02=$12;

 return (($_02)|0);
}


function _TA_CDLMATHOLD($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$optInPenetration,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInPenetration=+($optInPenetration);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $BodyPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond10=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$11=0,$13=0,$14=0,$or_cond7=0,$_09=.0,$16=0,$18=0,$19=0;
 var $_startIdx=0,$20=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$_promoted40=.0,$_promoted41=.0;
 var $_promoted42=.0,$39=0,$40=0,$41=0,$42=0,$_promoted=.0,$44=.0,$45=.0,$46=.0,$i_038=0,$47=0,$48=0,$49=.0,$50=0,$51=.0,$52=.0,$53=.0,$54=0,$55=0,$56=.0;
 var $57=0,$58=.0,$59=.0,$60=.0,$61=0,$62=0,$63=.0,$64=0,$65=.0,$66=.0,$67=.0,$68=0,$69=0,$70=.0,$71=0,$72=.0,$73=.0,$74=0,$75=0,$76=.0;
 var $77=0,$78=.0,$79=.0,$80=0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$86=0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$_=.0,$94=.0,$95=.0;
 var $96=0,$97=.0,$98=.0,$99=.0,$100=0,$101=0,$102=.0,$103=0,$104=.0,$105=0,$106=.0,$107=0,$_11=.0,$108=.0,$109=.0,$110=0,$111=.0,$112=.0,$113=.0,$114=0;
 var $115=0,$116=.0,$117=0,$118=.0,$119=0,$120=.0,$121=0,$_12=.0,$122=.0,$123=.0,$124=0,$125=.0,$126=.0,$127=.0,$_pn=.0,$_pn59=.0,$130=.0,$131=.0,$132=.0,$133=.0;
 var $134=0,$135=0,$136=0,$smax=0,$137=0,$smax46=0,$138=0,$smax47=0,$140=.0,$i_137=0,$142=0,$143=0,$144=.0,$145=0,$146=.0,$147=.0,$148=.0,$150=0,$151=0,$152=.0;
 var $153=0,$154=.0,$155=.0,$157=0,$158=0,$159=.0,$160=0,$161=.0,$162=0,$163=.0,$164=0,$_13=.0,$165=.0,$166=.0,$167=0,$168=.0,$169=.0,$170=.0,$172=.0,$173=.0;
 var $174=0,$175=0,$i_2=0,$outIdx_0=0,$BodyShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$177=0,$178=0,$179=.0,$180=0,$181=.0,$182=.0,$183=.0,$184=0,$185=0,$186=.0,$187=0,$188=0,$189=0,$191=.0;
 var $192=.0,$193=.0,$195=0,$196=0,$198=0,$199=.0,$200=0,$201=.0,$202=.0,$204=0,$206=0,$207=.0,$208=0,$_14=.0,$209=.0,$210=.0,$211=0,$212=.0,$213=.0,$214=.0;
 var $216=.0,$217=.0,$218=0,$219=0,$220=0,$221=0,$222=.0,$223=.0,$224=0,$226=0,$227=0,$228=.0,$229=0,$230=.0,$231=.0,$232=.0,$233=0,$234=.0,$235=0,$236=0;
 var $237=0,$239=.0,$240=.0,$241=.0,$243=0,$244=0,$246=0,$247=.0,$248=0,$249=.0,$250=.0,$252=0,$254=0,$255=.0,$256=0,$_15=.0,$257=.0,$258=.0,$259=0,$260=.0;
 var $261=.0,$262=.0,$264=.0,$265=.0,$266=0,$267=0,$268=0,$269=0,$270=.0,$271=.0,$272=0,$274=0,$275=0,$276=.0,$277=0,$278=.0,$279=.0,$280=.0,$281=0,$282=.0;
 var $283=0,$284=0,$285=0,$287=.0,$288=.0,$289=.0,$292=0,$293=.0,$294=0,$295=.0,$296=.0,$299=0,$300=.0,$301=0,$_16=.0,$302=.0,$303=.0,$304=0,$305=.0,$306=.0;
 var $307=.0,$309=.0,$310=.0,$311=0,$312=0,$313=0,$314=0,$315=.0,$316=.0,$317=0,$319=0,$320=0,$321=.0,$322=0,$323=.0,$324=.0,$325=.0,$326=0,$327=.0,$328=0;
 var $329=0,$330=0,$332=.0,$333=.0,$334=.0,$337=0,$338=.0,$339=0,$340=.0,$341=.0,$344=0,$345=.0,$346=0,$_17=.0,$347=.0,$348=.0,$349=0,$350=.0,$351=.0,$352=.0;
 var $354=.0,$355=.0,$356=0,$357=0,$358=0,$359=0,$360=.0,$361=.0,$362=0,$364=.0,$365=.0,$366=0,$368=.0,$369=.0,$not_=0,$371=0,$372=.0,$373=0,$374=.0,$375=0;
 var $377=0,$_18=.0,$378=0,$379=.0,$380=0,$382=.0,$383=.0,$384=0,$_19=.0,$385=0,$387=.0,$388=.0,$389=0,$_20=.0,$390=0,$392=.0,$393=.0,$394=.0,$395=.0,$396=0;
 var $397=0,$or_cond31=0,$_23=.0,$399=0,$_24=.0,$400=0,$or_cond33=0,$401=0,$or_cond34=0,$403=0,$404=.0,$405=0,$406=.0,$407=0,$_25=.0,$408=0,$409=.0,$410=0,$411=.0,$412=0;
 var $414=0,$416=0,$outIdx_1=0,$418=0,$419=0,$420=0,$422=.0,$423=.0,$424=.0,$425=.0,$427=0,$428=.0,$429=0,$430=.0,$431=.0,$433=0,$434=.0,$435=.0,$436=.0,$437=0;
 var $_27=.0,$438=.0,$439=.0,$440=0,$441=.0,$442=.0,$443=.0,$445=.0,$446=0,$447=0,$448=0,$450=0,$451=0,$452=.0,$453=0,$454=.0,$455=.0,$456=.0,$458=0,$459=0;
 var $460=.0,$461=0,$462=.0,$463=.0,$465=0,$466=0,$467=.0,$468=0,$469=.0,$470=0,$471=.0,$472=0,$_28=.0,$473=.0,$474=.0,$475=0,$476=.0,$477=.0,$478=.0,$480=.0;
 var $481=.0,$482=.0,$483=.0,$484=0,$485=0,$486=0,$totIdx_035=0,$488=0,$489=0,$490=.0,$491=0,$492=.0,$493=.0,$494=.0,$495=0,$496=0,$497=.0,$498=0,$499=.0,$500=.0;
 var $501=.0,$502=0,$503=0,$504=.0,$505=0,$506=.0,$507=.0,$508=0,$509=0,$510=.0,$511=0,$512=.0,$513=.0,$514=0,$515=0,$516=.0,$517=0,$518=.0,$519=0,$520=.0;
 var $521=0,$_29=.0,$522=.0,$523=.0,$524=0,$525=.0,$526=.0,$527=.0,$528=0,$529=0,$530=.0,$531=0,$532=.0,$533=0,$534=.0,$535=0,$_30=.0,$536=.0,$537=.0,$538=0;
 var $539=.0,$540=.0,$541=.0,$543=.0,$544=.0,$545=.0,$546=0,$547=.0,$548=.0,$549=0,$550=0,$552=0,$553=0,$554=0,$555=0,$557=0,$558=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $BodyPeriodTotal=((sp)|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond10=$3|$4;
 if ($or_cond10) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 if (!($or_cond5)) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $11=$optInPenetration==(-4.0e+37);
 do {
  if ($11) {
   $_09=0.5;
  } else {
   $13=$optInPenetration<(0.0);
   $14=$optInPenetration>(3.0e+37);
   $or_cond7=$13|$14;
   if ($or_cond7) {
    $_0=2;
   } else {
    $_09=$optInPenetration;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $16=($outInteger|0)==0;
 if ($16) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $18=((_TA_CDLMATHOLD_Lookback($_09))|0);
 $19=($18|0)>($startIdx|0);
 $_startIdx=($19?$18:$startIdx);
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $23=(($BodyPeriodTotal+32)|0);
 $24=(($BodyPeriodTotal+24)|0);
 $25=(($BodyPeriodTotal+16)|0);
 $26=(($BodyPeriodTotal+8)|0);
 $27=$BodyPeriodTotal;
 _memset((((($27)|0))|0), ((((0)|0))|0), ((((40)|0))|0))|0;
 $28=((HEAP32[((272)>>2)])|0);
 $29=(($28+216)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=((($_startIdx)-($30))|0);
 $32=(($28+168)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=((($_startIdx)-($33))|0);
 $35=($30|0)>0;
 if ($35) {
  $36=((HEAP32[((272)>>2)])|0);
  $37=(($36+212)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $_promoted40=(+(HEAPF64[(($24)>>3)]));
  $_promoted41=(+(HEAPF64[(($25)>>3)]));
  $_promoted42=(+(HEAPF64[(($26)>>3)]));
  $i_038=$31;$46=$_promoted40;$45=$_promoted41;$44=$_promoted42;
  while(1) {




   if (((($38|0))|0)==((2)|0)) {
    $86=((($i_038)-(3))|0);
    $87=(($inHigh+($86<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inClose+($86<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inOpen+($86<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$90<$92;
    $_=($93?$92:$90);
    $94=($88)-($_);
    $95=($93?$90:$92);
    $96=(($inLow+($86<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $100=((($i_038)-(2))|0);
    $101=(($inHigh+($100<<3))|0);
    $102=(+(HEAPF64[(($101)>>3)]));
    $103=(($inClose+($100<<3))|0);
    $104=(+(HEAPF64[(($103)>>3)]));
    $105=(($inOpen+($100<<3))|0);
    $106=(+(HEAPF64[(($105)>>3)]));
    $107=$104<$106;
    $_11=($107?$106:$104);
    $108=($102)-($_11);
    $109=($107?$104:$106);
    $110=(($inLow+($100<<3))|0);
    $111=(+(HEAPF64[(($110)>>3)]));
    $112=($109)-($111);
    $113=($108)+($112);
    $114=((($i_038)-(1))|0);
    $115=(($inHigh+($114<<3))|0);
    $116=(+(HEAPF64[(($115)>>3)]));
    $117=(($inClose+($114<<3))|0);
    $118=(+(HEAPF64[(($117)>>3)]));
    $119=(($inOpen+($114<<3))|0);
    $120=(+(HEAPF64[(($119)>>3)]));
    $121=$118<$120;
    $_12=($121?$120:$118);
    $122=($116)-($_12);
    $123=($121?$118:$120);
    $124=(($inLow+($114<<3))|0);
    $125=(+(HEAPF64[(($124)>>3)]));
    $126=($123)-($125);
    $127=($122)+($126);
    $130=$127;$_pn59=$99;$_pn=$113;
   } else if (((($38|0))|0)==((1)|0)) {
    $68=((($i_038)-(3))|0);
    $69=(($inHigh+($68<<3))|0);
    $70=(+(HEAPF64[(($69)>>3)]));
    $71=(($inLow+($68<<3))|0);
    $72=(+(HEAPF64[(($71)>>3)]));
    $73=($70)-($72);
    $74=((($i_038)-(2))|0);
    $75=(($inHigh+($74<<3))|0);
    $76=(+(HEAPF64[(($75)>>3)]));
    $77=(($inLow+($74<<3))|0);
    $78=(+(HEAPF64[(($77)>>3)]));
    $79=($76)-($78);
    $80=((($i_038)-(1))|0);
    $81=(($inHigh+($80<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($80<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $130=$85;$_pn59=$73;$_pn=$79;
   } else if (((($38|0))|0)==((0)|0)) {
    $47=((($i_038)-(3))|0);
    $48=(($inClose+($47<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inOpen+($47<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=($49)-($51);
    $53=(+(Math_abs((+($52)))));
    $54=((($i_038)-(2))|0);
    $55=(($inClose+($54<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=(($inOpen+($54<<3))|0);
    $58=(+(HEAPF64[(($57)>>3)]));
    $59=($56)-($58);
    $60=(+(Math_abs((+($59)))));
    $61=((($i_038)-(1))|0);
    $62=(($inClose+($61<<3))|0);
    $63=(+(HEAPF64[(($62)>>3)]));
    $64=(($inOpen+($61<<3))|0);
    $65=(+(HEAPF64[(($64)>>3)]));
    $66=($63)-($65);
    $67=(+(Math_abs((+($66)))));
    $130=$67;$_pn59=$53;$_pn=$60;
   } else {
    $130=0.0;$_pn59=0.0;$_pn=0.0;
   }



   $131=($_pn59)+($46);
   $132=($_pn)+($45);
   $133=($130)+($44);
   $134=((($i_038)+(1))|0);
   $135=($134|0)<($_startIdx|0);
   if ($135) {
    $i_038=$134;$46=$131;$45=$132;$44=$133;
   } else {
    break;
   }
  }
  HEAPF64[(($24)>>3)]=$131;
  HEAPF64[(($25)>>3)]=$132;
  HEAPF64[(($26)>>3)]=$133;
 }
 $39=($33|0)>0;
 if ($39) {
  $40=((HEAP32[((272)>>2)])|0);
  $41=(($40+164)|0);
  $42=((HEAP32[(($41)>>2)])|0);
  $_promoted=(+(HEAPF64[(($23)>>3)]));
  $i_137=$34;$140=$_promoted;
  while(1) {


   if (((($42|0))|0)==((2)|0)) {
    $157=((($i_137)-(4))|0);
    $158=(($inHigh+($157<<3))|0);
    $159=(+(HEAPF64[(($158)>>3)]));
    $160=(($inClose+($157<<3))|0);
    $161=(+(HEAPF64[(($160)>>3)]));
    $162=(($inOpen+($157<<3))|0);
    $163=(+(HEAPF64[(($162)>>3)]));
    $164=$161<$163;
    $_13=($164?$163:$161);
    $165=($159)-($_13);
    $166=($164?$161:$163);
    $167=(($inLow+($157<<3))|0);
    $168=(+(HEAPF64[(($167)>>3)]));
    $169=($166)-($168);
    $170=($165)+($169);
    $172=$170;
   } else if (((($42|0))|0)==((0)|0)) {
    $142=((($i_137)-(4))|0);
    $143=(($inClose+($142<<3))|0);
    $144=(+(HEAPF64[(($143)>>3)]));
    $145=(($inOpen+($142<<3))|0);
    $146=(+(HEAPF64[(($145)>>3)]));
    $147=($144)-($146);
    $148=(+(Math_abs((+($147)))));
    $172=$148;
   } else if (((($42|0))|0)==((1)|0)) {
    $150=((($i_137)-(4))|0);
    $151=(($inHigh+($150<<3))|0);
    $152=(+(HEAPF64[(($151)>>3)]));
    $153=(($inLow+($150<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=($152)-($154);
    $172=$155;
   } else {
    $172=0.0;
   }

   $173=($172)+($140);
   $174=((($i_137)+(1))|0);
   $175=($174|0)<($_startIdx|0);
   if ($175) {
    $i_137=$174;$140=$173;
   } else {
    break;
   }
  }
  HEAPF64[(($23)>>3)]=$173;
 }
 $136=($18|0)>($endIdx|0);
 $smax=($136?$18:$endIdx);
 $137=($smax|0)>($startIdx|0);
 $smax46=($137?$smax:$startIdx);
 $138=($18|0)>($startIdx|0);
 $smax47=($138?$18:$startIdx);
 $BodyLongTrailingIdx_0=$34;$BodyShortTrailingIdx_0=$31;$outIdx_0=0;$i_2=$_startIdx;
 while(1) {




  $177=((($i_2)-(4))|0);
  $178=(($inClose+($177<<3))|0);
  $179=(+(HEAPF64[(($178)>>3)]));
  $180=(($inOpen+($177<<3))|0);
  $181=(+(HEAPF64[(($180)>>3)]));
  $182=($179)-($181);
  $183=(+(Math_abs((+($182)))));
  $184=((HEAP32[((272)>>2)])|0);
  $185=(($184+176)|0);
  $186=(+(HEAPF64[(($185)>>3)]));
  $187=(($184+168)|0);
  $188=((HEAP32[(($187)>>2)])|0);
  $189=($188|0)==0;
  do {
   if ($189) {
    $195=(($184+164)|0);
    $196=((HEAP32[(($195)>>2)])|0);
    if (((($196|0))|0)==((0)|0)) {
     $216=$183;
     break;
    } else if (((($196|0))|0)==((1)|0)) {
     $198=(($inHigh+($177<<3))|0);
     $199=(+(HEAPF64[(($198)>>3)]));
     $200=(($inLow+($177<<3))|0);
     $201=(+(HEAPF64[(($200)>>3)]));
     $202=($199)-($201);
     $216=$202;
     break;
    }
    $204=($196|0)==2;
    if (!($204)) {
     $216=0.0;
     break;
    }
    $206=(($inHigh+($177<<3))|0);
    $207=(+(HEAPF64[(($206)>>3)]));
    $208=$179<$181;
    $_14=($208?$181:$179);
    $209=($207)-($_14);
    $210=($208?$179:$181);
    $211=(($inLow+($177<<3))|0);
    $212=(+(HEAPF64[(($211)>>3)]));
    $213=($210)-($212);
    $214=($209)+($213);
    $216=$214;
   } else {
    $191=(+((($188|0))|0));
    $192=(+(HEAPF64[(($23)>>3)]));
    $193=($192)/($191);
    $216=$193;
   }
  } while(0);

  $217=($186)*($216);
  $218=((HEAP32[((272)>>2)])|0);
  $219=(($218+164)|0);
  $220=((HEAP32[(($219)>>2)])|0);
  $221=($220|0)==2;
  $222=($221?(2.0):(1.0));
  $223=($217)/($222);
  $224=$183>$223;
  do {
   if ($224) {
    $226=((($i_2)-(3))|0);
    $227=(($inClose+($226<<3))|0);
    $228=(+(HEAPF64[(($227)>>3)]));
    $229=(($inOpen+($226<<3))|0);
    $230=(+(HEAPF64[(($229)>>3)]));
    $231=($228)-($230);
    $232=(+(Math_abs((+($231)))));
    $233=(($218+224)|0);
    $234=(+(HEAPF64[(($233)>>3)]));
    $235=(($218+216)|0);
    $236=((HEAP32[(($235)>>2)])|0);
    $237=($236|0)==0;
    do {
     if ($237) {
      $243=(($218+212)|0);
      $244=((HEAP32[(($243)>>2)])|0);
      if (((($244|0))|0)==((1)|0)) {
       $246=(($inHigh+($226<<3))|0);
       $247=(+(HEAPF64[(($246)>>3)]));
       $248=(($inLow+($226<<3))|0);
       $249=(+(HEAPF64[(($248)>>3)]));
       $250=($247)-($249);
       $264=$250;
       break;
      } else if (((($244|0))|0)==((0)|0)) {
       $264=$232;
       break;
      }
      $252=($244|0)==2;
      if (!($252)) {
       $264=0.0;
       break;
      }
      $254=(($inHigh+($226<<3))|0);
      $255=(+(HEAPF64[(($254)>>3)]));
      $256=$228<$230;
      $_15=($256?$230:$228);
      $257=($255)-($_15);
      $258=($256?$228:$230);
      $259=(($inLow+($226<<3))|0);
      $260=(+(HEAPF64[(($259)>>3)]));
      $261=($258)-($260);
      $262=($257)+($261);
      $264=$262;
     } else {
      $239=(+((($236|0))|0));
      $240=(+(HEAPF64[(($24)>>3)]));
      $241=($240)/($239);
      $264=$241;
     }
    } while(0);

    $265=($234)*($264);
    $266=((HEAP32[((272)>>2)])|0);
    $267=(($266+212)|0);
    $268=((HEAP32[(($267)>>2)])|0);
    $269=($268|0)==2;
    $270=($269?(2.0):(1.0));
    $271=($265)/($270);
    $272=$232<$271;
    if (!($272)) {
     label = 65;
     break;
    }
    $274=((($i_2)-(2))|0);
    $275=(($inClose+($274<<3))|0);
    $276=(+(HEAPF64[(($275)>>3)]));
    $277=(($inOpen+($274<<3))|0);
    $278=(+(HEAPF64[(($277)>>3)]));
    $279=($276)-($278);
    $280=(+(Math_abs((+($279)))));
    $281=(($266+224)|0);
    $282=(+(HEAPF64[(($281)>>3)]));
    $283=(($266+216)|0);
    $284=((HEAP32[(($283)>>2)])|0);
    $285=($284|0)==0;
    do {
     if ($285) {
      if (((($268|0))|0)==((1)|0)) {
       $292=(($inHigh+($274<<3))|0);
       $293=(+(HEAPF64[(($292)>>3)]));
       $294=(($inLow+($274<<3))|0);
       $295=(+(HEAPF64[(($294)>>3)]));
       $296=($293)-($295);
       $309=$296;
       break;
      } else if (((($268|0))|0)==((0)|0)) {
       $309=$280;
       break;
      }
      if (!($269)) {
       $309=0.0;
       break;
      }
      $299=(($inHigh+($274<<3))|0);
      $300=(+(HEAPF64[(($299)>>3)]));
      $301=$276<$278;
      $_16=($301?$278:$276);
      $302=($300)-($_16);
      $303=($301?$276:$278);
      $304=(($inLow+($274<<3))|0);
      $305=(+(HEAPF64[(($304)>>3)]));
      $306=($303)-($305);
      $307=($302)+($306);
      $309=$307;
     } else {
      $287=(+((($284|0))|0));
      $288=(+(HEAPF64[(($25)>>3)]));
      $289=($288)/($287);
      $309=$289;
     }
    } while(0);

    $310=($282)*($309);
    $311=((HEAP32[((272)>>2)])|0);
    $312=(($311+212)|0);
    $313=((HEAP32[(($312)>>2)])|0);
    $314=($313|0)==2;
    $315=($314?(2.0):(1.0));
    $316=($310)/($315);
    $317=$280<$316;
    if (!($317)) {
     label = 65;
     break;
    }
    $319=((($i_2)-(1))|0);
    $320=(($inClose+($319<<3))|0);
    $321=(+(HEAPF64[(($320)>>3)]));
    $322=(($inOpen+($319<<3))|0);
    $323=(+(HEAPF64[(($322)>>3)]));
    $324=($321)-($323);
    $325=(+(Math_abs((+($324)))));
    $326=(($311+224)|0);
    $327=(+(HEAPF64[(($326)>>3)]));
    $328=(($311+216)|0);
    $329=((HEAP32[(($328)>>2)])|0);
    $330=($329|0)==0;
    do {
     if ($330) {
      if (((($313|0))|0)==((0)|0)) {
       $354=$325;
       break;
      } else if (((($313|0))|0)==((1)|0)) {
       $337=(($inHigh+($319<<3))|0);
       $338=(+(HEAPF64[(($337)>>3)]));
       $339=(($inLow+($319<<3))|0);
       $340=(+(HEAPF64[(($339)>>3)]));
       $341=($338)-($340);
       $354=$341;
       break;
      }
      if (!($314)) {
       $354=0.0;
       break;
      }
      $344=(($inHigh+($319<<3))|0);
      $345=(+(HEAPF64[(($344)>>3)]));
      $346=$321<$323;
      $_17=($346?$323:$321);
      $347=($345)-($_17);
      $348=($346?$321:$323);
      $349=(($inLow+($319<<3))|0);
      $350=(+(HEAPF64[(($349)>>3)]));
      $351=($348)-($350);
      $352=($347)+($351);
      $354=$352;
     } else {
      $332=(+((($329|0))|0));
      $333=(+(HEAPF64[(($26)>>3)]));
      $334=($333)/($332);
      $354=$334;
     }
    } while(0);

    $355=($327)*($354);
    $356=((HEAP32[((272)>>2)])|0);
    $357=(($356+212)|0);
    $358=((HEAP32[(($357)>>2)])|0);
    $359=($358|0)==2;
    $360=($359?(2.0):(1.0));
    $361=($355)/($360);
    $362=$325<$361;
    if (!($362)) {
     label = 65;
     break;
    }
    $364=(+(HEAPF64[(($178)>>3)]));
    $365=(+(HEAPF64[(($180)>>3)]));
    $366=$364<$365;
    if ($366) {
     label = 65;
     break;
    }
    $368=(+(HEAPF64[(($227)>>3)]));
    $369=(+(HEAPF64[(($229)>>3)]));
    $not_=$368<$369;
    if (!($not_)) {
     label = 65;
     break;
    }
    $371=(($inClose+($i_2<<3))|0);
    $372=(+(HEAPF64[(($371)>>3)]));
    $373=(($inOpen+($i_2<<3))|0);
    $374=(+(HEAPF64[(($373)>>3)]));
    $375=$372<$374;
    if ($375) {
     label = 65;
     break;
    }
    $377=$369<$368;
    $_18=($377?$369:$368);
    $378=$365>$364;
    $379=($378?$365:$364);
    $380=$_18>$379;
    if (!($380)) {
     label = 65;
     break;
    }
    $382=(+(HEAPF64[(($277)>>3)]));
    $383=(+(HEAPF64[(($275)>>3)]));
    $384=$382<$383;
    $_19=($384?$382:$383);
    $385=$_19<$364;
    if (!($385)) {
     label = 65;
     break;
    }
    $387=(+(HEAPF64[(($322)>>3)]));
    $388=(+(HEAPF64[(($320)>>3)]));
    $389=$387<$388;
    $_20=($389?$387:$388);
    $390=$_20<$364;
    if (!($390)) {
     label = 65;
     break;
    }
    $392=($364)-($365);
    $393=(+(Math_abs((+($392)))));
    $394=($_09)*($393);
    $395=($364)-($394);
    $396=$_19>$395;
    $397=$_20>$395;
    $or_cond31=$396&$397;
    if (!($or_cond31)) {
     label = 65;
     break;
    }
    $_23=($384?$383:$382);
    $399=$_23<$369;
    $_24=($389?$388:$387);
    $400=$_24<$_23;
    $or_cond33=$399&$400;
    $401=$374>$388;
    $or_cond34=$or_cond33&$401;
    if (!($or_cond34)) {
     label = 65;
     break;
    }
    $403=(($inHigh+($226<<3))|0);
    $404=(+(HEAPF64[(($403)>>3)]));
    $405=(($inHigh+($274<<3))|0);
    $406=(+(HEAPF64[(($405)>>3)]));
    $407=$404>$406;
    $_25=($407?$404:$406);
    $408=(($inHigh+($319<<3))|0);
    $409=(+(HEAPF64[(($408)>>3)]));
    $410=$_25>$409;
    $411=($410?$_25:$409);
    $412=$372>$411;
    if (!($412)) {
     label = 65;
     break;
    }
    $414=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($414)>>2)]=100;
   } else {
    label = 65;
   }
  } while(0);
  if ((label|0) == 65) {
   label = 0;
   $416=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($416)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $418=((HEAP32[((272)>>2)])|0);
  $419=(($418+164)|0);
  $420=((HEAP32[(($419)>>2)])|0);
  if (((($420|0))|0)==((1)|0)) {
   $427=(($inHigh+($177<<3))|0);
   $428=(+(HEAPF64[(($427)>>3)]));
   $429=(($inLow+($177<<3))|0);
   $430=(+(HEAPF64[(($429)>>3)]));
   $431=($428)-($430);
   $445=$431;
  } else if (((($420|0))|0)==((0)|0)) {
   $422=(+(HEAPF64[(($178)>>3)]));
   $423=(+(HEAPF64[(($180)>>3)]));
   $424=($422)-($423);
   $425=(+(Math_abs((+($424)))));
   $445=$425;
  } else if (((($420|0))|0)==((2)|0)) {
   $433=(($inHigh+($177<<3))|0);
   $434=(+(HEAPF64[(($433)>>3)]));
   $435=(+(HEAPF64[(($178)>>3)]));
   $436=(+(HEAPF64[(($180)>>3)]));
   $437=$435<$436;
   $_27=($437?$436:$435);
   $438=($434)-($_27);
   $439=($437?$435:$436);
   $440=(($inLow+($177<<3))|0);
   $441=(+(HEAPF64[(($440)>>3)]));
   $442=($439)-($441);
   $443=($438)+($442);
   $445=$443;
  } else {
   $445=0.0;
  }

  $446=((HEAP32[((272)>>2)])|0);
  $447=(($446+164)|0);
  $448=((HEAP32[(($447)>>2)])|0);
  if (((($448|0))|0)==((0)|0)) {
   $450=((($BodyLongTrailingIdx_0)-(4))|0);
   $451=(($inClose+($450<<3))|0);
   $452=(+(HEAPF64[(($451)>>3)]));
   $453=(($inOpen+($450<<3))|0);
   $454=(+(HEAPF64[(($453)>>3)]));
   $455=($452)-($454);
   $456=(+(Math_abs((+($455)))));
   $480=$456;
  } else if (((($448|0))|0)==((1)|0)) {
   $458=((($BodyLongTrailingIdx_0)-(4))|0);
   $459=(($inHigh+($458<<3))|0);
   $460=(+(HEAPF64[(($459)>>3)]));
   $461=(($inLow+($458<<3))|0);
   $462=(+(HEAPF64[(($461)>>3)]));
   $463=($460)-($462);
   $480=$463;
  } else if (((($448|0))|0)==((2)|0)) {
   $465=((($BodyLongTrailingIdx_0)-(4))|0);
   $466=(($inHigh+($465<<3))|0);
   $467=(+(HEAPF64[(($466)>>3)]));
   $468=(($inClose+($465<<3))|0);
   $469=(+(HEAPF64[(($468)>>3)]));
   $470=(($inOpen+($465<<3))|0);
   $471=(+(HEAPF64[(($470)>>3)]));
   $472=$469<$471;
   $_28=($472?$471:$469);
   $473=($467)-($_28);
   $474=($472?$469:$471);
   $475=(($inLow+($465<<3))|0);
   $476=(+(HEAPF64[(($475)>>3)]));
   $477=($474)-($476);
   $478=($473)+($477);
   $480=$478;
  } else {
   $480=0.0;
  }

  $481=($445)-($480);
  $482=(+(HEAPF64[(($23)>>3)]));
  $483=($482)+($481);
  HEAPF64[(($23)>>3)]=$483;
  $484=((HEAP32[((272)>>2)])|0);
  $485=(($484+212)|0);
  $486=((HEAP32[(($485)>>2)])|0);
  $totIdx_035=3;
  while(1) {

   if (((($486|0))|0)==((1)|0)) {
    $502=((($i_2)-($totIdx_035))|0);
    $503=(($inHigh+($502<<3))|0);
    $504=(+(HEAPF64[(($503)>>3)]));
    $505=(($inLow+($502<<3))|0);
    $506=(+(HEAPF64[(($505)>>3)]));
    $507=($504)-($506);
    $508=((($BodyShortTrailingIdx_0)-($totIdx_035))|0);
    $509=(($inHigh+($508<<3))|0);
    $510=(+(HEAPF64[(($509)>>3)]));
    $511=(($inLow+($508<<3))|0);
    $512=(+(HEAPF64[(($511)>>3)]));
    $513=($510)-($512);
    $544=$513;$543=$507;
   } else if (((($486|0))|0)==((2)|0)) {
    $514=((($i_2)-($totIdx_035))|0);
    $515=(($inHigh+($514<<3))|0);
    $516=(+(HEAPF64[(($515)>>3)]));
    $517=(($inClose+($514<<3))|0);
    $518=(+(HEAPF64[(($517)>>3)]));
    $519=(($inOpen+($514<<3))|0);
    $520=(+(HEAPF64[(($519)>>3)]));
    $521=$518<$520;
    $_29=($521?$520:$518);
    $522=($516)-($_29);
    $523=($521?$518:$520);
    $524=(($inLow+($514<<3))|0);
    $525=(+(HEAPF64[(($524)>>3)]));
    $526=($523)-($525);
    $527=($522)+($526);
    $528=((($BodyShortTrailingIdx_0)-($totIdx_035))|0);
    $529=(($inHigh+($528<<3))|0);
    $530=(+(HEAPF64[(($529)>>3)]));
    $531=(($inClose+($528<<3))|0);
    $532=(+(HEAPF64[(($531)>>3)]));
    $533=(($inOpen+($528<<3))|0);
    $534=(+(HEAPF64[(($533)>>3)]));
    $535=$532<$534;
    $_30=($535?$534:$532);
    $536=($530)-($_30);
    $537=($535?$532:$534);
    $538=(($inLow+($528<<3))|0);
    $539=(+(HEAPF64[(($538)>>3)]));
    $540=($537)-($539);
    $541=($536)+($540);
    $544=$541;$543=$527;
   } else if (((($486|0))|0)==((0)|0)) {
    $488=((($i_2)-($totIdx_035))|0);
    $489=(($inClose+($488<<3))|0);
    $490=(+(HEAPF64[(($489)>>3)]));
    $491=(($inOpen+($488<<3))|0);
    $492=(+(HEAPF64[(($491)>>3)]));
    $493=($490)-($492);
    $494=(+(Math_abs((+($493)))));
    $495=((($BodyShortTrailingIdx_0)-($totIdx_035))|0);
    $496=(($inClose+($495<<3))|0);
    $497=(+(HEAPF64[(($496)>>3)]));
    $498=(($inOpen+($495<<3))|0);
    $499=(+(HEAPF64[(($498)>>3)]));
    $500=($497)-($499);
    $501=(+(Math_abs((+($500)))));
    $544=$501;$543=$494;
   } else {
    $544=0.0;$543=0.0;
   }


   $545=($543)-($544);
   $546=(($BodyPeriodTotal+($totIdx_035<<3))|0);
   $547=(+(HEAPF64[(($546)>>3)]));
   $548=($547)+($545);
   HEAPF64[(($546)>>3)]=$548;
   $549=((($totIdx_035)-(1))|0);
   $550=($549|0)>0;
   if ($550) {
    $totIdx_035=$549;
   } else {
    break;
   }
  }
  $552=((($i_2)+(1))|0);
  $553=((($BodyShortTrailingIdx_0)+(1))|0);
  $554=((($BodyLongTrailingIdx_0)+(1))|0);
  $555=($i_2|0)<($endIdx|0);
  if ($555) {
   $BodyLongTrailingIdx_0=$554;$BodyShortTrailingIdx_0=$553;$outIdx_0=$outIdx_1;$i_2=$552;
  } else {
   break;
  }
 }
 $557=((($smax46)+(1))|0);
 $558=((($557)-($smax47))|0);
 HEAP32[(($outNBElement)>>2)]=$558;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDLMORNINGDOJISTAR_Lookback($optInPenetration){
 $optInPenetration=+($optInPenetration);
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$_=0,$12=0,$13=0,$14=0,$__=0,$15=0,$_02=0,label=0;

 $1=$optInPenetration==(-4.0e+37);
 do {
  if (!($1)) {
   $3=$optInPenetration<(0.0);
   $4=$optInPenetration>(3.0e+37);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_02=-1;
   } else {
    break;
   }

   return (($_02)|0);
  }
 } while(0);
 $6=((HEAP32[((272)>>2)])|0);
 $7=(($6+240)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($6+168)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)>($10|0);
 $_=($11?$8:$10);
 $12=(($6+216)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=($_|0)>($13|0);
 $__=($14?$_:$13);
 $15=((($__)+(2))|0);
 $_02=$15;

 return (($_02)|0);
}


function _TA_CDLMORNINGDOJISTAR($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$optInPenetration,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInPenetration=+($optInPenetration);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond10=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$11=0,$13=0,$14=0,$or_cond7=0,$_09=.0,$16=0,$18=0,$19=0,$_startIdx=0;
 var $20=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$BodyLongPeriodTotal_0_lcssa=.0,$39=0,$40=0;
 var $41=0,$42=0,$i_032=0,$BodyLongPeriodTotal_031=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=.0,$58=0,$59=.0,$60=0,$61=.0,$62=0;
 var $63=.0,$64=0,$_=.0,$65=.0,$66=.0,$67=0,$68=.0,$69=.0,$70=.0,$72=.0,$73=.0,$74=0,$75=0,$BodyDojiPeriodTotal_0_lcssa=.0,$76=0,$77=0,$78=0,$79=0,$i_128=0,$BodyDojiPeriodTotal_027=.0;
 var $82=0,$83=.0,$84=0,$85=.0,$86=.0,$87=.0,$89=0,$90=.0,$91=0,$92=.0,$93=.0,$95=0,$96=.0,$97=0,$98=.0,$99=0,$100=.0,$101=0,$_11=.0,$102=.0;
 var $103=.0,$104=0,$105=.0,$106=.0,$107=.0,$109=.0,$110=.0,$111=0,$112=0,$BodyShortPeriodTotal_0_lcssa=.0,$113=0,$smax=0,$114=0,$smax35=0,$115=0,$smax36=0,$i_225=0,$BodyShortPeriodTotal_024=.0,$118=0,$119=.0;
 var $120=0,$121=.0,$122=.0,$123=.0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$132=.0,$133=0,$134=.0,$135=0,$136=.0,$137=0,$_12=.0,$138=.0,$139=.0,$140=0;
 var $141=.0,$142=.0,$143=.0,$145=.0,$146=.0,$147=0,$148=0,$BodyDojiPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$BodyShortPeriodTotal_1=.0,$i_3=0,$outIdx_0=0,$BodyDojiTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$BodyShortTrailingIdx_0=0,$150=0,$151=0,$152=.0,$153=0,$154=.0;
 var $155=.0,$156=.0,$157=0,$158=0,$159=.0,$160=0,$161=0,$162=0,$164=.0,$165=.0,$167=0,$168=0,$170=0,$171=.0,$172=0,$173=.0,$174=.0,$176=0,$178=0,$179=.0;
 var $180=0,$_13=.0,$181=.0,$182=.0,$183=0,$184=.0,$185=.0,$186=.0,$188=.0,$189=.0,$190=0,$191=0,$192=0,$193=0,$194=.0,$195=.0,$196=0,$198=.0,$199=.0,$not_=0;
 var $201=0,$202=0,$203=.0,$204=0,$205=.0,$206=.0,$207=.0,$208=0,$209=.0,$210=0,$211=0,$212=0,$214=.0,$215=.0,$217=0,$218=0,$220=0,$221=.0,$222=0,$223=.0;
 var $224=.0,$226=0,$228=0,$229=.0,$230=0,$_14=.0,$231=.0,$232=.0,$233=0,$234=.0,$235=.0,$236=.0,$238=.0,$239=.0,$240=0,$241=0,$242=0,$243=0,$244=.0,$245=.0;
 var $246=0,$248=.0,$249=.0,$250=0,$_15=.0,$251=.0,$252=.0,$253=0,$254=.0,$255=0,$257=0,$258=.0,$259=0,$260=.0,$261=.0,$262=.0,$263=0,$264=.0,$265=0,$266=0;
 var $267=0,$269=.0,$270=.0,$272=0,$273=0,$275=0,$276=.0,$277=0,$278=.0,$279=.0,$281=0,$283=0,$284=.0,$285=0,$_16=.0,$286=.0,$287=.0,$288=0,$289=.0,$290=.0;
 var $291=.0,$293=.0,$294=.0,$295=0,$296=0,$297=0,$298=0,$299=.0,$300=.0,$301=0,$303=.0,$304=.0,$305=0,$307=.0,$308=.0,$309=.0,$310=.0,$311=.0,$312=.0,$313=0;
 var $315=0,$317=0,$outIdx_1=0,$319=0,$320=0,$321=0,$323=.0,$324=.0,$325=.0,$326=.0,$328=0,$329=.0,$330=0,$331=.0,$332=.0,$334=0,$335=.0,$336=.0,$337=.0,$338=0;
 var $_17=.0,$339=.0,$340=.0,$341=0,$342=.0,$343=.0,$344=.0,$346=.0,$347=0,$348=0,$349=0,$351=0,$352=.0,$353=0,$354=.0,$355=.0,$356=.0,$358=0,$359=.0,$360=0;
 var $361=.0,$362=.0,$364=0,$365=.0,$366=0,$367=.0,$368=0,$369=.0,$370=0,$_18=.0,$371=.0,$372=.0,$373=0,$374=.0,$375=.0,$376=.0,$378=.0,$379=.0,$380=.0,$381=0;
 var $382=0,$383=0,$385=0,$386=0,$387=.0,$388=0,$389=.0,$390=.0,$391=.0,$393=0,$394=0,$395=.0,$396=0,$397=.0,$398=.0,$400=0,$401=0,$402=.0,$403=0,$404=.0;
 var $405=0,$406=.0,$407=0,$_19=.0,$408=.0,$409=.0,$410=0,$411=.0,$412=.0,$413=.0,$415=.0,$416=0,$417=0,$418=0,$420=0,$421=.0,$422=0,$423=.0,$424=.0,$425=.0;
 var $427=0,$428=.0,$429=0,$430=.0,$431=.0,$433=0,$434=.0,$435=0,$436=.0,$437=0,$438=.0,$439=0,$_20=.0,$440=.0,$441=.0,$442=0,$443=.0,$444=.0,$445=.0,$447=.0;
 var $448=.0,$449=.0,$450=0,$451=0,$452=0,$454=0,$455=.0,$456=0,$457=.0,$458=.0,$459=.0,$461=0,$462=.0,$463=0,$464=.0,$465=.0,$467=0,$468=.0,$469=0,$470=.0;
 var $471=0,$472=.0,$473=0,$_21=.0,$474=.0,$475=.0,$476=0,$477=.0,$478=.0,$479=.0,$481=.0,$482=0,$483=0,$484=0,$486=0,$487=.0,$488=0,$489=.0,$490=.0,$491=.0;
 var $493=0,$494=.0,$495=0,$496=.0,$497=.0,$499=0,$500=.0,$501=0,$502=.0,$503=0,$504=.0,$505=0,$_22=.0,$506=.0,$507=.0,$508=0,$509=.0,$510=.0,$511=.0,$513=.0;
 var $514=.0,$515=.0,$516=0,$517=0,$518=0,$519=0,$520=0,$522=0,$523=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond10=$3|$4;
 if ($or_cond10) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 if (!($or_cond5)) {
  $_0=2;

  return (($_0)|0);
 }
 $11=$optInPenetration==(-4.0e+37);
 do {
  if ($11) {
   $_09=0.3;
  } else {
   $13=$optInPenetration<(0.0);
   $14=$optInPenetration>(3.0e+37);
   $or_cond7=$13|$14;
   if ($or_cond7) {
    $_0=2;
   } else {
    $_09=$optInPenetration;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $16=($outInteger|0)==0;
 if ($16) {
  $_0=2;

  return (($_0)|0);
 }
 $18=((_TA_CDLMORNINGDOJISTAR_Lookback($_09))|0);
 $19=($18|0)>($startIdx|0);
 $_startIdx=($19?$18:$startIdx);
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $23=((($_startIdx)-(2))|0);
 $24=((HEAP32[((272)>>2)])|0);
 $25=(($24+168)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=((($23)-($26))|0);
 $28=((($_startIdx)-(1))|0);
 $29=(($24+240)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=((($28)-($30))|0);
 $32=(($24+216)|0);
 $33=((HEAP32[(($32)>>2)])|0);
 $34=((($_startIdx)-($33))|0);
 $35=($26|0)>0;
 if ($35) {
  $36=((HEAP32[((272)>>2)])|0);
  $37=(($36+164)|0);
  $38=((HEAP32[(($37)>>2)])|0);
  $BodyLongPeriodTotal_031=0.0;$i_032=$27;
  while(1) {


   if (((($38|0))|0)==((1)|0)) {
    $52=(($inHigh+($i_032<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inLow+($i_032<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=($53)-($55);
    $72=$56;
   } else if (((($38|0))|0)==((0)|0)) {
    $45=(($inClose+($i_032<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=(($inOpen+($i_032<<3))|0);
    $48=(+(HEAPF64[(($47)>>3)]));
    $49=($46)-($48);
    $50=(+(Math_abs((+($49)))));
    $72=$50;
   } else if (((($38|0))|0)==((2)|0)) {
    $58=(($inHigh+($i_032<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=(($inClose+($i_032<<3))|0);
    $61=(+(HEAPF64[(($60)>>3)]));
    $62=(($inOpen+($i_032<<3))|0);
    $63=(+(HEAPF64[(($62)>>3)]));
    $64=$61<$63;
    $_=($64?$63:$61);
    $65=($59)-($_);
    $66=($64?$61:$63);
    $67=(($inLow+($i_032<<3))|0);
    $68=(+(HEAPF64[(($67)>>3)]));
    $69=($66)-($68);
    $70=($65)+($69);
    $72=$70;
   } else {
    $72=0.0;
   }

   $73=($BodyLongPeriodTotal_031)+($72);
   $74=((($i_032)+(1))|0);
   $75=($74|0)<($23|0);
   if ($75) {
    $BodyLongPeriodTotal_031=$73;$i_032=$74;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$73;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $39=($30|0)>0;
 if ($39) {
  $40=((HEAP32[((272)>>2)])|0);
  $41=(($40+236)|0);
  $42=((HEAP32[(($41)>>2)])|0);
  $BodyDojiPeriodTotal_027=0.0;$i_128=$31;
  while(1) {


   if (((($42|0))|0)==((2)|0)) {
    $95=(($inHigh+($i_128<<3))|0);
    $96=(+(HEAPF64[(($95)>>3)]));
    $97=(($inClose+($i_128<<3))|0);
    $98=(+(HEAPF64[(($97)>>3)]));
    $99=(($inOpen+($i_128<<3))|0);
    $100=(+(HEAPF64[(($99)>>3)]));
    $101=$98<$100;
    $_11=($101?$100:$98);
    $102=($96)-($_11);
    $103=($101?$98:$100);
    $104=(($inLow+($i_128<<3))|0);
    $105=(+(HEAPF64[(($104)>>3)]));
    $106=($103)-($105);
    $107=($102)+($106);
    $109=$107;
   } else if (((($42|0))|0)==((1)|0)) {
    $89=(($inHigh+($i_128<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inLow+($i_128<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=($90)-($92);
    $109=$93;
   } else if (((($42|0))|0)==((0)|0)) {
    $82=(($inClose+($i_128<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inOpen+($i_128<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=($83)-($85);
    $87=(+(Math_abs((+($86)))));
    $109=$87;
   } else {
    $109=0.0;
   }

   $110=($BodyDojiPeriodTotal_027)+($109);
   $111=((($i_128)+(1))|0);
   $112=($111|0)<($28|0);
   if ($112) {
    $BodyDojiPeriodTotal_027=$110;$i_128=$111;
   } else {
    $BodyDojiPeriodTotal_0_lcssa=$110;
    break;
   }
  }
 } else {
  $BodyDojiPeriodTotal_0_lcssa=0.0;
 }

 $76=($33|0)>0;
 if ($76) {
  $77=((HEAP32[((272)>>2)])|0);
  $78=(($77+212)|0);
  $79=((HEAP32[(($78)>>2)])|0);
  $BodyShortPeriodTotal_024=0.0;$i_225=$34;
  while(1) {


   if (((($79|0))|0)==((0)|0)) {
    $118=(($inClose+($i_225<<3))|0);
    $119=(+(HEAPF64[(($118)>>3)]));
    $120=(($inOpen+($i_225<<3))|0);
    $121=(+(HEAPF64[(($120)>>3)]));
    $122=($119)-($121);
    $123=(+(Math_abs((+($122)))));
    $145=$123;
   } else if (((($79|0))|0)==((2)|0)) {
    $131=(($inHigh+($i_225<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=(($inClose+($i_225<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=(($inOpen+($i_225<<3))|0);
    $136=(+(HEAPF64[(($135)>>3)]));
    $137=$134<$136;
    $_12=($137?$136:$134);
    $138=($132)-($_12);
    $139=($137?$134:$136);
    $140=(($inLow+($i_225<<3))|0);
    $141=(+(HEAPF64[(($140)>>3)]));
    $142=($139)-($141);
    $143=($138)+($142);
    $145=$143;
   } else if (((($79|0))|0)==((1)|0)) {
    $125=(($inHigh+($i_225<<3))|0);
    $126=(+(HEAPF64[(($125)>>3)]));
    $127=(($inLow+($i_225<<3))|0);
    $128=(+(HEAPF64[(($127)>>3)]));
    $129=($126)-($128);
    $145=$129;
   } else {
    $145=0.0;
   }

   $146=($BodyShortPeriodTotal_024)+($145);
   $147=((($i_225)+(1))|0);
   $148=($147|0)<($_startIdx|0);
   if ($148) {
    $BodyShortPeriodTotal_024=$146;$i_225=$147;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$146;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;
 }

 $113=($18|0)>($endIdx|0);
 $smax=($113?$18:$endIdx);
 $114=($smax|0)>($startIdx|0);
 $smax35=($114?$smax:$startIdx);
 $115=($18|0)>($startIdx|0);
 $smax36=($115?$18:$startIdx);
 $BodyShortTrailingIdx_0=$34;$BodyLongTrailingIdx_0=$27;$BodyDojiTrailingIdx_0=$31;$outIdx_0=0;$i_3=$_startIdx;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyDojiPeriodTotal_1=$BodyDojiPeriodTotal_0_lcssa;
 while(1) {








  $150=((($i_3)-(2))|0);
  $151=(($inClose+($150<<3))|0);
  $152=(+(HEAPF64[(($151)>>3)]));
  $153=(($inOpen+($150<<3))|0);
  $154=(+(HEAPF64[(($153)>>3)]));
  $155=($152)-($154);
  $156=(+(Math_abs((+($155)))));
  $157=((HEAP32[((272)>>2)])|0);
  $158=(($157+176)|0);
  $159=(+(HEAPF64[(($158)>>3)]));
  $160=(($157+168)|0);
  $161=((HEAP32[(($160)>>2)])|0);
  $162=($161|0)==0;
  do {
   if ($162) {
    $167=(($157+164)|0);
    $168=((HEAP32[(($167)>>2)])|0);
    if (((($168|0))|0)==((0)|0)) {
     $188=$156;
     break;
    } else if (((($168|0))|0)==((1)|0)) {
     $170=(($inHigh+($150<<3))|0);
     $171=(+(HEAPF64[(($170)>>3)]));
     $172=(($inLow+($150<<3))|0);
     $173=(+(HEAPF64[(($172)>>3)]));
     $174=($171)-($173);
     $188=$174;
     break;
    }
    $176=($168|0)==2;
    if (!($176)) {
     $188=0.0;
     break;
    }
    $178=(($inHigh+($150<<3))|0);
    $179=(+(HEAPF64[(($178)>>3)]));
    $180=$152<$154;
    $_13=($180?$154:$152);
    $181=($179)-($_13);
    $182=($180?$152:$154);
    $183=(($inLow+($150<<3))|0);
    $184=(+(HEAPF64[(($183)>>3)]));
    $185=($182)-($184);
    $186=($181)+($185);
    $188=$186;
   } else {
    $164=(+((($161|0))|0));
    $165=($BodyLongPeriodTotal_1)/($164);
    $188=$165;
   }
  } while(0);

  $189=($159)*($188);
  $190=((HEAP32[((272)>>2)])|0);
  $191=(($190+164)|0);
  $192=((HEAP32[(($191)>>2)])|0);
  $193=($192|0)==2;
  $194=($193?(2.0):(1.0));
  $195=($189)/($194);
  $196=$156>$195;
  do {
   if ($196) {
    $198=(+(HEAPF64[(($151)>>3)]));
    $199=(+(HEAPF64[(($153)>>3)]));
    $not_=$198<$199;
    if (!($not_)) {
     label = 57;
     break;
    }
    $201=((($i_3)-(1))|0);
    $202=(($inClose+($201<<3))|0);
    $203=(+(HEAPF64[(($202)>>3)]));
    $204=(($inOpen+($201<<3))|0);
    $205=(+(HEAPF64[(($204)>>3)]));
    $206=($203)-($205);
    $207=(+(Math_abs((+($206)))));
    $208=(($190+248)|0);
    $209=(+(HEAPF64[(($208)>>3)]));
    $210=(($190+240)|0);
    $211=((HEAP32[(($210)>>2)])|0);
    $212=($211|0)==0;
    do {
     if ($212) {
      $217=(($190+236)|0);
      $218=((HEAP32[(($217)>>2)])|0);
      if (((($218|0))|0)==((1)|0)) {
       $220=(($inHigh+($201<<3))|0);
       $221=(+(HEAPF64[(($220)>>3)]));
       $222=(($inLow+($201<<3))|0);
       $223=(+(HEAPF64[(($222)>>3)]));
       $224=($221)-($223);
       $238=$224;
       break;
      } else if (((($218|0))|0)==((0)|0)) {
       $238=$207;
       break;
      }
      $226=($218|0)==2;
      if (!($226)) {
       $238=0.0;
       break;
      }
      $228=(($inHigh+($201<<3))|0);
      $229=(+(HEAPF64[(($228)>>3)]));
      $230=$203<$205;
      $_14=($230?$205:$203);
      $231=($229)-($_14);
      $232=($230?$203:$205);
      $233=(($inLow+($201<<3))|0);
      $234=(+(HEAPF64[(($233)>>3)]));
      $235=($232)-($234);
      $236=($231)+($235);
      $238=$236;
     } else {
      $214=(+((($211|0))|0));
      $215=($BodyDojiPeriodTotal_1)/($214);
      $238=$215;
     }
    } while(0);

    $239=($209)*($238);
    $240=((HEAP32[((272)>>2)])|0);
    $241=(($240+236)|0);
    $242=((HEAP32[(($241)>>2)])|0);
    $243=($242|0)==2;
    $244=($243?(2.0):(1.0));
    $245=($239)/($244);
    $246=$207>$245;
    if ($246) {
     label = 57;
     break;
    }
    $248=(+(HEAPF64[(($204)>>3)]));
    $249=(+(HEAPF64[(($202)>>3)]));
    $250=$248>$249;
    $_15=($250?$248:$249);
    $251=(+(HEAPF64[(($153)>>3)]));
    $252=(+(HEAPF64[(($151)>>3)]));
    $253=$251<$252;
    $254=($253?$251:$252);
    $255=$_15<$254;
    if (!($255)) {
     label = 57;
     break;
    }
    $257=(($inClose+($i_3<<3))|0);
    $258=(+(HEAPF64[(($257)>>3)]));
    $259=(($inOpen+($i_3<<3))|0);
    $260=(+(HEAPF64[(($259)>>3)]));
    $261=($258)-($260);
    $262=(+(Math_abs((+($261)))));
    $263=(($240+224)|0);
    $264=(+(HEAPF64[(($263)>>3)]));
    $265=(($240+216)|0);
    $266=((HEAP32[(($265)>>2)])|0);
    $267=($266|0)==0;
    do {
     if ($267) {
      $272=(($240+212)|0);
      $273=((HEAP32[(($272)>>2)])|0);
      if (((($273|0))|0)==((0)|0)) {
       $293=$262;
       break;
      } else if (((($273|0))|0)==((1)|0)) {
       $275=(($inHigh+($i_3<<3))|0);
       $276=(+(HEAPF64[(($275)>>3)]));
       $277=(($inLow+($i_3<<3))|0);
       $278=(+(HEAPF64[(($277)>>3)]));
       $279=($276)-($278);
       $293=$279;
       break;
      }
      $281=($273|0)==2;
      if (!($281)) {
       $293=0.0;
       break;
      }
      $283=(($inHigh+($i_3<<3))|0);
      $284=(+(HEAPF64[(($283)>>3)]));
      $285=$258<$260;
      $_16=($285?$260:$258);
      $286=($284)-($_16);
      $287=($285?$258:$260);
      $288=(($inLow+($i_3<<3))|0);
      $289=(+(HEAPF64[(($288)>>3)]));
      $290=($287)-($289);
      $291=($286)+($290);
      $293=$291;
     } else {
      $269=(+((($266|0))|0));
      $270=($BodyShortPeriodTotal_1)/($269);
      $293=$270;
     }
    } while(0);

    $294=($264)*($293);
    $295=((HEAP32[((272)>>2)])|0);
    $296=(($295+212)|0);
    $297=((HEAP32[(($296)>>2)])|0);
    $298=($297|0)==2;
    $299=($298?(2.0):(1.0));
    $300=($294)/($299);
    $301=$262>$300;
    if (!($301)) {
     label = 57;
     break;
    }
    $303=(+(HEAPF64[(($257)>>3)]));
    $304=(+(HEAPF64[(($259)>>3)]));
    $305=$303<$304;
    if ($305) {
     label = 57;
     break;
    }
    $307=(+(HEAPF64[(($151)>>3)]));
    $308=(+(HEAPF64[(($153)>>3)]));
    $309=($307)-($308);
    $310=(+(Math_abs((+($309)))));
    $311=($_09)*($310);
    $312=($307)+($311);
    $313=$303>$312;
    if (!($313)) {
     label = 57;
     break;
    }
    $315=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($315)>>2)]=100;
   } else {
    label = 57;
   }
  } while(0);
  if ((label|0) == 57) {
   label = 0;
   $317=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($317)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $319=((HEAP32[((272)>>2)])|0);
  $320=(($319+164)|0);
  $321=((HEAP32[(($320)>>2)])|0);
  if (((($321|0))|0)==((1)|0)) {
   $328=(($inHigh+($150<<3))|0);
   $329=(+(HEAPF64[(($328)>>3)]));
   $330=(($inLow+($150<<3))|0);
   $331=(+(HEAPF64[(($330)>>3)]));
   $332=($329)-($331);
   $346=$332;
  } else if (((($321|0))|0)==((0)|0)) {
   $323=(+(HEAPF64[(($151)>>3)]));
   $324=(+(HEAPF64[(($153)>>3)]));
   $325=($323)-($324);
   $326=(+(Math_abs((+($325)))));
   $346=$326;
  } else if (((($321|0))|0)==((2)|0)) {
   $334=(($inHigh+($150<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=(+(HEAPF64[(($151)>>3)]));
   $337=(+(HEAPF64[(($153)>>3)]));
   $338=$336<$337;
   $_17=($338?$337:$336);
   $339=($335)-($_17);
   $340=($338?$336:$337);
   $341=(($inLow+($150<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=($340)-($342);
   $344=($339)+($343);
   $346=$344;
  } else {
   $346=0.0;
  }

  $347=((HEAP32[((272)>>2)])|0);
  $348=(($347+164)|0);
  $349=((HEAP32[(($348)>>2)])|0);
  if (((($349|0))|0)==((0)|0)) {
   $351=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $352=(+(HEAPF64[(($351)>>3)]));
   $353=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $354=(+(HEAPF64[(($353)>>3)]));
   $355=($352)-($354);
   $356=(+(Math_abs((+($355)))));
   $378=$356;
  } else if (((($349|0))|0)==((1)|0)) {
   $358=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $359=(+(HEAPF64[(($358)>>3)]));
   $360=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $361=(+(HEAPF64[(($360)>>3)]));
   $362=($359)-($361);
   $378=$362;
  } else if (((($349|0))|0)==((2)|0)) {
   $364=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $365=(+(HEAPF64[(($364)>>3)]));
   $366=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $367=(+(HEAPF64[(($366)>>3)]));
   $368=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $369=(+(HEAPF64[(($368)>>3)]));
   $370=$367<$369;
   $_18=($370?$369:$367);
   $371=($365)-($_18);
   $372=($370?$367:$369);
   $373=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $374=(+(HEAPF64[(($373)>>3)]));
   $375=($372)-($374);
   $376=($371)+($375);
   $378=$376;
  } else {
   $378=0.0;
  }

  $379=($346)-($378);
  $380=($BodyLongPeriodTotal_1)+($379);
  $381=((HEAP32[((272)>>2)])|0);
  $382=(($381+236)|0);
  $383=((HEAP32[(($382)>>2)])|0);
  if (((($383|0))|0)==((0)|0)) {
   $385=((($i_3)-(1))|0);
   $386=(($inClose+($385<<3))|0);
   $387=(+(HEAPF64[(($386)>>3)]));
   $388=(($inOpen+($385<<3))|0);
   $389=(+(HEAPF64[(($388)>>3)]));
   $390=($387)-($389);
   $391=(+(Math_abs((+($390)))));
   $415=$391;
  } else if (((($383|0))|0)==((1)|0)) {
   $393=((($i_3)-(1))|0);
   $394=(($inHigh+($393<<3))|0);
   $395=(+(HEAPF64[(($394)>>3)]));
   $396=(($inLow+($393<<3))|0);
   $397=(+(HEAPF64[(($396)>>3)]));
   $398=($395)-($397);
   $415=$398;
  } else if (((($383|0))|0)==((2)|0)) {
   $400=((($i_3)-(1))|0);
   $401=(($inHigh+($400<<3))|0);
   $402=(+(HEAPF64[(($401)>>3)]));
   $403=(($inClose+($400<<3))|0);
   $404=(+(HEAPF64[(($403)>>3)]));
   $405=(($inOpen+($400<<3))|0);
   $406=(+(HEAPF64[(($405)>>3)]));
   $407=$404<$406;
   $_19=($407?$406:$404);
   $408=($402)-($_19);
   $409=($407?$404:$406);
   $410=(($inLow+($400<<3))|0);
   $411=(+(HEAPF64[(($410)>>3)]));
   $412=($409)-($411);
   $413=($408)+($412);
   $415=$413;
  } else {
   $415=0.0;
  }

  $416=((HEAP32[((272)>>2)])|0);
  $417=(($416+236)|0);
  $418=((HEAP32[(($417)>>2)])|0);
  if (((($418|0))|0)==((0)|0)) {
   $420=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $421=(+(HEAPF64[(($420)>>3)]));
   $422=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $423=(+(HEAPF64[(($422)>>3)]));
   $424=($421)-($423);
   $425=(+(Math_abs((+($424)))));
   $447=$425;
  } else if (((($418|0))|0)==((1)|0)) {
   $427=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $428=(+(HEAPF64[(($427)>>3)]));
   $429=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $430=(+(HEAPF64[(($429)>>3)]));
   $431=($428)-($430);
   $447=$431;
  } else if (((($418|0))|0)==((2)|0)) {
   $433=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $434=(+(HEAPF64[(($433)>>3)]));
   $435=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $436=(+(HEAPF64[(($435)>>3)]));
   $437=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $438=(+(HEAPF64[(($437)>>3)]));
   $439=$436<$438;
   $_20=($439?$438:$436);
   $440=($434)-($_20);
   $441=($439?$436:$438);
   $442=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $443=(+(HEAPF64[(($442)>>3)]));
   $444=($441)-($443);
   $445=($440)+($444);
   $447=$445;
  } else {
   $447=0.0;
  }

  $448=($415)-($447);
  $449=($BodyDojiPeriodTotal_1)+($448);
  $450=((HEAP32[((272)>>2)])|0);
  $451=(($450+212)|0);
  $452=((HEAP32[(($451)>>2)])|0);
  if (((($452|0))|0)==((0)|0)) {
   $454=(($inClose+($i_3<<3))|0);
   $455=(+(HEAPF64[(($454)>>3)]));
   $456=(($inOpen+($i_3<<3))|0);
   $457=(+(HEAPF64[(($456)>>3)]));
   $458=($455)-($457);
   $459=(+(Math_abs((+($458)))));
   $481=$459;
  } else if (((($452|0))|0)==((1)|0)) {
   $461=(($inHigh+($i_3<<3))|0);
   $462=(+(HEAPF64[(($461)>>3)]));
   $463=(($inLow+($i_3<<3))|0);
   $464=(+(HEAPF64[(($463)>>3)]));
   $465=($462)-($464);
   $481=$465;
  } else if (((($452|0))|0)==((2)|0)) {
   $467=(($inHigh+($i_3<<3))|0);
   $468=(+(HEAPF64[(($467)>>3)]));
   $469=(($inClose+($i_3<<3))|0);
   $470=(+(HEAPF64[(($469)>>3)]));
   $471=(($inOpen+($i_3<<3))|0);
   $472=(+(HEAPF64[(($471)>>3)]));
   $473=$470<$472;
   $_21=($473?$472:$470);
   $474=($468)-($_21);
   $475=($473?$470:$472);
   $476=(($inLow+($i_3<<3))|0);
   $477=(+(HEAPF64[(($476)>>3)]));
   $478=($475)-($477);
   $479=($474)+($478);
   $481=$479;
  } else {
   $481=0.0;
  }

  $482=((HEAP32[((272)>>2)])|0);
  $483=(($482+212)|0);
  $484=((HEAP32[(($483)>>2)])|0);
  if (((($484|0))|0)==((1)|0)) {
   $493=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $494=(+(HEAPF64[(($493)>>3)]));
   $495=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $496=(+(HEAPF64[(($495)>>3)]));
   $497=($494)-($496);
   $513=$497;
  } else if (((($484|0))|0)==((2)|0)) {
   $499=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $500=(+(HEAPF64[(($499)>>3)]));
   $501=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $502=(+(HEAPF64[(($501)>>3)]));
   $503=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $504=(+(HEAPF64[(($503)>>3)]));
   $505=$502<$504;
   $_22=($505?$504:$502);
   $506=($500)-($_22);
   $507=($505?$502:$504);
   $508=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $509=(+(HEAPF64[(($508)>>3)]));
   $510=($507)-($509);
   $511=($506)+($510);
   $513=$511;
  } else if (((($484|0))|0)==((0)|0)) {
   $486=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $487=(+(HEAPF64[(($486)>>3)]));
   $488=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $489=(+(HEAPF64[(($488)>>3)]));
   $490=($487)-($489);
   $491=(+(Math_abs((+($490)))));
   $513=$491;
  } else {
   $513=0.0;
  }

  $514=($481)-($513);
  $515=($BodyShortPeriodTotal_1)+($514);
  $516=((($i_3)+(1))|0);
  $517=((($BodyLongTrailingIdx_0)+(1))|0);
  $518=((($BodyDojiTrailingIdx_0)+(1))|0);
  $519=((($BodyShortTrailingIdx_0)+(1))|0);
  $520=($i_3|0)<($endIdx|0);
  if ($520) {
   $BodyShortTrailingIdx_0=$519;$BodyLongTrailingIdx_0=$517;$BodyDojiTrailingIdx_0=$518;$outIdx_0=$outIdx_1;$i_3=$516;$BodyShortPeriodTotal_1=$515;$BodyLongPeriodTotal_1=$380;$BodyDojiPeriodTotal_1=$449;
  } else {
   break;
  }
 }
 $522=((($smax35)+(1))|0);
 $523=((($522)-($smax36))|0);
 HEAP32[(($outNBElement)>>2)]=$523;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLMORNINGSTAR_Lookback($optInPenetration){
 $optInPenetration=+($optInPenetration);
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$_=0,$12=0,$_02=0,label=0;

 $1=$optInPenetration==(-4.0e+37);
 do {
  if (!($1)) {
   $3=$optInPenetration<(0.0);
   $4=$optInPenetration>(3.0e+37);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_02=-1;
   } else {
    break;
   }

   return (($_02)|0);
  }
 } while(0);
 $6=((HEAP32[((272)>>2)])|0);
 $7=(($6+216)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($6+168)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)>($10|0);
 $_=($11?$8:$10);
 $12=((($_)+(2))|0);
 $_02=$12;

 return (($_02)|0);
}


function _TA_CDLMORNINGSTAR($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$optInPenetration,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInPenetration=+($optInPenetration);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond10=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$11=0,$13=0,$14=0,$or_cond7=0,$_09=.0,$16=0,$18=0,$19=0,$_startIdx=0;
 var $20=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$BodyLongPeriodTotal_0_lcssa=.0,$36=0,$37=0,$38=0,$39=0,$i_029=0;
 var $BodyLongPeriodTotal_028=.0,$42=0,$43=.0,$44=0,$45=.0,$46=.0,$47=.0,$49=0,$50=.0,$51=0,$52=.0,$53=.0,$55=0,$56=.0,$57=0,$58=.0,$59=0,$60=.0,$61=0,$_=.0;
 var $62=.0,$63=.0,$64=0,$65=.0,$66=.0,$67=.0,$69=.0,$70=.0,$71=0,$72=0,$BodyShortPeriodTotal2_0_lcssa=.0,$BodyShortPeriodTotal_0_lcssa=.0,$73=0,$smax=0,$74=0,$smax32=0,$75=0,$smax33=0,$i_126=0,$BodyShortPeriodTotal2_025=.0;
 var $BodyShortPeriodTotal_024=.0,$77=0,$78=.0,$79=0,$80=.0,$81=.0,$82=.0,$83=0,$84=0,$85=.0,$86=0,$87=.0,$88=.0,$89=.0,$90=0,$91=.0,$92=0,$93=.0,$94=.0,$95=0;
 var $96=0,$97=.0,$98=0,$99=.0,$100=.0,$101=0,$102=.0,$103=0,$104=.0,$105=0,$106=.0,$107=0,$_11=.0,$108=.0,$109=.0,$110=0,$111=.0,$112=.0,$113=.0,$114=0;
 var $115=0,$116=.0,$117=0,$118=.0,$119=0,$120=.0,$121=0,$_12=.0,$122=.0,$123=.0,$124=0,$125=.0,$126=.0,$127=.0,$_pn=.0,$130=.0,$131=.0,$132=.0,$133=0,$134=0;
 var $BodyShortPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$BodyShortPeriodTotal2_1=.0,$i_2=0,$outIdx_0=0,$BodyShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$136=0,$137=0,$138=.0,$139=0,$140=.0,$141=.0,$142=.0,$143=0,$144=0,$145=.0,$146=0,$147=0,$148=0;
 var $150=.0,$151=.0,$153=0,$154=0,$156=0,$157=.0,$158=0,$159=.0,$160=.0,$162=0,$164=0,$165=.0,$166=0,$_13=.0,$167=.0,$168=.0,$169=0,$170=.0,$171=.0,$172=.0;
 var $174=.0,$175=.0,$176=0,$177=0,$178=0,$179=0,$180=.0,$181=.0,$182=0,$184=.0,$185=.0,$not_=0,$187=0,$188=0,$189=.0,$190=0,$191=.0,$192=.0,$193=.0,$194=0;
 var $195=.0,$196=0,$197=0,$198=0,$200=.0,$201=.0,$203=0,$204=0,$206=0,$207=.0,$208=0,$209=.0,$210=.0,$212=0,$214=0,$215=.0,$216=0,$_14=.0,$217=.0,$218=.0;
 var $219=0,$220=.0,$221=.0,$222=.0,$224=.0,$225=.0,$226=0,$227=0,$228=0,$229=0,$230=.0,$231=.0,$232=0,$234=.0,$235=.0,$236=0,$_15=.0,$237=.0,$238=.0,$239=0;
 var $240=.0,$241=0,$243=0,$244=.0,$245=0,$246=.0,$247=.0,$248=.0,$249=0,$250=.0,$251=0,$252=0,$253=0,$255=.0,$256=.0,$259=0,$260=.0,$261=0,$262=.0,$263=.0;
 var $266=0,$267=.0,$268=0,$_16=.0,$269=.0,$270=.0,$271=0,$272=.0,$273=.0,$274=.0,$276=.0,$277=.0,$278=0,$279=0,$280=0,$281=0,$282=.0,$283=.0,$284=0,$286=.0;
 var $287=.0,$288=0,$290=.0,$291=.0,$292=.0,$293=.0,$294=.0,$295=.0,$296=0,$298=0,$300=0,$outIdx_1=0,$302=0,$303=0,$304=0,$306=.0,$307=.0,$308=.0,$309=.0,$311=0;
 var $312=.0,$313=0,$314=.0,$315=.0,$317=0,$318=.0,$319=.0,$320=.0,$321=0,$_17=.0,$322=.0,$323=.0,$324=0,$325=.0,$326=.0,$327=.0,$329=.0,$330=0,$331=0,$332=0;
 var $334=0,$335=.0,$336=0,$337=.0,$338=.0,$339=.0,$341=0,$342=.0,$343=0,$344=.0,$345=.0,$347=0,$348=.0,$349=0,$350=.0,$351=0,$352=.0,$353=0,$_18=.0,$354=.0;
 var $355=.0,$356=0,$357=.0,$358=.0,$359=.0,$361=.0,$362=.0,$363=.0,$364=0,$365=0,$366=0,$368=0,$369=0,$370=.0,$371=0,$372=.0,$373=.0,$374=.0,$376=0,$377=0;
 var $378=.0,$379=0,$380=.0,$381=.0,$383=0,$384=0,$385=.0,$386=0,$387=.0,$388=0,$389=.0,$390=0,$_19=.0,$391=.0,$392=.0,$393=0,$394=.0,$395=.0,$396=.0,$398=.0;
 var $399=0,$400=0,$401=0,$403=0,$404=.0,$405=0,$406=.0,$407=.0,$408=.0,$410=0,$411=.0,$412=0,$413=.0,$414=.0,$416=0,$417=.0,$418=0,$419=.0,$420=0,$421=.0;
 var $422=0,$_20=.0,$423=.0,$424=.0,$425=0,$426=.0,$427=.0,$428=.0,$430=.0,$431=.0,$432=.0,$433=0,$434=0,$435=0,$437=0,$438=.0,$439=0,$440=.0,$441=.0,$442=.0;
 var $444=0,$445=.0,$446=0,$447=.0,$448=.0,$450=0,$451=.0,$452=0,$453=.0,$454=0,$455=.0,$456=0,$_21=.0,$457=.0,$458=.0,$459=0,$460=.0,$461=.0,$462=.0,$464=.0;
 var $465=0,$466=0,$467=0,$469=0,$470=0,$471=.0,$472=0,$473=.0,$474=.0,$475=.0,$477=0,$478=0,$479=.0,$480=0,$481=.0,$482=.0,$484=0,$485=0,$486=.0,$487=0;
 var $488=.0,$489=0,$490=.0,$491=0,$_22=.0,$492=.0,$493=.0,$494=0,$495=.0,$496=.0,$497=.0,$499=.0,$500=.0,$501=.0,$502=0,$503=0,$504=0,$505=0,$507=0,$508=0;
 var $_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond10=$3|$4;
 if ($or_cond10) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 if (!($or_cond5)) {
  $_0=2;

  return (($_0)|0);
 }
 $11=$optInPenetration==(-4.0e+37);
 do {
  if ($11) {
   $_09=0.3;
  } else {
   $13=$optInPenetration<(0.0);
   $14=$optInPenetration>(3.0e+37);
   $or_cond7=$13|$14;
   if ($or_cond7) {
    $_0=2;
   } else {
    $_09=$optInPenetration;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $16=($outInteger|0)==0;
 if ($16) {
  $_0=2;

  return (($_0)|0);
 }
 $18=((_TA_CDLMORNINGSTAR_Lookback($_09))|0);
 $19=($18|0)>($startIdx|0);
 $_startIdx=($19?$18:$startIdx);
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $23=((($_startIdx)-(2))|0);
 $24=((HEAP32[((272)>>2)])|0);
 $25=(($24+168)|0);
 $26=((HEAP32[(($25)>>2)])|0);
 $27=((($23)-($26))|0);
 $28=((($_startIdx)-(1))|0);
 $29=(($24+216)|0);
 $30=((HEAP32[(($29)>>2)])|0);
 $31=((($28)-($30))|0);
 $32=($26|0)>0;
 if ($32) {
  $33=((HEAP32[((272)>>2)])|0);
  $34=(($33+164)|0);
  $35=((HEAP32[(($34)>>2)])|0);
  $BodyLongPeriodTotal_028=0.0;$i_029=$27;
  while(1) {


   if (((($35|0))|0)==((0)|0)) {
    $42=(($inClose+($i_029<<3))|0);
    $43=(+(HEAPF64[(($42)>>3)]));
    $44=(($inOpen+($i_029<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=($43)-($45);
    $47=(+(Math_abs((+($46)))));
    $69=$47;
   } else if (((($35|0))|0)==((2)|0)) {
    $55=(($inHigh+($i_029<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=(($inClose+($i_029<<3))|0);
    $58=(+(HEAPF64[(($57)>>3)]));
    $59=(($inOpen+($i_029<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=$58<$60;
    $_=($61?$60:$58);
    $62=($56)-($_);
    $63=($61?$58:$60);
    $64=(($inLow+($i_029<<3))|0);
    $65=(+(HEAPF64[(($64)>>3)]));
    $66=($63)-($65);
    $67=($62)+($66);
    $69=$67;
   } else if (((($35|0))|0)==((1)|0)) {
    $49=(($inHigh+($i_029<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=(($inLow+($i_029<<3))|0);
    $52=(+(HEAPF64[(($51)>>3)]));
    $53=($50)-($52);
    $69=$53;
   } else {
    $69=0.0;
   }

   $70=($BodyLongPeriodTotal_028)+($69);
   $71=((($i_029)+(1))|0);
   $72=($71|0)<($23|0);
   if ($72) {
    $BodyLongPeriodTotal_028=$70;$i_029=$71;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$70;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $36=($30|0)>0;
 if ($36) {
  $37=((HEAP32[((272)>>2)])|0);
  $38=(($37+212)|0);
  $39=((HEAP32[(($38)>>2)])|0);
  $BodyShortPeriodTotal_024=0.0;$BodyShortPeriodTotal2_025=0.0;$i_126=$31;
  while(1) {



   if (((($39|0))|0)==((1)|0)) {
    $90=(($inHigh+($i_126<<3))|0);
    $91=(+(HEAPF64[(($90)>>3)]));
    $92=(($inLow+($i_126<<3))|0);
    $93=(+(HEAPF64[(($92)>>3)]));
    $94=($91)-($93);
    $95=((($i_126)+(1))|0);
    $96=(($inHigh+($95<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=(($inLow+($95<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=($97)-($99);
    $130=$100;$_pn=$94;
   } else if (((($39|0))|0)==((2)|0)) {
    $101=(($inHigh+($i_126<<3))|0);
    $102=(+(HEAPF64[(($101)>>3)]));
    $103=(($inClose+($i_126<<3))|0);
    $104=(+(HEAPF64[(($103)>>3)]));
    $105=(($inOpen+($i_126<<3))|0);
    $106=(+(HEAPF64[(($105)>>3)]));
    $107=$104<$106;
    $_11=($107?$106:$104);
    $108=($102)-($_11);
    $109=($107?$104:$106);
    $110=(($inLow+($i_126<<3))|0);
    $111=(+(HEAPF64[(($110)>>3)]));
    $112=($109)-($111);
    $113=($108)+($112);
    $114=((($i_126)+(1))|0);
    $115=(($inHigh+($114<<3))|0);
    $116=(+(HEAPF64[(($115)>>3)]));
    $117=(($inClose+($114<<3))|0);
    $118=(+(HEAPF64[(($117)>>3)]));
    $119=(($inOpen+($114<<3))|0);
    $120=(+(HEAPF64[(($119)>>3)]));
    $121=$118<$120;
    $_12=($121?$120:$118);
    $122=($116)-($_12);
    $123=($121?$118:$120);
    $124=(($inLow+($114<<3))|0);
    $125=(+(HEAPF64[(($124)>>3)]));
    $126=($123)-($125);
    $127=($122)+($126);
    $130=$127;$_pn=$113;
   } else if (((($39|0))|0)==((0)|0)) {
    $77=(($inClose+($i_126<<3))|0);
    $78=(+(HEAPF64[(($77)>>3)]));
    $79=(($inOpen+($i_126<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=($78)-($80);
    $82=(+(Math_abs((+($81)))));
    $83=((($i_126)+(1))|0);
    $84=(($inClose+($83<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=(($inOpen+($83<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=($85)-($87);
    $89=(+(Math_abs((+($88)))));
    $130=$89;$_pn=$82;
   } else {
    $130=0.0;$_pn=0.0;
   }


   $131=($BodyShortPeriodTotal_024)+($_pn);
   $132=($BodyShortPeriodTotal2_025)+($130);
   $133=((($i_126)+(1))|0);
   $134=($133|0)<($28|0);
   if ($134) {
    $BodyShortPeriodTotal_024=$131;$BodyShortPeriodTotal2_025=$132;$i_126=$133;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$131;$BodyShortPeriodTotal2_0_lcssa=$132;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;$BodyShortPeriodTotal2_0_lcssa=0.0;
 }


 $73=($18|0)>($endIdx|0);
 $smax=($73?$18:$endIdx);
 $74=($smax|0)>($startIdx|0);
 $smax32=($74?$smax:$startIdx);
 $75=($18|0)>($startIdx|0);
 $smax33=($75?$18:$startIdx);
 $BodyLongTrailingIdx_0=$27;$BodyShortTrailingIdx_0=$31;$outIdx_0=0;$i_2=$_startIdx;$BodyShortPeriodTotal2_1=$BodyShortPeriodTotal2_0_lcssa;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;
 while(1) {







  $136=((($i_2)-(2))|0);
  $137=(($inClose+($136<<3))|0);
  $138=(+(HEAPF64[(($137)>>3)]));
  $139=(($inOpen+($136<<3))|0);
  $140=(+(HEAPF64[(($139)>>3)]));
  $141=($138)-($140);
  $142=(+(Math_abs((+($141)))));
  $143=((HEAP32[((272)>>2)])|0);
  $144=(($143+176)|0);
  $145=(+(HEAPF64[(($144)>>3)]));
  $146=(($143+168)|0);
  $147=((HEAP32[(($146)>>2)])|0);
  $148=($147|0)==0;
  do {
   if ($148) {
    $153=(($143+164)|0);
    $154=((HEAP32[(($153)>>2)])|0);
    if (((($154|0))|0)==((1)|0)) {
     $156=(($inHigh+($136<<3))|0);
     $157=(+(HEAPF64[(($156)>>3)]));
     $158=(($inLow+($136<<3))|0);
     $159=(+(HEAPF64[(($158)>>3)]));
     $160=($157)-($159);
     $174=$160;
     break;
    } else if (((($154|0))|0)==((0)|0)) {
     $174=$142;
     break;
    }
    $162=($154|0)==2;
    if (!($162)) {
     $174=0.0;
     break;
    }
    $164=(($inHigh+($136<<3))|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    $166=$138<$140;
    $_13=($166?$140:$138);
    $167=($165)-($_13);
    $168=($166?$138:$140);
    $169=(($inLow+($136<<3))|0);
    $170=(+(HEAPF64[(($169)>>3)]));
    $171=($168)-($170);
    $172=($167)+($171);
    $174=$172;
   } else {
    $150=(+((($147|0))|0));
    $151=($BodyLongPeriodTotal_1)/($150);
    $174=$151;
   }
  } while(0);

  $175=($145)*($174);
  $176=((HEAP32[((272)>>2)])|0);
  $177=(($176+164)|0);
  $178=((HEAP32[(($177)>>2)])|0);
  $179=($178|0)==2;
  $180=($179?(2.0):(1.0));
  $181=($175)/($180);
  $182=$142>$181;
  do {
   if ($182) {
    $184=(+(HEAPF64[(($137)>>3)]));
    $185=(+(HEAPF64[(($139)>>3)]));
    $not_=$184<$185;
    if (!($not_)) {
     label = 51;
     break;
    }
    $187=((($i_2)-(1))|0);
    $188=(($inClose+($187<<3))|0);
    $189=(+(HEAPF64[(($188)>>3)]));
    $190=(($inOpen+($187<<3))|0);
    $191=(+(HEAPF64[(($190)>>3)]));
    $192=($189)-($191);
    $193=(+(Math_abs((+($192)))));
    $194=(($176+224)|0);
    $195=(+(HEAPF64[(($194)>>3)]));
    $196=(($176+216)|0);
    $197=((HEAP32[(($196)>>2)])|0);
    $198=($197|0)==0;
    do {
     if ($198) {
      $203=(($176+212)|0);
      $204=((HEAP32[(($203)>>2)])|0);
      if (((($204|0))|0)==((0)|0)) {
       $224=$193;
       break;
      } else if (((($204|0))|0)==((1)|0)) {
       $206=(($inHigh+($187<<3))|0);
       $207=(+(HEAPF64[(($206)>>3)]));
       $208=(($inLow+($187<<3))|0);
       $209=(+(HEAPF64[(($208)>>3)]));
       $210=($207)-($209);
       $224=$210;
       break;
      }
      $212=($204|0)==2;
      if (!($212)) {
       $224=0.0;
       break;
      }
      $214=(($inHigh+($187<<3))|0);
      $215=(+(HEAPF64[(($214)>>3)]));
      $216=$189<$191;
      $_14=($216?$191:$189);
      $217=($215)-($_14);
      $218=($216?$189:$191);
      $219=(($inLow+($187<<3))|0);
      $220=(+(HEAPF64[(($219)>>3)]));
      $221=($218)-($220);
      $222=($217)+($221);
      $224=$222;
     } else {
      $200=(+((($197|0))|0));
      $201=($BodyShortPeriodTotal_1)/($200);
      $224=$201;
     }
    } while(0);

    $225=($195)*($224);
    $226=((HEAP32[((272)>>2)])|0);
    $227=(($226+212)|0);
    $228=((HEAP32[(($227)>>2)])|0);
    $229=($228|0)==2;
    $230=($229?(2.0):(1.0));
    $231=($225)/($230);
    $232=$193>$231;
    if ($232) {
     label = 51;
     break;
    }
    $234=(+(HEAPF64[(($190)>>3)]));
    $235=(+(HEAPF64[(($188)>>3)]));
    $236=$234>$235;
    $_15=($236?$234:$235);
    $237=(+(HEAPF64[(($139)>>3)]));
    $238=(+(HEAPF64[(($137)>>3)]));
    $239=$237<$238;
    $240=($239?$237:$238);
    $241=$_15<$240;
    if (!($241)) {
     label = 51;
     break;
    }
    $243=(($inClose+($i_2<<3))|0);
    $244=(+(HEAPF64[(($243)>>3)]));
    $245=(($inOpen+($i_2<<3))|0);
    $246=(+(HEAPF64[(($245)>>3)]));
    $247=($244)-($246);
    $248=(+(Math_abs((+($247)))));
    $249=(($226+224)|0);
    $250=(+(HEAPF64[(($249)>>3)]));
    $251=(($226+216)|0);
    $252=((HEAP32[(($251)>>2)])|0);
    $253=($252|0)==0;
    do {
     if ($253) {
      if (((($228|0))|0)==((0)|0)) {
       $276=$248;
       break;
      } else if (((($228|0))|0)==((1)|0)) {
       $259=(($inHigh+($i_2<<3))|0);
       $260=(+(HEAPF64[(($259)>>3)]));
       $261=(($inLow+($i_2<<3))|0);
       $262=(+(HEAPF64[(($261)>>3)]));
       $263=($260)-($262);
       $276=$263;
       break;
      }
      if (!($229)) {
       $276=0.0;
       break;
      }
      $266=(($inHigh+($i_2<<3))|0);
      $267=(+(HEAPF64[(($266)>>3)]));
      $268=$244<$246;
      $_16=($268?$246:$244);
      $269=($267)-($_16);
      $270=($268?$244:$246);
      $271=(($inLow+($i_2<<3))|0);
      $272=(+(HEAPF64[(($271)>>3)]));
      $273=($270)-($272);
      $274=($269)+($273);
      $276=$274;
     } else {
      $255=(+((($252|0))|0));
      $256=($BodyShortPeriodTotal2_1)/($255);
      $276=$256;
     }
    } while(0);

    $277=($250)*($276);
    $278=((HEAP32[((272)>>2)])|0);
    $279=(($278+212)|0);
    $280=((HEAP32[(($279)>>2)])|0);
    $281=($280|0)==2;
    $282=($281?(2.0):(1.0));
    $283=($277)/($282);
    $284=$248>$283;
    if (!($284)) {
     label = 51;
     break;
    }
    $286=(+(HEAPF64[(($243)>>3)]));
    $287=(+(HEAPF64[(($245)>>3)]));
    $288=$286<$287;
    if ($288) {
     label = 51;
     break;
    }
    $290=(+(HEAPF64[(($137)>>3)]));
    $291=(+(HEAPF64[(($139)>>3)]));
    $292=($290)-($291);
    $293=(+(Math_abs((+($292)))));
    $294=($_09)*($293);
    $295=($290)+($294);
    $296=$286>$295;
    if (!($296)) {
     label = 51;
     break;
    }
    $298=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($298)>>2)]=100;
   } else {
    label = 51;
   }
  } while(0);
  if ((label|0) == 51) {
   label = 0;
   $300=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($300)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $302=((HEAP32[((272)>>2)])|0);
  $303=(($302+164)|0);
  $304=((HEAP32[(($303)>>2)])|0);
  if (((($304|0))|0)==((0)|0)) {
   $306=(+(HEAPF64[(($137)>>3)]));
   $307=(+(HEAPF64[(($139)>>3)]));
   $308=($306)-($307);
   $309=(+(Math_abs((+($308)))));
   $329=$309;
  } else if (((($304|0))|0)==((1)|0)) {
   $311=(($inHigh+($136<<3))|0);
   $312=(+(HEAPF64[(($311)>>3)]));
   $313=(($inLow+($136<<3))|0);
   $314=(+(HEAPF64[(($313)>>3)]));
   $315=($312)-($314);
   $329=$315;
  } else if (((($304|0))|0)==((2)|0)) {
   $317=(($inHigh+($136<<3))|0);
   $318=(+(HEAPF64[(($317)>>3)]));
   $319=(+(HEAPF64[(($137)>>3)]));
   $320=(+(HEAPF64[(($139)>>3)]));
   $321=$319<$320;
   $_17=($321?$320:$319);
   $322=($318)-($_17);
   $323=($321?$319:$320);
   $324=(($inLow+($136<<3))|0);
   $325=(+(HEAPF64[(($324)>>3)]));
   $326=($323)-($325);
   $327=($322)+($326);
   $329=$327;
  } else {
   $329=0.0;
  }

  $330=((HEAP32[((272)>>2)])|0);
  $331=(($330+164)|0);
  $332=((HEAP32[(($331)>>2)])|0);
  if (((($332|0))|0)==((1)|0)) {
   $341=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $344=(+(HEAPF64[(($343)>>3)]));
   $345=($342)-($344);
   $361=$345;
  } else if (((($332|0))|0)==((2)|0)) {
   $347=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $348=(+(HEAPF64[(($347)>>3)]));
   $349=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $350=(+(HEAPF64[(($349)>>3)]));
   $351=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $352=(+(HEAPF64[(($351)>>3)]));
   $353=$350<$352;
   $_18=($353?$352:$350);
   $354=($348)-($_18);
   $355=($353?$350:$352);
   $356=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $357=(+(HEAPF64[(($356)>>3)]));
   $358=($355)-($357);
   $359=($354)+($358);
   $361=$359;
  } else if (((($332|0))|0)==((0)|0)) {
   $334=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $337=(+(HEAPF64[(($336)>>3)]));
   $338=($335)-($337);
   $339=(+(Math_abs((+($338)))));
   $361=$339;
  } else {
   $361=0.0;
  }

  $362=($329)-($361);
  $363=($BodyLongPeriodTotal_1)+($362);
  $364=((HEAP32[((272)>>2)])|0);
  $365=(($364+212)|0);
  $366=((HEAP32[(($365)>>2)])|0);
  if (((($366|0))|0)==((0)|0)) {
   $368=((($i_2)-(1))|0);
   $369=(($inClose+($368<<3))|0);
   $370=(+(HEAPF64[(($369)>>3)]));
   $371=(($inOpen+($368<<3))|0);
   $372=(+(HEAPF64[(($371)>>3)]));
   $373=($370)-($372);
   $374=(+(Math_abs((+($373)))));
   $398=$374;
  } else if (((($366|0))|0)==((2)|0)) {
   $383=((($i_2)-(1))|0);
   $384=(($inHigh+($383<<3))|0);
   $385=(+(HEAPF64[(($384)>>3)]));
   $386=(($inClose+($383<<3))|0);
   $387=(+(HEAPF64[(($386)>>3)]));
   $388=(($inOpen+($383<<3))|0);
   $389=(+(HEAPF64[(($388)>>3)]));
   $390=$387<$389;
   $_19=($390?$389:$387);
   $391=($385)-($_19);
   $392=($390?$387:$389);
   $393=(($inLow+($383<<3))|0);
   $394=(+(HEAPF64[(($393)>>3)]));
   $395=($392)-($394);
   $396=($391)+($395);
   $398=$396;
  } else if (((($366|0))|0)==((1)|0)) {
   $376=((($i_2)-(1))|0);
   $377=(($inHigh+($376<<3))|0);
   $378=(+(HEAPF64[(($377)>>3)]));
   $379=(($inLow+($376<<3))|0);
   $380=(+(HEAPF64[(($379)>>3)]));
   $381=($378)-($380);
   $398=$381;
  } else {
   $398=0.0;
  }

  $399=((HEAP32[((272)>>2)])|0);
  $400=(($399+212)|0);
  $401=((HEAP32[(($400)>>2)])|0);
  if (((($401|0))|0)==((1)|0)) {
   $410=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $411=(+(HEAPF64[(($410)>>3)]));
   $412=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $413=(+(HEAPF64[(($412)>>3)]));
   $414=($411)-($413);
   $430=$414;
  } else if (((($401|0))|0)==((0)|0)) {
   $403=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $404=(+(HEAPF64[(($403)>>3)]));
   $405=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $406=(+(HEAPF64[(($405)>>3)]));
   $407=($404)-($406);
   $408=(+(Math_abs((+($407)))));
   $430=$408;
  } else if (((($401|0))|0)==((2)|0)) {
   $416=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $417=(+(HEAPF64[(($416)>>3)]));
   $418=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $419=(+(HEAPF64[(($418)>>3)]));
   $420=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $421=(+(HEAPF64[(($420)>>3)]));
   $422=$419<$421;
   $_20=($422?$421:$419);
   $423=($417)-($_20);
   $424=($422?$419:$421);
   $425=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $426=(+(HEAPF64[(($425)>>3)]));
   $427=($424)-($426);
   $428=($423)+($427);
   $430=$428;
  } else {
   $430=0.0;
  }

  $431=($398)-($430);
  $432=($BodyShortPeriodTotal_1)+($431);
  $433=((HEAP32[((272)>>2)])|0);
  $434=(($433+212)|0);
  $435=((HEAP32[(($434)>>2)])|0);
  if (((($435|0))|0)==((1)|0)) {
   $444=(($inHigh+($i_2<<3))|0);
   $445=(+(HEAPF64[(($444)>>3)]));
   $446=(($inLow+($i_2<<3))|0);
   $447=(+(HEAPF64[(($446)>>3)]));
   $448=($445)-($447);
   $464=$448;
  } else if (((($435|0))|0)==((2)|0)) {
   $450=(($inHigh+($i_2<<3))|0);
   $451=(+(HEAPF64[(($450)>>3)]));
   $452=(($inClose+($i_2<<3))|0);
   $453=(+(HEAPF64[(($452)>>3)]));
   $454=(($inOpen+($i_2<<3))|0);
   $455=(+(HEAPF64[(($454)>>3)]));
   $456=$453<$455;
   $_21=($456?$455:$453);
   $457=($451)-($_21);
   $458=($456?$453:$455);
   $459=(($inLow+($i_2<<3))|0);
   $460=(+(HEAPF64[(($459)>>3)]));
   $461=($458)-($460);
   $462=($457)+($461);
   $464=$462;
  } else if (((($435|0))|0)==((0)|0)) {
   $437=(($inClose+($i_2<<3))|0);
   $438=(+(HEAPF64[(($437)>>3)]));
   $439=(($inOpen+($i_2<<3))|0);
   $440=(+(HEAPF64[(($439)>>3)]));
   $441=($438)-($440);
   $442=(+(Math_abs((+($441)))));
   $464=$442;
  } else {
   $464=0.0;
  }

  $465=((HEAP32[((272)>>2)])|0);
  $466=(($465+212)|0);
  $467=((HEAP32[(($466)>>2)])|0);
  if (((($467|0))|0)==((0)|0)) {
   $469=((($BodyShortTrailingIdx_0)+(1))|0);
   $470=(($inClose+($469<<3))|0);
   $471=(+(HEAPF64[(($470)>>3)]));
   $472=(($inOpen+($469<<3))|0);
   $473=(+(HEAPF64[(($472)>>3)]));
   $474=($471)-($473);
   $475=(+(Math_abs((+($474)))));
   $499=$475;
  } else if (((($467|0))|0)==((1)|0)) {
   $477=((($BodyShortTrailingIdx_0)+(1))|0);
   $478=(($inHigh+($477<<3))|0);
   $479=(+(HEAPF64[(($478)>>3)]));
   $480=(($inLow+($477<<3))|0);
   $481=(+(HEAPF64[(($480)>>3)]));
   $482=($479)-($481);
   $499=$482;
  } else if (((($467|0))|0)==((2)|0)) {
   $484=((($BodyShortTrailingIdx_0)+(1))|0);
   $485=(($inHigh+($484<<3))|0);
   $486=(+(HEAPF64[(($485)>>3)]));
   $487=(($inClose+($484<<3))|0);
   $488=(+(HEAPF64[(($487)>>3)]));
   $489=(($inOpen+($484<<3))|0);
   $490=(+(HEAPF64[(($489)>>3)]));
   $491=$488<$490;
   $_22=($491?$490:$488);
   $492=($486)-($_22);
   $493=($491?$488:$490);
   $494=(($inLow+($484<<3))|0);
   $495=(+(HEAPF64[(($494)>>3)]));
   $496=($493)-($495);
   $497=($492)+($496);
   $499=$497;
  } else {
   $499=0.0;
  }

  $500=($464)-($499);
  $501=($BodyShortPeriodTotal2_1)+($500);
  $502=((($i_2)+(1))|0);
  $503=((($BodyLongTrailingIdx_0)+(1))|0);
  $504=((($BodyShortTrailingIdx_0)+(1))|0);
  $505=($i_2|0)<($endIdx|0);
  if ($505) {
   $BodyLongTrailingIdx_0=$503;$BodyShortTrailingIdx_0=$504;$outIdx_0=$outIdx_1;$i_2=$502;$BodyShortPeriodTotal2_1=$501;$BodyLongPeriodTotal_1=$363;$BodyShortPeriodTotal_1=$432;
  } else {
   break;
  }
 }
 $507=((($smax32)+(1))|0);
 $508=((($507)-($smax33))|0);
 HEAP32[(($outNBElement)>>2)]=$508;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLONNECK_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+408)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(1))|0);
 return (($7)|0);
}


function _TA_CDLONNECK($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond16=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$EqualPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$i_021=0,$EqualPeriodTotal_020=.0,$34=0,$35=0,$36=.0,$37=0;
 var $38=.0,$39=.0,$40=.0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$49=0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$_=.0,$57=.0,$58=.0;
 var $59=0,$60=.0,$61=.0,$62=.0,$64=.0,$65=.0,$66=0,$67=0,$BodyLongPeriodTotal_0_lcssa=.0,$68=0,$smax=0,$69=0,$smax24=0,$70=0,$smax25=0,$i_119=0,$BodyLongPeriodTotal_018=.0,$73=0,$74=0,$75=.0;
 var $76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=0,$83=.0,$84=0,$85=.0,$86=.0,$88=0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$94=.0,$95=0,$_8=.0,$96=.0;
 var $97=.0,$98=0,$99=.0,$100=.0,$101=.0,$103=.0,$104=.0,$105=0,$106=0,$EqualPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$EqualTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$108=0,$109=0,$110=.0,$111=0,$112=.0;
 var $113=0,$115=.0,$116=.0,$117=0,$118=0,$119=.0,$120=0,$121=0,$122=0,$124=.0,$125=.0,$127=0,$128=0,$130=0,$131=.0,$132=0,$133=.0,$134=.0,$136=0,$138=0;
 var $139=.0,$_9=.0,$140=.0,$141=0,$142=.0,$143=0,$144=.0,$145=.0,$146=.0,$148=.0,$149=.0,$150=0,$151=0,$152=0,$153=0,$154=.0,$155=.0,$156=0,$158=0,$159=.0;
 var $160=0,$161=.0,$162=0,$164=0,$165=.0,$166=0,$168=0,$169=.0,$170=0,$171=0,$172=0,$174=.0,$175=.0,$177=0,$178=0,$180=.0,$181=.0,$182=.0,$183=.0,$185=0;
 var $186=.0,$187=.0,$189=0,$190=.0,$191=.0,$192=.0,$193=0,$_10=.0,$194=.0,$195=.0,$196=.0,$197=.0,$199=.0,$200=.0,$201=0,$202=0,$203=0,$204=0,$205=.0,$206=.0;
 var $207=.0,$208=0,$210=.0,$211=.0,$212=0,$213=.0,$214=0,$215=0,$216=0,$218=.0,$219=.0,$222=.0,$223=.0,$224=.0,$225=.0,$227=0,$228=.0,$229=.0,$232=0,$233=.0;
 var $234=.0,$235=.0,$236=0,$_11=.0,$237=.0,$238=.0,$239=.0,$240=.0,$242=.0,$243=.0,$244=0,$245=0,$246=0,$247=0,$248=.0,$249=.0,$250=.0,$251=0,$253=0,$255=0;
 var $outIdx_1=0,$257=0,$258=0,$259=0,$261=.0,$262=.0,$263=.0,$264=.0,$266=0,$267=.0,$268=0,$269=.0,$270=.0,$272=0,$273=.0,$274=.0,$275=.0,$276=0,$_12=.0,$277=.0;
 var $278=.0,$279=0,$280=.0,$281=.0,$282=.0,$284=.0,$285=0,$286=0,$287=0,$289=0,$290=0,$291=.0,$292=0,$293=.0,$294=.0,$295=.0,$297=0,$298=0,$299=.0,$300=0;
 var $301=.0,$302=.0,$304=0,$305=0,$306=.0,$307=0,$308=.0,$309=0,$310=.0,$311=0,$_13=.0,$312=.0,$313=.0,$314=0,$315=.0,$316=.0,$317=.0,$319=.0,$320=.0,$321=.0;
 var $322=0,$323=0,$324=0,$326=.0,$327=.0,$328=.0,$329=.0,$331=0,$332=.0,$333=0,$334=.0,$335=.0,$337=0,$338=.0,$339=.0,$340=.0,$341=0,$_14=.0,$342=.0,$343=.0;
 var $344=0,$345=.0,$346=.0,$347=.0,$349=.0,$350=0,$351=0,$352=0,$354=0,$355=0,$356=.0,$357=0,$358=.0,$359=.0,$360=.0,$362=0,$363=0,$364=.0,$365=0,$366=.0;
 var $367=.0,$369=0,$370=0,$371=.0,$372=0,$373=.0,$374=0,$375=.0,$376=0,$_15=.0,$377=.0,$378=.0,$379=0,$380=.0,$381=.0,$382=.0,$384=.0,$385=.0,$386=.0,$387=0;
 var $388=0,$389=0,$390=0,$392=0,$393=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond16=$10|$or_cond5_not;
 if ($or_cond16) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLONNECK_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+408)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+168)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+404)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $EqualPeriodTotal_020=0.0;$i_021=$20;
  while(1) {


   if (((($27|0))|0)==((0)|0)) {
    $34=((($i_021)-(1))|0);
    $35=(($inClose+($34<<3))|0);
    $36=(+(HEAPF64[(($35)>>3)]));
    $37=(($inOpen+($34<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=($36)-($38);
    $40=(+(Math_abs((+($39)))));
    $64=$40;
   } else if (((($27|0))|0)==((2)|0)) {
    $49=((($i_021)-(1))|0);
    $50=(($inHigh+($49<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inClose+($49<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inOpen+($49<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=$53<$55;
    $_=($56?$55:$53);
    $57=($51)-($_);
    $58=($56?$53:$55);
    $59=(($inLow+($49<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=($57)+($61);
    $64=$62;
   } else if (((($27|0))|0)==((1)|0)) {
    $42=((($i_021)-(1))|0);
    $43=(($inHigh+($42<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=(($inLow+($42<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=($44)-($46);
    $64=$47;
   } else {
    $64=0.0;
   }

   $65=($EqualPeriodTotal_020)+($64);
   $66=((($i_021)+(1))|0);
   $67=($66|0)<($_startIdx|0);
   if ($67) {
    $EqualPeriodTotal_020=$65;$i_021=$66;
   } else {
    $EqualPeriodTotal_0_lcssa=$65;
    break;
   }
  }
 } else {
  $EqualPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+164)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $BodyLongPeriodTotal_018=0.0;$i_119=$23;
  while(1) {


   if (((($31|0))|0)==((1)|0)) {
    $81=((($i_119)-(1))|0);
    $82=(($inHigh+($81<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inLow+($81<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=($83)-($85);
    $103=$86;
   } else if (((($31|0))|0)==((2)|0)) {
    $88=((($i_119)-(1))|0);
    $89=(($inHigh+($88<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inClose+($88<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=(($inOpen+($88<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=$92<$94;
    $_8=($95?$94:$92);
    $96=($90)-($_8);
    $97=($95?$92:$94);
    $98=(($inLow+($88<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=($97)-($99);
    $101=($96)+($100);
    $103=$101;
   } else if (((($31|0))|0)==((0)|0)) {
    $73=((($i_119)-(1))|0);
    $74=(($inClose+($73<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($73<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $103=$79;
   } else {
    $103=0.0;
   }

   $104=($BodyLongPeriodTotal_018)+($103);
   $105=((($i_119)+(1))|0);
   $106=($105|0)<($_startIdx|0);
   if ($106) {
    $BodyLongPeriodTotal_018=$104;$i_119=$105;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$104;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $68=($12|0)>($endIdx|0);
 $smax=($68?$12:$endIdx);
 $69=($smax|0)>($startIdx|0);
 $smax24=($69?$smax:$startIdx);
 $70=($12|0)>($startIdx|0);
 $smax25=($70?$12:$startIdx);
 $BodyLongTrailingIdx_0=$23;$EqualTrailingIdx_0=$20;$outIdx_0=0;$i_2=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$EqualPeriodTotal_1=$EqualPeriodTotal_0_lcssa;
 while(1) {






  $108=((($i_2)-(1))|0);
  $109=(($inClose+($108<<3))|0);
  $110=(+(HEAPF64[(($109)>>3)]));
  $111=(($inOpen+($108<<3))|0);
  $112=(+(HEAPF64[(($111)>>3)]));
  $113=$110>=$112;
  do {
   if ($113) {
    label = 47;
   } else {
    $115=($110)-($112);
    $116=(+(Math_abs((+($115)))));
    $117=((HEAP32[((272)>>2)])|0);
    $118=(($117+176)|0);
    $119=(+(HEAPF64[(($118)>>3)]));
    $120=(($117+168)|0);
    $121=((HEAP32[(($120)>>2)])|0);
    $122=($121|0)==0;
    do {
     if ($122) {
      $127=(($117+164)|0);
      $128=((HEAP32[(($127)>>2)])|0);
      if (((($128|0))|0)==((1)|0)) {
       $130=(($inHigh+($108<<3))|0);
       $131=(+(HEAPF64[(($130)>>3)]));
       $132=(($inLow+($108<<3))|0);
       $133=(+(HEAPF64[(($132)>>3)]));
       $134=($131)-($133);
       $148=$134;
       break;
      } else if (((($128|0))|0)==((0)|0)) {
       $148=$116;
       break;
      }
      $136=($128|0)==2;
      if (!($136)) {
       $148=0.0;
       break;
      }
      $138=(($inHigh+($108<<3))|0);
      $139=(+(HEAPF64[(($138)>>3)]));
      $_9=($113?$110:$112);
      $140=($139)-($_9);
      $141=$110<$112;
      $142=($141?$110:$112);
      $143=(($inLow+($108<<3))|0);
      $144=(+(HEAPF64[(($143)>>3)]));
      $145=($142)-($144);
      $146=($140)+($145);
      $148=$146;
     } else {
      $124=(+((($121|0))|0));
      $125=($BodyLongPeriodTotal_1)/($124);
      $148=$125;
     }
    } while(0);

    $149=($119)*($148);
    $150=((HEAP32[((272)>>2)])|0);
    $151=(($150+164)|0);
    $152=((HEAP32[(($151)>>2)])|0);
    $153=($152|0)==2;
    $154=($153?(2.0):(1.0));
    $155=($149)/($154);
    $156=$116>$155;
    if (!($156)) {
     label = 47;
     break;
    }
    $158=(($inClose+($i_2<<3))|0);
    $159=(+(HEAPF64[(($158)>>3)]));
    $160=(($inOpen+($i_2<<3))|0);
    $161=(+(HEAPF64[(($160)>>3)]));
    $162=$159<$161;
    if ($162) {
     label = 47;
     break;
    }
    $164=(($inLow+($108<<3))|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    $166=$161<$165;
    if (!($166)) {
     label = 47;
     break;
    }
    $168=(($150+416)|0);
    $169=(+(HEAPF64[(($168)>>3)]));
    $170=(($150+408)|0);
    $171=((HEAP32[(($170)>>2)])|0);
    $172=($171|0)==0;
    do {
     if ($172) {
      $177=(($150+404)|0);
      $178=((HEAP32[(($177)>>2)])|0);
      if (((($178|0))|0)==((0)|0)) {
       $180=(+(HEAPF64[(($109)>>3)]));
       $181=(+(HEAPF64[(($111)>>3)]));
       $182=($180)-($181);
       $183=(+(Math_abs((+($182)))));
       $199=$183;
       break;
      } else if (((($178|0))|0)==((2)|0)) {
       $189=(($inHigh+($108<<3))|0);
       $190=(+(HEAPF64[(($189)>>3)]));
       $191=(+(HEAPF64[(($109)>>3)]));
       $192=(+(HEAPF64[(($111)>>3)]));
       $193=$191<$192;
       $_10=($193?$192:$191);
       $194=($190)-($_10);
       $195=($193?$191:$192);
       $196=($195)-($165);
       $197=($194)+($196);
       $199=$197;
       break;
      } else if (((($178|0))|0)==((1)|0)) {
       $185=(($inHigh+($108<<3))|0);
       $186=(+(HEAPF64[(($185)>>3)]));
       $187=($186)-($165);
       $199=$187;
       break;
      } else {
       $199=0.0;
       break;
      }
     } else {
      $174=(+((($171|0))|0));
      $175=($EqualPeriodTotal_1)/($174);
      $199=$175;
     }
    } while(0);

    $200=($169)*($199);
    $201=((HEAP32[((272)>>2)])|0);
    $202=(($201+404)|0);
    $203=((HEAP32[(($202)>>2)])|0);
    $204=($203|0)==2;
    $205=($204?(2.0):(1.0));
    $206=($200)/($205);
    $207=($165)+($206);
    $208=$159>$207;
    if ($208) {
     label = 47;
     break;
    }
    $210=(+(HEAPF64[(($158)>>3)]));
    $211=(+(HEAPF64[(($164)>>3)]));
    $212=(($201+416)|0);
    $213=(+(HEAPF64[(($212)>>3)]));
    $214=(($201+408)|0);
    $215=((HEAP32[(($214)>>2)])|0);
    $216=($215|0)==0;
    do {
     if ($216) {
      if (((($203|0))|0)==((1)|0)) {
       $227=(($inHigh+($108<<3))|0);
       $228=(+(HEAPF64[(($227)>>3)]));
       $229=($228)-($211);
       $242=$229;
       break;
      } else if (((($203|0))|0)==((0)|0)) {
       $222=(+(HEAPF64[(($109)>>3)]));
       $223=(+(HEAPF64[(($111)>>3)]));
       $224=($222)-($223);
       $225=(+(Math_abs((+($224)))));
       $242=$225;
       break;
      } else {
       if (!($204)) {
        $242=0.0;
        break;
       }
       $232=(($inHigh+($108<<3))|0);
       $233=(+(HEAPF64[(($232)>>3)]));
       $234=(+(HEAPF64[(($109)>>3)]));
       $235=(+(HEAPF64[(($111)>>3)]));
       $236=$234<$235;
       $_11=($236?$235:$234);
       $237=($233)-($_11);
       $238=($236?$234:$235);
       $239=($238)-($211);
       $240=($237)+($239);
       $242=$240;
       break;
      }
     } else {
      $218=(+((($215|0))|0));
      $219=($EqualPeriodTotal_1)/($218);
      $242=$219;
     }
    } while(0);

    $243=($213)*($242);
    $244=((HEAP32[((272)>>2)])|0);
    $245=(($244+404)|0);
    $246=((HEAP32[(($245)>>2)])|0);
    $247=($246|0)==2;
    $248=($247?(2.0):(1.0));
    $249=($243)/($248);
    $250=($211)-($249);
    $251=$210<$250;
    if ($251) {
     label = 47;
     break;
    }
    $253=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($253)>>2)]=-100;
   }
  } while(0);
  if ((label|0) == 47) {
   label = 0;
   $255=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($255)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $257=((HEAP32[((272)>>2)])|0);
  $258=(($257+404)|0);
  $259=((HEAP32[(($258)>>2)])|0);
  if (((($259|0))|0)==((0)|0)) {
   $261=(+(HEAPF64[(($109)>>3)]));
   $262=(+(HEAPF64[(($111)>>3)]));
   $263=($261)-($262);
   $264=(+(Math_abs((+($263)))));
   $284=$264;
  } else if (((($259|0))|0)==((2)|0)) {
   $272=(($inHigh+($108<<3))|0);
   $273=(+(HEAPF64[(($272)>>3)]));
   $274=(+(HEAPF64[(($109)>>3)]));
   $275=(+(HEAPF64[(($111)>>3)]));
   $276=$274<$275;
   $_12=($276?$275:$274);
   $277=($273)-($_12);
   $278=($276?$274:$275);
   $279=(($inLow+($108<<3))|0);
   $280=(+(HEAPF64[(($279)>>3)]));
   $281=($278)-($280);
   $282=($277)+($281);
   $284=$282;
  } else if (((($259|0))|0)==((1)|0)) {
   $266=(($inHigh+($108<<3))|0);
   $267=(+(HEAPF64[(($266)>>3)]));
   $268=(($inLow+($108<<3))|0);
   $269=(+(HEAPF64[(($268)>>3)]));
   $270=($267)-($269);
   $284=$270;
  } else {
   $284=0.0;
  }

  $285=((HEAP32[((272)>>2)])|0);
  $286=(($285+404)|0);
  $287=((HEAP32[(($286)>>2)])|0);
  if (((($287|0))|0)==((2)|0)) {
   $304=((($EqualTrailingIdx_0)-(1))|0);
   $305=(($inHigh+($304<<3))|0);
   $306=(+(HEAPF64[(($305)>>3)]));
   $307=(($inClose+($304<<3))|0);
   $308=(+(HEAPF64[(($307)>>3)]));
   $309=(($inOpen+($304<<3))|0);
   $310=(+(HEAPF64[(($309)>>3)]));
   $311=$308<$310;
   $_13=($311?$310:$308);
   $312=($306)-($_13);
   $313=($311?$308:$310);
   $314=(($inLow+($304<<3))|0);
   $315=(+(HEAPF64[(($314)>>3)]));
   $316=($313)-($315);
   $317=($312)+($316);
   $319=$317;
  } else if (((($287|0))|0)==((1)|0)) {
   $297=((($EqualTrailingIdx_0)-(1))|0);
   $298=(($inHigh+($297<<3))|0);
   $299=(+(HEAPF64[(($298)>>3)]));
   $300=(($inLow+($297<<3))|0);
   $301=(+(HEAPF64[(($300)>>3)]));
   $302=($299)-($301);
   $319=$302;
  } else if (((($287|0))|0)==((0)|0)) {
   $289=((($EqualTrailingIdx_0)-(1))|0);
   $290=(($inClose+($289<<3))|0);
   $291=(+(HEAPF64[(($290)>>3)]));
   $292=(($inOpen+($289<<3))|0);
   $293=(+(HEAPF64[(($292)>>3)]));
   $294=($291)-($293);
   $295=(+(Math_abs((+($294)))));
   $319=$295;
  } else {
   $319=0.0;
  }

  $320=($284)-($319);
  $321=($EqualPeriodTotal_1)+($320);
  $322=((HEAP32[((272)>>2)])|0);
  $323=(($322+164)|0);
  $324=((HEAP32[(($323)>>2)])|0);
  if (((($324|0))|0)==((0)|0)) {
   $326=(+(HEAPF64[(($109)>>3)]));
   $327=(+(HEAPF64[(($111)>>3)]));
   $328=($326)-($327);
   $329=(+(Math_abs((+($328)))));
   $349=$329;
  } else if (((($324|0))|0)==((2)|0)) {
   $337=(($inHigh+($108<<3))|0);
   $338=(+(HEAPF64[(($337)>>3)]));
   $339=(+(HEAPF64[(($109)>>3)]));
   $340=(+(HEAPF64[(($111)>>3)]));
   $341=$339<$340;
   $_14=($341?$340:$339);
   $342=($338)-($_14);
   $343=($341?$339:$340);
   $344=(($inLow+($108<<3))|0);
   $345=(+(HEAPF64[(($344)>>3)]));
   $346=($343)-($345);
   $347=($342)+($346);
   $349=$347;
  } else if (((($324|0))|0)==((1)|0)) {
   $331=(($inHigh+($108<<3))|0);
   $332=(+(HEAPF64[(($331)>>3)]));
   $333=(($inLow+($108<<3))|0);
   $334=(+(HEAPF64[(($333)>>3)]));
   $335=($332)-($334);
   $349=$335;
  } else {
   $349=0.0;
  }

  $350=((HEAP32[((272)>>2)])|0);
  $351=(($350+164)|0);
  $352=((HEAP32[(($351)>>2)])|0);
  if (((($352|0))|0)==((1)|0)) {
   $362=((($BodyLongTrailingIdx_0)-(1))|0);
   $363=(($inHigh+($362<<3))|0);
   $364=(+(HEAPF64[(($363)>>3)]));
   $365=(($inLow+($362<<3))|0);
   $366=(+(HEAPF64[(($365)>>3)]));
   $367=($364)-($366);
   $384=$367;
  } else if (((($352|0))|0)==((2)|0)) {
   $369=((($BodyLongTrailingIdx_0)-(1))|0);
   $370=(($inHigh+($369<<3))|0);
   $371=(+(HEAPF64[(($370)>>3)]));
   $372=(($inClose+($369<<3))|0);
   $373=(+(HEAPF64[(($372)>>3)]));
   $374=(($inOpen+($369<<3))|0);
   $375=(+(HEAPF64[(($374)>>3)]));
   $376=$373<$375;
   $_15=($376?$375:$373);
   $377=($371)-($_15);
   $378=($376?$373:$375);
   $379=(($inLow+($369<<3))|0);
   $380=(+(HEAPF64[(($379)>>3)]));
   $381=($378)-($380);
   $382=($377)+($381);
   $384=$382;
  } else if (((($352|0))|0)==((0)|0)) {
   $354=((($BodyLongTrailingIdx_0)-(1))|0);
   $355=(($inClose+($354<<3))|0);
   $356=(+(HEAPF64[(($355)>>3)]));
   $357=(($inOpen+($354<<3))|0);
   $358=(+(HEAPF64[(($357)>>3)]));
   $359=($356)-($358);
   $360=(+(Math_abs((+($359)))));
   $384=$360;
  } else {
   $384=0.0;
  }

  $385=($349)-($384);
  $386=($BodyLongPeriodTotal_1)+($385);
  $387=((($i_2)+(1))|0);
  $388=((($EqualTrailingIdx_0)+(1))|0);
  $389=((($BodyLongTrailingIdx_0)+(1))|0);
  $390=($i_2|0)<($endIdx|0);
  if ($390) {
   $BodyLongTrailingIdx_0=$389;$EqualTrailingIdx_0=$388;$outIdx_0=$outIdx_1;$i_2=$387;$BodyLongPeriodTotal_1=$386;$EqualPeriodTotal_1=$321;
  } else {
   break;
  }
 }
 $392=((($smax24)+(1))|0);
 $393=((($392)-($smax25))|0);
 HEAP32[(($outNBElement)>>2)]=$393;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLPIERCING_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+168)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((($3)+(1))|0);
 return (($4)|0);
}


function _TA_CDLPIERCING($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $BodyLongPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond13=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$_promoted=.0,$_promoted16=.0,$28=0,$smax=0,$29=0,$smax18=0,$30=0,$smax19=0,$32=.0,$33=.0;
 var $i_015=0,$34=0,$35=0,$36=.0,$37=0,$38=.0,$39=.0,$40=.0,$41=0,$42=.0,$43=0,$44=.0,$45=.0,$46=.0,$47=0,$48=0,$49=.0,$50=0,$51=.0,$52=.0;
 var $53=0,$54=.0,$55=0,$56=.0,$57=.0,$58=0,$59=0,$60=.0,$61=0,$62=.0,$63=0,$64=.0,$65=0,$_=.0,$66=.0,$67=.0,$68=0,$69=.0,$70=.0,$71=.0;
 var $72=0,$73=.0,$74=0,$75=.0,$76=0,$77=.0,$78=0,$_8=.0,$79=.0,$80=.0,$81=0,$82=.0,$83=.0,$84=.0,$_pn=.0,$87=.0,$88=.0,$89=.0,$90=0,$91=0;
 var $i_1=0,$outIdx_0=0,$BodyLongTrailingIdx_0=0,$93=0,$94=0,$95=.0,$96=0,$97=.0,$98=0,$100=.0,$101=.0,$102=0,$103=0,$104=.0,$105=0,$106=0,$107=0,$109=.0,$110=.0,$111=.0;
 var $113=0,$114=0,$116=0,$117=.0,$118=0,$119=.0,$120=.0,$122=0,$124=0,$125=.0,$_9=.0,$126=.0,$127=0,$128=.0,$129=0,$130=.0,$131=.0,$132=.0,$134=.0,$135=.0;
 var $136=0,$137=0,$138=0,$139=0,$140=.0,$141=.0,$142=0,$144=0,$145=.0,$146=0,$147=.0,$148=0,$150=.0,$151=.0,$152=0,$153=.0,$154=0,$155=0,$156=0,$158=.0;
 var $159=.0,$160=.0,$163=0,$164=.0,$165=0,$166=.0,$167=.0,$170=0,$171=.0,$_10=.0,$172=.0,$173=0,$174=.0,$175=0,$176=.0,$177=.0,$178=.0,$180=.0,$181=.0,$182=0;
 var $183=0,$184=0,$185=0,$186=.0,$187=.0,$188=0,$190=.0,$191=0,$192=.0,$193=0,$195=.0,$196=.0,$197=0,$199=.0,$200=.0,$201=.0,$202=.0,$203=.0,$204=0,$206=0;
 var $208=0,$210=0,$211=0,$212=0,$213=0,$214=0,$215=.0,$216=0,$217=.0,$218=.0,$219=.0,$220=0,$221=0,$222=.0,$223=0,$224=.0,$225=.0,$226=.0,$227=0,$228=0;
 var $229=.0,$230=0,$231=.0,$232=.0,$233=0,$234=0,$235=.0,$236=0,$237=.0,$238=.0,$239=0,$240=0,$241=.0,$242=0,$243=.0,$244=0,$245=.0,$246=0,$_11=.0,$247=.0;
 var $248=.0,$249=0,$250=.0,$251=.0,$252=.0,$253=0,$254=0,$255=.0,$256=0,$257=.0,$258=0,$259=.0,$260=0,$_12=.0,$261=.0,$262=.0,$263=0,$264=.0,$265=.0,$266=.0;
 var $268=.0,$269=.0,$270=.0,$271=0,$272=.0,$273=.0,$275=0,$276=0,$_0=0,$278=0,$279=.0,$280=0,$281=.0,$282=0,$283=.0,$284=0,$_11_1=.0,$285=.0,$286=.0,$287=0;
 var $288=.0,$289=.0,$290=.0,$291=0,$292=.0,$293=0,$294=.0,$295=0,$296=.0,$297=0,$_12_1=.0,$298=.0,$299=.0,$300=0,$301=.0,$302=.0,$303=.0,$304=0,$305=.0,$306=0;
 var $307=.0,$308=.0,$309=0,$310=.0,$311=0,$312=.0,$313=.0,$314=0,$315=.0,$316=0,$317=.0,$318=.0,$319=.0,$320=0,$321=.0,$322=0,$323=.0,$324=.0,$325=.0,$327=.0;
 var $328=.0,$329=.0,$330=0,$331=.0,$332=.0,$outIdx_1=0,$333=0,$334=0,$335=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $BodyLongPeriodTotal=((sp)|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond13=$10|$or_cond5_not;
 if ($or_cond13) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDLPIERCING_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=(($BodyLongPeriodTotal+8)|0);
 $18=(($BodyLongPeriodTotal)|0);
 $19=$BodyLongPeriodTotal;
 _memset((((($19)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
 $20=((HEAP32[((272)>>2)])|0);
 $21=(($20+168)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($22|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+164)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $_promoted=(+(HEAPF64[(($17)>>3)]));
  $_promoted16=(+(HEAPF64[(($18)>>3)]));
  $i_015=$23;$33=$_promoted;$32=$_promoted16;
  while(1) {



   if (((($27|0))|0)==((0)|0)) {
    $34=((($i_015)-(1))|0);
    $35=(($inClose+($34<<3))|0);
    $36=(+(HEAPF64[(($35)>>3)]));
    $37=(($inOpen+($34<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=($36)-($38);
    $40=(+(Math_abs((+($39)))));
    $41=(($inClose+($i_015<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=(($inOpen+($i_015<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=($42)-($44);
    $46=(+(Math_abs((+($45)))));
    $87=$46;$_pn=$40;
   } else if (((($27|0))|0)==((1)|0)) {
    $47=((($i_015)-(1))|0);
    $48=(($inHigh+($47<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inLow+($47<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=($49)-($51);
    $53=(($inHigh+($i_015<<3))|0);
    $54=(+(HEAPF64[(($53)>>3)]));
    $55=(($inLow+($i_015<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=($54)-($56);
    $87=$57;$_pn=$52;
   } else if (((($27|0))|0)==((2)|0)) {
    $58=((($i_015)-(1))|0);
    $59=(($inHigh+($58<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=(($inClose+($58<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=(($inOpen+($58<<3))|0);
    $64=(+(HEAPF64[(($63)>>3)]));
    $65=$62<$64;
    $_=($65?$64:$62);
    $66=($60)-($_);
    $67=($65?$62:$64);
    $68=(($inLow+($58<<3))|0);
    $69=(+(HEAPF64[(($68)>>3)]));
    $70=($67)-($69);
    $71=($66)+($70);
    $72=(($inHigh+($i_015<<3))|0);
    $73=(+(HEAPF64[(($72)>>3)]));
    $74=(($inClose+($i_015<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($i_015<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=$75<$77;
    $_8=($78?$77:$75);
    $79=($73)-($_8);
    $80=($78?$75:$77);
    $81=(($inLow+($i_015<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=($80)-($82);
    $84=($79)+($83);
    $87=$84;$_pn=$71;
   } else {
    $87=0.0;$_pn=0.0;
   }


   $88=($_pn)+($33);
   $89=($87)+($32);
   $90=((($i_015)+(1))|0);
   $91=($90|0)<($_startIdx|0);
   if ($91) {
    $i_015=$90;$33=$88;$32=$89;
   } else {
    break;
   }
  }
  HEAPF64[(($17)>>3)]=$88;
  HEAPF64[(($18)>>3)]=$89;
 }
 $28=($12|0)>($endIdx|0);
 $smax=($28?$12:$endIdx);
 $29=($smax|0)>($startIdx|0);
 $smax18=($29?$smax:$startIdx);
 $30=($12|0)>($startIdx|0);
 $smax19=($30?$12:$startIdx);
 $BodyLongTrailingIdx_0=$23;$outIdx_0=0;$i_1=$_startIdx;
 while(1) {



  $93=((($i_1)-(1))|0);
  $94=(($inClose+($93<<3))|0);
  $95=(+(HEAPF64[(($94)>>3)]));
  $96=(($inOpen+($93<<3))|0);
  $97=(+(HEAPF64[(($96)>>3)]));
  $98=$95>=$97;
  do {
   if ($98) {
    label = 36;
   } else {
    $100=($95)-($97);
    $101=(+(Math_abs((+($100)))));
    $102=((HEAP32[((272)>>2)])|0);
    $103=(($102+176)|0);
    $104=(+(HEAPF64[(($103)>>3)]));
    $105=(($102+168)|0);
    $106=((HEAP32[(($105)>>2)])|0);
    $107=($106|0)==0;
    do {
     if ($107) {
      $113=(($102+164)|0);
      $114=((HEAP32[(($113)>>2)])|0);
      if (((($114|0))|0)==((1)|0)) {
       $116=(($inHigh+($93<<3))|0);
       $117=(+(HEAPF64[(($116)>>3)]));
       $118=(($inLow+($93<<3))|0);
       $119=(+(HEAPF64[(($118)>>3)]));
       $120=($117)-($119);
       $134=$120;
       break;
      } else if (((($114|0))|0)==((0)|0)) {
       $134=$101;
       break;
      }
      $122=($114|0)==2;
      if (!($122)) {
       $134=0.0;
       break;
      }
      $124=(($inHigh+($93<<3))|0);
      $125=(+(HEAPF64[(($124)>>3)]));
      $_9=($98?$95:$97);
      $126=($125)-($_9);
      $127=$95<$97;
      $128=($127?$95:$97);
      $129=(($inLow+($93<<3))|0);
      $130=(+(HEAPF64[(($129)>>3)]));
      $131=($128)-($130);
      $132=($126)+($131);
      $134=$132;
     } else {
      $109=(+((($106|0))|0));
      $110=(+(HEAPF64[(($17)>>3)]));
      $111=($110)/($109);
      $134=$111;
     }
    } while(0);

    $135=($104)*($134);
    $136=((HEAP32[((272)>>2)])|0);
    $137=(($136+164)|0);
    $138=((HEAP32[(($137)>>2)])|0);
    $139=($138|0)==2;
    $140=($139?(2.0):(1.0));
    $141=($135)/($140);
    $142=$101>$141;
    if (!($142)) {
     label = 36;
     break;
    }
    $144=(($inClose+($i_1<<3))|0);
    $145=(+(HEAPF64[(($144)>>3)]));
    $146=(($inOpen+($i_1<<3))|0);
    $147=(+(HEAPF64[(($146)>>3)]));
    $148=$145>=$147;
    if (!($148)) {
     label = 36;
     break;
    }
    $150=($145)-($147);
    $151=(+(Math_abs((+($150)))));
    $152=(($136+176)|0);
    $153=(+(HEAPF64[(($152)>>3)]));
    $154=(($136+168)|0);
    $155=((HEAP32[(($154)>>2)])|0);
    $156=($155|0)==0;
    do {
     if ($156) {
      if (((($138|0))|0)==((0)|0)) {
       $180=$151;
       break;
      } else if (((($138|0))|0)==((1)|0)) {
       $163=(($inHigh+($i_1<<3))|0);
       $164=(+(HEAPF64[(($163)>>3)]));
       $165=(($inLow+($i_1<<3))|0);
       $166=(+(HEAPF64[(($165)>>3)]));
       $167=($164)-($166);
       $180=$167;
       break;
      }
      if (!($139)) {
       $180=0.0;
       break;
      }
      $170=(($inHigh+($i_1<<3))|0);
      $171=(+(HEAPF64[(($170)>>3)]));
      $_10=($148?$145:$147);
      $172=($171)-($_10);
      $173=$145<$147;
      $174=($173?$145:$147);
      $175=(($inLow+($i_1<<3))|0);
      $176=(+(HEAPF64[(($175)>>3)]));
      $177=($174)-($176);
      $178=($172)+($177);
      $180=$178;
     } else {
      $158=(+((($155|0))|0));
      $159=(+(HEAPF64[(($18)>>3)]));
      $160=($159)/($158);
      $180=$160;
     }
    } while(0);

    $181=($153)*($180);
    $182=((HEAP32[((272)>>2)])|0);
    $183=(($182+164)|0);
    $184=((HEAP32[(($183)>>2)])|0);
    $185=($184|0)==2;
    $186=($185?(2.0):(1.0));
    $187=($181)/($186);
    $188=$151>$187;
    if (!($188)) {
     label = 36;
     break;
    }
    $190=(+(HEAPF64[(($146)>>3)]));
    $191=(($inLow+($93<<3))|0);
    $192=(+(HEAPF64[(($191)>>3)]));
    $193=$190<$192;
    if (!($193)) {
     label = 36;
     break;
    }
    $195=(+(HEAPF64[(($144)>>3)]));
    $196=(+(HEAPF64[(($96)>>3)]));
    $197=$195<$196;
    if (!($197)) {
     label = 36;
     break;
    }
    $199=(+(HEAPF64[(($94)>>3)]));
    $200=($199)-($196);
    $201=(+(Math_abs((+($200)))));
    $202=($201)*((0.5));
    $203=($199)+($202);
    $204=$195>$203;
    if (!($204)) {
     label = 36;
     break;
    }
    $206=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($206)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 36) {
   label = 0;
   $208=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($208)>>2)]=0;
  }
  $210=((HEAP32[((272)>>2)])|0);
  $211=(($210+164)|0);
  $212=((HEAP32[(($211)>>2)])|0);
  if (((($212|0))|0)==((0)|0)) {
   $213=((($i_1)-(1))|0);
   $214=(($inClose+($213<<3))|0);
   $215=(+(HEAPF64[(($214)>>3)]));
   $216=(($inOpen+($213<<3))|0);
   $217=(+(HEAPF64[(($216)>>3)]));
   $218=($215)-($217);
   $219=(+(Math_abs((+($218)))));
   $220=((($BodyLongTrailingIdx_0)-(1))|0);
   $221=(($inClose+($220<<3))|0);
   $222=(+(HEAPF64[(($221)>>3)]));
   $223=(($inOpen+($220<<3))|0);
   $224=(+(HEAPF64[(($223)>>3)]));
   $225=($222)-($224);
   $226=(+(Math_abs((+($225)))));
   $269=$226;$268=$219;
  } else if (((($212|0))|0)==((2)|0)) {
   $239=((($i_1)-(1))|0);
   $240=(($inHigh+($239<<3))|0);
   $241=(+(HEAPF64[(($240)>>3)]));
   $242=(($inClose+($239<<3))|0);
   $243=(+(HEAPF64[(($242)>>3)]));
   $244=(($inOpen+($239<<3))|0);
   $245=(+(HEAPF64[(($244)>>3)]));
   $246=$243<$245;
   $_11=($246?$245:$243);
   $247=($241)-($_11);
   $248=($246?$243:$245);
   $249=(($inLow+($239<<3))|0);
   $250=(+(HEAPF64[(($249)>>3)]));
   $251=($248)-($250);
   $252=($247)+($251);
   $253=((($BodyLongTrailingIdx_0)-(1))|0);
   $254=(($inHigh+($253<<3))|0);
   $255=(+(HEAPF64[(($254)>>3)]));
   $256=(($inClose+($253<<3))|0);
   $257=(+(HEAPF64[(($256)>>3)]));
   $258=(($inOpen+($253<<3))|0);
   $259=(+(HEAPF64[(($258)>>3)]));
   $260=$257<$259;
   $_12=($260?$259:$257);
   $261=($255)-($_12);
   $262=($260?$257:$259);
   $263=(($inLow+($253<<3))|0);
   $264=(+(HEAPF64[(($263)>>3)]));
   $265=($262)-($264);
   $266=($261)+($265);
   $269=$266;$268=$252;
  } else if (((($212|0))|0)==((1)|0)) {
   $227=((($i_1)-(1))|0);
   $228=(($inHigh+($227<<3))|0);
   $229=(+(HEAPF64[(($228)>>3)]));
   $230=(($inLow+($227<<3))|0);
   $231=(+(HEAPF64[(($230)>>3)]));
   $232=($229)-($231);
   $233=((($BodyLongTrailingIdx_0)-(1))|0);
   $234=(($inHigh+($233<<3))|0);
   $235=(+(HEAPF64[(($234)>>3)]));
   $236=(($inLow+($233<<3))|0);
   $237=(+(HEAPF64[(($236)>>3)]));
   $238=($235)-($237);
   $269=$238;$268=$232;
  } else {
   $269=0.0;$268=0.0;
  }


  $270=($268)-($269);
  $271=(($BodyLongPeriodTotal+8)|0);
  $272=(+(HEAPF64[(($271)>>3)]));
  $273=($272)+($270);
  HEAPF64[(($271)>>3)]=$273;
  if (((($212|0))|0)==((1)|0)) {
   $304=(($inHigh+($i_1<<3))|0);
   $305=(+(HEAPF64[(($304)>>3)]));
   $306=(($inLow+($i_1<<3))|0);
   $307=(+(HEAPF64[(($306)>>3)]));
   $308=($305)-($307);
   $309=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $310=(+(HEAPF64[(($309)>>3)]));
   $311=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $312=(+(HEAPF64[(($311)>>3)]));
   $313=($310)-($312);
   $328=$313;$327=$308;
  } else if (((($212|0))|0)==((2)|0)) {
   $278=(($inHigh+($i_1<<3))|0);
   $279=(+(HEAPF64[(($278)>>3)]));
   $280=(($inClose+($i_1<<3))|0);
   $281=(+(HEAPF64[(($280)>>3)]));
   $282=(($inOpen+($i_1<<3))|0);
   $283=(+(HEAPF64[(($282)>>3)]));
   $284=$281<$283;
   $_11_1=($284?$283:$281);
   $285=($279)-($_11_1);
   $286=($284?$281:$283);
   $287=(($inLow+($i_1<<3))|0);
   $288=(+(HEAPF64[(($287)>>3)]));
   $289=($286)-($288);
   $290=($285)+($289);
   $291=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $292=(+(HEAPF64[(($291)>>3)]));
   $293=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $294=(+(HEAPF64[(($293)>>3)]));
   $295=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $296=(+(HEAPF64[(($295)>>3)]));
   $297=$294<$296;
   $_12_1=($297?$296:$294);
   $298=($292)-($_12_1);
   $299=($297?$294:$296);
   $300=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $301=(+(HEAPF64[(($300)>>3)]));
   $302=($299)-($301);
   $303=($298)+($302);
   $328=$303;$327=$290;
  } else if (((($212|0))|0)==((0)|0)) {
   $314=(($inClose+($i_1<<3))|0);
   $315=(+(HEAPF64[(($314)>>3)]));
   $316=(($inOpen+($i_1<<3))|0);
   $317=(+(HEAPF64[(($316)>>3)]));
   $318=($315)-($317);
   $319=(+(Math_abs((+($318)))));
   $320=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $321=(+(HEAPF64[(($320)>>3)]));
   $322=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $323=(+(HEAPF64[(($322)>>3)]));
   $324=($321)-($323);
   $325=(+(Math_abs((+($324)))));
   $328=$325;$327=$319;
  } else {
   $328=0.0;$327=0.0;
  }


  $329=($327)-($328);
  $330=(($BodyLongPeriodTotal)|0);
  $331=(+(HEAPF64[(($330)>>3)]));
  $332=($331)+($329);
  HEAPF64[(($330)>>3)]=$332;
  $outIdx_1=((($outIdx_0)+(1))|0);
  $333=((($i_1)+(1))|0);
  $334=((($BodyLongTrailingIdx_0)+(1))|0);
  $335=($i_1|0)<($endIdx|0);
  if ($335) {
   $BodyLongTrailingIdx_0=$334;$outIdx_0=$outIdx_1;$i_1=$333;
  } else {
   break;
  }
 }
 $275=((($smax18)+(1))|0);
 $276=((($275)-($smax19))|0);
 HEAP32[(($outNBElement)>>2)]=$276;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDLRICKSHAWMAN_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$__=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+240)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+264)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=(($1+360)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($_|0)>($8|0);
 $__=($9?$_:$8);
 return (($__)|0);
}


function _TA_CDLRICKSHAWMAN($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond25=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$BodyDojiPeriodTotal_0_lcssa=.0,$31=0,$32=0,$33=0,$34=0,$i_036=0,$BodyDojiPeriodTotal_035=.0,$37=0;
 var $38=.0,$39=0,$40=.0,$41=.0,$42=.0,$44=0,$45=.0,$46=0,$47=.0,$48=.0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$_=.0,$57=.0,$58=.0;
 var $59=0,$60=.0,$61=.0,$62=.0,$64=.0,$65=.0,$66=0,$67=0,$ShadowLongPeriodTotal_0_lcssa=.0,$68=0,$69=0,$70=0,$71=0,$72=0,$smax40=0,$73=0,$smax41=0,$74=0,$75=0,$76=0;
 var $i_132=0,$ShadowLongPeriodTotal_031=.0,$79=0,$80=.0,$81=0,$82=.0,$83=.0,$84=.0,$86=0,$87=.0,$88=0,$89=.0,$90=.0,$92=0,$93=.0,$94=0,$95=.0,$96=0,$97=.0,$98=0;
 var $_8=.0,$99=.0,$100=.0,$101=0,$102=.0,$103=.0,$104=.0,$106=.0,$107=.0,$108=0,$109=0,$smax42=0,$i_2_lcssa=0,$NearPeriodTotal_0_lcssa=.0,$110=0,$smax=0,$111=0,$i_228=0,$NearPeriodTotal_027=.0,$114=0;
 var $115=.0,$116=0,$117=.0,$118=.0,$119=.0,$121=0,$122=.0,$123=0,$124=.0,$125=.0,$127=0,$128=.0,$129=0,$130=.0,$131=0,$132=.0,$133=0,$_9=.0,$134=.0,$135=.0;
 var $136=0,$137=.0,$138=.0,$139=.0,$141=.0,$142=.0,$143=0,$144=0,$BodyDojiPeriodTotal_1=.0,$ShadowLongPeriodTotal_1=.0,$NearPeriodTotal_1=.0,$i_3=0,$outIdx_0=0,$BodyDojiTrailingIdx_0=0,$ShadowLongTrailingIdx_0=0,$NearTrailingIdx_0=0,$146=0,$147=.0,$148=0,$149=.0;
 var $150=.0,$151=.0,$152=0,$153=0,$154=.0,$155=0,$156=0,$157=0,$159=.0,$160=.0,$162=0,$163=0,$165=0,$166=.0,$167=0,$168=.0,$169=.0,$171=0,$173=0,$174=.0;
 var $175=0,$_10=.0,$176=.0,$177=.0,$178=0,$179=.0,$180=.0,$181=.0,$183=.0,$184=.0,$185=0,$186=0,$187=0,$188=0,$189=.0,$190=.0,$191=0,$193=.0,$194=.0,$195=0;
 var $_11=.0,$196=0,$197=.0,$198=.0,$199=0,$200=.0,$201=0,$202=0,$203=0,$205=.0,$206=.0,$208=0,$209=0,$211=.0,$212=.0,$214=0,$215=.0,$216=.0,$218=0,$219=.0;
 var $_12=.0,$220=.0,$221=.0,$223=.0,$224=.0,$225=0,$226=0,$227=0,$228=0,$229=.0,$230=.0,$231=0,$233=0,$234=.0,$235=.0,$236=.0,$237=0,$_13=.0,$238=.0,$239=0;
 var $240=.0,$241=0,$242=0,$243=0,$245=.0,$246=.0,$249=.0,$250=.0,$252=.0,$253=.0,$255=.0,$256=.0,$257=.0,$258=.0,$260=.0,$261=.0,$262=0,$263=0,$264=0,$265=0;
 var $266=.0,$267=.0,$268=0,$270=.0,$271=.0,$272=0,$_15=.0,$273=.0,$274=.0,$275=.0,$276=.0,$277=.0,$278=0,$279=.0,$280=0,$281=0,$282=0,$284=.0,$285=.0,$287=0;
 var $288=0,$290=.0,$291=.0,$293=0,$295=0,$_16=.0,$296=.0,$297=.0,$298=.0,$299=.0,$301=.0,$302=.0,$303=0,$304=0,$305=0,$306=0,$307=.0,$308=.0,$309=.0,$310=0;
 var $312=.0,$313=.0,$314=0,$_17=.0,$315=.0,$316=.0,$317=.0,$318=.0,$319=.0,$320=0,$321=.0,$322=0,$323=0,$324=0,$326=.0,$327=.0,$330=.0,$331=.0,$334=0,$_18=.0;
 var $335=.0,$336=.0,$337=.0,$338=.0,$340=.0,$341=.0,$342=0,$343=0,$344=0,$345=0,$346=.0,$347=.0,$348=.0,$349=0,$351=0,$353=0,$outIdx_1=0,$355=0,$356=0,$357=0;
 var $359=.0,$360=.0,$361=.0,$362=.0,$364=0,$365=.0,$366=0,$367=.0,$368=.0,$370=0,$371=.0,$372=.0,$373=.0,$374=0,$_19=.0,$375=.0,$376=.0,$377=0,$378=.0,$379=.0;
 var $380=.0,$382=.0,$383=0,$384=0,$385=0,$387=0,$388=.0,$389=0,$390=.0,$391=.0,$392=.0,$394=0,$395=.0,$396=0,$397=.0,$398=.0,$400=0,$401=.0,$402=0,$403=.0;
 var $404=0,$405=.0,$406=0,$_20=.0,$407=.0,$408=.0,$409=0,$410=.0,$411=.0,$412=.0,$414=.0,$415=.0,$416=.0,$417=0,$418=0,$419=0,$421=.0,$422=.0,$423=.0,$424=.0;
 var $426=0,$427=.0,$428=0,$429=.0,$430=.0,$432=0,$433=.0,$434=.0,$435=.0,$436=0,$_21=.0,$437=.0,$438=.0,$439=0,$440=.0,$441=.0,$442=.0,$444=.0,$445=0,$446=0;
 var $447=0,$449=0,$450=.0,$451=0,$452=.0,$453=.0,$454=.0,$456=0,$457=.0,$458=0,$459=.0,$460=.0,$462=0,$463=.0,$464=0,$465=.0,$466=0,$467=.0,$468=0,$_22=.0;
 var $469=.0,$470=.0,$471=0,$472=.0,$473=.0,$474=.0,$476=.0,$477=.0,$478=.0,$479=0,$480=0,$481=0,$483=.0,$484=.0,$485=.0,$486=.0,$488=0,$489=.0,$490=0,$491=.0;
 var $492=.0,$494=0,$495=.0,$496=.0,$497=.0,$498=0,$_23=.0,$499=.0,$500=.0,$501=0,$502=.0,$503=.0,$504=.0,$506=.0,$507=0,$508=0,$509=0,$511=0,$512=.0,$513=0;
 var $514=.0,$515=.0,$516=.0,$518=0,$519=.0,$520=0,$521=.0,$522=.0,$524=0,$525=.0,$526=0,$527=.0,$528=0,$529=.0,$530=0,$_24=.0,$531=.0,$532=.0,$533=0,$534=.0;
 var $535=.0,$536=.0,$538=.0,$539=.0,$540=.0,$541=0,$542=0,$543=0,$544=0,$545=0,$547=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond25=$10|$or_cond5_not;
 if ($or_cond25) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLRICKSHAWMAN_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+240)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+264)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=(($17+360)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($_startIdx)-($25))|0);
 $27=($19|0)>0;
 if ($27) {
  $28=((HEAP32[((272)>>2)])|0);
  $29=(($28+236)|0);
  $30=((HEAP32[(($29)>>2)])|0);
  $BodyDojiPeriodTotal_035=0.0;$i_036=$20;
  while(1) {


   if (((($30|0))|0)==((0)|0)) {
    $37=(($inClose+($i_036<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=(($inOpen+($i_036<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=($38)-($40);
    $42=(+(Math_abs((+($41)))));
    $64=$42;
   } else if (((($30|0))|0)==((1)|0)) {
    $44=(($inHigh+($i_036<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=(($inLow+($i_036<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=($45)-($47);
    $64=$48;
   } else if (((($30|0))|0)==((2)|0)) {
    $50=(($inHigh+($i_036<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inClose+($i_036<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inOpen+($i_036<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=$53<$55;
    $_=($56?$55:$53);
    $57=($51)-($_);
    $58=($56?$53:$55);
    $59=(($inLow+($i_036<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=($57)+($61);
    $64=$62;
   } else {
    $64=0.0;
   }

   $65=($BodyDojiPeriodTotal_035)+($64);
   $66=((($i_036)+(1))|0);
   $67=($66|0)<($_startIdx|0);
   if ($67) {
    $BodyDojiPeriodTotal_035=$65;$i_036=$66;
   } else {
    $BodyDojiPeriodTotal_0_lcssa=$65;
    break;
   }
  }
 } else {
  $BodyDojiPeriodTotal_0_lcssa=0.0;
 }

 $31=($22|0)>0;
 if ($31) {
  $32=((HEAP32[((272)>>2)])|0);
  $33=(($32+260)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $ShadowLongPeriodTotal_031=0.0;$i_132=$23;
  while(1) {


   if (((($34|0))|0)==((2)|0)) {
    $92=(($inHigh+($i_132<<3))|0);
    $93=(+(HEAPF64[(($92)>>3)]));
    $94=(($inClose+($i_132<<3))|0);
    $95=(+(HEAPF64[(($94)>>3)]));
    $96=(($inOpen+($i_132<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=$95<$97;
    $_8=($98?$97:$95);
    $99=($93)-($_8);
    $100=($98?$95:$97);
    $101=(($inLow+($i_132<<3))|0);
    $102=(+(HEAPF64[(($101)>>3)]));
    $103=($100)-($102);
    $104=($99)+($103);
    $106=$104;
   } else if (((($34|0))|0)==((1)|0)) {
    $86=(($inHigh+($i_132<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=(($inLow+($i_132<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=($87)-($89);
    $106=$90;
   } else if (((($34|0))|0)==((0)|0)) {
    $79=(($inClose+($i_132<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=(($inOpen+($i_132<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=($80)-($82);
    $84=(+(Math_abs((+($83)))));
    $106=$84;
   } else {
    $106=0.0;
   }

   $107=($ShadowLongPeriodTotal_031)+($106);
   $108=((($i_132)+(1))|0);
   $109=($108|0)<($_startIdx|0);
   if ($109) {
    $ShadowLongPeriodTotal_031=$107;$i_132=$108;
   } else {
    $ShadowLongPeriodTotal_0_lcssa=$107;
    break;
   }
  }
 } else {
  $ShadowLongPeriodTotal_0_lcssa=0.0;
 }

 $68=($25|0)>0;
 if ($68) {
  $69=((HEAP32[((272)>>2)])|0);
  $70=(($69+356)|0);
  $71=((HEAP32[(($70)>>2)])|0);
  $72=($12|0)>($startIdx|0);
  $smax40=($72?$12:$startIdx);
  $73=($12|0)>($startIdx|0);
  $smax41=($73?$12:$startIdx);
  $74=((($smax41)+(1))|0);
  $75=((($74)-($25))|0);
  $76=($smax40|0)>($75|0);
  $NearPeriodTotal_027=0.0;$i_228=$26;
  while(1) {


   if (((($71|0))|0)==((1)|0)) {
    $121=(($inHigh+($i_228<<3))|0);
    $122=(+(HEAPF64[(($121)>>3)]));
    $123=(($inLow+($i_228<<3))|0);
    $124=(+(HEAPF64[(($123)>>3)]));
    $125=($122)-($124);
    $141=$125;
   } else if (((($71|0))|0)==((2)|0)) {
    $127=(($inHigh+($i_228<<3))|0);
    $128=(+(HEAPF64[(($127)>>3)]));
    $129=(($inClose+($i_228<<3))|0);
    $130=(+(HEAPF64[(($129)>>3)]));
    $131=(($inOpen+($i_228<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=$130<$132;
    $_9=($133?$132:$130);
    $134=($128)-($_9);
    $135=($133?$130:$132);
    $136=(($inLow+($i_228<<3))|0);
    $137=(+(HEAPF64[(($136)>>3)]));
    $138=($135)-($137);
    $139=($134)+($138);
    $141=$139;
   } else if (((($71|0))|0)==((0)|0)) {
    $114=(($inClose+($i_228<<3))|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $116=(($inOpen+($i_228<<3))|0);
    $117=(+(HEAPF64[(($116)>>3)]));
    $118=($115)-($117);
    $119=(+(Math_abs((+($118)))));
    $141=$119;
   } else {
    $141=0.0;
   }

   $142=($NearPeriodTotal_027)+($141);
   $143=((($i_228)+(1))|0);
   $144=($143|0)<($_startIdx|0);
   if ($144) {
    $NearPeriodTotal_027=$142;$i_228=$143;
   } else {
    break;
   }
  }
  $smax42=($76?$smax40:$75);
  $NearPeriodTotal_0_lcssa=$142;$i_2_lcssa=$smax42;
 } else {
  $NearPeriodTotal_0_lcssa=0.0;$i_2_lcssa=$26;
 }


 $110=($i_2_lcssa|0)>($endIdx|0);
 $smax=($110?$i_2_lcssa:$endIdx);
 $111=((($smax)+(1))|0);
 $NearTrailingIdx_0=$26;$ShadowLongTrailingIdx_0=$23;$BodyDojiTrailingIdx_0=$20;$outIdx_0=0;$i_3=$i_2_lcssa;$NearPeriodTotal_1=$NearPeriodTotal_0_lcssa;$ShadowLongPeriodTotal_1=$ShadowLongPeriodTotal_0_lcssa;$BodyDojiPeriodTotal_1=$BodyDojiPeriodTotal_0_lcssa;
 while(1) {








  $146=(($inClose+($i_3<<3))|0);
  $147=(+(HEAPF64[(($146)>>3)]));
  $148=(($inOpen+($i_3<<3))|0);
  $149=(+(HEAPF64[(($148)>>3)]));
  $150=($147)-($149);
  $151=(+(Math_abs((+($150)))));
  $152=((HEAP32[((272)>>2)])|0);
  $153=(($152+248)|0);
  $154=(+(HEAPF64[(($153)>>3)]));
  $155=(($152+240)|0);
  $156=((HEAP32[(($155)>>2)])|0);
  $157=($156|0)==0;
  do {
   if ($157) {
    $162=(($152+236)|0);
    $163=((HEAP32[(($162)>>2)])|0);
    if (((($163|0))|0)==((1)|0)) {
     $165=(($inHigh+($i_3<<3))|0);
     $166=(+(HEAPF64[(($165)>>3)]));
     $167=(($inLow+($i_3<<3))|0);
     $168=(+(HEAPF64[(($167)>>3)]));
     $169=($166)-($168);
     $183=$169;
     break;
    } else if (((($163|0))|0)==((0)|0)) {
     $183=$151;
     break;
    }
    $171=($163|0)==2;
    if (!($171)) {
     $183=0.0;
     break;
    }
    $173=(($inHigh+($i_3<<3))|0);
    $174=(+(HEAPF64[(($173)>>3)]));
    $175=$147<$149;
    $_10=($175?$149:$147);
    $176=($174)-($_10);
    $177=($175?$147:$149);
    $178=(($inLow+($i_3<<3))|0);
    $179=(+(HEAPF64[(($178)>>3)]));
    $180=($177)-($179);
    $181=($176)+($180);
    $183=$181;
   } else {
    $159=(+((($156|0))|0));
    $160=($BodyDojiPeriodTotal_1)/($159);
    $183=$160;
   }
  } while(0);

  $184=($154)*($183);
  $185=((HEAP32[((272)>>2)])|0);
  $186=(($185+236)|0);
  $187=((HEAP32[(($186)>>2)])|0);
  $188=($187|0)==2;
  $189=($188?(2.0):(1.0));
  $190=($184)/($189);
  $191=$151>$190;
  do {
   if ($191) {
    label = 65;
   } else {
    $193=(+(HEAPF64[(($146)>>3)]));
    $194=(+(HEAPF64[(($148)>>3)]));
    $195=$193<$194;
    $_11=($195?$193:$194);
    $196=(($inLow+($i_3<<3))|0);
    $197=(+(HEAPF64[(($196)>>3)]));
    $198=($_11)-($197);
    $199=(($185+272)|0);
    $200=(+(HEAPF64[(($199)>>3)]));
    $201=(($185+264)|0);
    $202=((HEAP32[(($201)>>2)])|0);
    $203=($202|0)==0;
    do {
     if ($203) {
      $208=(($185+260)|0);
      $209=((HEAP32[(($208)>>2)])|0);
      if (((($209|0))|0)==((2)|0)) {
       $218=(($inHigh+($i_3<<3))|0);
       $219=(+(HEAPF64[(($218)>>3)]));
       $_12=($195?$194:$193);
       $220=($219)-($_12);
       $221=($198)+($220);
       $223=$221;
       break;
      } else if (((($209|0))|0)==((0)|0)) {
       $211=($193)-($194);
       $212=(+(Math_abs((+($211)))));
       $223=$212;
       break;
      } else if (((($209|0))|0)==((1)|0)) {
       $214=(($inHigh+($i_3<<3))|0);
       $215=(+(HEAPF64[(($214)>>3)]));
       $216=($215)-($197);
       $223=$216;
       break;
      } else {
       $223=0.0;
       break;
      }
     } else {
      $205=(+((($202|0))|0));
      $206=($ShadowLongPeriodTotal_1)/($205);
      $223=$206;
     }
    } while(0);

    $224=($200)*($223);
    $225=((HEAP32[((272)>>2)])|0);
    $226=(($225+260)|0);
    $227=((HEAP32[(($226)>>2)])|0);
    $228=($227|0)==2;
    $229=($228?(2.0):(1.0));
    $230=($224)/($229);
    $231=$198>$230;
    if (!($231)) {
     label = 65;
     break;
    }
    $233=(($inHigh+($i_3<<3))|0);
    $234=(+(HEAPF64[(($233)>>3)]));
    $235=(+(HEAPF64[(($146)>>3)]));
    $236=(+(HEAPF64[(($148)>>3)]));
    $237=$235<$236;
    $_13=($237?$236:$235);
    $238=($234)-($_13);
    $239=(($225+272)|0);
    $240=(+(HEAPF64[(($239)>>3)]));
    $241=(($225+264)|0);
    $242=((HEAP32[(($241)>>2)])|0);
    $243=($242|0)==0;
    do {
     if ($243) {
      if (((($227|0))|0)==((2)|0)) {
       $255=($237?$235:$236);
       $256=(+(HEAPF64[(($196)>>3)]));
       $257=($255)-($256);
       $258=($238)+($257);
       $260=$258;
       break;
      } else if (((($227|0))|0)==((0)|0)) {
       $249=($235)-($236);
       $250=(+(Math_abs((+($249)))));
       $260=$250;
       break;
      } else if (((($227|0))|0)==((1)|0)) {
       $252=(+(HEAPF64[(($196)>>3)]));
       $253=($234)-($252);
       $260=$253;
       break;
      } else {
       $260=0.0;
       break;
      }
     } else {
      $245=(+((($242|0))|0));
      $246=($ShadowLongPeriodTotal_1)/($245);
      $260=$246;
     }
    } while(0);

    $261=($240)*($260);
    $262=((HEAP32[((272)>>2)])|0);
    $263=(($262+260)|0);
    $264=((HEAP32[(($263)>>2)])|0);
    $265=($264|0)==2;
    $266=($265?(2.0):(1.0));
    $267=($261)/($266);
    $268=$238>$267;
    if (!($268)) {
     label = 65;
     break;
    }
    $270=(+(HEAPF64[(($148)>>3)]));
    $271=(+(HEAPF64[(($146)>>3)]));
    $272=$270<$271;
    $_15=($272?$270:$271);
    $273=(+(HEAPF64[(($196)>>3)]));
    $274=(+(HEAPF64[(($233)>>3)]));
    $275=($274)-($273);
    $276=($275)*((0.5));
    $277=($273)+($276);
    $278=(($262+368)|0);
    $279=(+(HEAPF64[(($278)>>3)]));
    $280=(($262+360)|0);
    $281=((HEAP32[(($280)>>2)])|0);
    $282=($281|0)==0;
    do {
     if ($282) {
      $287=(($262+356)|0);
      $288=((HEAP32[(($287)>>2)])|0);
      if (((($288|0))|0)==((0)|0)) {
       $290=($271)-($270);
       $291=(+(Math_abs((+($290)))));
       $301=$291;
       break;
      } else if (((($288|0))|0)==((1)|0)) {
       $301=$275;
       break;
      }
      $293=($288|0)==2;
      if (!($293)) {
       $301=0.0;
       break;
      }
      $295=$271<$270;
      $_16=($295?$270:$271);
      $296=($274)-($_16);
      $297=($295?$271:$270);
      $298=($297)-($273);
      $299=($296)+($298);
      $301=$299;
     } else {
      $284=(+((($281|0))|0));
      $285=($NearPeriodTotal_1)/($284);
      $301=$285;
     }
    } while(0);

    $302=($279)*($301);
    $303=((HEAP32[((272)>>2)])|0);
    $304=(($303+356)|0);
    $305=((HEAP32[(($304)>>2)])|0);
    $306=($305|0)==2;
    $307=($306?(2.0):(1.0));
    $308=($302)/($307);
    $309=($277)+($308);
    $310=$_15>$309;
    if ($310) {
     label = 65;
     break;
    }
    $312=(+(HEAPF64[(($148)>>3)]));
    $313=(+(HEAPF64[(($146)>>3)]));
    $314=$312>$313;
    $_17=($314?$312:$313);
    $315=(+(HEAPF64[(($196)>>3)]));
    $316=(+(HEAPF64[(($233)>>3)]));
    $317=($316)-($315);
    $318=($317)*((0.5));
    $319=($315)+($318);
    $320=(($303+368)|0);
    $321=(+(HEAPF64[(($320)>>3)]));
    $322=(($303+360)|0);
    $323=((HEAP32[(($322)>>2)])|0);
    $324=($323|0)==0;
    do {
     if ($324) {
      if (((($305|0))|0)==((1)|0)) {
       $340=$317;
       break;
      } else if (((($305|0))|0)==((0)|0)) {
       $330=($313)-($312);
       $331=(+(Math_abs((+($330)))));
       $340=$331;
       break;
      }
      if (!($306)) {
       $340=0.0;
       break;
      }
      $334=$313<$312;
      $_18=($334?$312:$313);
      $335=($316)-($_18);
      $336=($334?$313:$312);
      $337=($336)-($315);
      $338=($335)+($337);
      $340=$338;
     } else {
      $326=(+((($323|0))|0));
      $327=($NearPeriodTotal_1)/($326);
      $340=$327;
     }
    } while(0);

    $341=($321)*($340);
    $342=((HEAP32[((272)>>2)])|0);
    $343=(($342+356)|0);
    $344=((HEAP32[(($343)>>2)])|0);
    $345=($344|0)==2;
    $346=($345?(2.0):(1.0));
    $347=($341)/($346);
    $348=($319)-($347);
    $349=$_17<$348;
    if ($349) {
     label = 65;
     break;
    }
    $351=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($351)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 65) {
   label = 0;
   $353=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($353)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $355=((HEAP32[((272)>>2)])|0);
  $356=(($355+236)|0);
  $357=((HEAP32[(($356)>>2)])|0);
  if (((($357|0))|0)==((1)|0)) {
   $364=(($inHigh+($i_3<<3))|0);
   $365=(+(HEAPF64[(($364)>>3)]));
   $366=(($inLow+($i_3<<3))|0);
   $367=(+(HEAPF64[(($366)>>3)]));
   $368=($365)-($367);
   $382=$368;
  } else if (((($357|0))|0)==((2)|0)) {
   $370=(($inHigh+($i_3<<3))|0);
   $371=(+(HEAPF64[(($370)>>3)]));
   $372=(+(HEAPF64[(($146)>>3)]));
   $373=(+(HEAPF64[(($148)>>3)]));
   $374=$372<$373;
   $_19=($374?$373:$372);
   $375=($371)-($_19);
   $376=($374?$372:$373);
   $377=(($inLow+($i_3<<3))|0);
   $378=(+(HEAPF64[(($377)>>3)]));
   $379=($376)-($378);
   $380=($375)+($379);
   $382=$380;
  } else if (((($357|0))|0)==((0)|0)) {
   $359=(+(HEAPF64[(($146)>>3)]));
   $360=(+(HEAPF64[(($148)>>3)]));
   $361=($359)-($360);
   $362=(+(Math_abs((+($361)))));
   $382=$362;
  } else {
   $382=0.0;
  }

  $383=((HEAP32[((272)>>2)])|0);
  $384=(($383+236)|0);
  $385=((HEAP32[(($384)>>2)])|0);
  if (((($385|0))|0)==((0)|0)) {
   $387=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $388=(+(HEAPF64[(($387)>>3)]));
   $389=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $390=(+(HEAPF64[(($389)>>3)]));
   $391=($388)-($390);
   $392=(+(Math_abs((+($391)))));
   $414=$392;
  } else if (((($385|0))|0)==((1)|0)) {
   $394=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $395=(+(HEAPF64[(($394)>>3)]));
   $396=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $397=(+(HEAPF64[(($396)>>3)]));
   $398=($395)-($397);
   $414=$398;
  } else if (((($385|0))|0)==((2)|0)) {
   $400=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $401=(+(HEAPF64[(($400)>>3)]));
   $402=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $403=(+(HEAPF64[(($402)>>3)]));
   $404=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $405=(+(HEAPF64[(($404)>>3)]));
   $406=$403<$405;
   $_20=($406?$405:$403);
   $407=($401)-($_20);
   $408=($406?$403:$405);
   $409=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $410=(+(HEAPF64[(($409)>>3)]));
   $411=($408)-($410);
   $412=($407)+($411);
   $414=$412;
  } else {
   $414=0.0;
  }

  $415=($382)-($414);
  $416=($BodyDojiPeriodTotal_1)+($415);
  $417=((HEAP32[((272)>>2)])|0);
  $418=(($417+260)|0);
  $419=((HEAP32[(($418)>>2)])|0);
  if (((($419|0))|0)==((0)|0)) {
   $421=(+(HEAPF64[(($146)>>3)]));
   $422=(+(HEAPF64[(($148)>>3)]));
   $423=($421)-($422);
   $424=(+(Math_abs((+($423)))));
   $444=$424;
  } else if (((($419|0))|0)==((1)|0)) {
   $426=(($inHigh+($i_3<<3))|0);
   $427=(+(HEAPF64[(($426)>>3)]));
   $428=(($inLow+($i_3<<3))|0);
   $429=(+(HEAPF64[(($428)>>3)]));
   $430=($427)-($429);
   $444=$430;
  } else if (((($419|0))|0)==((2)|0)) {
   $432=(($inHigh+($i_3<<3))|0);
   $433=(+(HEAPF64[(($432)>>3)]));
   $434=(+(HEAPF64[(($146)>>3)]));
   $435=(+(HEAPF64[(($148)>>3)]));
   $436=$434<$435;
   $_21=($436?$435:$434);
   $437=($433)-($_21);
   $438=($436?$434:$435);
   $439=(($inLow+($i_3<<3))|0);
   $440=(+(HEAPF64[(($439)>>3)]));
   $441=($438)-($440);
   $442=($437)+($441);
   $444=$442;
  } else {
   $444=0.0;
  }

  $445=((HEAP32[((272)>>2)])|0);
  $446=(($445+260)|0);
  $447=((HEAP32[(($446)>>2)])|0);
  if (((($447|0))|0)==((2)|0)) {
   $462=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $463=(+(HEAPF64[(($462)>>3)]));
   $464=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $465=(+(HEAPF64[(($464)>>3)]));
   $466=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $467=(+(HEAPF64[(($466)>>3)]));
   $468=$465<$467;
   $_22=($468?$467:$465);
   $469=($463)-($_22);
   $470=($468?$465:$467);
   $471=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $472=(+(HEAPF64[(($471)>>3)]));
   $473=($470)-($472);
   $474=($469)+($473);
   $476=$474;
  } else if (((($447|0))|0)==((0)|0)) {
   $449=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $450=(+(HEAPF64[(($449)>>3)]));
   $451=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $452=(+(HEAPF64[(($451)>>3)]));
   $453=($450)-($452);
   $454=(+(Math_abs((+($453)))));
   $476=$454;
  } else if (((($447|0))|0)==((1)|0)) {
   $456=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $457=(+(HEAPF64[(($456)>>3)]));
   $458=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $459=(+(HEAPF64[(($458)>>3)]));
   $460=($457)-($459);
   $476=$460;
  } else {
   $476=0.0;
  }

  $477=($444)-($476);
  $478=($ShadowLongPeriodTotal_1)+($477);
  $479=((HEAP32[((272)>>2)])|0);
  $480=(($479+356)|0);
  $481=((HEAP32[(($480)>>2)])|0);
  if (((($481|0))|0)==((2)|0)) {
   $494=(($inHigh+($i_3<<3))|0);
   $495=(+(HEAPF64[(($494)>>3)]));
   $496=(+(HEAPF64[(($146)>>3)]));
   $497=(+(HEAPF64[(($148)>>3)]));
   $498=$496<$497;
   $_23=($498?$497:$496);
   $499=($495)-($_23);
   $500=($498?$496:$497);
   $501=(($inLow+($i_3<<3))|0);
   $502=(+(HEAPF64[(($501)>>3)]));
   $503=($500)-($502);
   $504=($499)+($503);
   $506=$504;
  } else if (((($481|0))|0)==((0)|0)) {
   $483=(+(HEAPF64[(($146)>>3)]));
   $484=(+(HEAPF64[(($148)>>3)]));
   $485=($483)-($484);
   $486=(+(Math_abs((+($485)))));
   $506=$486;
  } else if (((($481|0))|0)==((1)|0)) {
   $488=(($inHigh+($i_3<<3))|0);
   $489=(+(HEAPF64[(($488)>>3)]));
   $490=(($inLow+($i_3<<3))|0);
   $491=(+(HEAPF64[(($490)>>3)]));
   $492=($489)-($491);
   $506=$492;
  } else {
   $506=0.0;
  }

  $507=((HEAP32[((272)>>2)])|0);
  $508=(($507+356)|0);
  $509=((HEAP32[(($508)>>2)])|0);
  if (((($509|0))|0)==((2)|0)) {
   $524=(($inHigh+($NearTrailingIdx_0<<3))|0);
   $525=(+(HEAPF64[(($524)>>3)]));
   $526=(($inClose+($NearTrailingIdx_0<<3))|0);
   $527=(+(HEAPF64[(($526)>>3)]));
   $528=(($inOpen+($NearTrailingIdx_0<<3))|0);
   $529=(+(HEAPF64[(($528)>>3)]));
   $530=$527<$529;
   $_24=($530?$529:$527);
   $531=($525)-($_24);
   $532=($530?$527:$529);
   $533=(($inLow+($NearTrailingIdx_0<<3))|0);
   $534=(+(HEAPF64[(($533)>>3)]));
   $535=($532)-($534);
   $536=($531)+($535);
   $538=$536;
  } else if (((($509|0))|0)==((0)|0)) {
   $511=(($inClose+($NearTrailingIdx_0<<3))|0);
   $512=(+(HEAPF64[(($511)>>3)]));
   $513=(($inOpen+($NearTrailingIdx_0<<3))|0);
   $514=(+(HEAPF64[(($513)>>3)]));
   $515=($512)-($514);
   $516=(+(Math_abs((+($515)))));
   $538=$516;
  } else if (((($509|0))|0)==((1)|0)) {
   $518=(($inHigh+($NearTrailingIdx_0<<3))|0);
   $519=(+(HEAPF64[(($518)>>3)]));
   $520=(($inLow+($NearTrailingIdx_0<<3))|0);
   $521=(+(HEAPF64[(($520)>>3)]));
   $522=($519)-($521);
   $538=$522;
  } else {
   $538=0.0;
  }

  $539=($506)-($538);
  $540=($NearPeriodTotal_1)+($539);
  $541=((($i_3)+(1))|0);
  $542=((($BodyDojiTrailingIdx_0)+(1))|0);
  $543=((($ShadowLongTrailingIdx_0)+(1))|0);
  $544=((($NearTrailingIdx_0)+(1))|0);
  $545=($i_3|0)<($endIdx|0);
  if ($545) {
   $NearTrailingIdx_0=$544;$ShadowLongTrailingIdx_0=$543;$BodyDojiTrailingIdx_0=$542;$outIdx_0=$outIdx_1;$i_3=$541;$NearPeriodTotal_1=$540;$ShadowLongPeriodTotal_1=$478;$BodyDojiPeriodTotal_1=$416;
  } else {
   break;
  }
 }
 $547=((($111)-($i_2_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$547;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLRISEFALL3METHODS_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(4))|0);
 return (($7)|0);
}


function _TA_CDLRISEFALL3METHODS($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $BodyPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond29=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$_promoted40=.0,$_promoted41=.0,$_promoted42=.0,$34=0;
 var $35=0,$36=0,$37=0,$_promoted=.0,$_promoted35=.0,$39=.0,$40=.0,$41=.0,$i_038=0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$48=.0,$49=0,$50=0,$51=.0,$52=0;
 var $53=.0,$54=.0,$55=.0,$56=0,$57=0,$58=.0,$59=0,$60=.0,$61=.0,$62=.0,$63=0,$64=0,$65=.0,$66=0,$67=.0,$68=.0,$69=0,$70=0,$71=.0,$72=0;
 var $73=.0,$74=.0,$75=0,$76=0,$77=.0,$78=0,$79=.0,$80=.0,$81=0,$82=0,$83=.0,$84=0,$85=.0,$86=0,$87=.0,$88=0,$_=.0,$89=.0,$90=.0,$91=0;
 var $92=.0,$93=.0,$94=.0,$95=0,$96=0,$97=.0,$98=0,$99=.0,$100=0,$101=.0,$102=0,$_8=.0,$103=.0,$104=.0,$105=0,$106=.0,$107=.0,$108=.0,$109=0,$110=0;
 var $111=.0,$112=0,$113=.0,$114=0,$115=.0,$116=0,$_9=.0,$117=.0,$118=.0,$119=0,$120=.0,$121=.0,$122=.0,$_pn60=.0,$_pn61=.0,$125=.0,$126=.0,$127=.0,$128=.0,$129=0;
 var $130=0,$131=0,$smax=0,$132=0,$smax46=0,$133=0,$smax47=0,$135=.0,$136=.0,$i_134=0,$137=0,$138=0,$139=.0,$140=0,$141=.0,$142=.0,$143=.0,$144=0,$145=.0,$146=0;
 var $147=.0,$148=.0,$149=.0,$150=0,$151=0,$152=.0,$153=0,$154=.0,$155=.0,$156=0,$157=.0,$158=0,$159=.0,$160=.0,$161=0,$162=0,$163=.0,$164=0,$165=.0,$166=0;
 var $167=.0,$168=0,$_10=.0,$169=.0,$170=.0,$171=0,$172=.0,$173=.0,$174=.0,$175=0,$176=.0,$177=0,$178=.0,$179=0,$180=.0,$181=0,$_11=.0,$182=.0,$183=.0,$184=0;
 var $185=.0,$186=.0,$187=.0,$_pn=.0,$190=.0,$191=.0,$192=.0,$193=0,$194=0,$i_2=0,$outIdx_0=0,$BodyShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$196=0,$197=0,$198=.0,$199=0,$200=.0,$201=.0,$202=.0;
 var $203=0,$204=0,$205=.0,$206=0,$207=0,$208=0,$210=.0,$211=.0,$212=.0,$214=0,$215=0,$217=0,$218=.0,$219=0,$220=.0,$221=.0,$223=0,$225=0,$226=.0,$227=0;
 var $_12=.0,$228=.0,$229=.0,$230=0,$231=.0,$232=.0,$233=.0,$235=.0,$236=.0,$237=0,$238=0,$239=0,$240=0,$241=.0,$242=.0,$243=0,$245=0,$246=0,$247=.0,$248=0;
 var $249=.0,$250=.0,$251=.0,$252=0,$253=.0,$254=0,$255=0,$256=0,$258=.0,$259=.0,$260=.0,$262=0,$263=0,$265=0,$266=.0,$267=0,$268=.0,$269=.0,$271=0,$273=0;
 var $274=.0,$275=0,$_13=.0,$276=.0,$277=.0,$278=0,$279=.0,$280=.0,$281=.0,$283=.0,$284=.0,$285=0,$286=0,$287=0,$288=0,$289=.0,$290=.0,$291=0,$293=0,$294=0;
 var $295=.0,$296=0,$297=.0,$298=.0,$299=.0,$300=0,$301=.0,$302=0,$303=0,$304=0,$306=.0,$307=.0,$308=.0,$311=0,$312=.0,$313=0,$314=.0,$315=.0,$318=0,$319=.0;
 var $320=0,$_14=.0,$321=.0,$322=.0,$323=0,$324=.0,$325=.0,$326=.0,$328=.0,$329=.0,$330=0,$331=0,$332=0,$333=0,$334=.0,$335=.0,$336=0,$338=0,$339=0,$340=.0;
 var $341=0,$342=.0,$343=.0,$344=.0,$345=0,$346=.0,$347=0,$348=0,$349=0,$351=.0,$352=.0,$353=.0,$356=0,$357=.0,$358=0,$359=.0,$360=.0,$363=0,$364=.0,$365=0;
 var $_15=.0,$366=.0,$367=.0,$368=0,$369=.0,$370=.0,$371=.0,$373=.0,$374=.0,$375=0,$376=0,$377=0,$378=0,$379=.0,$380=.0,$381=0,$383=0,$384=.0,$385=0,$386=.0;
 var $387=.0,$388=.0,$389=0,$390=.0,$391=0,$392=0,$393=0,$395=.0,$396=.0,$397=.0,$399=0,$400=0,$402=0,$403=.0,$404=0,$405=.0,$406=.0,$408=0,$410=0,$411=.0;
 var $412=0,$_16=.0,$413=.0,$414=.0,$415=0,$416=.0,$417=.0,$418=.0,$420=.0,$421=.0,$422=0,$423=0,$424=0,$425=0,$426=.0,$427=.0,$428=0,$430=.0,$431=.0,$432=0;
 var $433=0,$434=.0,$435=.0,$436=0,$437=0,$438=0,$439=0,$441=.0,$442=.0,$443=0,$444=0,$445=0,$447=.0,$448=.0,$449=0,$450=0,$451=0,$453=.0,$454=.0,$455=0;
 var $456=0,$457=0,$459=0,$_17=.0,$460=0,$461=.0,$462=0,$464=0,$_18=.0,$465=0,$466=.0,$467=0,$469=0,$_19=.0,$470=0,$472=0,$_20=.0,$473=0,$475=0,$_21=.0;
 var $476=0,$478=0,$_22=.0,$479=0,$481=.0,$482=.0,$483=.0,$484=0,$486=.0,$487=0,$488=.0,$489=0,$or_cond31=0,$491=.0,$492=.0,$493=0,$495=0,$496=0,$498=0,$outIdx_1=0;
 var $500=0,$501=0,$502=0,$504=.0,$505=.0,$506=.0,$507=.0,$509=0,$510=.0,$511=0,$512=.0,$513=.0,$515=0,$516=.0,$517=.0,$518=.0,$519=0,$_23=.0,$520=.0,$521=.0;
 var $522=0,$523=.0,$524=.0,$525=.0,$527=.0,$528=0,$529=0,$530=0,$532=0,$533=0,$534=.0,$535=0,$536=.0,$537=.0,$538=.0,$540=0,$541=0,$542=.0,$543=0,$544=.0;
 var $545=.0,$547=0,$548=0,$549=.0,$550=0,$551=.0,$552=0,$553=.0,$554=0,$_24=.0,$555=.0,$556=.0,$557=0,$558=.0,$559=.0,$560=.0,$562=.0,$563=.0,$564=.0,$565=.0;
 var $566=0,$567=0,$568=0,$totIdx_032=0,$570=0,$571=0,$573=0,$574=0,$575=.0,$576=0,$577=.0,$578=.0,$579=.0,$581=0,$582=0,$583=.0,$584=0,$585=.0,$586=.0,$588=0;
 var $589=0,$590=.0,$591=0,$592=.0,$593=0,$594=.0,$595=0,$_25=.0,$596=.0,$597=.0,$598=0,$599=.0,$600=.0,$601=.0,$603=.0,$605=0,$606=0,$607=.0,$608=0,$609=.0;
 var $610=.0,$611=.0,$613=0,$614=0,$615=.0,$616=0,$617=.0,$618=.0,$620=0,$621=0,$622=.0,$623=0,$624=.0,$625=0,$626=.0,$627=0,$_26=.0,$628=.0,$629=.0,$630=0;
 var $631=.0,$632=.0,$633=.0,$635=.0,$636=.0,$637=0,$638=.0,$639=.0,$640=0,$641=0,$643=0,$644=0,$646=0,$647=.0,$648=0,$649=.0,$650=.0,$651=.0,$653=0,$654=.0;
 var $655=0,$656=.0,$657=.0,$659=0,$660=.0,$661=0,$662=.0,$663=0,$664=.0,$665=0,$_27=.0,$666=.0,$667=.0,$668=0,$669=.0,$670=.0,$671=.0,$673=.0,$674=0,$675=0;
 var $676=0,$678=0,$679=.0,$680=0,$681=.0,$682=.0,$683=.0,$685=0,$686=.0,$687=0,$688=.0,$689=.0,$691=0,$692=.0,$693=0,$694=.0,$695=0,$696=.0,$697=0,$_28=.0;
 var $698=.0,$699=.0,$700=0,$701=.0,$702=.0,$703=.0,$705=.0,$706=.0,$707=.0,$708=.0,$709=0,$710=0,$711=0,$712=0,$714=0,$715=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+40)|0;
 $BodyPeriodTotal=((sp)|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond29=$10|$or_cond5_not;
 if ($or_cond29) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDLRISEFALL3METHODS_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=(($BodyPeriodTotal+32)|0);
 $18=(($BodyPeriodTotal+24)|0);
 $19=(($BodyPeriodTotal+16)|0);
 $20=(($BodyPeriodTotal+8)|0);
 $21=(($BodyPeriodTotal)|0);
 $22=$BodyPeriodTotal;
 _memset((((($22)|0))|0), ((((0)|0))|0), ((((40)|0))|0))|0;
 $23=((HEAP32[((272)>>2)])|0);
 $24=(($23+216)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($_startIdx)-($25))|0);
 $27=(($23+168)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 $29=((($_startIdx)-($28))|0);
 $30=($25|0)>0;
 if ($30) {
  $31=((HEAP32[((272)>>2)])|0);
  $32=(($31+212)|0);
  $33=((HEAP32[(($32)>>2)])|0);
  $_promoted40=(+(HEAPF64[(($18)>>3)]));
  $_promoted41=(+(HEAPF64[(($19)>>3)]));
  $_promoted42=(+(HEAPF64[(($20)>>3)]));
  $i_038=$26;$41=$_promoted40;$40=$_promoted41;$39=$_promoted42;
  while(1) {




   if (((($33|0))|0)==((0)|0)) {
    $42=((($i_038)-(3))|0);
    $43=(($inClose+($42<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=(($inOpen+($42<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=($44)-($46);
    $48=(+(Math_abs((+($47)))));
    $49=((($i_038)-(2))|0);
    $50=(($inClose+($49<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inOpen+($49<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=($51)-($53);
    $55=(+(Math_abs((+($54)))));
    $56=((($i_038)-(1))|0);
    $57=(($inClose+($56<<3))|0);
    $58=(+(HEAPF64[(($57)>>3)]));
    $59=(($inOpen+($56<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=(+(Math_abs((+($61)))));
    $125=$62;$_pn61=$48;$_pn60=$55;
   } else if (((($33|0))|0)==((2)|0)) {
    $81=((($i_038)-(3))|0);
    $82=(($inHigh+($81<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inClose+($81<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=(($inOpen+($81<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=$85<$87;
    $_=($88?$87:$85);
    $89=($83)-($_);
    $90=($88?$85:$87);
    $91=(($inLow+($81<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=($90)-($92);
    $94=($89)+($93);
    $95=((($i_038)-(2))|0);
    $96=(($inHigh+($95<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=(($inClose+($95<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=(($inOpen+($95<<3))|0);
    $101=(+(HEAPF64[(($100)>>3)]));
    $102=$99<$101;
    $_8=($102?$101:$99);
    $103=($97)-($_8);
    $104=($102?$99:$101);
    $105=(($inLow+($95<<3))|0);
    $106=(+(HEAPF64[(($105)>>3)]));
    $107=($104)-($106);
    $108=($103)+($107);
    $109=((($i_038)-(1))|0);
    $110=(($inHigh+($109<<3))|0);
    $111=(+(HEAPF64[(($110)>>3)]));
    $112=(($inClose+($109<<3))|0);
    $113=(+(HEAPF64[(($112)>>3)]));
    $114=(($inOpen+($109<<3))|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $116=$113<$115;
    $_9=($116?$115:$113);
    $117=($111)-($_9);
    $118=($116?$113:$115);
    $119=(($inLow+($109<<3))|0);
    $120=(+(HEAPF64[(($119)>>3)]));
    $121=($118)-($120);
    $122=($117)+($121);
    $125=$122;$_pn61=$94;$_pn60=$108;
   } else if (((($33|0))|0)==((1)|0)) {
    $63=((($i_038)-(3))|0);
    $64=(($inHigh+($63<<3))|0);
    $65=(+(HEAPF64[(($64)>>3)]));
    $66=(($inLow+($63<<3))|0);
    $67=(+(HEAPF64[(($66)>>3)]));
    $68=($65)-($67);
    $69=((($i_038)-(2))|0);
    $70=(($inHigh+($69<<3))|0);
    $71=(+(HEAPF64[(($70)>>3)]));
    $72=(($inLow+($69<<3))|0);
    $73=(+(HEAPF64[(($72)>>3)]));
    $74=($71)-($73);
    $75=((($i_038)-(1))|0);
    $76=(($inHigh+($75<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=(($inLow+($75<<3))|0);
    $79=(+(HEAPF64[(($78)>>3)]));
    $80=($77)-($79);
    $125=$80;$_pn61=$68;$_pn60=$74;
   } else {
    $125=0.0;$_pn61=0.0;$_pn60=0.0;
   }



   $126=($_pn61)+($41);
   $127=($_pn60)+($40);
   $128=($125)+($39);
   $129=((($i_038)+(1))|0);
   $130=($129|0)<($_startIdx|0);
   if ($130) {
    $i_038=$129;$41=$126;$40=$127;$39=$128;
   } else {
    break;
   }
  }
  HEAPF64[(($18)>>3)]=$126;
  HEAPF64[(($19)>>3)]=$127;
  HEAPF64[(($20)>>3)]=$128;
 }
 $34=($28|0)>0;
 if ($34) {
  $35=((HEAP32[((272)>>2)])|0);
  $36=(($35+164)|0);
  $37=((HEAP32[(($36)>>2)])|0);
  $_promoted=(+(HEAPF64[(($17)>>3)]));
  $_promoted35=(+(HEAPF64[(($21)>>3)]));
  $i_134=$29;$136=$_promoted;$135=$_promoted35;
  while(1) {



   if (((($37|0))|0)==((1)|0)) {
    $150=((($i_134)-(4))|0);
    $151=(($inHigh+($150<<3))|0);
    $152=(+(HEAPF64[(($151)>>3)]));
    $153=(($inLow+($150<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=($152)-($154);
    $156=(($inHigh+($i_134<<3))|0);
    $157=(+(HEAPF64[(($156)>>3)]));
    $158=(($inLow+($i_134<<3))|0);
    $159=(+(HEAPF64[(($158)>>3)]));
    $160=($157)-($159);
    $190=$160;$_pn=$155;
   } else if (((($37|0))|0)==((0)|0)) {
    $137=((($i_134)-(4))|0);
    $138=(($inClose+($137<<3))|0);
    $139=(+(HEAPF64[(($138)>>3)]));
    $140=(($inOpen+($137<<3))|0);
    $141=(+(HEAPF64[(($140)>>3)]));
    $142=($139)-($141);
    $143=(+(Math_abs((+($142)))));
    $144=(($inClose+($i_134<<3))|0);
    $145=(+(HEAPF64[(($144)>>3)]));
    $146=(($inOpen+($i_134<<3))|0);
    $147=(+(HEAPF64[(($146)>>3)]));
    $148=($145)-($147);
    $149=(+(Math_abs((+($148)))));
    $190=$149;$_pn=$143;
   } else if (((($37|0))|0)==((2)|0)) {
    $161=((($i_134)-(4))|0);
    $162=(($inHigh+($161<<3))|0);
    $163=(+(HEAPF64[(($162)>>3)]));
    $164=(($inClose+($161<<3))|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    $166=(($inOpen+($161<<3))|0);
    $167=(+(HEAPF64[(($166)>>3)]));
    $168=$165<$167;
    $_10=($168?$167:$165);
    $169=($163)-($_10);
    $170=($168?$165:$167);
    $171=(($inLow+($161<<3))|0);
    $172=(+(HEAPF64[(($171)>>3)]));
    $173=($170)-($172);
    $174=($169)+($173);
    $175=(($inHigh+($i_134<<3))|0);
    $176=(+(HEAPF64[(($175)>>3)]));
    $177=(($inClose+($i_134<<3))|0);
    $178=(+(HEAPF64[(($177)>>3)]));
    $179=(($inOpen+($i_134<<3))|0);
    $180=(+(HEAPF64[(($179)>>3)]));
    $181=$178<$180;
    $_11=($181?$180:$178);
    $182=($176)-($_11);
    $183=($181?$178:$180);
    $184=(($inLow+($i_134<<3))|0);
    $185=(+(HEAPF64[(($184)>>3)]));
    $186=($183)-($185);
    $187=($182)+($186);
    $190=$187;$_pn=$174;
   } else {
    $190=0.0;$_pn=0.0;
   }


   $191=($_pn)+($136);
   $192=($190)+($135);
   $193=((($i_134)+(1))|0);
   $194=($193|0)<($_startIdx|0);
   if ($194) {
    $i_134=$193;$136=$191;$135=$192;
   } else {
    break;
   }
  }
  HEAPF64[(($17)>>3)]=$191;
  HEAPF64[(($21)>>3)]=$192;
 }
 $131=($12|0)>($endIdx|0);
 $smax=($131?$12:$endIdx);
 $132=($smax|0)>($startIdx|0);
 $smax46=($132?$smax:$startIdx);
 $133=($12|0)>($startIdx|0);
 $smax47=($133?$12:$startIdx);
 $BodyLongTrailingIdx_0=$29;$BodyShortTrailingIdx_0=$26;$outIdx_0=0;$i_2=$_startIdx;
 while(1) {




  $196=((($i_2)-(4))|0);
  $197=(($inClose+($196<<3))|0);
  $198=(+(HEAPF64[(($197)>>3)]));
  $199=(($inOpen+($196<<3))|0);
  $200=(+(HEAPF64[(($199)>>3)]));
  $201=($198)-($200);
  $202=(+(Math_abs((+($201)))));
  $203=((HEAP32[((272)>>2)])|0);
  $204=(($203+176)|0);
  $205=(+(HEAPF64[(($204)>>3)]));
  $206=(($203+168)|0);
  $207=((HEAP32[(($206)>>2)])|0);
  $208=($207|0)==0;
  do {
   if ($208) {
    $214=(($203+164)|0);
    $215=((HEAP32[(($214)>>2)])|0);
    if (((($215|0))|0)==((0)|0)) {
     $235=$202;
     break;
    } else if (((($215|0))|0)==((1)|0)) {
     $217=(($inHigh+($196<<3))|0);
     $218=(+(HEAPF64[(($217)>>3)]));
     $219=(($inLow+($196<<3))|0);
     $220=(+(HEAPF64[(($219)>>3)]));
     $221=($218)-($220);
     $235=$221;
     break;
    }
    $223=($215|0)==2;
    if (!($223)) {
     $235=0.0;
     break;
    }
    $225=(($inHigh+($196<<3))|0);
    $226=(+(HEAPF64[(($225)>>3)]));
    $227=$198<$200;
    $_12=($227?$200:$198);
    $228=($226)-($_12);
    $229=($227?$198:$200);
    $230=(($inLow+($196<<3))|0);
    $231=(+(HEAPF64[(($230)>>3)]));
    $232=($229)-($231);
    $233=($228)+($232);
    $235=$233;
   } else {
    $210=(+((($207|0))|0));
    $211=(+(HEAPF64[(($17)>>3)]));
    $212=($211)/($210);
    $235=$212;
   }
  } while(0);

  $236=($205)*($235);
  $237=((HEAP32[((272)>>2)])|0);
  $238=(($237+164)|0);
  $239=((HEAP32[(($238)>>2)])|0);
  $240=($239|0)==2;
  $241=($240?(2.0):(1.0));
  $242=($236)/($241);
  $243=$202>$242;
  do {
   if ($243) {
    $245=((($i_2)-(3))|0);
    $246=(($inClose+($245<<3))|0);
    $247=(+(HEAPF64[(($246)>>3)]));
    $248=(($inOpen+($245<<3))|0);
    $249=(+(HEAPF64[(($248)>>3)]));
    $250=($247)-($249);
    $251=(+(Math_abs((+($250)))));
    $252=(($237+224)|0);
    $253=(+(HEAPF64[(($252)>>3)]));
    $254=(($237+216)|0);
    $255=((HEAP32[(($254)>>2)])|0);
    $256=($255|0)==0;
    do {
     if ($256) {
      $262=(($237+212)|0);
      $263=((HEAP32[(($262)>>2)])|0);
      if (((($263|0))|0)==((1)|0)) {
       $265=(($inHigh+($245<<3))|0);
       $266=(+(HEAPF64[(($265)>>3)]));
       $267=(($inLow+($245<<3))|0);
       $268=(+(HEAPF64[(($267)>>3)]));
       $269=($266)-($268);
       $283=$269;
       break;
      } else if (((($263|0))|0)==((0)|0)) {
       $283=$251;
       break;
      }
      $271=($263|0)==2;
      if (!($271)) {
       $283=0.0;
       break;
      }
      $273=(($inHigh+($245<<3))|0);
      $274=(+(HEAPF64[(($273)>>3)]));
      $275=$247<$249;
      $_13=($275?$249:$247);
      $276=($274)-($_13);
      $277=($275?$247:$249);
      $278=(($inLow+($245<<3))|0);
      $279=(+(HEAPF64[(($278)>>3)]));
      $280=($277)-($279);
      $281=($276)+($280);
      $283=$281;
     } else {
      $258=(+((($255|0))|0));
      $259=(+(HEAPF64[(($18)>>3)]));
      $260=($259)/($258);
      $283=$260;
     }
    } while(0);

    $284=($253)*($283);
    $285=((HEAP32[((272)>>2)])|0);
    $286=(($285+212)|0);
    $287=((HEAP32[(($286)>>2)])|0);
    $288=($287|0)==2;
    $289=($288?(2.0):(1.0));
    $290=($284)/($289);
    $291=$251<$290;
    if (!($291)) {
     label = 74;
     break;
    }
    $293=((($i_2)-(2))|0);
    $294=(($inClose+($293<<3))|0);
    $295=(+(HEAPF64[(($294)>>3)]));
    $296=(($inOpen+($293<<3))|0);
    $297=(+(HEAPF64[(($296)>>3)]));
    $298=($295)-($297);
    $299=(+(Math_abs((+($298)))));
    $300=(($285+224)|0);
    $301=(+(HEAPF64[(($300)>>3)]));
    $302=(($285+216)|0);
    $303=((HEAP32[(($302)>>2)])|0);
    $304=($303|0)==0;
    do {
     if ($304) {
      if (((($287|0))|0)==((0)|0)) {
       $328=$299;
       break;
      } else if (((($287|0))|0)==((1)|0)) {
       $311=(($inHigh+($293<<3))|0);
       $312=(+(HEAPF64[(($311)>>3)]));
       $313=(($inLow+($293<<3))|0);
       $314=(+(HEAPF64[(($313)>>3)]));
       $315=($312)-($314);
       $328=$315;
       break;
      }
      if (!($288)) {
       $328=0.0;
       break;
      }
      $318=(($inHigh+($293<<3))|0);
      $319=(+(HEAPF64[(($318)>>3)]));
      $320=$295<$297;
      $_14=($320?$297:$295);
      $321=($319)-($_14);
      $322=($320?$295:$297);
      $323=(($inLow+($293<<3))|0);
      $324=(+(HEAPF64[(($323)>>3)]));
      $325=($322)-($324);
      $326=($321)+($325);
      $328=$326;
     } else {
      $306=(+((($303|0))|0));
      $307=(+(HEAPF64[(($19)>>3)]));
      $308=($307)/($306);
      $328=$308;
     }
    } while(0);

    $329=($301)*($328);
    $330=((HEAP32[((272)>>2)])|0);
    $331=(($330+212)|0);
    $332=((HEAP32[(($331)>>2)])|0);
    $333=($332|0)==2;
    $334=($333?(2.0):(1.0));
    $335=($329)/($334);
    $336=$299<$335;
    if (!($336)) {
     label = 74;
     break;
    }
    $338=((($i_2)-(1))|0);
    $339=(($inClose+($338<<3))|0);
    $340=(+(HEAPF64[(($339)>>3)]));
    $341=(($inOpen+($338<<3))|0);
    $342=(+(HEAPF64[(($341)>>3)]));
    $343=($340)-($342);
    $344=(+(Math_abs((+($343)))));
    $345=(($330+224)|0);
    $346=(+(HEAPF64[(($345)>>3)]));
    $347=(($330+216)|0);
    $348=((HEAP32[(($347)>>2)])|0);
    $349=($348|0)==0;
    do {
     if ($349) {
      if (((($332|0))|0)==((0)|0)) {
       $373=$344;
       break;
      } else if (((($332|0))|0)==((1)|0)) {
       $356=(($inHigh+($338<<3))|0);
       $357=(+(HEAPF64[(($356)>>3)]));
       $358=(($inLow+($338<<3))|0);
       $359=(+(HEAPF64[(($358)>>3)]));
       $360=($357)-($359);
       $373=$360;
       break;
      }
      if (!($333)) {
       $373=0.0;
       break;
      }
      $363=(($inHigh+($338<<3))|0);
      $364=(+(HEAPF64[(($363)>>3)]));
      $365=$340<$342;
      $_15=($365?$342:$340);
      $366=($364)-($_15);
      $367=($365?$340:$342);
      $368=(($inLow+($338<<3))|0);
      $369=(+(HEAPF64[(($368)>>3)]));
      $370=($367)-($369);
      $371=($366)+($370);
      $373=$371;
     } else {
      $351=(+((($348|0))|0));
      $352=(+(HEAPF64[(($20)>>3)]));
      $353=($352)/($351);
      $373=$353;
     }
    } while(0);

    $374=($346)*($373);
    $375=((HEAP32[((272)>>2)])|0);
    $376=(($375+212)|0);
    $377=((HEAP32[(($376)>>2)])|0);
    $378=($377|0)==2;
    $379=($378?(2.0):(1.0));
    $380=($374)/($379);
    $381=$344<$380;
    if (!($381)) {
     label = 74;
     break;
    }
    $383=(($inClose+($i_2<<3))|0);
    $384=(+(HEAPF64[(($383)>>3)]));
    $385=(($inOpen+($i_2<<3))|0);
    $386=(+(HEAPF64[(($385)>>3)]));
    $387=($384)-($386);
    $388=(+(Math_abs((+($387)))));
    $389=(($375+176)|0);
    $390=(+(HEAPF64[(($389)>>3)]));
    $391=(($375+168)|0);
    $392=((HEAP32[(($391)>>2)])|0);
    $393=($392|0)==0;
    do {
     if ($393) {
      $399=(($375+164)|0);
      $400=((HEAP32[(($399)>>2)])|0);
      if (((($400|0))|0)==((1)|0)) {
       $402=(($inHigh+($i_2<<3))|0);
       $403=(+(HEAPF64[(($402)>>3)]));
       $404=(($inLow+($i_2<<3))|0);
       $405=(+(HEAPF64[(($404)>>3)]));
       $406=($403)-($405);
       $420=$406;
       break;
      } else if (((($400|0))|0)==((0)|0)) {
       $420=$388;
       break;
      }
      $408=($400|0)==2;
      if (!($408)) {
       $420=0.0;
       break;
      }
      $410=(($inHigh+($i_2<<3))|0);
      $411=(+(HEAPF64[(($410)>>3)]));
      $412=$384<$386;
      $_16=($412?$386:$384);
      $413=($411)-($_16);
      $414=($412?$384:$386);
      $415=(($inLow+($i_2<<3))|0);
      $416=(+(HEAPF64[(($415)>>3)]));
      $417=($414)-($416);
      $418=($413)+($417);
      $420=$418;
     } else {
      $395=(+((($392|0))|0));
      $396=(+(HEAPF64[(($21)>>3)]));
      $397=($396)/($395);
      $420=$397;
     }
    } while(0);

    $421=($390)*($420);
    $422=((HEAP32[((272)>>2)])|0);
    $423=(($422+164)|0);
    $424=((HEAP32[(($423)>>2)])|0);
    $425=($424|0)==2;
    $426=($425?(2.0):(1.0));
    $427=($421)/($426);
    $428=$388>$427;
    if (!($428)) {
     label = 74;
     break;
    }
    $430=(+(HEAPF64[(($197)>>3)]));
    $431=(+(HEAPF64[(($199)>>3)]));
    $432=$430>=$431;
    $433=($432?1:-1);
    $434=(+(HEAPF64[(($246)>>3)]));
    $435=(+(HEAPF64[(($248)>>3)]));
    $436=$434>=$435;
    $437=($436?1:-1);
    $438=(((-$437))|0);
    $439=($433|0)==($438|0);
    if (!($439)) {
     label = 74;
     break;
    }
    $441=(+(HEAPF64[(($294)>>3)]));
    $442=(+(HEAPF64[(($296)>>3)]));
    $443=$441>=$442;
    $444=($443?1:-1);
    $445=($437|0)==($444|0);
    if (!($445)) {
     label = 74;
     break;
    }
    $447=(+(HEAPF64[(($339)>>3)]));
    $448=(+(HEAPF64[(($341)>>3)]));
    $449=$447>=$448;
    $450=($449?1:-1);
    $451=($444|0)==($450|0);
    if (!($451)) {
     label = 74;
     break;
    }
    $453=(+(HEAPF64[(($383)>>3)]));
    $454=(+(HEAPF64[(($385)>>3)]));
    $455=$453>=$454;
    $456=($455?-1:1);
    $457=($450|0)==($456|0);
    if (!($457)) {
     label = 74;
     break;
    }
    $459=$435<$434;
    $_17=($459?$435:$434);
    $460=(($inHigh+($196<<3))|0);
    $461=(+(HEAPF64[(($460)>>3)]));
    $462=$_17<$461;
    if (!($462)) {
     label = 74;
     break;
    }
    $464=$435>$434;
    $_18=($464?$435:$434);
    $465=(($inLow+($196<<3))|0);
    $466=(+(HEAPF64[(($465)>>3)]));
    $467=$_18>$466;
    if (!($467)) {
     label = 74;
     break;
    }
    $469=$442<$441;
    $_19=($469?$442:$441);
    $470=$_19<$461;
    if (!($470)) {
     label = 74;
     break;
    }
    $472=$442>$441;
    $_20=($472?$442:$441);
    $473=$_20>$466;
    if (!($473)) {
     label = 74;
     break;
    }
    $475=$448<$447;
    $_21=($475?$448:$447);
    $476=$_21<$461;
    if (!($476)) {
     label = 74;
     break;
    }
    $478=$448>$447;
    $_22=($478?$448:$447);
    $479=$_22>$466;
    if (!($479)) {
     label = 74;
     break;
    }
    $481=(+((($433|0))|0));
    $482=($481)*($441);
    $483=($434)*($481);
    $484=$482<$483;
    if (!($484)) {
     label = 74;
     break;
    }
    $486=($481)*($447);
    $487=$486<$482;
    $488=($481)*($454);
    $489=$488>$486;
    $or_cond31=$487&$489;
    if (!($or_cond31)) {
     label = 74;
     break;
    }
    $491=($481)*($453);
    $492=($430)*($481);
    $493=$491>$492;
    if (!($493)) {
     label = 74;
     break;
    }
    $495=((($433)*(100))&-1);
    $496=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($496)>>2)]=$495;
   } else {
    label = 74;
   }
  } while(0);
  if ((label|0) == 74) {
   label = 0;
   $498=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($498)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $500=((HEAP32[((272)>>2)])|0);
  $501=(($500+164)|0);
  $502=((HEAP32[(($501)>>2)])|0);
  if (((($502|0))|0)==((0)|0)) {
   $504=(+(HEAPF64[(($197)>>3)]));
   $505=(+(HEAPF64[(($199)>>3)]));
   $506=($504)-($505);
   $507=(+(Math_abs((+($506)))));
   $527=$507;
  } else if (((($502|0))|0)==((1)|0)) {
   $509=(($inHigh+($196<<3))|0);
   $510=(+(HEAPF64[(($509)>>3)]));
   $511=(($inLow+($196<<3))|0);
   $512=(+(HEAPF64[(($511)>>3)]));
   $513=($510)-($512);
   $527=$513;
  } else if (((($502|0))|0)==((2)|0)) {
   $515=(($inHigh+($196<<3))|0);
   $516=(+(HEAPF64[(($515)>>3)]));
   $517=(+(HEAPF64[(($197)>>3)]));
   $518=(+(HEAPF64[(($199)>>3)]));
   $519=$517<$518;
   $_23=($519?$518:$517);
   $520=($516)-($_23);
   $521=($519?$517:$518);
   $522=(($inLow+($196<<3))|0);
   $523=(+(HEAPF64[(($522)>>3)]));
   $524=($521)-($523);
   $525=($520)+($524);
   $527=$525;
  } else {
   $527=0.0;
  }

  $528=((HEAP32[((272)>>2)])|0);
  $529=(($528+164)|0);
  $530=((HEAP32[(($529)>>2)])|0);
  if (((($530|0))|0)==((0)|0)) {
   $532=((($BodyLongTrailingIdx_0)-(4))|0);
   $533=(($inClose+($532<<3))|0);
   $534=(+(HEAPF64[(($533)>>3)]));
   $535=(($inOpen+($532<<3))|0);
   $536=(+(HEAPF64[(($535)>>3)]));
   $537=($534)-($536);
   $538=(+(Math_abs((+($537)))));
   $562=$538;
  } else if (((($530|0))|0)==((1)|0)) {
   $540=((($BodyLongTrailingIdx_0)-(4))|0);
   $541=(($inHigh+($540<<3))|0);
   $542=(+(HEAPF64[(($541)>>3)]));
   $543=(($inLow+($540<<3))|0);
   $544=(+(HEAPF64[(($543)>>3)]));
   $545=($542)-($544);
   $562=$545;
  } else if (((($530|0))|0)==((2)|0)) {
   $547=((($BodyLongTrailingIdx_0)-(4))|0);
   $548=(($inHigh+($547<<3))|0);
   $549=(+(HEAPF64[(($548)>>3)]));
   $550=(($inClose+($547<<3))|0);
   $551=(+(HEAPF64[(($550)>>3)]));
   $552=(($inOpen+($547<<3))|0);
   $553=(+(HEAPF64[(($552)>>3)]));
   $554=$551<$553;
   $_24=($554?$553:$551);
   $555=($549)-($_24);
   $556=($554?$551:$553);
   $557=(($inLow+($547<<3))|0);
   $558=(+(HEAPF64[(($557)>>3)]));
   $559=($556)-($558);
   $560=($555)+($559);
   $562=$560;
  } else {
   $562=0.0;
  }

  $563=($527)-($562);
  $564=(+(HEAPF64[(($17)>>3)]));
  $565=($564)+($563);
  HEAPF64[(($17)>>3)]=$565;
  $566=((HEAP32[((272)>>2)])|0);
  $567=(($566+212)|0);
  $568=((HEAP32[(($567)>>2)])|0);
  $totIdx_032=3;
  while(1) {

   $570=(($566+212)|0);
   $571=((HEAP32[(($570)>>2)])|0);
   if (((($571|0))|0)==((0)|0)) {
    $573=((($i_2)-($totIdx_032))|0);
    $574=(($inClose+($573<<3))|0);
    $575=(+(HEAPF64[(($574)>>3)]));
    $576=(($inOpen+($573<<3))|0);
    $577=(+(HEAPF64[(($576)>>3)]));
    $578=($575)-($577);
    $579=(+(Math_abs((+($578)))));
    $603=$579;
   } else if (((($571|0))|0)==((1)|0)) {
    $581=((($i_2)-($totIdx_032))|0);
    $582=(($inHigh+($581<<3))|0);
    $583=(+(HEAPF64[(($582)>>3)]));
    $584=(($inLow+($581<<3))|0);
    $585=(+(HEAPF64[(($584)>>3)]));
    $586=($583)-($585);
    $603=$586;
   } else if (((($571|0))|0)==((2)|0)) {
    $588=((($i_2)-($totIdx_032))|0);
    $589=(($inHigh+($588<<3))|0);
    $590=(+(HEAPF64[(($589)>>3)]));
    $591=(($inClose+($588<<3))|0);
    $592=(+(HEAPF64[(($591)>>3)]));
    $593=(($inOpen+($588<<3))|0);
    $594=(+(HEAPF64[(($593)>>3)]));
    $595=$592<$594;
    $_25=($595?$594:$592);
    $596=($590)-($_25);
    $597=($595?$592:$594);
    $598=(($inLow+($588<<3))|0);
    $599=(+(HEAPF64[(($598)>>3)]));
    $600=($597)-($599);
    $601=($596)+($600);
    $603=$601;
   } else {
    $603=0.0;
   }

   if (((($568|0))|0)==((0)|0)) {
    $605=((($BodyShortTrailingIdx_0)-($totIdx_032))|0);
    $606=(($inClose+($605<<3))|0);
    $607=(+(HEAPF64[(($606)>>3)]));
    $608=(($inOpen+($605<<3))|0);
    $609=(+(HEAPF64[(($608)>>3)]));
    $610=($607)-($609);
    $611=(+(Math_abs((+($610)))));
    $635=$611;
   } else if (((($568|0))|0)==((2)|0)) {
    $620=((($BodyShortTrailingIdx_0)-($totIdx_032))|0);
    $621=(($inHigh+($620<<3))|0);
    $622=(+(HEAPF64[(($621)>>3)]));
    $623=(($inClose+($620<<3))|0);
    $624=(+(HEAPF64[(($623)>>3)]));
    $625=(($inOpen+($620<<3))|0);
    $626=(+(HEAPF64[(($625)>>3)]));
    $627=$624<$626;
    $_26=($627?$626:$624);
    $628=($622)-($_26);
    $629=($627?$624:$626);
    $630=(($inLow+($620<<3))|0);
    $631=(+(HEAPF64[(($630)>>3)]));
    $632=($629)-($631);
    $633=($628)+($632);
    $635=$633;
   } else if (((($568|0))|0)==((1)|0)) {
    $613=((($BodyShortTrailingIdx_0)-($totIdx_032))|0);
    $614=(($inHigh+($613<<3))|0);
    $615=(+(HEAPF64[(($614)>>3)]));
    $616=(($inLow+($613<<3))|0);
    $617=(+(HEAPF64[(($616)>>3)]));
    $618=($615)-($617);
    $635=$618;
   } else {
    $635=0.0;
   }

   $636=($603)-($635);
   $637=(($BodyPeriodTotal+($totIdx_032<<3))|0);
   $638=(+(HEAPF64[(($637)>>3)]));
   $639=($638)+($636);
   HEAPF64[(($637)>>3)]=$639;
   $640=((($totIdx_032)-(1))|0);
   $641=($640|0)>0;
   if ($641) {
    $totIdx_032=$640;
   } else {
    break;
   }
  }
  $643=(($566+164)|0);
  $644=((HEAP32[(($643)>>2)])|0);
  if (((($644|0))|0)==((0)|0)) {
   $646=(($inClose+($i_2<<3))|0);
   $647=(+(HEAPF64[(($646)>>3)]));
   $648=(($inOpen+($i_2<<3))|0);
   $649=(+(HEAPF64[(($648)>>3)]));
   $650=($647)-($649);
   $651=(+(Math_abs((+($650)))));
   $673=$651;
  } else if (((($644|0))|0)==((1)|0)) {
   $653=(($inHigh+($i_2<<3))|0);
   $654=(+(HEAPF64[(($653)>>3)]));
   $655=(($inLow+($i_2<<3))|0);
   $656=(+(HEAPF64[(($655)>>3)]));
   $657=($654)-($656);
   $673=$657;
  } else if (((($644|0))|0)==((2)|0)) {
   $659=(($inHigh+($i_2<<3))|0);
   $660=(+(HEAPF64[(($659)>>3)]));
   $661=(($inClose+($i_2<<3))|0);
   $662=(+(HEAPF64[(($661)>>3)]));
   $663=(($inOpen+($i_2<<3))|0);
   $664=(+(HEAPF64[(($663)>>3)]));
   $665=$662<$664;
   $_27=($665?$664:$662);
   $666=($660)-($_27);
   $667=($665?$662:$664);
   $668=(($inLow+($i_2<<3))|0);
   $669=(+(HEAPF64[(($668)>>3)]));
   $670=($667)-($669);
   $671=($666)+($670);
   $673=$671;
  } else {
   $673=0.0;
  }

  $674=((HEAP32[((272)>>2)])|0);
  $675=(($674+164)|0);
  $676=((HEAP32[(($675)>>2)])|0);
  if (((($676|0))|0)==((0)|0)) {
   $678=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $679=(+(HEAPF64[(($678)>>3)]));
   $680=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $681=(+(HEAPF64[(($680)>>3)]));
   $682=($679)-($681);
   $683=(+(Math_abs((+($682)))));
   $705=$683;
  } else if (((($676|0))|0)==((1)|0)) {
   $685=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $686=(+(HEAPF64[(($685)>>3)]));
   $687=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $688=(+(HEAPF64[(($687)>>3)]));
   $689=($686)-($688);
   $705=$689;
  } else if (((($676|0))|0)==((2)|0)) {
   $691=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $692=(+(HEAPF64[(($691)>>3)]));
   $693=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $694=(+(HEAPF64[(($693)>>3)]));
   $695=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $696=(+(HEAPF64[(($695)>>3)]));
   $697=$694<$696;
   $_28=($697?$696:$694);
   $698=($692)-($_28);
   $699=($697?$694:$696);
   $700=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $701=(+(HEAPF64[(($700)>>3)]));
   $702=($699)-($701);
   $703=($698)+($702);
   $705=$703;
  } else {
   $705=0.0;
  }

  $706=($673)-($705);
  $707=(+(HEAPF64[(($21)>>3)]));
  $708=($707)+($706);
  HEAPF64[(($21)>>3)]=$708;
  $709=((($i_2)+(1))|0);
  $710=((($BodyShortTrailingIdx_0)+(1))|0);
  $711=((($BodyLongTrailingIdx_0)+(1))|0);
  $712=($i_2|0)<($endIdx|0);
  if ($712) {
   $BodyLongTrailingIdx_0=$711;$BodyShortTrailingIdx_0=$710;$outIdx_0=$outIdx_1;$i_2=$709;
  } else {
   break;
  }
 }
 $714=((($smax46)+(1))|0);
 $715=((($714)-($smax47))|0);
 HEAP32[(($outNBElement)>>2)]=$715;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDLSEPARATINGLINES_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$__=0,$10=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+336)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=(($1+408)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($_|0)>($8|0);
 $__=($9?$_:$8);
 $10=((($__)+(1))|0);
 return (($10)|0);
}


function _TA_CDLSEPARATINGLINES($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond23=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$31=0,$32=0,$33=0,$34=0,$i_033=0,$ShadowVeryShortPeriodTotal_032=.0,$37=0;
 var $38=.0,$39=0,$40=.0,$41=.0,$42=.0,$44=0,$45=.0,$46=0,$47=.0,$48=.0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$_=.0,$57=.0,$58=.0;
 var $59=0,$60=.0,$61=.0,$62=.0,$64=.0,$65=.0,$66=0,$67=0,$BodyLongPeriodTotal_0_lcssa=.0,$68=0,$69=0,$70=0,$71=0,$i_129=0,$BodyLongPeriodTotal_028=.0,$74=0,$75=.0,$76=0,$77=.0,$78=.0;
 var $79=.0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$_8=.0,$94=.0,$95=.0,$96=0,$97=.0,$98=.0,$99=.0;
 var $101=.0,$102=.0,$103=0,$104=0,$EqualPeriodTotal_0_lcssa=.0,$105=0,$smax=0,$106=0,$smax36=0,$107=0,$smax37=0,$i_226=0,$EqualPeriodTotal_025=.0,$110=0,$111=0,$112=.0,$113=0,$114=.0,$115=.0,$116=.0;
 var $118=0,$119=0,$120=.0,$121=0,$122=.0,$123=.0,$125=0,$126=0,$127=.0,$128=0,$129=.0,$130=0,$131=.0,$132=0,$_9=.0,$133=.0,$134=.0,$135=0,$136=.0,$137=.0;
 var $138=.0,$140=.0,$141=.0,$142=0,$143=0,$ShadowVeryShortPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$EqualPeriodTotal_1=.0,$i_3=0,$outIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$EqualTrailingIdx_0=0,$145=0,$146=0,$147=.0,$148=0,$149=.0,$150=0,$151=0;
 var $152=0,$153=.0,$154=0,$155=.0,$156=0,$157=0,$158=0,$160=0,$161=0,$162=.0,$163=0,$164=0,$165=0,$167=.0,$168=.0,$170=0,$171=0,$173=.0,$174=.0,$176=0;
 var $177=.0,$178=0,$179=.0,$180=.0,$182=0,$183=.0,$_10=.0,$184=.0,$185=0,$186=.0,$187=0,$188=.0,$189=.0,$190=.0,$192=.0,$193=.0,$194=0,$195=0,$196=0,$197=0;
 var $198=.0,$199=.0,$200=.0,$201=0,$203=.0,$204=.0,$205=0,$206=.0,$207=0,$208=0,$209=0,$211=.0,$212=.0,$215=.0,$216=.0,$217=.0,$219=0,$220=.0,$221=0,$222=.0;
 var $223=.0,$226=0,$227=.0,$228=.0,$229=0,$_11=.0,$230=.0,$231=.0,$232=0,$233=.0,$234=.0,$235=.0,$237=.0,$238=.0,$239=0,$240=0,$241=0,$242=0,$243=.0,$244=.0;
 var $245=.0,$246=0,$248=.0,$249=.0,$250=.0,$251=.0,$252=0,$253=.0,$254=0,$255=0,$256=0,$258=.0,$259=.0,$261=0,$262=0,$264=0,$265=.0,$266=0,$267=.0,$268=.0;
 var $270=0,$272=0,$273=.0,$274=0,$_12=.0,$275=.0,$276=.0,$277=0,$278=.0,$279=.0,$280=.0,$282=.0,$283=.0,$284=0,$285=0,$286=0,$287=0,$288=.0,$289=.0,$290=0;
 var $292=.0,$293=.0,$294=0,$296=0,$297=.0,$298=.0,$299=0,$300=.0,$301=0,$302=0,$303=0,$305=.0,$306=.0,$308=0,$309=0,$311=.0,$312=.0,$314=0,$315=.0,$316=.0;
 var $318=0,$319=.0,$320=0,$_14=.0,$321=.0,$322=.0,$323=.0,$324=.0,$326=.0,$327=.0,$328=0,$329=0,$330=0,$331=0,$332=.0,$333=.0,$334=0,$336=.0,$337=.0,$338=0;
 var $340=0,$341=.0,$342=.0,$343=0,$344=0,$345=.0,$346=0,$347=0,$348=0,$350=.0,$351=.0,$353=0,$354=0,$356=.0,$357=.0,$359=0,$360=.0,$361=.0,$363=0,$_16=.0;
 var $364=.0,$365=.0,$366=0,$367=.0,$368=.0,$369=.0,$371=.0,$372=.0,$373=0,$374=0,$375=0,$376=0,$377=.0,$378=.0,$379=0,$381=.0,$382=.0,$383=0,$384=0,$385=0;
 var $387=0,$outIdx_1=0,$389=0,$390=0,$391=0,$393=.0,$394=.0,$395=.0,$396=.0,$398=0,$399=.0,$400=0,$401=.0,$402=.0,$404=0,$405=.0,$406=.0,$407=.0,$408=0,$_17=.0;
 var $409=.0,$410=.0,$411=0,$412=.0,$413=.0,$414=.0,$416=.0,$417=0,$418=0,$419=0,$421=0,$422=.0,$423=0,$424=.0,$425=.0,$426=.0,$428=0,$429=.0,$430=0,$431=.0;
 var $432=.0,$434=0,$435=.0,$436=0,$437=.0,$438=0,$439=.0,$440=0,$_18=.0,$441=.0,$442=.0,$443=0,$444=.0,$445=.0,$446=.0,$448=.0,$449=.0,$450=.0,$451=0,$452=0;
 var $453=0,$455=.0,$456=.0,$457=.0,$458=.0,$460=0,$461=.0,$462=0,$463=.0,$464=.0,$466=0,$467=.0,$468=.0,$469=.0,$470=0,$_19=.0,$471=.0,$472=.0,$473=0,$474=.0;
 var $475=.0,$476=.0,$478=.0,$479=0,$480=0,$481=0,$483=0,$484=.0,$485=0,$486=.0,$487=.0,$488=.0,$490=0,$491=.0,$492=0,$493=.0,$494=.0,$496=0,$497=.0,$498=0;
 var $499=.0,$500=0,$501=.0,$502=0,$_20=.0,$503=.0,$504=.0,$505=0,$506=.0,$507=.0,$508=.0,$510=.0,$511=.0,$512=.0,$513=0,$514=0,$515=0,$517=.0,$518=.0,$519=.0;
 var $520=.0,$522=0,$523=.0,$524=0,$525=.0,$526=.0,$528=0,$529=.0,$530=.0,$531=.0,$532=0,$_21=.0,$533=.0,$534=.0,$535=0,$536=.0,$537=.0,$538=.0,$540=.0,$541=0;
 var $542=0,$543=0,$545=0,$546=0,$547=.0,$548=0,$549=.0,$550=.0,$551=.0,$553=0,$554=0,$555=.0,$556=0,$557=.0,$558=.0,$560=0,$561=0,$562=.0,$563=0,$564=.0;
 var $565=0,$566=.0,$567=0,$_22=.0,$568=.0,$569=.0,$570=0,$571=.0,$572=.0,$573=.0,$575=.0,$576=.0,$577=.0,$578=0,$579=0,$580=0,$581=0,$582=0,$584=0,$585=0;
 var $_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond23=$10|$or_cond5_not;
 if ($or_cond23) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLSEPARATINGLINES_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+336)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+168)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=(($17+408)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($_startIdx)-($25))|0);
 $27=($19|0)>0;
 if ($27) {
  $28=((HEAP32[((272)>>2)])|0);
  $29=(($28+332)|0);
  $30=((HEAP32[(($29)>>2)])|0);
  $ShadowVeryShortPeriodTotal_032=0.0;$i_033=$20;
  while(1) {


   if (((($30|0))|0)==((1)|0)) {
    $44=(($inHigh+($i_033<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=(($inLow+($i_033<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=($45)-($47);
    $64=$48;
   } else if (((($30|0))|0)==((0)|0)) {
    $37=(($inClose+($i_033<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=(($inOpen+($i_033<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=($38)-($40);
    $42=(+(Math_abs((+($41)))));
    $64=$42;
   } else if (((($30|0))|0)==((2)|0)) {
    $50=(($inHigh+($i_033<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inClose+($i_033<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inOpen+($i_033<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=$53<$55;
    $_=($56?$55:$53);
    $57=($51)-($_);
    $58=($56?$53:$55);
    $59=(($inLow+($i_033<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=($57)+($61);
    $64=$62;
   } else {
    $64=0.0;
   }

   $65=($ShadowVeryShortPeriodTotal_032)+($64);
   $66=((($i_033)+(1))|0);
   $67=($66|0)<($_startIdx|0);
   if ($67) {
    $ShadowVeryShortPeriodTotal_032=$65;$i_033=$66;
   } else {
    $ShadowVeryShortPeriodTotal_0_lcssa=$65;
    break;
   }
  }
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;
 }

 $31=($22|0)>0;
 if ($31) {
  $32=((HEAP32[((272)>>2)])|0);
  $33=(($32+164)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $BodyLongPeriodTotal_028=0.0;$i_129=$23;
  while(1) {


   if (((($34|0))|0)==((0)|0)) {
    $74=(($inClose+($i_129<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($i_129<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $101=$79;
   } else if (((($34|0))|0)==((1)|0)) {
    $81=(($inHigh+($i_129<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($i_129<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $101=$85;
   } else if (((($34|0))|0)==((2)|0)) {
    $87=(($inHigh+($i_129<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inClose+($i_129<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inOpen+($i_129<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$90<$92;
    $_8=($93?$92:$90);
    $94=($88)-($_8);
    $95=($93?$90:$92);
    $96=(($inLow+($i_129<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $101=$99;
   } else {
    $101=0.0;
   }

   $102=($BodyLongPeriodTotal_028)+($101);
   $103=((($i_129)+(1))|0);
   $104=($103|0)<($_startIdx|0);
   if ($104) {
    $BodyLongPeriodTotal_028=$102;$i_129=$103;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$102;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $68=($25|0)>0;
 if ($68) {
  $69=((HEAP32[((272)>>2)])|0);
  $70=(($69+404)|0);
  $71=((HEAP32[(($70)>>2)])|0);
  $EqualPeriodTotal_025=0.0;$i_226=$26;
  while(1) {


   if (((($71|0))|0)==((2)|0)) {
    $125=((($i_226)-(1))|0);
    $126=(($inHigh+($125<<3))|0);
    $127=(+(HEAPF64[(($126)>>3)]));
    $128=(($inClose+($125<<3))|0);
    $129=(+(HEAPF64[(($128)>>3)]));
    $130=(($inOpen+($125<<3))|0);
    $131=(+(HEAPF64[(($130)>>3)]));
    $132=$129<$131;
    $_9=($132?$131:$129);
    $133=($127)-($_9);
    $134=($132?$129:$131);
    $135=(($inLow+($125<<3))|0);
    $136=(+(HEAPF64[(($135)>>3)]));
    $137=($134)-($136);
    $138=($133)+($137);
    $140=$138;
   } else if (((($71|0))|0)==((0)|0)) {
    $110=((($i_226)-(1))|0);
    $111=(($inClose+($110<<3))|0);
    $112=(+(HEAPF64[(($111)>>3)]));
    $113=(($inOpen+($110<<3))|0);
    $114=(+(HEAPF64[(($113)>>3)]));
    $115=($112)-($114);
    $116=(+(Math_abs((+($115)))));
    $140=$116;
   } else if (((($71|0))|0)==((1)|0)) {
    $118=((($i_226)-(1))|0);
    $119=(($inHigh+($118<<3))|0);
    $120=(+(HEAPF64[(($119)>>3)]));
    $121=(($inLow+($118<<3))|0);
    $122=(+(HEAPF64[(($121)>>3)]));
    $123=($120)-($122);
    $140=$123;
   } else {
    $140=0.0;
   }

   $141=($EqualPeriodTotal_025)+($140);
   $142=((($i_226)+(1))|0);
   $143=($142|0)<($_startIdx|0);
   if ($143) {
    $EqualPeriodTotal_025=$141;$i_226=$142;
   } else {
    $EqualPeriodTotal_0_lcssa=$141;
    break;
   }
  }
 } else {
  $EqualPeriodTotal_0_lcssa=0.0;
 }

 $105=($12|0)>($endIdx|0);
 $smax=($105?$12:$endIdx);
 $106=($smax|0)>($startIdx|0);
 $smax36=($106?$smax:$startIdx);
 $107=($12|0)>($startIdx|0);
 $smax37=($107?$12:$startIdx);
 $EqualTrailingIdx_0=$26;$BodyLongTrailingIdx_0=$23;$ShadowVeryShortTrailingIdx_0=$20;$outIdx_0=0;$i_3=$_startIdx;$EqualPeriodTotal_1=$EqualPeriodTotal_0_lcssa;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;
 while(1) {








  $145=((($i_3)-(1))|0);
  $146=(($inClose+($145<<3))|0);
  $147=(+(HEAPF64[(($146)>>3)]));
  $148=(($inOpen+($145<<3))|0);
  $149=(+(HEAPF64[(($148)>>3)]));
  $150=$147>=$149;
  $151=($150?1:-1);
  $152=(($inClose+($i_3<<3))|0);
  $153=(+(HEAPF64[(($152)>>3)]));
  $154=(($inOpen+($i_3<<3))|0);
  $155=(+(HEAPF64[(($154)>>3)]));
  $156=$153>=$155;
  $157=($156?-1:1);
  $158=($151|0)==($157|0);
  do {
   if ($158) {
    $160=((HEAP32[((272)>>2)])|0);
    $161=(($160+416)|0);
    $162=(+(HEAPF64[(($161)>>3)]));
    $163=(($160+408)|0);
    $164=((HEAP32[(($163)>>2)])|0);
    $165=($164|0)==0;
    do {
     if ($165) {
      $170=(($160+404)|0);
      $171=((HEAP32[(($170)>>2)])|0);
      if (((($171|0))|0)==((1)|0)) {
       $176=(($inHigh+($145<<3))|0);
       $177=(+(HEAPF64[(($176)>>3)]));
       $178=(($inLow+($145<<3))|0);
       $179=(+(HEAPF64[(($178)>>3)]));
       $180=($177)-($179);
       $192=$180;
       break;
      } else if (((($171|0))|0)==((2)|0)) {
       $182=(($inHigh+($145<<3))|0);
       $183=(+(HEAPF64[(($182)>>3)]));
       $_10=($150?$147:$149);
       $184=($183)-($_10);
       $185=$147<$149;
       $186=($185?$147:$149);
       $187=(($inLow+($145<<3))|0);
       $188=(+(HEAPF64[(($187)>>3)]));
       $189=($186)-($188);
       $190=($184)+($189);
       $192=$190;
       break;
      } else if (((($171|0))|0)==((0)|0)) {
       $173=($147)-($149);
       $174=(+(Math_abs((+($173)))));
       $192=$174;
       break;
      } else {
       $192=0.0;
       break;
      }
     } else {
      $167=(+((($164|0))|0));
      $168=($EqualPeriodTotal_1)/($167);
      $192=$168;
     }
    } while(0);

    $193=($162)*($192);
    $194=((HEAP32[((272)>>2)])|0);
    $195=(($194+404)|0);
    $196=((HEAP32[(($195)>>2)])|0);
    $197=($196|0)==2;
    $198=($197?(2.0):(1.0));
    $199=($193)/($198);
    $200=($149)+($199);
    $201=$155>$200;
    if ($201) {
     label = 68;
     break;
    }
    $203=(+(HEAPF64[(($154)>>3)]));
    $204=(+(HEAPF64[(($148)>>3)]));
    $205=(($194+416)|0);
    $206=(+(HEAPF64[(($205)>>3)]));
    $207=(($194+408)|0);
    $208=((HEAP32[(($207)>>2)])|0);
    $209=($208|0)==0;
    do {
     if ($209) {
      if (((($196|0))|0)==((0)|0)) {
       $215=(+(HEAPF64[(($146)>>3)]));
       $216=($215)-($204);
       $217=(+(Math_abs((+($216)))));
       $237=$217;
       break;
      } else if (((($196|0))|0)==((1)|0)) {
       $219=(($inHigh+($145<<3))|0);
       $220=(+(HEAPF64[(($219)>>3)]));
       $221=(($inLow+($145<<3))|0);
       $222=(+(HEAPF64[(($221)>>3)]));
       $223=($220)-($222);
       $237=$223;
       break;
      } else {
       if (!($197)) {
        $237=0.0;
        break;
       }
       $226=(($inHigh+($145<<3))|0);
       $227=(+(HEAPF64[(($226)>>3)]));
       $228=(+(HEAPF64[(($146)>>3)]));
       $229=$228<$204;
       $_11=($229?$204:$228);
       $230=($227)-($_11);
       $231=($229?$228:$204);
       $232=(($inLow+($145<<3))|0);
       $233=(+(HEAPF64[(($232)>>3)]));
       $234=($231)-($233);
       $235=($230)+($234);
       $237=$235;
       break;
      }
     } else {
      $211=(+((($208|0))|0));
      $212=($EqualPeriodTotal_1)/($211);
      $237=$212;
     }
    } while(0);

    $238=($206)*($237);
    $239=((HEAP32[((272)>>2)])|0);
    $240=(($239+404)|0);
    $241=((HEAP32[(($240)>>2)])|0);
    $242=($241|0)==2;
    $243=($242?(2.0):(1.0));
    $244=($238)/($243);
    $245=($204)-($244);
    $246=$203<$245;
    if ($246) {
     label = 68;
     break;
    }
    $248=(+(HEAPF64[(($152)>>3)]));
    $249=(+(HEAPF64[(($154)>>3)]));
    $250=($248)-($249);
    $251=(+(Math_abs((+($250)))));
    $252=(($239+176)|0);
    $253=(+(HEAPF64[(($252)>>3)]));
    $254=(($239+168)|0);
    $255=((HEAP32[(($254)>>2)])|0);
    $256=($255|0)==0;
    do {
     if ($256) {
      $261=(($239+164)|0);
      $262=((HEAP32[(($261)>>2)])|0);
      if (((($262|0))|0)==((0)|0)) {
       $282=$251;
       break;
      } else if (((($262|0))|0)==((1)|0)) {
       $264=(($inHigh+($i_3<<3))|0);
       $265=(+(HEAPF64[(($264)>>3)]));
       $266=(($inLow+($i_3<<3))|0);
       $267=(+(HEAPF64[(($266)>>3)]));
       $268=($265)-($267);
       $282=$268;
       break;
      }
      $270=($262|0)==2;
      if (!($270)) {
       $282=0.0;
       break;
      }
      $272=(($inHigh+($i_3<<3))|0);
      $273=(+(HEAPF64[(($272)>>3)]));
      $274=$248<$249;
      $_12=($274?$249:$248);
      $275=($273)-($_12);
      $276=($274?$248:$249);
      $277=(($inLow+($i_3<<3))|0);
      $278=(+(HEAPF64[(($277)>>3)]));
      $279=($276)-($278);
      $280=($275)+($279);
      $282=$280;
     } else {
      $258=(+((($255|0))|0));
      $259=($BodyLongPeriodTotal_1)/($258);
      $282=$259;
     }
    } while(0);

    $283=($253)*($282);
    $284=((HEAP32[((272)>>2)])|0);
    $285=(($284+164)|0);
    $286=((HEAP32[(($285)>>2)])|0);
    $287=($286|0)==2;
    $288=($287?(2.0):(1.0));
    $289=($283)/($288);
    $290=$251>$289;
    if (!($290)) {
     label = 68;
     break;
    }
    $292=(+(HEAPF64[(($152)>>3)]));
    $293=(+(HEAPF64[(($154)>>3)]));
    $294=$292<$293;
    if ($294) {
     label = 59;
    } else {
     $296=(($inLow+($i_3<<3))|0);
     $297=(+(HEAPF64[(($296)>>3)]));
     $298=($293)-($297);
     $299=(($284+344)|0);
     $300=(+(HEAPF64[(($299)>>3)]));
     $301=(($284+336)|0);
     $302=((HEAP32[(($301)>>2)])|0);
     $303=($302|0)==0;
     do {
      if ($303) {
       $308=(($284+332)|0);
       $309=((HEAP32[(($308)>>2)])|0);
       if (((($309|0))|0)==((2)|0)) {
        $318=(($inHigh+($i_3<<3))|0);
        $319=(+(HEAPF64[(($318)>>3)]));
        $320=$292<$293;
        $_14=($320?$293:$292);
        $321=($319)-($_14);
        $322=($320?$292:$293);
        $323=($322)-($297);
        $324=($323)+($321);
        $326=$324;
        break;
       } else if (((($309|0))|0)==((0)|0)) {
        $311=($292)-($293);
        $312=(+(Math_abs((+($311)))));
        $326=$312;
        break;
       } else if (((($309|0))|0)==((1)|0)) {
        $314=(($inHigh+($i_3<<3))|0);
        $315=(+(HEAPF64[(($314)>>3)]));
        $316=($315)-($297);
        $326=$316;
        break;
       } else {
        $326=0.0;
        break;
       }
      } else {
       $305=(+((($302|0))|0));
       $306=($ShadowVeryShortPeriodTotal_1)/($305);
       $326=$306;
      }
     } while(0);

     $327=($300)*($326);
     $328=((HEAP32[((272)>>2)])|0);
     $329=(($328+332)|0);
     $330=((HEAP32[(($329)>>2)])|0);
     $331=($330|0)==2;
     $332=($331?(2.0):(1.0));
     $333=($327)/($332);
     $334=$298<$333;
     if (!($334)) {
      label = 59;
     }
    }
    if ((label|0) == 59) {
     label = 0;
     $336=(+(HEAPF64[(($152)>>3)]));
     $337=(+(HEAPF64[(($154)>>3)]));
     $338=$336<$337;
     if (!($338)) {
      label = 68;
      break;
     }
     $340=(($inHigh+($i_3<<3))|0);
     $341=(+(HEAPF64[(($340)>>3)]));
     $342=($341)-($337);
     $343=((HEAP32[((272)>>2)])|0);
     $344=(($343+344)|0);
     $345=(+(HEAPF64[(($344)>>3)]));
     $346=(($343+336)|0);
     $347=((HEAP32[(($346)>>2)])|0);
     $348=($347|0)==0;
     do {
      if ($348) {
       $353=(($343+332)|0);
       $354=((HEAP32[(($353)>>2)])|0);
       if (((($354|0))|0)==((1)|0)) {
        $359=(($inLow+($i_3<<3))|0);
        $360=(+(HEAPF64[(($359)>>3)]));
        $361=($341)-($360);
        $371=$361;
        break;
       } else if (((($354|0))|0)==((2)|0)) {
        $363=$336<$337;
        $_16=($363?$337:$336);
        $364=($341)-($_16);
        $365=($363?$336:$337);
        $366=(($inLow+($i_3<<3))|0);
        $367=(+(HEAPF64[(($366)>>3)]));
        $368=($365)-($367);
        $369=($364)+($368);
        $371=$369;
        break;
       } else if (((($354|0))|0)==((0)|0)) {
        $356=($336)-($337);
        $357=(+(Math_abs((+($356)))));
        $371=$357;
        break;
       } else {
        $371=0.0;
        break;
       }
      } else {
       $350=(+((($347|0))|0));
       $351=($ShadowVeryShortPeriodTotal_1)/($350);
       $371=$351;
      }
     } while(0);

     $372=($345)*($371);
     $373=((HEAP32[((272)>>2)])|0);
     $374=(($373+332)|0);
     $375=((HEAP32[(($374)>>2)])|0);
     $376=($375|0)==2;
     $377=($376?(2.0):(1.0));
     $378=($372)/($377);
     $379=$342<$378;
     if (!($379)) {
      label = 68;
      break;
     }
    }
    $381=(+(HEAPF64[(($152)>>3)]));
    $382=(+(HEAPF64[(($154)>>3)]));
    $383=$381>=$382;
    $384=($383?100:-100);
    $385=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($385)>>2)]=$384;
   } else {
    label = 68;
   }
  } while(0);
  if ((label|0) == 68) {
   label = 0;
   $387=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($387)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $389=((HEAP32[((272)>>2)])|0);
  $390=(($389+332)|0);
  $391=((HEAP32[(($390)>>2)])|0);
  if (((($391|0))|0)==((0)|0)) {
   $393=(+(HEAPF64[(($152)>>3)]));
   $394=(+(HEAPF64[(($154)>>3)]));
   $395=($393)-($394);
   $396=(+(Math_abs((+($395)))));
   $416=$396;
  } else if (((($391|0))|0)==((1)|0)) {
   $398=(($inHigh+($i_3<<3))|0);
   $399=(+(HEAPF64[(($398)>>3)]));
   $400=(($inLow+($i_3<<3))|0);
   $401=(+(HEAPF64[(($400)>>3)]));
   $402=($399)-($401);
   $416=$402;
  } else if (((($391|0))|0)==((2)|0)) {
   $404=(($inHigh+($i_3<<3))|0);
   $405=(+(HEAPF64[(($404)>>3)]));
   $406=(+(HEAPF64[(($152)>>3)]));
   $407=(+(HEAPF64[(($154)>>3)]));
   $408=$406<$407;
   $_17=($408?$407:$406);
   $409=($405)-($_17);
   $410=($408?$406:$407);
   $411=(($inLow+($i_3<<3))|0);
   $412=(+(HEAPF64[(($411)>>3)]));
   $413=($410)-($412);
   $414=($409)+($413);
   $416=$414;
  } else {
   $416=0.0;
  }

  $417=((HEAP32[((272)>>2)])|0);
  $418=(($417+332)|0);
  $419=((HEAP32[(($418)>>2)])|0);
  if (((($419|0))|0)==((0)|0)) {
   $421=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $422=(+(HEAPF64[(($421)>>3)]));
   $423=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $424=(+(HEAPF64[(($423)>>3)]));
   $425=($422)-($424);
   $426=(+(Math_abs((+($425)))));
   $448=$426;
  } else if (((($419|0))|0)==((1)|0)) {
   $428=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $429=(+(HEAPF64[(($428)>>3)]));
   $430=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $431=(+(HEAPF64[(($430)>>3)]));
   $432=($429)-($431);
   $448=$432;
  } else if (((($419|0))|0)==((2)|0)) {
   $434=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $435=(+(HEAPF64[(($434)>>3)]));
   $436=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $437=(+(HEAPF64[(($436)>>3)]));
   $438=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $439=(+(HEAPF64[(($438)>>3)]));
   $440=$437<$439;
   $_18=($440?$439:$437);
   $441=($435)-($_18);
   $442=($440?$437:$439);
   $443=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $444=(+(HEAPF64[(($443)>>3)]));
   $445=($442)-($444);
   $446=($441)+($445);
   $448=$446;
  } else {
   $448=0.0;
  }

  $449=($416)-($448);
  $450=($ShadowVeryShortPeriodTotal_1)+($449);
  $451=((HEAP32[((272)>>2)])|0);
  $452=(($451+164)|0);
  $453=((HEAP32[(($452)>>2)])|0);
  if (((($453|0))|0)==((0)|0)) {
   $455=(+(HEAPF64[(($152)>>3)]));
   $456=(+(HEAPF64[(($154)>>3)]));
   $457=($455)-($456);
   $458=(+(Math_abs((+($457)))));
   $478=$458;
  } else if (((($453|0))|0)==((1)|0)) {
   $460=(($inHigh+($i_3<<3))|0);
   $461=(+(HEAPF64[(($460)>>3)]));
   $462=(($inLow+($i_3<<3))|0);
   $463=(+(HEAPF64[(($462)>>3)]));
   $464=($461)-($463);
   $478=$464;
  } else if (((($453|0))|0)==((2)|0)) {
   $466=(($inHigh+($i_3<<3))|0);
   $467=(+(HEAPF64[(($466)>>3)]));
   $468=(+(HEAPF64[(($152)>>3)]));
   $469=(+(HEAPF64[(($154)>>3)]));
   $470=$468<$469;
   $_19=($470?$469:$468);
   $471=($467)-($_19);
   $472=($470?$468:$469);
   $473=(($inLow+($i_3<<3))|0);
   $474=(+(HEAPF64[(($473)>>3)]));
   $475=($472)-($474);
   $476=($471)+($475);
   $478=$476;
  } else {
   $478=0.0;
  }

  $479=((HEAP32[((272)>>2)])|0);
  $480=(($479+164)|0);
  $481=((HEAP32[(($480)>>2)])|0);
  if (((($481|0))|0)==((0)|0)) {
   $483=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $484=(+(HEAPF64[(($483)>>3)]));
   $485=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $486=(+(HEAPF64[(($485)>>3)]));
   $487=($484)-($486);
   $488=(+(Math_abs((+($487)))));
   $510=$488;
  } else if (((($481|0))|0)==((1)|0)) {
   $490=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $491=(+(HEAPF64[(($490)>>3)]));
   $492=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $493=(+(HEAPF64[(($492)>>3)]));
   $494=($491)-($493);
   $510=$494;
  } else if (((($481|0))|0)==((2)|0)) {
   $496=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $497=(+(HEAPF64[(($496)>>3)]));
   $498=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $499=(+(HEAPF64[(($498)>>3)]));
   $500=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $501=(+(HEAPF64[(($500)>>3)]));
   $502=$499<$501;
   $_20=($502?$501:$499);
   $503=($497)-($_20);
   $504=($502?$499:$501);
   $505=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $506=(+(HEAPF64[(($505)>>3)]));
   $507=($504)-($506);
   $508=($503)+($507);
   $510=$508;
  } else {
   $510=0.0;
  }

  $511=($478)-($510);
  $512=($BodyLongPeriodTotal_1)+($511);
  $513=((HEAP32[((272)>>2)])|0);
  $514=(($513+404)|0);
  $515=((HEAP32[(($514)>>2)])|0);
  if (((($515|0))|0)==((0)|0)) {
   $517=(+(HEAPF64[(($146)>>3)]));
   $518=(+(HEAPF64[(($148)>>3)]));
   $519=($517)-($518);
   $520=(+(Math_abs((+($519)))));
   $540=$520;
  } else if (((($515|0))|0)==((1)|0)) {
   $522=(($inHigh+($145<<3))|0);
   $523=(+(HEAPF64[(($522)>>3)]));
   $524=(($inLow+($145<<3))|0);
   $525=(+(HEAPF64[(($524)>>3)]));
   $526=($523)-($525);
   $540=$526;
  } else if (((($515|0))|0)==((2)|0)) {
   $528=(($inHigh+($145<<3))|0);
   $529=(+(HEAPF64[(($528)>>3)]));
   $530=(+(HEAPF64[(($146)>>3)]));
   $531=(+(HEAPF64[(($148)>>3)]));
   $532=$530<$531;
   $_21=($532?$531:$530);
   $533=($529)-($_21);
   $534=($532?$530:$531);
   $535=(($inLow+($145<<3))|0);
   $536=(+(HEAPF64[(($535)>>3)]));
   $537=($534)-($536);
   $538=($533)+($537);
   $540=$538;
  } else {
   $540=0.0;
  }

  $541=((HEAP32[((272)>>2)])|0);
  $542=(($541+404)|0);
  $543=((HEAP32[(($542)>>2)])|0);
  if (((($543|0))|0)==((0)|0)) {
   $545=((($EqualTrailingIdx_0)-(1))|0);
   $546=(($inClose+($545<<3))|0);
   $547=(+(HEAPF64[(($546)>>3)]));
   $548=(($inOpen+($545<<3))|0);
   $549=(+(HEAPF64[(($548)>>3)]));
   $550=($547)-($549);
   $551=(+(Math_abs((+($550)))));
   $575=$551;
  } else if (((($543|0))|0)==((1)|0)) {
   $553=((($EqualTrailingIdx_0)-(1))|0);
   $554=(($inHigh+($553<<3))|0);
   $555=(+(HEAPF64[(($554)>>3)]));
   $556=(($inLow+($553<<3))|0);
   $557=(+(HEAPF64[(($556)>>3)]));
   $558=($555)-($557);
   $575=$558;
  } else if (((($543|0))|0)==((2)|0)) {
   $560=((($EqualTrailingIdx_0)-(1))|0);
   $561=(($inHigh+($560<<3))|0);
   $562=(+(HEAPF64[(($561)>>3)]));
   $563=(($inClose+($560<<3))|0);
   $564=(+(HEAPF64[(($563)>>3)]));
   $565=(($inOpen+($560<<3))|0);
   $566=(+(HEAPF64[(($565)>>3)]));
   $567=$564<$566;
   $_22=($567?$566:$564);
   $568=($562)-($_22);
   $569=($567?$564:$566);
   $570=(($inLow+($560<<3))|0);
   $571=(+(HEAPF64[(($570)>>3)]));
   $572=($569)-($571);
   $573=($568)+($572);
   $575=$573;
  } else {
   $575=0.0;
  }

  $576=($540)-($575);
  $577=($EqualPeriodTotal_1)+($576);
  $578=((($i_3)+(1))|0);
  $579=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $580=((($BodyLongTrailingIdx_0)+(1))|0);
  $581=((($EqualTrailingIdx_0)+(1))|0);
  $582=($i_3|0)<($endIdx|0);
  if ($582) {
   $EqualTrailingIdx_0=$581;$BodyLongTrailingIdx_0=$580;$ShadowVeryShortTrailingIdx_0=$579;$outIdx_0=$outIdx_1;$i_3=$578;$EqualPeriodTotal_1=$577;$BodyLongPeriodTotal_1=$512;$ShadowVeryShortPeriodTotal_1=$450;
  } else {
   break;
  }
 }
 $584=((($smax36)+(1))|0);
 $585=((($584)-($smax37))|0);
 HEAP32[(($outNBElement)>>2)]=$585;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLSHOOTINGSTAR_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$__=0,$10=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+264)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=(($1+336)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($_|0)>($8|0);
 $__=($9?$_:$8);
 $10=((($__)+(1))|0);
 return (($10)|0);
}


function _TA_CDLSHOOTINGSTAR($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond22=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$BodyPeriodTotal_0_lcssa=.0,$31=0,$32=0,$33=0,$34=0,$i_033=0,$BodyPeriodTotal_032=.0,$37=0;
 var $38=.0,$39=0,$40=.0,$41=.0,$42=.0,$44=0,$45=.0,$46=0,$47=.0,$48=.0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$_=.0,$57=.0,$58=.0;
 var $59=0,$60=.0,$61=.0,$62=.0,$64=.0,$65=.0,$66=0,$67=0,$ShadowLongPeriodTotal_0_lcssa=.0,$68=0,$69=0,$70=0,$71=0,$72=0,$smax37=0,$73=0,$smax38=0,$74=0,$75=0,$76=0;
 var $i_129=0,$ShadowLongPeriodTotal_028=.0,$79=0,$80=.0,$81=0,$82=.0,$83=.0,$84=.0,$86=0,$87=.0,$88=0,$89=.0,$90=.0,$92=0,$93=.0,$94=0,$95=.0,$96=0,$97=.0,$98=0;
 var $_8=.0,$99=.0,$100=.0,$101=0,$102=.0,$103=.0,$104=.0,$106=.0,$107=.0,$108=0,$109=0,$smax39=0,$i_2_lcssa=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$110=0,$smax=0,$111=0,$i_225=0,$ShadowVeryShortPeriodTotal_024=.0,$114=0;
 var $115=.0,$116=0,$117=.0,$118=.0,$119=.0,$121=0,$122=.0,$123=0,$124=.0,$125=.0,$127=0,$128=.0,$129=0,$130=.0,$131=0,$132=.0,$133=0,$_9=.0,$134=.0,$135=.0;
 var $136=0,$137=.0,$138=.0,$139=.0,$141=.0,$142=.0,$143=0,$144=0,$BodyPeriodTotal_1=.0,$ShadowLongPeriodTotal_1=.0,$ShadowVeryShortPeriodTotal_1=.0,$i_3=0,$outIdx_0=0,$BodyTrailingIdx_0=0,$ShadowLongTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$146=0,$147=.0,$148=0,$149=.0;
 var $150=.0,$151=.0,$152=0,$153=0,$154=.0,$155=0,$156=0,$157=0,$159=.0,$160=.0,$162=0,$163=0,$165=0,$166=.0,$167=0,$168=.0,$169=.0,$171=0,$173=0,$174=.0;
 var $175=0,$_10=.0,$176=.0,$177=.0,$178=0,$179=.0,$180=.0,$181=.0,$183=.0,$184=.0,$185=0,$186=0,$187=0,$188=0,$189=.0,$190=.0,$191=0,$193=0,$194=.0,$195=.0;
 var $196=.0,$197=0,$_11=.0,$198=.0,$199=0,$200=.0,$201=0,$202=0,$203=0,$205=.0,$206=.0,$208=0,$209=0,$211=.0,$212=.0,$214=0,$215=.0,$216=.0,$218=.0,$219=0;
 var $220=.0,$221=.0,$222=.0,$224=.0,$225=.0,$226=0,$227=0,$228=0,$229=0,$230=.0,$231=.0,$232=0,$234=.0,$235=.0,$236=0,$_13=.0,$237=0,$238=.0,$239=.0,$240=0;
 var $241=.0,$242=0,$243=0,$244=0,$246=.0,$247=.0,$249=0,$250=0,$252=.0,$253=.0,$255=.0,$256=.0,$258=.0,$_14=.0,$259=.0,$260=.0,$262=.0,$263=.0,$264=0,$265=0;
 var $266=0,$267=0,$268=.0,$269=.0,$270=0,$272=.0,$273=.0,$274=0,$_15=.0,$275=0,$276=0,$277=.0,$278=0,$279=.0,$280=0,$281=.0,$282=0,$284=0,$286=0,$outIdx_1=0;
 var $288=0,$289=0,$290=0,$292=.0,$293=.0,$294=.0,$295=.0,$297=0,$298=.0,$299=0,$300=.0,$301=.0,$303=0,$304=.0,$305=.0,$306=.0,$307=0,$_16=.0,$308=.0,$309=.0;
 var $310=0,$311=.0,$312=.0,$313=.0,$315=.0,$316=0,$317=0,$318=0,$320=0,$321=.0,$322=0,$323=.0,$324=.0,$325=.0,$327=0,$328=.0,$329=0,$330=.0,$331=.0,$333=0;
 var $334=.0,$335=0,$336=.0,$337=0,$338=.0,$339=0,$_17=.0,$340=.0,$341=.0,$342=0,$343=.0,$344=.0,$345=.0,$347=.0,$348=.0,$349=.0,$350=0,$351=0,$352=0,$354=.0;
 var $355=.0,$356=.0,$357=.0,$359=0,$360=.0,$361=0,$362=.0,$363=.0,$365=0,$366=.0,$367=.0,$368=.0,$369=0,$_18=.0,$370=.0,$371=.0,$372=0,$373=.0,$374=.0,$375=.0;
 var $377=.0,$378=0,$379=0,$380=0,$382=0,$383=.0,$384=0,$385=.0,$386=.0,$387=.0,$389=0,$390=.0,$391=0,$392=.0,$393=.0,$395=0,$396=.0,$397=0,$398=.0,$399=0;
 var $400=.0,$401=0,$_19=.0,$402=.0,$403=.0,$404=0,$405=.0,$406=.0,$407=.0,$409=.0,$410=.0,$411=.0,$412=0,$413=0,$414=0,$416=.0,$417=.0,$418=.0,$419=.0,$421=0;
 var $422=.0,$423=0,$424=.0,$425=.0,$427=0,$428=.0,$429=.0,$430=.0,$431=0,$_20=.0,$432=.0,$433=.0,$434=0,$435=.0,$436=.0,$437=.0,$439=.0,$440=0,$441=0,$442=0;
 var $444=0,$445=.0,$446=0,$447=.0,$448=.0,$449=.0,$451=0,$452=.0,$453=0,$454=.0,$455=.0,$457=0,$458=.0,$459=0,$460=.0,$461=0,$462=.0,$463=0,$_21=.0,$464=.0;
 var $465=.0,$466=0,$467=.0,$468=.0,$469=.0,$471=.0,$472=.0,$473=.0,$474=0,$475=0,$476=0,$477=0,$478=0,$480=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond22=$10|$or_cond5_not;
 if ($or_cond22) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLSHOOTINGSTAR_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+216)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+264)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=(($17+336)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($_startIdx)-($25))|0);
 $27=($19|0)>0;
 if ($27) {
  $28=((HEAP32[((272)>>2)])|0);
  $29=(($28+212)|0);
  $30=((HEAP32[(($29)>>2)])|0);
  $BodyPeriodTotal_032=0.0;$i_033=$20;
  while(1) {


   if (((($30|0))|0)==((1)|0)) {
    $44=(($inHigh+($i_033<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=(($inLow+($i_033<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=($45)-($47);
    $64=$48;
   } else if (((($30|0))|0)==((0)|0)) {
    $37=(($inClose+($i_033<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=(($inOpen+($i_033<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=($38)-($40);
    $42=(+(Math_abs((+($41)))));
    $64=$42;
   } else if (((($30|0))|0)==((2)|0)) {
    $50=(($inHigh+($i_033<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inClose+($i_033<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inOpen+($i_033<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=$53<$55;
    $_=($56?$55:$53);
    $57=($51)-($_);
    $58=($56?$53:$55);
    $59=(($inLow+($i_033<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=($57)+($61);
    $64=$62;
   } else {
    $64=0.0;
   }

   $65=($BodyPeriodTotal_032)+($64);
   $66=((($i_033)+(1))|0);
   $67=($66|0)<($_startIdx|0);
   if ($67) {
    $BodyPeriodTotal_032=$65;$i_033=$66;
   } else {
    $BodyPeriodTotal_0_lcssa=$65;
    break;
   }
  }
 } else {
  $BodyPeriodTotal_0_lcssa=0.0;
 }

 $31=($22|0)>0;
 if ($31) {
  $32=((HEAP32[((272)>>2)])|0);
  $33=(($32+260)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $ShadowLongPeriodTotal_028=0.0;$i_129=$23;
  while(1) {


   if (((($34|0))|0)==((0)|0)) {
    $79=(($inClose+($i_129<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=(($inOpen+($i_129<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=($80)-($82);
    $84=(+(Math_abs((+($83)))));
    $106=$84;
   } else if (((($34|0))|0)==((2)|0)) {
    $92=(($inHigh+($i_129<<3))|0);
    $93=(+(HEAPF64[(($92)>>3)]));
    $94=(($inClose+($i_129<<3))|0);
    $95=(+(HEAPF64[(($94)>>3)]));
    $96=(($inOpen+($i_129<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=$95<$97;
    $_8=($98?$97:$95);
    $99=($93)-($_8);
    $100=($98?$95:$97);
    $101=(($inLow+($i_129<<3))|0);
    $102=(+(HEAPF64[(($101)>>3)]));
    $103=($100)-($102);
    $104=($99)+($103);
    $106=$104;
   } else if (((($34|0))|0)==((1)|0)) {
    $86=(($inHigh+($i_129<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=(($inLow+($i_129<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=($87)-($89);
    $106=$90;
   } else {
    $106=0.0;
   }

   $107=($ShadowLongPeriodTotal_028)+($106);
   $108=((($i_129)+(1))|0);
   $109=($108|0)<($_startIdx|0);
   if ($109) {
    $ShadowLongPeriodTotal_028=$107;$i_129=$108;
   } else {
    $ShadowLongPeriodTotal_0_lcssa=$107;
    break;
   }
  }
 } else {
  $ShadowLongPeriodTotal_0_lcssa=0.0;
 }

 $68=($25|0)>0;
 if ($68) {
  $69=((HEAP32[((272)>>2)])|0);
  $70=(($69+332)|0);
  $71=((HEAP32[(($70)>>2)])|0);
  $72=($12|0)>($startIdx|0);
  $smax37=($72?$12:$startIdx);
  $73=($12|0)>($startIdx|0);
  $smax38=($73?$12:$startIdx);
  $74=((($smax38)+(1))|0);
  $75=((($74)-($25))|0);
  $76=($smax37|0)>($75|0);
  $ShadowVeryShortPeriodTotal_024=0.0;$i_225=$26;
  while(1) {


   if (((($71|0))|0)==((0)|0)) {
    $114=(($inClose+($i_225<<3))|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $116=(($inOpen+($i_225<<3))|0);
    $117=(+(HEAPF64[(($116)>>3)]));
    $118=($115)-($117);
    $119=(+(Math_abs((+($118)))));
    $141=$119;
   } else if (((($71|0))|0)==((2)|0)) {
    $127=(($inHigh+($i_225<<3))|0);
    $128=(+(HEAPF64[(($127)>>3)]));
    $129=(($inClose+($i_225<<3))|0);
    $130=(+(HEAPF64[(($129)>>3)]));
    $131=(($inOpen+($i_225<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=$130<$132;
    $_9=($133?$132:$130);
    $134=($128)-($_9);
    $135=($133?$130:$132);
    $136=(($inLow+($i_225<<3))|0);
    $137=(+(HEAPF64[(($136)>>3)]));
    $138=($135)-($137);
    $139=($134)+($138);
    $141=$139;
   } else if (((($71|0))|0)==((1)|0)) {
    $121=(($inHigh+($i_225<<3))|0);
    $122=(+(HEAPF64[(($121)>>3)]));
    $123=(($inLow+($i_225<<3))|0);
    $124=(+(HEAPF64[(($123)>>3)]));
    $125=($122)-($124);
    $141=$125;
   } else {
    $141=0.0;
   }

   $142=($ShadowVeryShortPeriodTotal_024)+($141);
   $143=((($i_225)+(1))|0);
   $144=($143|0)<($_startIdx|0);
   if ($144) {
    $ShadowVeryShortPeriodTotal_024=$142;$i_225=$143;
   } else {
    break;
   }
  }
  $smax39=($76?$smax37:$75);
  $ShadowVeryShortPeriodTotal_0_lcssa=$142;$i_2_lcssa=$smax39;
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;$i_2_lcssa=$26;
 }


 $110=($i_2_lcssa|0)>($endIdx|0);
 $smax=($110?$i_2_lcssa:$endIdx);
 $111=((($smax)+(1))|0);
 $ShadowVeryShortTrailingIdx_0=$26;$ShadowLongTrailingIdx_0=$23;$BodyTrailingIdx_0=$20;$outIdx_0=0;$i_3=$i_2_lcssa;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;$ShadowLongPeriodTotal_1=$ShadowLongPeriodTotal_0_lcssa;$BodyPeriodTotal_1=$BodyPeriodTotal_0_lcssa;
 while(1) {








  $146=(($inClose+($i_3<<3))|0);
  $147=(+(HEAPF64[(($146)>>3)]));
  $148=(($inOpen+($i_3<<3))|0);
  $149=(+(HEAPF64[(($148)>>3)]));
  $150=($147)-($149);
  $151=(+(Math_abs((+($150)))));
  $152=((HEAP32[((272)>>2)])|0);
  $153=(($152+224)|0);
  $154=(+(HEAPF64[(($153)>>3)]));
  $155=(($152+216)|0);
  $156=((HEAP32[(($155)>>2)])|0);
  $157=($156|0)==0;
  do {
   if ($157) {
    $162=(($152+212)|0);
    $163=((HEAP32[(($162)>>2)])|0);
    if (((($163|0))|0)==((1)|0)) {
     $165=(($inHigh+($i_3<<3))|0);
     $166=(+(HEAPF64[(($165)>>3)]));
     $167=(($inLow+($i_3<<3))|0);
     $168=(+(HEAPF64[(($167)>>3)]));
     $169=($166)-($168);
     $183=$169;
     break;
    } else if (((($163|0))|0)==((0)|0)) {
     $183=$151;
     break;
    }
    $171=($163|0)==2;
    if (!($171)) {
     $183=0.0;
     break;
    }
    $173=(($inHigh+($i_3<<3))|0);
    $174=(+(HEAPF64[(($173)>>3)]));
    $175=$147<$149;
    $_10=($175?$149:$147);
    $176=($174)-($_10);
    $177=($175?$147:$149);
    $178=(($inLow+($i_3<<3))|0);
    $179=(+(HEAPF64[(($178)>>3)]));
    $180=($177)-($179);
    $181=($176)+($180);
    $183=$181;
   } else {
    $159=(+((($156|0))|0));
    $160=($BodyPeriodTotal_1)/($159);
    $183=$160;
   }
  } while(0);

  $184=($154)*($183);
  $185=((HEAP32[((272)>>2)])|0);
  $186=(($185+212)|0);
  $187=((HEAP32[(($186)>>2)])|0);
  $188=($187|0)==2;
  $189=($188?(2.0):(1.0));
  $190=($184)/($189);
  $191=$151<$190;
  do {
   if ($191) {
    $193=(($inHigh+($i_3<<3))|0);
    $194=(+(HEAPF64[(($193)>>3)]));
    $195=(+(HEAPF64[(($146)>>3)]));
    $196=(+(HEAPF64[(($148)>>3)]));
    $197=$195<$196;
    $_11=($197?$196:$195);
    $198=($194)-($_11);
    $199=(($185+272)|0);
    $200=(+(HEAPF64[(($199)>>3)]));
    $201=(($185+264)|0);
    $202=((HEAP32[(($201)>>2)])|0);
    $203=($202|0)==0;
    do {
     if ($203) {
      $208=(($185+260)|0);
      $209=((HEAP32[(($208)>>2)])|0);
      if (((($209|0))|0)==((0)|0)) {
       $211=($195)-($196);
       $212=(+(Math_abs((+($211)))));
       $224=$212;
       break;
      } else if (((($209|0))|0)==((2)|0)) {
       $218=($197?$195:$196);
       $219=(($inLow+($i_3<<3))|0);
       $220=(+(HEAPF64[(($219)>>3)]));
       $221=($218)-($220);
       $222=($198)+($221);
       $224=$222;
       break;
      } else if (((($209|0))|0)==((1)|0)) {
       $214=(($inLow+($i_3<<3))|0);
       $215=(+(HEAPF64[(($214)>>3)]));
       $216=($194)-($215);
       $224=$216;
       break;
      } else {
       $224=0.0;
       break;
      }
     } else {
      $205=(+((($202|0))|0));
      $206=($ShadowLongPeriodTotal_1)/($205);
      $224=$206;
     }
    } while(0);

    $225=($200)*($224);
    $226=((HEAP32[((272)>>2)])|0);
    $227=(($226+260)|0);
    $228=((HEAP32[(($227)>>2)])|0);
    $229=($228|0)==2;
    $230=($229?(2.0):(1.0));
    $231=($225)/($230);
    $232=$198>$231;
    if (!($232)) {
     label = 52;
     break;
    }
    $234=(+(HEAPF64[(($146)>>3)]));
    $235=(+(HEAPF64[(($148)>>3)]));
    $236=$234<$235;
    $_13=($236?$234:$235);
    $237=(($inLow+($i_3<<3))|0);
    $238=(+(HEAPF64[(($237)>>3)]));
    $239=($_13)-($238);
    $240=(($226+344)|0);
    $241=(+(HEAPF64[(($240)>>3)]));
    $242=(($226+336)|0);
    $243=((HEAP32[(($242)>>2)])|0);
    $244=($243|0)==0;
    do {
     if ($244) {
      $249=(($226+332)|0);
      $250=((HEAP32[(($249)>>2)])|0);
      if (((($250|0))|0)==((0)|0)) {
       $252=($234)-($235);
       $253=(+(Math_abs((+($252)))));
       $262=$253;
       break;
      } else if (((($250|0))|0)==((2)|0)) {
       $258=(+(HEAPF64[(($193)>>3)]));
       $_14=($236?$235:$234);
       $259=($258)-($_14);
       $260=($239)+($259);
       $262=$260;
       break;
      } else if (((($250|0))|0)==((1)|0)) {
       $255=(+(HEAPF64[(($193)>>3)]));
       $256=($255)-($238);
       $262=$256;
       break;
      } else {
       $262=0.0;
       break;
      }
     } else {
      $246=(+((($243|0))|0));
      $247=($ShadowVeryShortPeriodTotal_1)/($246);
      $262=$247;
     }
    } while(0);

    $263=($241)*($262);
    $264=((HEAP32[((272)>>2)])|0);
    $265=(($264+332)|0);
    $266=((HEAP32[(($265)>>2)])|0);
    $267=($266|0)==2;
    $268=($267?(2.0):(1.0));
    $269=($263)/($268);
    $270=$239<$269;
    if (!($270)) {
     label = 52;
     break;
    }
    $272=(+(HEAPF64[(($148)>>3)]));
    $273=(+(HEAPF64[(($146)>>3)]));
    $274=$272<$273;
    $_15=($274?$272:$273);
    $275=((($i_3)-(1))|0);
    $276=(($inOpen+($275<<3))|0);
    $277=(+(HEAPF64[(($276)>>3)]));
    $278=(($inClose+($275<<3))|0);
    $279=(+(HEAPF64[(($278)>>3)]));
    $280=$277>$279;
    $281=($280?$277:$279);
    $282=$_15>$281;
    if (!($282)) {
     label = 52;
     break;
    }
    $284=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($284)>>2)]=-100;
   } else {
    label = 52;
   }
  } while(0);
  if ((label|0) == 52) {
   label = 0;
   $286=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($286)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $288=((HEAP32[((272)>>2)])|0);
  $289=(($288+212)|0);
  $290=((HEAP32[(($289)>>2)])|0);
  if (((($290|0))|0)==((2)|0)) {
   $303=(($inHigh+($i_3<<3))|0);
   $304=(+(HEAPF64[(($303)>>3)]));
   $305=(+(HEAPF64[(($146)>>3)]));
   $306=(+(HEAPF64[(($148)>>3)]));
   $307=$305<$306;
   $_16=($307?$306:$305);
   $308=($304)-($_16);
   $309=($307?$305:$306);
   $310=(($inLow+($i_3<<3))|0);
   $311=(+(HEAPF64[(($310)>>3)]));
   $312=($309)-($311);
   $313=($308)+($312);
   $315=$313;
  } else if (((($290|0))|0)==((1)|0)) {
   $297=(($inHigh+($i_3<<3))|0);
   $298=(+(HEAPF64[(($297)>>3)]));
   $299=(($inLow+($i_3<<3))|0);
   $300=(+(HEAPF64[(($299)>>3)]));
   $301=($298)-($300);
   $315=$301;
  } else if (((($290|0))|0)==((0)|0)) {
   $292=(+(HEAPF64[(($146)>>3)]));
   $293=(+(HEAPF64[(($148)>>3)]));
   $294=($292)-($293);
   $295=(+(Math_abs((+($294)))));
   $315=$295;
  } else {
   $315=0.0;
  }

  $316=((HEAP32[((272)>>2)])|0);
  $317=(($316+212)|0);
  $318=((HEAP32[(($317)>>2)])|0);
  if (((($318|0))|0)==((0)|0)) {
   $320=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $321=(+(HEAPF64[(($320)>>3)]));
   $322=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $323=(+(HEAPF64[(($322)>>3)]));
   $324=($321)-($323);
   $325=(+(Math_abs((+($324)))));
   $347=$325;
  } else if (((($318|0))|0)==((1)|0)) {
   $327=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $328=(+(HEAPF64[(($327)>>3)]));
   $329=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $330=(+(HEAPF64[(($329)>>3)]));
   $331=($328)-($330);
   $347=$331;
  } else if (((($318|0))|0)==((2)|0)) {
   $333=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $334=(+(HEAPF64[(($333)>>3)]));
   $335=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $336=(+(HEAPF64[(($335)>>3)]));
   $337=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $338=(+(HEAPF64[(($337)>>3)]));
   $339=$336<$338;
   $_17=($339?$338:$336);
   $340=($334)-($_17);
   $341=($339?$336:$338);
   $342=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $343=(+(HEAPF64[(($342)>>3)]));
   $344=($341)-($343);
   $345=($340)+($344);
   $347=$345;
  } else {
   $347=0.0;
  }

  $348=($315)-($347);
  $349=($BodyPeriodTotal_1)+($348);
  $350=((HEAP32[((272)>>2)])|0);
  $351=(($350+260)|0);
  $352=((HEAP32[(($351)>>2)])|0);
  if (((($352|0))|0)==((2)|0)) {
   $365=(($inHigh+($i_3<<3))|0);
   $366=(+(HEAPF64[(($365)>>3)]));
   $367=(+(HEAPF64[(($146)>>3)]));
   $368=(+(HEAPF64[(($148)>>3)]));
   $369=$367<$368;
   $_18=($369?$368:$367);
   $370=($366)-($_18);
   $371=($369?$367:$368);
   $372=(($inLow+($i_3<<3))|0);
   $373=(+(HEAPF64[(($372)>>3)]));
   $374=($371)-($373);
   $375=($370)+($374);
   $377=$375;
  } else if (((($352|0))|0)==((0)|0)) {
   $354=(+(HEAPF64[(($146)>>3)]));
   $355=(+(HEAPF64[(($148)>>3)]));
   $356=($354)-($355);
   $357=(+(Math_abs((+($356)))));
   $377=$357;
  } else if (((($352|0))|0)==((1)|0)) {
   $359=(($inHigh+($i_3<<3))|0);
   $360=(+(HEAPF64[(($359)>>3)]));
   $361=(($inLow+($i_3<<3))|0);
   $362=(+(HEAPF64[(($361)>>3)]));
   $363=($360)-($362);
   $377=$363;
  } else {
   $377=0.0;
  }

  $378=((HEAP32[((272)>>2)])|0);
  $379=(($378+260)|0);
  $380=((HEAP32[(($379)>>2)])|0);
  if (((($380|0))|0)==((0)|0)) {
   $382=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $383=(+(HEAPF64[(($382)>>3)]));
   $384=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $385=(+(HEAPF64[(($384)>>3)]));
   $386=($383)-($385);
   $387=(+(Math_abs((+($386)))));
   $409=$387;
  } else if (((($380|0))|0)==((1)|0)) {
   $389=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $390=(+(HEAPF64[(($389)>>3)]));
   $391=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $392=(+(HEAPF64[(($391)>>3)]));
   $393=($390)-($392);
   $409=$393;
  } else if (((($380|0))|0)==((2)|0)) {
   $395=(($inHigh+($ShadowLongTrailingIdx_0<<3))|0);
   $396=(+(HEAPF64[(($395)>>3)]));
   $397=(($inClose+($ShadowLongTrailingIdx_0<<3))|0);
   $398=(+(HEAPF64[(($397)>>3)]));
   $399=(($inOpen+($ShadowLongTrailingIdx_0<<3))|0);
   $400=(+(HEAPF64[(($399)>>3)]));
   $401=$398<$400;
   $_19=($401?$400:$398);
   $402=($396)-($_19);
   $403=($401?$398:$400);
   $404=(($inLow+($ShadowLongTrailingIdx_0<<3))|0);
   $405=(+(HEAPF64[(($404)>>3)]));
   $406=($403)-($405);
   $407=($402)+($406);
   $409=$407;
  } else {
   $409=0.0;
  }

  $410=($377)-($409);
  $411=($ShadowLongPeriodTotal_1)+($410);
  $412=((HEAP32[((272)>>2)])|0);
  $413=(($412+332)|0);
  $414=((HEAP32[(($413)>>2)])|0);
  if (((($414|0))|0)==((0)|0)) {
   $416=(+(HEAPF64[(($146)>>3)]));
   $417=(+(HEAPF64[(($148)>>3)]));
   $418=($416)-($417);
   $419=(+(Math_abs((+($418)))));
   $439=$419;
  } else if (((($414|0))|0)==((1)|0)) {
   $421=(($inHigh+($i_3<<3))|0);
   $422=(+(HEAPF64[(($421)>>3)]));
   $423=(($inLow+($i_3<<3))|0);
   $424=(+(HEAPF64[(($423)>>3)]));
   $425=($422)-($424);
   $439=$425;
  } else if (((($414|0))|0)==((2)|0)) {
   $427=(($inHigh+($i_3<<3))|0);
   $428=(+(HEAPF64[(($427)>>3)]));
   $429=(+(HEAPF64[(($146)>>3)]));
   $430=(+(HEAPF64[(($148)>>3)]));
   $431=$429<$430;
   $_20=($431?$430:$429);
   $432=($428)-($_20);
   $433=($431?$429:$430);
   $434=(($inLow+($i_3<<3))|0);
   $435=(+(HEAPF64[(($434)>>3)]));
   $436=($433)-($435);
   $437=($432)+($436);
   $439=$437;
  } else {
   $439=0.0;
  }

  $440=((HEAP32[((272)>>2)])|0);
  $441=(($440+332)|0);
  $442=((HEAP32[(($441)>>2)])|0);
  if (((($442|0))|0)==((0)|0)) {
   $444=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $445=(+(HEAPF64[(($444)>>3)]));
   $446=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $447=(+(HEAPF64[(($446)>>3)]));
   $448=($445)-($447);
   $449=(+(Math_abs((+($448)))));
   $471=$449;
  } else if (((($442|0))|0)==((1)|0)) {
   $451=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $452=(+(HEAPF64[(($451)>>3)]));
   $453=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $454=(+(HEAPF64[(($453)>>3)]));
   $455=($452)-($454);
   $471=$455;
  } else if (((($442|0))|0)==((2)|0)) {
   $457=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $458=(+(HEAPF64[(($457)>>3)]));
   $459=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $460=(+(HEAPF64[(($459)>>3)]));
   $461=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $462=(+(HEAPF64[(($461)>>3)]));
   $463=$460<$462;
   $_21=($463?$462:$460);
   $464=($458)-($_21);
   $465=($463?$460:$462);
   $466=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $467=(+(HEAPF64[(($466)>>3)]));
   $468=($465)-($467);
   $469=($464)+($468);
   $471=$469;
  } else {
   $471=0.0;
  }

  $472=($439)-($471);
  $473=($ShadowVeryShortPeriodTotal_1)+($472);
  $474=((($i_3)+(1))|0);
  $475=((($BodyTrailingIdx_0)+(1))|0);
  $476=((($ShadowLongTrailingIdx_0)+(1))|0);
  $477=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $478=($i_3|0)<($endIdx|0);
  if ($478) {
   $ShadowVeryShortTrailingIdx_0=$477;$ShadowLongTrailingIdx_0=$476;$BodyTrailingIdx_0=$475;$outIdx_0=$outIdx_1;$i_3=$474;$ShadowVeryShortPeriodTotal_1=$473;$ShadowLongPeriodTotal_1=$411;$BodyPeriodTotal_1=$349;
  } else {
   break;
  }
 }
 $480=((($111)-($i_2_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$480;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLSHORTLINE_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+312)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 return (($_)|0);
}


function _TA_CDLSHORTLINE($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond18=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$BodyPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$32=0,$smax28=0,$33=0,$smax29=0,$34=0,$35=0;
 var $36=0,$i_024=0,$BodyPeriodTotal_023=.0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$44=.0,$46=0,$47=.0,$48=0,$49=.0,$50=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$57=.0;
 var $58=0,$_=.0,$59=.0,$60=.0,$61=0,$62=.0,$63=.0,$64=.0,$66=.0,$67=.0,$68=0,$69=0,$smax30=0,$i_1_lcssa=0,$ShadowPeriodTotal_0_lcssa=.0,$70=0,$smax=0,$71=0,$i_121=0,$ShadowPeriodTotal_020=.0;
 var $74=0,$75=.0,$76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=.0,$83=0,$84=.0,$85=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$_8=.0,$94=.0;
 var $95=.0,$96=0,$97=.0,$98=.0,$99=.0,$101=.0,$102=.0,$103=0,$104=0,$BodyPeriodTotal_1=.0,$ShadowPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyTrailingIdx_0=0,$ShadowTrailingIdx_0=0,$106=0,$107=.0,$108=0,$109=.0,$110=.0;
 var $111=.0,$112=0,$113=0,$114=.0,$115=0,$116=0,$117=0,$119=.0,$120=.0,$122=0,$123=0,$125=0,$126=.0,$127=0,$128=.0,$129=.0,$131=0,$133=0,$134=.0,$135=0;
 var $_9=.0,$136=.0,$137=.0,$138=0,$139=.0,$140=.0,$141=.0,$143=.0,$144=.0,$145=0,$146=0,$147=0,$148=0,$149=.0,$150=.0,$151=0,$153=0,$154=.0,$155=.0,$156=.0;
 var $157=0,$_10=.0,$158=.0,$159=0,$160=.0,$161=0,$162=0,$163=0,$165=.0,$166=.0,$168=0,$169=0,$171=.0,$172=.0,$174=0,$175=.0,$176=.0,$178=.0,$179=0,$180=.0;
 var $181=.0,$182=.0,$184=.0,$185=.0,$186=0,$187=0,$188=0,$189=0,$190=.0,$191=.0,$192=0,$194=.0,$195=.0,$196=0,$_12=.0,$197=0,$198=.0,$199=.0,$200=0,$201=.0;
 var $202=0,$203=0,$204=0,$206=.0,$207=.0,$210=.0,$211=.0,$213=.0,$214=.0,$216=.0,$_13=.0,$217=.0,$218=.0,$220=.0,$221=.0,$222=0,$223=0,$224=0,$225=0,$226=.0;
 var $227=.0,$228=0,$230=.0,$231=.0,$232=0,$233=0,$234=0,$236=0,$outIdx_1=0,$238=0,$239=0,$240=0,$242=.0,$243=.0,$244=.0,$245=.0,$247=0,$248=.0,$249=0,$250=.0;
 var $251=.0,$253=0,$254=.0,$255=.0,$256=.0,$257=0,$_14=.0,$258=.0,$259=.0,$260=0,$261=.0,$262=.0,$263=.0,$265=.0,$266=0,$267=0,$268=0,$270=0,$271=.0,$272=0;
 var $273=.0,$274=.0,$275=.0,$277=0,$278=.0,$279=0,$280=.0,$281=.0,$283=0,$284=.0,$285=0,$286=.0,$287=0,$288=.0,$289=0,$_15=.0,$290=.0,$291=.0,$292=0,$293=.0;
 var $294=.0,$295=.0,$297=.0,$298=.0,$299=.0,$300=0,$301=0,$302=0,$304=.0,$305=.0,$306=.0,$307=.0,$309=0,$310=.0,$311=0,$312=.0,$313=.0,$315=0,$316=.0,$317=.0;
 var $318=.0,$319=0,$_16=.0,$320=.0,$321=.0,$322=0,$323=.0,$324=.0,$325=.0,$327=.0,$328=0,$329=0,$330=0,$332=0,$333=.0,$334=0,$335=.0,$336=.0,$337=.0,$339=0;
 var $340=.0,$341=0,$342=.0,$343=.0,$345=0,$346=.0,$347=0,$348=.0,$349=0,$350=.0,$351=0,$_17=.0,$352=.0,$353=.0,$354=0,$355=.0,$356=.0,$357=.0,$359=.0,$360=.0;
 var $361=.0,$362=0,$363=0,$364=0,$365=0,$367=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond18=$10|$or_cond5_not;
 if ($or_cond18) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLSHORTLINE_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+216)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+312)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+212)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $BodyPeriodTotal_023=0.0;$i_024=$20;
  while(1) {


   if (((($27|0))|0)==((0)|0)) {
    $39=(($inClose+($i_024<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inOpen+($i_024<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $44=(+(Math_abs((+($43)))));
    $66=$44;
   } else if (((($27|0))|0)==((1)|0)) {
    $46=(($inHigh+($i_024<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inLow+($i_024<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=($47)-($49);
    $66=$50;
   } else if (((($27|0))|0)==((2)|0)) {
    $52=(($inHigh+($i_024<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inClose+($i_024<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=(($inOpen+($i_024<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=$55<$57;
    $_=($58?$57:$55);
    $59=($53)-($_);
    $60=($58?$55:$57);
    $61=(($inLow+($i_024<<3))|0);
    $62=(+(HEAPF64[(($61)>>3)]));
    $63=($60)-($62);
    $64=($59)+($63);
    $66=$64;
   } else {
    $66=0.0;
   }

   $67=($BodyPeriodTotal_023)+($66);
   $68=((($i_024)+(1))|0);
   $69=($68|0)<($_startIdx|0);
   if ($69) {
    $BodyPeriodTotal_023=$67;$i_024=$68;
   } else {
    $BodyPeriodTotal_0_lcssa=$67;
    break;
   }
  }
 } else {
  $BodyPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+308)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $32=($12|0)>($startIdx|0);
  $smax28=($32?$12:$startIdx);
  $33=($12|0)>($startIdx|0);
  $smax29=($33?$12:$startIdx);
  $34=((($smax29)+(1))|0);
  $35=((($34)-($22))|0);
  $36=($smax28|0)>($35|0);
  $ShadowPeriodTotal_020=0.0;$i_121=$23;
  while(1) {


   if (((($31|0))|0)==((0)|0)) {
    $74=(($inClose+($i_121<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($i_121<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $101=$79;
   } else if (((($31|0))|0)==((2)|0)) {
    $87=(($inHigh+($i_121<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inClose+($i_121<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inOpen+($i_121<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$90<$92;
    $_8=($93?$92:$90);
    $94=($88)-($_8);
    $95=($93?$90:$92);
    $96=(($inLow+($i_121<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $101=$99;
   } else if (((($31|0))|0)==((1)|0)) {
    $81=(($inHigh+($i_121<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=(($inLow+($i_121<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    $85=($82)-($84);
    $101=$85;
   } else {
    $101=0.0;
   }

   $102=($ShadowPeriodTotal_020)+($101);
   $103=((($i_121)+(1))|0);
   $104=($103|0)<($_startIdx|0);
   if ($104) {
    $ShadowPeriodTotal_020=$102;$i_121=$103;
   } else {
    break;
   }
  }
  $smax30=($36?$smax28:$35);
  $ShadowPeriodTotal_0_lcssa=$102;$i_1_lcssa=$smax30;
 } else {
  $ShadowPeriodTotal_0_lcssa=0.0;$i_1_lcssa=$23;
 }


 $70=($i_1_lcssa|0)>($endIdx|0);
 $smax=($70?$i_1_lcssa:$endIdx);
 $71=((($smax)+(1))|0);
 $ShadowTrailingIdx_0=$23;$BodyTrailingIdx_0=$20;$outIdx_0=0;$i_2=$i_1_lcssa;$ShadowPeriodTotal_1=$ShadowPeriodTotal_0_lcssa;$BodyPeriodTotal_1=$BodyPeriodTotal_0_lcssa;
 while(1) {






  $106=(($inClose+($i_2<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=(($inOpen+($i_2<<3))|0);
  $109=(+(HEAPF64[(($108)>>3)]));
  $110=($107)-($109);
  $111=(+(Math_abs((+($110)))));
  $112=((HEAP32[((272)>>2)])|0);
  $113=(($112+224)|0);
  $114=(+(HEAPF64[(($113)>>3)]));
  $115=(($112+216)|0);
  $116=((HEAP32[(($115)>>2)])|0);
  $117=($116|0)==0;
  do {
   if ($117) {
    $122=(($112+212)|0);
    $123=((HEAP32[(($122)>>2)])|0);
    if (((($123|0))|0)==((0)|0)) {
     $143=$111;
     break;
    } else if (((($123|0))|0)==((1)|0)) {
     $125=(($inHigh+($i_2<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=(($inLow+($i_2<<3))|0);
     $128=(+(HEAPF64[(($127)>>3)]));
     $129=($126)-($128);
     $143=$129;
     break;
    }
    $131=($123|0)==2;
    if (!($131)) {
     $143=0.0;
     break;
    }
    $133=(($inHigh+($i_2<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=$107<$109;
    $_9=($135?$109:$107);
    $136=($134)-($_9);
    $137=($135?$107:$109);
    $138=(($inLow+($i_2<<3))|0);
    $139=(+(HEAPF64[(($138)>>3)]));
    $140=($137)-($139);
    $141=($136)+($140);
    $143=$141;
   } else {
    $119=(+((($116|0))|0));
    $120=($BodyPeriodTotal_1)/($119);
    $143=$120;
   }
  } while(0);

  $144=($114)*($143);
  $145=((HEAP32[((272)>>2)])|0);
  $146=(($145+212)|0);
  $147=((HEAP32[(($146)>>2)])|0);
  $148=($147|0)==2;
  $149=($148?(2.0):(1.0));
  $150=($144)/($149);
  $151=$111<$150;
  do {
   if ($151) {
    $153=(($inHigh+($i_2<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=(+(HEAPF64[(($106)>>3)]));
    $156=(+(HEAPF64[(($108)>>3)]));
    $157=$155<$156;
    $_10=($157?$156:$155);
    $158=($154)-($_10);
    $159=(($145+320)|0);
    $160=(+(HEAPF64[(($159)>>3)]));
    $161=(($145+312)|0);
    $162=((HEAP32[(($161)>>2)])|0);
    $163=($162|0)==0;
    do {
     if ($163) {
      $168=(($145+308)|0);
      $169=((HEAP32[(($168)>>2)])|0);
      if (((($169|0))|0)==((1)|0)) {
       $174=(($inLow+($i_2<<3))|0);
       $175=(+(HEAPF64[(($174)>>3)]));
       $176=($154)-($175);
       $184=$176;
       break;
      } else if (((($169|0))|0)==((2)|0)) {
       $178=($157?$155:$156);
       $179=(($inLow+($i_2<<3))|0);
       $180=(+(HEAPF64[(($179)>>3)]));
       $181=($178)-($180);
       $182=($158)+($181);
       $184=$182;
       break;
      } else if (((($169|0))|0)==((0)|0)) {
       $171=($155)-($156);
       $172=(+(Math_abs((+($171)))));
       $184=$172;
       break;
      } else {
       $184=0.0;
       break;
      }
     } else {
      $165=(+((($162|0))|0));
      $166=($ShadowPeriodTotal_1)/($165);
      $184=$166;
     }
    } while(0);

    $185=($160)*($184);
    $186=((HEAP32[((272)>>2)])|0);
    $187=(($186+308)|0);
    $188=((HEAP32[(($187)>>2)])|0);
    $189=($188|0)==2;
    $190=($189?(2.0):(1.0));
    $191=($185)/($190);
    $192=$158<$191;
    if (!($192)) {
     label = 44;
     break;
    }
    $194=(+(HEAPF64[(($106)>>3)]));
    $195=(+(HEAPF64[(($108)>>3)]));
    $196=$194<$195;
    $_12=($196?$194:$195);
    $197=(($inLow+($i_2<<3))|0);
    $198=(+(HEAPF64[(($197)>>3)]));
    $199=($_12)-($198);
    $200=(($186+320)|0);
    $201=(+(HEAPF64[(($200)>>3)]));
    $202=(($186+312)|0);
    $203=((HEAP32[(($202)>>2)])|0);
    $204=($203|0)==0;
    do {
     if ($204) {
      if (((($188|0))|0)==((0)|0)) {
       $210=($194)-($195);
       $211=(+(Math_abs((+($210)))));
       $220=$211;
       break;
      } else if (((($188|0))|0)==((1)|0)) {
       $213=(+(HEAPF64[(($153)>>3)]));
       $214=($213)-($198);
       $220=$214;
       break;
      } else if (((($188|0))|0)==((2)|0)) {
       $216=(+(HEAPF64[(($153)>>3)]));
       $_13=($196?$195:$194);
       $217=($216)-($_13);
       $218=($199)+($217);
       $220=$218;
       break;
      } else {
       $220=0.0;
       break;
      }
     } else {
      $206=(+((($203|0))|0));
      $207=($ShadowPeriodTotal_1)/($206);
      $220=$207;
     }
    } while(0);

    $221=($201)*($220);
    $222=((HEAP32[((272)>>2)])|0);
    $223=(($222+308)|0);
    $224=((HEAP32[(($223)>>2)])|0);
    $225=($224|0)==2;
    $226=($225?(2.0):(1.0));
    $227=($221)/($226);
    $228=$199<$227;
    if (!($228)) {
     label = 44;
     break;
    }
    $230=(+(HEAPF64[(($106)>>3)]));
    $231=(+(HEAPF64[(($108)>>3)]));
    $232=$230>=$231;
    $233=($232?100:-100);
    $234=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($234)>>2)]=$233;
   } else {
    label = 44;
   }
  } while(0);
  if ((label|0) == 44) {
   label = 0;
   $236=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($236)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $238=((HEAP32[((272)>>2)])|0);
  $239=(($238+212)|0);
  $240=((HEAP32[(($239)>>2)])|0);
  if (((($240|0))|0)==((1)|0)) {
   $247=(($inHigh+($i_2<<3))|0);
   $248=(+(HEAPF64[(($247)>>3)]));
   $249=(($inLow+($i_2<<3))|0);
   $250=(+(HEAPF64[(($249)>>3)]));
   $251=($248)-($250);
   $265=$251;
  } else if (((($240|0))|0)==((0)|0)) {
   $242=(+(HEAPF64[(($106)>>3)]));
   $243=(+(HEAPF64[(($108)>>3)]));
   $244=($242)-($243);
   $245=(+(Math_abs((+($244)))));
   $265=$245;
  } else if (((($240|0))|0)==((2)|0)) {
   $253=(($inHigh+($i_2<<3))|0);
   $254=(+(HEAPF64[(($253)>>3)]));
   $255=(+(HEAPF64[(($106)>>3)]));
   $256=(+(HEAPF64[(($108)>>3)]));
   $257=$255<$256;
   $_14=($257?$256:$255);
   $258=($254)-($_14);
   $259=($257?$255:$256);
   $260=(($inLow+($i_2<<3))|0);
   $261=(+(HEAPF64[(($260)>>3)]));
   $262=($259)-($261);
   $263=($258)+($262);
   $265=$263;
  } else {
   $265=0.0;
  }

  $266=((HEAP32[((272)>>2)])|0);
  $267=(($266+212)|0);
  $268=((HEAP32[(($267)>>2)])|0);
  if (((($268|0))|0)==((0)|0)) {
   $270=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $271=(+(HEAPF64[(($270)>>3)]));
   $272=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $273=(+(HEAPF64[(($272)>>3)]));
   $274=($271)-($273);
   $275=(+(Math_abs((+($274)))));
   $297=$275;
  } else if (((($268|0))|0)==((1)|0)) {
   $277=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $278=(+(HEAPF64[(($277)>>3)]));
   $279=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $280=(+(HEAPF64[(($279)>>3)]));
   $281=($278)-($280);
   $297=$281;
  } else if (((($268|0))|0)==((2)|0)) {
   $283=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $284=(+(HEAPF64[(($283)>>3)]));
   $285=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $286=(+(HEAPF64[(($285)>>3)]));
   $287=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $288=(+(HEAPF64[(($287)>>3)]));
   $289=$286<$288;
   $_15=($289?$288:$286);
   $290=($284)-($_15);
   $291=($289?$286:$288);
   $292=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $293=(+(HEAPF64[(($292)>>3)]));
   $294=($291)-($293);
   $295=($290)+($294);
   $297=$295;
  } else {
   $297=0.0;
  }

  $298=($265)-($297);
  $299=($BodyPeriodTotal_1)+($298);
  $300=((HEAP32[((272)>>2)])|0);
  $301=(($300+308)|0);
  $302=((HEAP32[(($301)>>2)])|0);
  if (((($302|0))|0)==((2)|0)) {
   $315=(($inHigh+($i_2<<3))|0);
   $316=(+(HEAPF64[(($315)>>3)]));
   $317=(+(HEAPF64[(($106)>>3)]));
   $318=(+(HEAPF64[(($108)>>3)]));
   $319=$317<$318;
   $_16=($319?$318:$317);
   $320=($316)-($_16);
   $321=($319?$317:$318);
   $322=(($inLow+($i_2<<3))|0);
   $323=(+(HEAPF64[(($322)>>3)]));
   $324=($321)-($323);
   $325=($320)+($324);
   $327=$325;
  } else if (((($302|0))|0)==((0)|0)) {
   $304=(+(HEAPF64[(($106)>>3)]));
   $305=(+(HEAPF64[(($108)>>3)]));
   $306=($304)-($305);
   $307=(+(Math_abs((+($306)))));
   $327=$307;
  } else if (((($302|0))|0)==((1)|0)) {
   $309=(($inHigh+($i_2<<3))|0);
   $310=(+(HEAPF64[(($309)>>3)]));
   $311=(($inLow+($i_2<<3))|0);
   $312=(+(HEAPF64[(($311)>>3)]));
   $313=($310)-($312);
   $327=$313;
  } else {
   $327=0.0;
  }

  $328=((HEAP32[((272)>>2)])|0);
  $329=(($328+308)|0);
  $330=((HEAP32[(($329)>>2)])|0);
  if (((($330|0))|0)==((0)|0)) {
   $332=(($inClose+($ShadowTrailingIdx_0<<3))|0);
   $333=(+(HEAPF64[(($332)>>3)]));
   $334=(($inOpen+($ShadowTrailingIdx_0<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=($333)-($335);
   $337=(+(Math_abs((+($336)))));
   $359=$337;
  } else if (((($330|0))|0)==((1)|0)) {
   $339=(($inHigh+($ShadowTrailingIdx_0<<3))|0);
   $340=(+(HEAPF64[(($339)>>3)]));
   $341=(($inLow+($ShadowTrailingIdx_0<<3))|0);
   $342=(+(HEAPF64[(($341)>>3)]));
   $343=($340)-($342);
   $359=$343;
  } else if (((($330|0))|0)==((2)|0)) {
   $345=(($inHigh+($ShadowTrailingIdx_0<<3))|0);
   $346=(+(HEAPF64[(($345)>>3)]));
   $347=(($inClose+($ShadowTrailingIdx_0<<3))|0);
   $348=(+(HEAPF64[(($347)>>3)]));
   $349=(($inOpen+($ShadowTrailingIdx_0<<3))|0);
   $350=(+(HEAPF64[(($349)>>3)]));
   $351=$348<$350;
   $_17=($351?$350:$348);
   $352=($346)-($_17);
   $353=($351?$348:$350);
   $354=(($inLow+($ShadowTrailingIdx_0<<3))|0);
   $355=(+(HEAPF64[(($354)>>3)]));
   $356=($353)-($355);
   $357=($352)+($356);
   $359=$357;
  } else {
   $359=0.0;
  }

  $360=($327)-($359);
  $361=($ShadowPeriodTotal_1)+($360);
  $362=((($i_2)+(1))|0);
  $363=((($BodyTrailingIdx_0)+(1))|0);
  $364=((($ShadowTrailingIdx_0)+(1))|0);
  $365=($i_2|0)<($endIdx|0);
  if ($365) {
   $ShadowTrailingIdx_0=$364;$BodyTrailingIdx_0=$363;$outIdx_0=$outIdx_1;$i_2=$362;$ShadowPeriodTotal_1=$361;$BodyPeriodTotal_1=$299;
  } else {
   break;
  }
 }
 $367=((($71)-($i_1_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$367;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLSPINNINGTOP_Lookback(){
 var $1=0,$2=0,$3=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 return (($3)|0);
}


function _TA_CDLSPINNINGTOP($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond13=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$smax18=0,$26=0,$smax19=0,$27=0,$28=0,$29=0,$smax20=0,$i_0_lcssa=0,$BodyPeriodTotal_0_lcssa=.0,$30=0,$smax=0,$31=0,$i_015=0;
 var $BodyPeriodTotal_014=.0,$34=0,$35=.0,$36=0,$37=.0,$38=.0,$39=.0,$41=0,$42=.0,$43=0,$44=.0,$45=.0,$47=0,$48=.0,$49=0,$50=.0,$51=0,$52=.0,$53=0,$_=.0;
 var $54=.0,$55=.0,$56=0,$57=.0,$58=.0,$59=.0,$61=.0,$62=.0,$63=0,$64=0,$BodyPeriodTotal_1=.0,$i_1=0,$outIdx_0=0,$BodyTrailingIdx_0=0,$66=0,$67=.0,$68=0,$69=.0,$70=.0,$71=.0;
 var $72=0,$73=0,$74=.0,$75=0,$76=0,$77=0,$79=.0,$80=.0,$82=0,$83=0,$85=0,$86=.0,$87=0,$88=.0,$89=.0,$91=0,$93=0,$94=.0,$95=0,$_8=.0;
 var $96=.0,$97=.0,$98=0,$99=.0,$100=.0,$101=.0,$103=.0,$104=.0,$105=0,$106=0,$107=0,$108=0,$109=.0,$110=.0,$111=0,$113=0,$114=.0,$115=.0,$116=.0,$117=0;
 var $_9=.0,$118=.0,$119=.0,$120=.0,$121=0,$_10=.0,$123=0,$124=.0,$125=.0,$126=0,$128=0,$129=0,$130=0,$132=0,$outIdx_1=0,$134=0,$135=0,$136=0,$138=.0,$139=.0;
 var $140=.0,$141=.0,$143=0,$144=.0,$145=0,$146=.0,$147=.0,$149=0,$150=.0,$151=.0,$152=.0,$153=0,$_11=.0,$154=.0,$155=.0,$156=0,$157=.0,$158=.0,$159=.0,$161=.0;
 var $162=0,$163=0,$164=0,$166=0,$167=.0,$168=0,$169=.0,$170=.0,$171=.0,$173=0,$174=.0,$175=0,$176=.0,$177=.0,$179=0,$180=.0,$181=0,$182=.0,$183=0,$184=.0;
 var $185=0,$_12=.0,$186=.0,$187=.0,$188=0,$189=.0,$190=.0,$191=.0,$193=.0,$194=.0,$195=.0,$196=0,$197=0,$198=0,$200=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond13=$10|$or_cond5_not;
 if ($or_cond13) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLSPINNINGTOP_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+216)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=($19|0)>0;
 if ($21) {
  $22=((HEAP32[((272)>>2)])|0);
  $23=(($22+212)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $25=($12|0)>($startIdx|0);
  $smax18=($25?$12:$startIdx);
  $26=($12|0)>($startIdx|0);
  $smax19=($26?$12:$startIdx);
  $27=((($smax19)+(1))|0);
  $28=((($27)-($19))|0);
  $29=($smax18|0)>($28|0);
  $BodyPeriodTotal_014=0.0;$i_015=$20;
  while(1) {


   if (((($24|0))|0)==((2)|0)) {
    $47=(($inHigh+($i_015<<3))|0);
    $48=(+(HEAPF64[(($47)>>3)]));
    $49=(($inClose+($i_015<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=(($inOpen+($i_015<<3))|0);
    $52=(+(HEAPF64[(($51)>>3)]));
    $53=$50<$52;
    $_=($53?$52:$50);
    $54=($48)-($_);
    $55=($53?$50:$52);
    $56=(($inLow+($i_015<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=($55)-($57);
    $59=($54)+($58);
    $61=$59;
   } else if (((($24|0))|0)==((1)|0)) {
    $41=(($inHigh+($i_015<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=(($inLow+($i_015<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=($42)-($44);
    $61=$45;
   } else if (((($24|0))|0)==((0)|0)) {
    $34=(($inClose+($i_015<<3))|0);
    $35=(+(HEAPF64[(($34)>>3)]));
    $36=(($inOpen+($i_015<<3))|0);
    $37=(+(HEAPF64[(($36)>>3)]));
    $38=($35)-($37);
    $39=(+(Math_abs((+($38)))));
    $61=$39;
   } else {
    $61=0.0;
   }

   $62=($BodyPeriodTotal_014)+($61);
   $63=((($i_015)+(1))|0);
   $64=($63|0)<($_startIdx|0);
   if ($64) {
    $BodyPeriodTotal_014=$62;$i_015=$63;
   } else {
    break;
   }
  }
  $smax20=($29?$smax18:$28);
  $BodyPeriodTotal_0_lcssa=$62;$i_0_lcssa=$smax20;
 } else {
  $BodyPeriodTotal_0_lcssa=0.0;$i_0_lcssa=$20;
 }


 $30=($i_0_lcssa|0)>($endIdx|0);
 $smax=($30?$i_0_lcssa:$endIdx);
 $31=((($smax)+(1))|0);
 $BodyTrailingIdx_0=$20;$outIdx_0=0;$i_1=$i_0_lcssa;$BodyPeriodTotal_1=$BodyPeriodTotal_0_lcssa;
 while(1) {




  $66=(($inClose+($i_1<<3))|0);
  $67=(+(HEAPF64[(($66)>>3)]));
  $68=(($inOpen+($i_1<<3))|0);
  $69=(+(HEAPF64[(($68)>>3)]));
  $70=($67)-($69);
  $71=(+(Math_abs((+($70)))));
  $72=((HEAP32[((272)>>2)])|0);
  $73=(($72+224)|0);
  $74=(+(HEAPF64[(($73)>>3)]));
  $75=(($72+216)|0);
  $76=((HEAP32[(($75)>>2)])|0);
  $77=($76|0)==0;
  do {
   if ($77) {
    $82=(($72+212)|0);
    $83=((HEAP32[(($82)>>2)])|0);
    if (((($83|0))|0)==((0)|0)) {
     $103=$71;
     break;
    } else if (((($83|0))|0)==((1)|0)) {
     $85=(($inHigh+($i_1<<3))|0);
     $86=(+(HEAPF64[(($85)>>3)]));
     $87=(($inLow+($i_1<<3))|0);
     $88=(+(HEAPF64[(($87)>>3)]));
     $89=($86)-($88);
     $103=$89;
     break;
    }
    $91=($83|0)==2;
    if (!($91)) {
     $103=0.0;
     break;
    }
    $93=(($inHigh+($i_1<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=$67<$69;
    $_8=($95?$69:$67);
    $96=($94)-($_8);
    $97=($95?$67:$69);
    $98=(($inLow+($i_1<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=($97)-($99);
    $101=($96)+($100);
    $103=$101;
   } else {
    $79=(+((($76|0))|0));
    $80=($BodyPeriodTotal_1)/($79);
    $103=$80;
   }
  } while(0);

  $104=($74)*($103);
  $105=((HEAP32[((272)>>2)])|0);
  $106=(($105+212)|0);
  $107=((HEAP32[(($106)>>2)])|0);
  $108=($107|0)==2;
  $109=($108?(2.0):(1.0));
  $110=($104)/($109);
  $111=$71<$110;
  do {
   if ($111) {
    $113=(($inHigh+($i_1<<3))|0);
    $114=(+(HEAPF64[(($113)>>3)]));
    $115=(+(HEAPF64[(($66)>>3)]));
    $116=(+(HEAPF64[(($68)>>3)]));
    $117=$115<$116;
    $_9=($117?$116:$115);
    $118=($114)-($_9);
    $119=($115)-($116);
    $120=(+(Math_abs((+($119)))));
    $121=$118>$120;
    if (!($121)) {
     label = 25;
     break;
    }
    $_10=($117?$115:$116);
    $123=(($inLow+($i_1<<3))|0);
    $124=(+(HEAPF64[(($123)>>3)]));
    $125=($_10)-($124);
    $126=$125>$120;
    if (!($126)) {
     label = 25;
     break;
    }
    $128=$115>=$116;
    $129=($128?100:-100);
    $130=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($130)>>2)]=$129;
   } else {
    label = 25;
   }
  } while(0);
  if ((label|0) == 25) {
   label = 0;
   $132=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($132)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $134=((HEAP32[((272)>>2)])|0);
  $135=(($134+212)|0);
  $136=((HEAP32[(($135)>>2)])|0);
  if (((($136|0))|0)==((1)|0)) {
   $143=(($inHigh+($i_1<<3))|0);
   $144=(+(HEAPF64[(($143)>>3)]));
   $145=(($inLow+($i_1<<3))|0);
   $146=(+(HEAPF64[(($145)>>3)]));
   $147=($144)-($146);
   $161=$147;
  } else if (((($136|0))|0)==((2)|0)) {
   $149=(($inHigh+($i_1<<3))|0);
   $150=(+(HEAPF64[(($149)>>3)]));
   $151=(+(HEAPF64[(($66)>>3)]));
   $152=(+(HEAPF64[(($68)>>3)]));
   $153=$151<$152;
   $_11=($153?$152:$151);
   $154=($150)-($_11);
   $155=($153?$151:$152);
   $156=(($inLow+($i_1<<3))|0);
   $157=(+(HEAPF64[(($156)>>3)]));
   $158=($155)-($157);
   $159=($154)+($158);
   $161=$159;
  } else if (((($136|0))|0)==((0)|0)) {
   $138=(+(HEAPF64[(($66)>>3)]));
   $139=(+(HEAPF64[(($68)>>3)]));
   $140=($138)-($139);
   $141=(+(Math_abs((+($140)))));
   $161=$141;
  } else {
   $161=0.0;
  }

  $162=((HEAP32[((272)>>2)])|0);
  $163=(($162+212)|0);
  $164=((HEAP32[(($163)>>2)])|0);
  if (((($164|0))|0)==((1)|0)) {
   $173=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $174=(+(HEAPF64[(($173)>>3)]));
   $175=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $176=(+(HEAPF64[(($175)>>3)]));
   $177=($174)-($176);
   $193=$177;
  } else if (((($164|0))|0)==((0)|0)) {
   $166=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $167=(+(HEAPF64[(($166)>>3)]));
   $168=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $169=(+(HEAPF64[(($168)>>3)]));
   $170=($167)-($169);
   $171=(+(Math_abs((+($170)))));
   $193=$171;
  } else if (((($164|0))|0)==((2)|0)) {
   $179=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $180=(+(HEAPF64[(($179)>>3)]));
   $181=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $182=(+(HEAPF64[(($181)>>3)]));
   $183=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $184=(+(HEAPF64[(($183)>>3)]));
   $185=$182<$184;
   $_12=($185?$184:$182);
   $186=($180)-($_12);
   $187=($185?$182:$184);
   $188=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $189=(+(HEAPF64[(($188)>>3)]));
   $190=($187)-($189);
   $191=($186)+($190);
   $193=$191;
  } else {
   $193=0.0;
  }

  $194=($161)-($193);
  $195=($BodyPeriodTotal_1)+($194);
  $196=((($i_1)+(1))|0);
  $197=((($BodyTrailingIdx_0)+(1))|0);
  $198=($i_1|0)<($endIdx|0);
  if ($198) {
   $BodyTrailingIdx_0=$197;$outIdx_0=$outIdx_1;$i_1=$196;$BodyPeriodTotal_1=$195;
  } else {
   break;
  }
 }
 $200=((($31)-($i_0_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$200;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLSTALLEDPATTERN_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$__=0,$14=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+168)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+216)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=(($1+336)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=(($1+360)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($8|0)>($10|0);
 $12=($11?$8:$10);
 $13=($_|0)>($12|0);
 $__=($13?$_:$12);
 $14=((($__)+(2))|0);
 return (($14)|0);
}


function _TA_CDLSTALLEDPATTERN($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $BodyLongPeriodTotal=0,$NearPeriodTotal=0,$1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond30=0,$12=0,$13=0,$_startIdx=0,$14=0;
 var $17=0,$18=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0;
 var $37=0,$38=0,$39=0,$40=0,$_promoted48=.0,$_promoted49=.0,$41=0,$42=0,$43=0,$44=0,$46=.0,$47=.0,$i_046=0,$48=0,$49=0,$50=.0,$51=0,$52=.0,$53=.0,$54=.0;
 var $55=0,$56=0,$57=.0,$58=0,$59=.0,$60=.0,$61=.0,$62=0,$63=0,$64=.0,$65=0,$66=.0,$67=.0,$68=0,$69=0,$70=.0,$71=0,$72=.0,$73=.0,$74=0;
 var $75=0,$76=.0,$77=0,$78=.0,$79=0,$80=.0,$81=0,$_=.0,$82=.0,$83=.0,$84=0,$85=.0,$86=.0,$87=.0,$88=0,$89=0,$90=.0,$91=0,$92=.0,$93=0;
 var $94=.0,$95=0,$_8=.0,$96=.0,$97=.0,$98=0,$99=.0,$100=.0,$101=.0,$_pn67=.0,$104=.0,$105=.0,$106=.0,$107=0,$108=0,$BodyShortPeriodTotal_0_lcssa=.0,$109=0,$110=0,$111=0,$112=0;
 var $i_143=0,$BodyShortPeriodTotal_042=.0,$115=0,$116=.0,$117=0,$118=.0,$119=.0,$120=.0,$122=0,$123=.0,$124=0,$125=.0,$126=.0,$128=0,$129=.0,$130=0,$131=.0,$132=0,$133=.0,$134=0;
 var $_9=.0,$135=.0,$136=.0,$137=0,$138=.0,$139=.0,$140=.0,$142=.0,$143=.0,$144=0,$145=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$146=0,$147=0,$148=0,$149=0,$_promoted=.0,$_promoted34=.0,$i_239=0,$ShadowVeryShortPeriodTotal_038=.0;
 var $152=0,$153=0,$154=.0,$155=0,$156=.0,$157=.0,$158=.0,$160=0,$161=0,$162=.0,$163=0,$164=.0,$165=.0,$167=0,$168=0,$169=.0,$170=0,$171=.0,$172=0,$173=.0;
 var $174=0,$_10=.0,$175=.0,$176=.0,$177=0,$178=.0,$179=.0,$180=.0,$182=.0,$183=.0,$184=0,$185=0,$186=0,$smax=0,$187=0,$smax52=0,$188=0,$smax53=0,$190=.0,$191=.0;
 var $i_333=0,$192=0,$193=0,$194=.0,$195=0,$196=.0,$197=.0,$198=.0,$199=0,$200=0,$201=.0,$202=0,$203=.0,$204=.0,$205=.0,$206=0,$207=0,$208=.0,$209=0,$210=.0;
 var $211=.0,$212=0,$213=0,$214=.0,$215=0,$216=.0,$217=.0,$218=0,$219=0,$220=.0,$221=0,$222=.0,$223=0,$224=.0,$225=0,$_11=.0,$226=.0,$227=.0,$228=0,$229=.0;
 var $230=.0,$231=.0,$232=0,$233=0,$234=.0,$235=0,$236=.0,$237=0,$238=.0,$239=0,$_12=.0,$240=.0,$241=.0,$242=0,$243=.0,$244=.0,$245=.0,$_pn=.0,$248=.0,$249=.0;
 var $250=.0,$251=0,$252=0,$BodyShortPeriodTotal_1=.0,$ShadowVeryShortPeriodTotal_1=.0,$i_4=0,$outIdx_0=0,$BodyLongTrailingIdx_0=0,$BodyShortTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$NearTrailingIdx_0=0,$254=0,$255=0,$256=.0,$257=0,$258=.0,$259=0,$261=0,$262=0,$263=.0;
 var $264=0,$265=.0,$266=0,$268=0,$269=.0,$270=0,$271=.0,$272=0,$273=0,$or_cond13=0,$274=0,$or_cond14=0,$276=.0,$277=.0,$278=0,$279=0,$280=.0,$281=0,$282=0,$283=0;
 var $285=.0,$286=.0,$287=.0,$289=0,$290=0,$292=0,$293=.0,$294=0,$295=.0,$296=.0,$298=0,$300=0,$301=.0,$_15=.0,$302=.0,$303=0,$304=.0,$305=0,$306=.0,$307=.0;
 var $308=.0,$310=.0,$311=.0,$312=0,$313=0,$314=0,$315=0,$316=.0,$317=.0,$318=0,$320=.0,$321=.0,$322=.0,$323=.0,$324=0,$325=.0,$326=0,$327=0,$328=0,$330=.0;
 var $331=.0,$332=.0,$335=0,$336=.0,$337=0,$338=.0,$339=.0,$342=0,$343=.0,$344=0,$_16=.0,$345=.0,$346=.0,$347=0,$348=.0,$349=.0,$350=.0,$352=.0,$353=.0,$354=0;
 var $355=0,$356=0,$357=0,$358=.0,$359=.0,$360=0,$362=0,$363=.0,$364=.0,$365=.0,$366=0,$_17=.0,$367=.0,$368=0,$369=.0,$370=0,$371=0,$372=0,$374=.0,$375=.0;
 var $377=0,$378=0,$380=.0,$381=.0,$383=0,$384=.0,$385=.0,$387=.0,$388=0,$389=.0,$390=.0,$391=.0,$393=.0,$394=.0,$395=0,$396=0,$397=0,$398=0,$399=.0,$400=.0;
 var $401=0,$403=.0,$404=.0,$405=0,$407=.0,$408=0,$409=.0,$410=0,$411=0,$412=0,$414=.0,$415=.0,$416=.0,$418=0,$419=0,$421=.0,$422=.0,$424=0,$425=.0,$426=0;
 var $427=.0,$428=.0,$430=0,$431=.0,$432=0,$_19=.0,$433=.0,$434=.0,$435=0,$436=.0,$437=.0,$438=.0,$440=.0,$441=.0,$442=0,$443=0,$444=0,$445=0,$446=.0,$447=.0;
 var $448=.0,$449=0,$451=.0,$452=.0,$453=.0,$454=.0,$455=0,$456=.0,$457=0,$458=0,$459=0,$461=.0,$462=.0,$464=0,$465=0,$467=0,$468=.0,$469=0,$470=.0,$471=.0;
 var $473=0,$475=0,$476=.0,$477=0,$_20=.0,$478=.0,$479=.0,$480=0,$481=.0,$482=.0,$483=.0,$485=.0,$486=.0,$487=0,$488=0,$489=0,$490=0,$491=.0,$492=.0,$493=0;
 var $495=.0,$496=.0,$497=.0,$498=.0,$499=.0,$500=.0,$501=0,$502=.0,$503=0,$504=0,$505=0,$507=.0,$508=.0,$509=.0,$511=0,$512=0,$514=.0,$515=.0,$516=.0,$518=.0;
 var $519=0,$520=.0,$521=.0,$523=.0,$524=.0,$525=0,$_21=.0,$526=.0,$527=.0,$528=0,$529=.0,$530=.0,$531=.0,$533=.0,$534=.0,$535=0,$536=0,$537=0,$538=0,$539=.0;
 var $540=.0,$541=.0,$542=0,$544=0,$546=0,$548=0,$549=0,$550=0,$551=0,$552=0,$totIdx_031=0,$554=0,$555=0,$557=0,$558=0,$559=.0,$560=0,$561=.0,$562=.0,$563=.0;
 var $565=0,$566=0,$567=.0,$568=0,$569=.0,$570=.0,$572=0,$573=0,$574=.0,$575=0,$576=.0,$577=0,$578=.0,$579=0,$_22=.0,$580=.0,$581=.0,$582=0,$583=.0,$584=.0;
 var $585=.0,$587=.0,$589=0,$590=0,$591=.0,$592=0,$593=.0,$594=.0,$595=.0,$597=0,$598=0,$599=.0,$600=0,$601=.0,$602=.0,$604=0,$605=0,$606=.0,$607=0,$608=.0;
 var $609=0,$610=.0,$611=0,$_23=.0,$612=.0,$613=.0,$614=0,$615=.0,$616=.0,$617=.0,$619=.0,$620=.0,$621=0,$622=.0,$623=.0,$624=0,$625=0,$626=.0,$627=0,$628=.0;
 var $629=.0,$630=.0,$631=0,$632=0,$633=.0,$634=0,$635=.0,$636=.0,$637=.0,$638=0,$639=0,$640=.0,$641=0,$642=.0,$643=.0,$644=0,$645=0,$646=.0,$647=0,$648=.0;
 var $649=.0,$650=0,$651=0,$652=.0,$653=0,$654=.0,$655=0,$656=.0,$657=0,$_24=.0,$658=.0,$659=.0,$660=0,$661=.0,$662=.0,$663=.0,$664=0,$665=0,$666=.0,$667=0;
 var $668=.0,$669=0,$670=.0,$671=0,$_25=.0,$672=.0,$673=.0,$674=0,$675=.0,$676=.0,$677=.0,$679=.0,$680=.0,$681=.0,$682=0,$683=.0,$684=.0,$685=0,$686=0,$outIdx_1=0;
 var $688=0,$689=0,$691=0,$692=.0,$693=0,$694=.0,$695=.0,$696=.0,$698=0,$699=.0,$700=0,$701=.0,$702=.0,$704=0,$705=.0,$706=0,$707=.0,$708=0,$709=.0,$710=0;
 var $_26=.0,$711=.0,$712=.0,$713=0,$714=.0,$715=.0,$716=.0,$718=.0,$719=0,$720=0,$721=0,$723=0,$724=.0,$725=0,$726=.0,$727=.0,$728=.0,$730=0,$731=.0,$732=0;
 var $733=.0,$734=.0,$736=0,$737=.0,$738=0,$739=.0,$740=0,$741=.0,$742=0,$_27=.0,$743=.0,$744=.0,$745=0,$746=.0,$747=.0,$748=.0,$750=.0,$751=.0,$752=.0,$753=0;
 var $754=0,$755=0,$757=0,$758=0,$759=.0,$760=0,$761=.0,$762=.0,$763=.0,$765=0,$766=0,$767=.0,$768=0,$769=.0,$770=.0,$772=0,$773=0,$774=.0,$775=0,$776=.0;
 var $777=0,$778=.0,$779=0,$_28=.0,$780=.0,$781=.0,$782=0,$783=.0,$784=.0,$785=.0,$787=.0,$788=0,$789=0,$790=0,$792=0,$793=0,$794=.0,$795=0,$796=.0,$797=.0;
 var $798=.0,$800=0,$801=0,$802=.0,$803=0,$804=.0,$805=.0,$807=0,$808=0,$809=.0,$810=0,$811=.0,$812=0,$813=.0,$814=0,$_29=.0,$815=.0,$816=.0,$817=0,$818=.0;
 var $819=.0,$820=.0,$822=.0,$823=.0,$824=.0,$825=0,$826=0,$827=0,$828=0,$829=0,$830=0,$832=0,$833=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $BodyLongPeriodTotal=((sp)|0);
 $NearPeriodTotal=(((sp)+(24))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond30=$10|$or_cond5_not;
 if ($or_cond30) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $12=((_TA_CDLSTALLEDPATTERN_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=(($BodyLongPeriodTotal+16)|0);
 $18=(($BodyLongPeriodTotal+8)|0);
 $19=$BodyLongPeriodTotal;
 _memset((((($19)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $20=((HEAP32[((272)>>2)])|0);
 $21=(($20+168)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=(($20+216)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($_startIdx)-($25))|0);
 $27=(($20+336)|0);
 $28=((HEAP32[(($27)>>2)])|0);
 $29=((($_startIdx)-($28))|0);
 $30=(($NearPeriodTotal+16)|0);
 $31=(($NearPeriodTotal+8)|0);
 $32=$NearPeriodTotal;
 _memset((((($32)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $33=((HEAP32[((272)>>2)])|0);
 $34=(($33+360)|0);
 $35=((HEAP32[(($34)>>2)])|0);
 $36=((($_startIdx)-($35))|0);
 $37=($22|0)>0;
 if ($37) {
  $38=((HEAP32[((272)>>2)])|0);
  $39=(($38+164)|0);
  $40=((HEAP32[(($39)>>2)])|0);
  $_promoted48=(+(HEAPF64[(($17)>>3)]));
  $_promoted49=(+(HEAPF64[(($18)>>3)]));
  $i_046=$23;$47=$_promoted48;$46=$_promoted49;
  while(1) {



   if (((($40|0))|0)==((2)|0)) {
    $74=((($i_046)-(2))|0);
    $75=(($inHigh+($74<<3))|0);
    $76=(+(HEAPF64[(($75)>>3)]));
    $77=(($inClose+($74<<3))|0);
    $78=(+(HEAPF64[(($77)>>3)]));
    $79=(($inOpen+($74<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=$78<$80;
    $_=($81?$80:$78);
    $82=($76)-($_);
    $83=($81?$78:$80);
    $84=(($inLow+($74<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=($83)-($85);
    $87=($82)+($86);
    $88=((($i_046)-(1))|0);
    $89=(($inHigh+($88<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inClose+($88<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=(($inOpen+($88<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=$92<$94;
    $_8=($95?$94:$92);
    $96=($90)-($_8);
    $97=($95?$92:$94);
    $98=(($inLow+($88<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=($97)-($99);
    $101=($96)+($100);
    $104=$101;$_pn67=$87;
   } else if (((($40|0))|0)==((0)|0)) {
    $48=((($i_046)-(2))|0);
    $49=(($inClose+($48<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=(($inOpen+($48<<3))|0);
    $52=(+(HEAPF64[(($51)>>3)]));
    $53=($50)-($52);
    $54=(+(Math_abs((+($53)))));
    $55=((($i_046)-(1))|0);
    $56=(($inClose+($55<<3))|0);
    $57=(+(HEAPF64[(($56)>>3)]));
    $58=(($inOpen+($55<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=($57)-($59);
    $61=(+(Math_abs((+($60)))));
    $104=$61;$_pn67=$54;
   } else if (((($40|0))|0)==((1)|0)) {
    $62=((($i_046)-(2))|0);
    $63=(($inHigh+($62<<3))|0);
    $64=(+(HEAPF64[(($63)>>3)]));
    $65=(($inLow+($62<<3))|0);
    $66=(+(HEAPF64[(($65)>>3)]));
    $67=($64)-($66);
    $68=((($i_046)-(1))|0);
    $69=(($inHigh+($68<<3))|0);
    $70=(+(HEAPF64[(($69)>>3)]));
    $71=(($inLow+($68<<3))|0);
    $72=(+(HEAPF64[(($71)>>3)]));
    $73=($70)-($72);
    $104=$73;$_pn67=$67;
   } else {
    $104=0.0;$_pn67=0.0;
   }


   $105=($_pn67)+($47);
   $106=($104)+($46);
   $107=((($i_046)+(1))|0);
   $108=($107|0)<($_startIdx|0);
   if ($108) {
    $i_046=$107;$47=$105;$46=$106;
   } else {
    break;
   }
  }
  HEAPF64[(($17)>>3)]=$105;
  HEAPF64[(($18)>>3)]=$106;
 }
 $41=($25|0)>0;
 if ($41) {
  $42=((HEAP32[((272)>>2)])|0);
  $43=(($42+212)|0);
  $44=((HEAP32[(($43)>>2)])|0);
  $BodyShortPeriodTotal_042=0.0;$i_143=$26;
  while(1) {


   if (((($44|0))|0)==((2)|0)) {
    $128=(($inHigh+($i_143<<3))|0);
    $129=(+(HEAPF64[(($128)>>3)]));
    $130=(($inClose+($i_143<<3))|0);
    $131=(+(HEAPF64[(($130)>>3)]));
    $132=(($inOpen+($i_143<<3))|0);
    $133=(+(HEAPF64[(($132)>>3)]));
    $134=$131<$133;
    $_9=($134?$133:$131);
    $135=($129)-($_9);
    $136=($134?$131:$133);
    $137=(($inLow+($i_143<<3))|0);
    $138=(+(HEAPF64[(($137)>>3)]));
    $139=($136)-($138);
    $140=($135)+($139);
    $142=$140;
   } else if (((($44|0))|0)==((1)|0)) {
    $122=(($inHigh+($i_143<<3))|0);
    $123=(+(HEAPF64[(($122)>>3)]));
    $124=(($inLow+($i_143<<3))|0);
    $125=(+(HEAPF64[(($124)>>3)]));
    $126=($123)-($125);
    $142=$126;
   } else if (((($44|0))|0)==((0)|0)) {
    $115=(($inClose+($i_143<<3))|0);
    $116=(+(HEAPF64[(($115)>>3)]));
    $117=(($inOpen+($i_143<<3))|0);
    $118=(+(HEAPF64[(($117)>>3)]));
    $119=($116)-($118);
    $120=(+(Math_abs((+($119)))));
    $142=$120;
   } else {
    $142=0.0;
   }

   $143=($BodyShortPeriodTotal_042)+($142);
   $144=((($i_143)+(1))|0);
   $145=($144|0)<($_startIdx|0);
   if ($145) {
    $BodyShortPeriodTotal_042=$143;$i_143=$144;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$143;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;
 }

 $109=($28|0)>0;
 if ($109) {
  $110=((HEAP32[((272)>>2)])|0);
  $111=(($110+332)|0);
  $112=((HEAP32[(($111)>>2)])|0);
  $ShadowVeryShortPeriodTotal_038=0.0;$i_239=$29;
  while(1) {


   if (((($112|0))|0)==((0)|0)) {
    $152=((($i_239)-(1))|0);
    $153=(($inClose+($152<<3))|0);
    $154=(+(HEAPF64[(($153)>>3)]));
    $155=(($inOpen+($152<<3))|0);
    $156=(+(HEAPF64[(($155)>>3)]));
    $157=($154)-($156);
    $158=(+(Math_abs((+($157)))));
    $182=$158;
   } else if (((($112|0))|0)==((2)|0)) {
    $167=((($i_239)-(1))|0);
    $168=(($inHigh+($167<<3))|0);
    $169=(+(HEAPF64[(($168)>>3)]));
    $170=(($inClose+($167<<3))|0);
    $171=(+(HEAPF64[(($170)>>3)]));
    $172=(($inOpen+($167<<3))|0);
    $173=(+(HEAPF64[(($172)>>3)]));
    $174=$171<$173;
    $_10=($174?$173:$171);
    $175=($169)-($_10);
    $176=($174?$171:$173);
    $177=(($inLow+($167<<3))|0);
    $178=(+(HEAPF64[(($177)>>3)]));
    $179=($176)-($178);
    $180=($175)+($179);
    $182=$180;
   } else if (((($112|0))|0)==((1)|0)) {
    $160=((($i_239)-(1))|0);
    $161=(($inHigh+($160<<3))|0);
    $162=(+(HEAPF64[(($161)>>3)]));
    $163=(($inLow+($160<<3))|0);
    $164=(+(HEAPF64[(($163)>>3)]));
    $165=($162)-($164);
    $182=$165;
   } else {
    $182=0.0;
   }

   $183=($ShadowVeryShortPeriodTotal_038)+($182);
   $184=((($i_239)+(1))|0);
   $185=($184|0)<($_startIdx|0);
   if ($185) {
    $ShadowVeryShortPeriodTotal_038=$183;$i_239=$184;
   } else {
    $ShadowVeryShortPeriodTotal_0_lcssa=$183;
    break;
   }
  }
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;
 }

 $146=($35|0)>0;
 if ($146) {
  $147=((HEAP32[((272)>>2)])|0);
  $148=(($147+356)|0);
  $149=((HEAP32[(($148)>>2)])|0);
  $_promoted=(+(HEAPF64[(($30)>>3)]));
  $_promoted34=(+(HEAPF64[(($31)>>3)]));
  $i_333=$36;$191=$_promoted;$190=$_promoted34;
  while(1) {



   if (((($149|0))|0)==((2)|0)) {
    $218=((($i_333)-(2))|0);
    $219=(($inHigh+($218<<3))|0);
    $220=(+(HEAPF64[(($219)>>3)]));
    $221=(($inClose+($218<<3))|0);
    $222=(+(HEAPF64[(($221)>>3)]));
    $223=(($inOpen+($218<<3))|0);
    $224=(+(HEAPF64[(($223)>>3)]));
    $225=$222<$224;
    $_11=($225?$224:$222);
    $226=($220)-($_11);
    $227=($225?$222:$224);
    $228=(($inLow+($218<<3))|0);
    $229=(+(HEAPF64[(($228)>>3)]));
    $230=($227)-($229);
    $231=($226)+($230);
    $232=((($i_333)-(1))|0);
    $233=(($inHigh+($232<<3))|0);
    $234=(+(HEAPF64[(($233)>>3)]));
    $235=(($inClose+($232<<3))|0);
    $236=(+(HEAPF64[(($235)>>3)]));
    $237=(($inOpen+($232<<3))|0);
    $238=(+(HEAPF64[(($237)>>3)]));
    $239=$236<$238;
    $_12=($239?$238:$236);
    $240=($234)-($_12);
    $241=($239?$236:$238);
    $242=(($inLow+($232<<3))|0);
    $243=(+(HEAPF64[(($242)>>3)]));
    $244=($241)-($243);
    $245=($240)+($244);
    $248=$245;$_pn=$231;
   } else if (((($149|0))|0)==((0)|0)) {
    $192=((($i_333)-(2))|0);
    $193=(($inClose+($192<<3))|0);
    $194=(+(HEAPF64[(($193)>>3)]));
    $195=(($inOpen+($192<<3))|0);
    $196=(+(HEAPF64[(($195)>>3)]));
    $197=($194)-($196);
    $198=(+(Math_abs((+($197)))));
    $199=((($i_333)-(1))|0);
    $200=(($inClose+($199<<3))|0);
    $201=(+(HEAPF64[(($200)>>3)]));
    $202=(($inOpen+($199<<3))|0);
    $203=(+(HEAPF64[(($202)>>3)]));
    $204=($201)-($203);
    $205=(+(Math_abs((+($204)))));
    $248=$205;$_pn=$198;
   } else if (((($149|0))|0)==((1)|0)) {
    $206=((($i_333)-(2))|0);
    $207=(($inHigh+($206<<3))|0);
    $208=(+(HEAPF64[(($207)>>3)]));
    $209=(($inLow+($206<<3))|0);
    $210=(+(HEAPF64[(($209)>>3)]));
    $211=($208)-($210);
    $212=((($i_333)-(1))|0);
    $213=(($inHigh+($212<<3))|0);
    $214=(+(HEAPF64[(($213)>>3)]));
    $215=(($inLow+($212<<3))|0);
    $216=(+(HEAPF64[(($215)>>3)]));
    $217=($214)-($216);
    $248=$217;$_pn=$211;
   } else {
    $248=0.0;$_pn=0.0;
   }


   $249=($_pn)+($191);
   $250=($248)+($190);
   $251=((($i_333)+(1))|0);
   $252=($251|0)<($_startIdx|0);
   if ($252) {
    $i_333=$251;$191=$249;$190=$250;
   } else {
    break;
   }
  }
  HEAPF64[(($30)>>3)]=$249;
  HEAPF64[(($31)>>3)]=$250;
 }
 $186=($12|0)>($endIdx|0);
 $smax=($186?$12:$endIdx);
 $187=($smax|0)>($startIdx|0);
 $smax52=($187?$smax:$startIdx);
 $188=($12|0)>($startIdx|0);
 $smax53=($188?$12:$startIdx);
 $NearTrailingIdx_0=$36;$ShadowVeryShortTrailingIdx_0=$29;$BodyShortTrailingIdx_0=$26;$BodyLongTrailingIdx_0=$23;$outIdx_0=0;$i_4=$_startIdx;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;
 while(1) {








  $254=((($i_4)-(2))|0);
  $255=(($inClose+($254<<3))|0);
  $256=(+(HEAPF64[(($255)>>3)]));
  $257=(($inOpen+($254<<3))|0);
  $258=(+(HEAPF64[(($257)>>3)]));
  $259=$256>=$258;
  do {
   if ($259) {
    $261=((($i_4)-(1))|0);
    $262=(($inClose+($261<<3))|0);
    $263=(+(HEAPF64[(($262)>>3)]));
    $264=(($inOpen+($261<<3))|0);
    $265=(+(HEAPF64[(($264)>>3)]));
    $266=$263<$265;
    if ($266) {
     label = 86;
     break;
    }
    $268=(($inClose+($i_4<<3))|0);
    $269=(+(HEAPF64[(($268)>>3)]));
    $270=(($inOpen+($i_4<<3))|0);
    $271=(+(HEAPF64[(($270)>>3)]));
    $272=$269>=$271;
    $273=$269>$263;
    $or_cond13=$272&$273;
    $274=$263>$256;
    $or_cond14=$or_cond13&$274;
    if (!($or_cond14)) {
     label = 86;
     break;
    }
    $276=($256)-($258);
    $277=(+(Math_abs((+($276)))));
    $278=((HEAP32[((272)>>2)])|0);
    $279=(($278+176)|0);
    $280=(+(HEAPF64[(($279)>>3)]));
    $281=(($278+168)|0);
    $282=((HEAP32[(($281)>>2)])|0);
    $283=($282|0)==0;
    do {
     if ($283) {
      $289=(($278+164)|0);
      $290=((HEAP32[(($289)>>2)])|0);
      if (((($290|0))|0)==((0)|0)) {
       $310=$277;
       break;
      } else if (((($290|0))|0)==((1)|0)) {
       $292=(($inHigh+($254<<3))|0);
       $293=(+(HEAPF64[(($292)>>3)]));
       $294=(($inLow+($254<<3))|0);
       $295=(+(HEAPF64[(($294)>>3)]));
       $296=($293)-($295);
       $310=$296;
       break;
      }
      $298=($290|0)==2;
      if (!($298)) {
       $310=0.0;
       break;
      }
      $300=(($inHigh+($254<<3))|0);
      $301=(+(HEAPF64[(($300)>>3)]));
      $_15=($259?$256:$258);
      $302=($301)-($_15);
      $303=$256<$258;
      $304=($303?$256:$258);
      $305=(($inLow+($254<<3))|0);
      $306=(+(HEAPF64[(($305)>>3)]));
      $307=($304)-($306);
      $308=($302)+($307);
      $310=$308;
     } else {
      $285=(+((($282|0))|0));
      $286=(+(HEAPF64[(($17)>>3)]));
      $287=($286)/($285);
      $310=$287;
     }
    } while(0);

    $311=($280)*($310);
    $312=((HEAP32[((272)>>2)])|0);
    $313=(($312+164)|0);
    $314=((HEAP32[(($313)>>2)])|0);
    $315=($314|0)==2;
    $316=($315?(2.0):(1.0));
    $317=($311)/($316);
    $318=$277>$317;
    if (!($318)) {
     label = 86;
     break;
    }
    $320=(+(HEAPF64[(($262)>>3)]));
    $321=(+(HEAPF64[(($264)>>3)]));
    $322=($320)-($321);
    $323=(+(Math_abs((+($322)))));
    $324=(($312+176)|0);
    $325=(+(HEAPF64[(($324)>>3)]));
    $326=(($312+168)|0);
    $327=((HEAP32[(($326)>>2)])|0);
    $328=($327|0)==0;
    do {
     if ($328) {
      if (((($314|0))|0)==((1)|0)) {
       $335=(($inHigh+($261<<3))|0);
       $336=(+(HEAPF64[(($335)>>3)]));
       $337=(($inLow+($261<<3))|0);
       $338=(+(HEAPF64[(($337)>>3)]));
       $339=($336)-($338);
       $352=$339;
       break;
      } else if (((($314|0))|0)==((0)|0)) {
       $352=$323;
       break;
      }
      if (!($315)) {
       $352=0.0;
       break;
      }
      $342=(($inHigh+($261<<3))|0);
      $343=(+(HEAPF64[(($342)>>3)]));
      $344=$320<$321;
      $_16=($344?$321:$320);
      $345=($343)-($_16);
      $346=($344?$320:$321);
      $347=(($inLow+($261<<3))|0);
      $348=(+(HEAPF64[(($347)>>3)]));
      $349=($346)-($348);
      $350=($345)+($349);
      $352=$350;
     } else {
      $330=(+((($327|0))|0));
      $331=(+(HEAPF64[(($18)>>3)]));
      $332=($331)/($330);
      $352=$332;
     }
    } while(0);

    $353=($325)*($352);
    $354=((HEAP32[((272)>>2)])|0);
    $355=(($354+164)|0);
    $356=((HEAP32[(($355)>>2)])|0);
    $357=($356|0)==2;
    $358=($357?(2.0):(1.0));
    $359=($353)/($358);
    $360=$323>$359;
    if (!($360)) {
     label = 86;
     break;
    }
    $362=(($inHigh+($261<<3))|0);
    $363=(+(HEAPF64[(($362)>>3)]));
    $364=(+(HEAPF64[(($262)>>3)]));
    $365=(+(HEAPF64[(($264)>>3)]));
    $366=$364<$365;
    $_17=($366?$365:$364);
    $367=($363)-($_17);
    $368=(($354+344)|0);
    $369=(+(HEAPF64[(($368)>>3)]));
    $370=(($354+336)|0);
    $371=((HEAP32[(($370)>>2)])|0);
    $372=($371|0)==0;
    do {
     if ($372) {
      $377=(($354+332)|0);
      $378=((HEAP32[(($377)>>2)])|0);
      if (((($378|0))|0)==((0)|0)) {
       $380=($364)-($365);
       $381=(+(Math_abs((+($380)))));
       $393=$381;
       break;
      } else if (((($378|0))|0)==((1)|0)) {
       $383=(($inLow+($261<<3))|0);
       $384=(+(HEAPF64[(($383)>>3)]));
       $385=($363)-($384);
       $393=$385;
       break;
      } else if (((($378|0))|0)==((2)|0)) {
       $387=($366?$364:$365);
       $388=(($inLow+($261<<3))|0);
       $389=(+(HEAPF64[(($388)>>3)]));
       $390=($387)-($389);
       $391=($367)+($390);
       $393=$391;
       break;
      } else {
       $393=0.0;
       break;
      }
     } else {
      $374=(+((($371|0))|0));
      $375=($ShadowVeryShortPeriodTotal_1)/($374);
      $393=$375;
     }
    } while(0);

    $394=($369)*($393);
    $395=((HEAP32[((272)>>2)])|0);
    $396=(($395+332)|0);
    $397=((HEAP32[(($396)>>2)])|0);
    $398=($397|0)==2;
    $399=($398?(2.0):(1.0));
    $400=($394)/($399);
    $401=$367<$400;
    if (!($401)) {
     label = 86;
     break;
    }
    $403=(+(HEAPF64[(($264)>>3)]));
    $404=(+(HEAPF64[(($257)>>3)]));
    $405=$403>$404;
    if (!($405)) {
     label = 86;
     break;
    }
    $407=(+(HEAPF64[(($255)>>3)]));
    $408=(($395+368)|0);
    $409=(+(HEAPF64[(($408)>>3)]));
    $410=(($395+360)|0);
    $411=((HEAP32[(($410)>>2)])|0);
    $412=($411|0)==0;
    do {
     if ($412) {
      $418=(($395+356)|0);
      $419=((HEAP32[(($418)>>2)])|0);
      if (((($419|0))|0)==((0)|0)) {
       $421=($407)-($404);
       $422=(+(Math_abs((+($421)))));
       $440=$422;
       break;
      } else if (((($419|0))|0)==((1)|0)) {
       $424=(($inHigh+($254<<3))|0);
       $425=(+(HEAPF64[(($424)>>3)]));
       $426=(($inLow+($254<<3))|0);
       $427=(+(HEAPF64[(($426)>>3)]));
       $428=($425)-($427);
       $440=$428;
       break;
      } else if (((($419|0))|0)==((2)|0)) {
       $430=(($inHigh+($254<<3))|0);
       $431=(+(HEAPF64[(($430)>>3)]));
       $432=$407<$404;
       $_19=($432?$404:$407);
       $433=($431)-($_19);
       $434=($432?$407:$404);
       $435=(($inLow+($254<<3))|0);
       $436=(+(HEAPF64[(($435)>>3)]));
       $437=($434)-($436);
       $438=($433)+($437);
       $440=$438;
       break;
      } else {
       $440=0.0;
       break;
      }
     } else {
      $414=(+((($411|0))|0));
      $415=(+(HEAPF64[(($30)>>3)]));
      $416=($415)/($414);
      $440=$416;
     }
    } while(0);

    $441=($409)*($440);
    $442=((HEAP32[((272)>>2)])|0);
    $443=(($442+356)|0);
    $444=((HEAP32[(($443)>>2)])|0);
    $445=($444|0)==2;
    $446=($445?(2.0):(1.0));
    $447=($441)/($446);
    $448=($407)+($447);
    $449=$403>$448;
    if ($449) {
     label = 86;
     break;
    }
    $451=(+(HEAPF64[(($268)>>3)]));
    $452=(+(HEAPF64[(($270)>>3)]));
    $453=($451)-($452);
    $454=(+(Math_abs((+($453)))));
    $455=(($442+224)|0);
    $456=(+(HEAPF64[(($455)>>3)]));
    $457=(($442+216)|0);
    $458=((HEAP32[(($457)>>2)])|0);
    $459=($458|0)==0;
    do {
     if ($459) {
      $464=(($442+212)|0);
      $465=((HEAP32[(($464)>>2)])|0);
      if (((($465|0))|0)==((1)|0)) {
       $467=(($inHigh+($i_4<<3))|0);
       $468=(+(HEAPF64[(($467)>>3)]));
       $469=(($inLow+($i_4<<3))|0);
       $470=(+(HEAPF64[(($469)>>3)]));
       $471=($468)-($470);
       $485=$471;
       break;
      } else if (((($465|0))|0)==((0)|0)) {
       $485=$454;
       break;
      }
      $473=($465|0)==2;
      if (!($473)) {
       $485=0.0;
       break;
      }
      $475=(($inHigh+($i_4<<3))|0);
      $476=(+(HEAPF64[(($475)>>3)]));
      $477=$451<$452;
      $_20=($477?$452:$451);
      $478=($476)-($_20);
      $479=($477?$451:$452);
      $480=(($inLow+($i_4<<3))|0);
      $481=(+(HEAPF64[(($480)>>3)]));
      $482=($479)-($481);
      $483=($478)+($482);
      $485=$483;
     } else {
      $461=(+((($458|0))|0));
      $462=($BodyShortPeriodTotal_1)/($461);
      $485=$462;
     }
    } while(0);

    $486=($456)*($485);
    $487=((HEAP32[((272)>>2)])|0);
    $488=(($487+212)|0);
    $489=((HEAP32[(($488)>>2)])|0);
    $490=($489|0)==2;
    $491=($490?(2.0):(1.0));
    $492=($486)/($491);
    $493=$454<$492;
    if (!($493)) {
     label = 86;
     break;
    }
    $495=(+(HEAPF64[(($270)>>3)]));
    $496=(+(HEAPF64[(($262)>>3)]));
    $497=(+(HEAPF64[(($268)>>3)]));
    $498=($497)-($495);
    $499=(+(Math_abs((+($498)))));
    $500=($496)-($499);
    $501=(($487+368)|0);
    $502=(+(HEAPF64[(($501)>>3)]));
    $503=(($487+360)|0);
    $504=((HEAP32[(($503)>>2)])|0);
    $505=($504|0)==0;
    do {
     if ($505) {
      $511=(($487+356)|0);
      $512=((HEAP32[(($511)>>2)])|0);
      if (((($512|0))|0)==((0)|0)) {
       $514=(+(HEAPF64[(($264)>>3)]));
       $515=($496)-($514);
       $516=(+(Math_abs((+($515)))));
       $533=$516;
       break;
      } else if (((($512|0))|0)==((1)|0)) {
       $518=(+(HEAPF64[(($362)>>3)]));
       $519=(($inLow+($261<<3))|0);
       $520=(+(HEAPF64[(($519)>>3)]));
       $521=($518)-($520);
       $533=$521;
       break;
      } else if (((($512|0))|0)==((2)|0)) {
       $523=(+(HEAPF64[(($362)>>3)]));
       $524=(+(HEAPF64[(($264)>>3)]));
       $525=$496<$524;
       $_21=($525?$524:$496);
       $526=($523)-($_21);
       $527=($525?$496:$524);
       $528=(($inLow+($261<<3))|0);
       $529=(+(HEAPF64[(($528)>>3)]));
       $530=($527)-($529);
       $531=($526)+($530);
       $533=$531;
       break;
      } else {
       $533=0.0;
       break;
      }
     } else {
      $507=(+((($504|0))|0));
      $508=(+(HEAPF64[(($31)>>3)]));
      $509=($508)/($507);
      $533=$509;
     }
    } while(0);

    $534=($502)*($533);
    $535=((HEAP32[((272)>>2)])|0);
    $536=(($535+356)|0);
    $537=((HEAP32[(($536)>>2)])|0);
    $538=($537|0)==2;
    $539=($538?(2.0):(1.0));
    $540=($534)/($539);
    $541=($500)-($540);
    $542=$495<$541;
    if ($542) {
     label = 86;
     break;
    }
    $544=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($544)>>2)]=-100;
   } else {
    label = 86;
   }
  } while(0);
  if ((label|0) == 86) {
   label = 0;
   $546=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($546)>>2)]=0;
  }
  $548=((HEAP32[((272)>>2)])|0);
  $549=(($548+164)|0);
  $550=((HEAP32[(($549)>>2)])|0);
  $551=(($548+356)|0);
  $552=((HEAP32[(($551)>>2)])|0);
  $totIdx_031=2;
  while(1) {

   $554=(($548+164)|0);
   $555=((HEAP32[(($554)>>2)])|0);
   if (((($555|0))|0)==((0)|0)) {
    $557=((($i_4)-($totIdx_031))|0);
    $558=(($inClose+($557<<3))|0);
    $559=(+(HEAPF64[(($558)>>3)]));
    $560=(($inOpen+($557<<3))|0);
    $561=(+(HEAPF64[(($560)>>3)]));
    $562=($559)-($561);
    $563=(+(Math_abs((+($562)))));
    $587=$563;
   } else if (((($555|0))|0)==((1)|0)) {
    $565=((($i_4)-($totIdx_031))|0);
    $566=(($inHigh+($565<<3))|0);
    $567=(+(HEAPF64[(($566)>>3)]));
    $568=(($inLow+($565<<3))|0);
    $569=(+(HEAPF64[(($568)>>3)]));
    $570=($567)-($569);
    $587=$570;
   } else if (((($555|0))|0)==((2)|0)) {
    $572=((($i_4)-($totIdx_031))|0);
    $573=(($inHigh+($572<<3))|0);
    $574=(+(HEAPF64[(($573)>>3)]));
    $575=(($inClose+($572<<3))|0);
    $576=(+(HEAPF64[(($575)>>3)]));
    $577=(($inOpen+($572<<3))|0);
    $578=(+(HEAPF64[(($577)>>3)]));
    $579=$576<$578;
    $_22=($579?$578:$576);
    $580=($574)-($_22);
    $581=($579?$576:$578);
    $582=(($inLow+($572<<3))|0);
    $583=(+(HEAPF64[(($582)>>3)]));
    $584=($581)-($583);
    $585=($580)+($584);
    $587=$585;
   } else {
    $587=0.0;
   }

   if (((($550|0))|0)==((0)|0)) {
    $589=((($BodyLongTrailingIdx_0)-($totIdx_031))|0);
    $590=(($inClose+($589<<3))|0);
    $591=(+(HEAPF64[(($590)>>3)]));
    $592=(($inOpen+($589<<3))|0);
    $593=(+(HEAPF64[(($592)>>3)]));
    $594=($591)-($593);
    $595=(+(Math_abs((+($594)))));
    $619=$595;
   } else if (((($550|0))|0)==((1)|0)) {
    $597=((($BodyLongTrailingIdx_0)-($totIdx_031))|0);
    $598=(($inHigh+($597<<3))|0);
    $599=(+(HEAPF64[(($598)>>3)]));
    $600=(($inLow+($597<<3))|0);
    $601=(+(HEAPF64[(($600)>>3)]));
    $602=($599)-($601);
    $619=$602;
   } else if (((($550|0))|0)==((2)|0)) {
    $604=((($BodyLongTrailingIdx_0)-($totIdx_031))|0);
    $605=(($inHigh+($604<<3))|0);
    $606=(+(HEAPF64[(($605)>>3)]));
    $607=(($inClose+($604<<3))|0);
    $608=(+(HEAPF64[(($607)>>3)]));
    $609=(($inOpen+($604<<3))|0);
    $610=(+(HEAPF64[(($609)>>3)]));
    $611=$608<$610;
    $_23=($611?$610:$608);
    $612=($606)-($_23);
    $613=($611?$608:$610);
    $614=(($inLow+($604<<3))|0);
    $615=(+(HEAPF64[(($614)>>3)]));
    $616=($613)-($615);
    $617=($612)+($616);
    $619=$617;
   } else {
    $619=0.0;
   }

   $620=($587)-($619);
   $621=(($BodyLongPeriodTotal+($totIdx_031<<3))|0);
   $622=(+(HEAPF64[(($621)>>3)]));
   $623=($622)+($620);
   HEAPF64[(($621)>>3)]=$623;
   if (((($552|0))|0)==((0)|0)) {
    $624=((($i_4)-($totIdx_031))|0);
    $625=(($inClose+($624<<3))|0);
    $626=(+(HEAPF64[(($625)>>3)]));
    $627=(($inOpen+($624<<3))|0);
    $628=(+(HEAPF64[(($627)>>3)]));
    $629=($626)-($628);
    $630=(+(Math_abs((+($629)))));
    $631=((($NearTrailingIdx_0)-($totIdx_031))|0);
    $632=(($inClose+($631<<3))|0);
    $633=(+(HEAPF64[(($632)>>3)]));
    $634=(($inOpen+($631<<3))|0);
    $635=(+(HEAPF64[(($634)>>3)]));
    $636=($633)-($635);
    $637=(+(Math_abs((+($636)))));
    $680=$637;$679=$630;
   } else if (((($552|0))|0)==((2)|0)) {
    $650=((($i_4)-($totIdx_031))|0);
    $651=(($inHigh+($650<<3))|0);
    $652=(+(HEAPF64[(($651)>>3)]));
    $653=(($inClose+($650<<3))|0);
    $654=(+(HEAPF64[(($653)>>3)]));
    $655=(($inOpen+($650<<3))|0);
    $656=(+(HEAPF64[(($655)>>3)]));
    $657=$654<$656;
    $_24=($657?$656:$654);
    $658=($652)-($_24);
    $659=($657?$654:$656);
    $660=(($inLow+($650<<3))|0);
    $661=(+(HEAPF64[(($660)>>3)]));
    $662=($659)-($661);
    $663=($658)+($662);
    $664=((($NearTrailingIdx_0)-($totIdx_031))|0);
    $665=(($inHigh+($664<<3))|0);
    $666=(+(HEAPF64[(($665)>>3)]));
    $667=(($inClose+($664<<3))|0);
    $668=(+(HEAPF64[(($667)>>3)]));
    $669=(($inOpen+($664<<3))|0);
    $670=(+(HEAPF64[(($669)>>3)]));
    $671=$668<$670;
    $_25=($671?$670:$668);
    $672=($666)-($_25);
    $673=($671?$668:$670);
    $674=(($inLow+($664<<3))|0);
    $675=(+(HEAPF64[(($674)>>3)]));
    $676=($673)-($675);
    $677=($672)+($676);
    $680=$677;$679=$663;
   } else if (((($552|0))|0)==((1)|0)) {
    $638=((($i_4)-($totIdx_031))|0);
    $639=(($inHigh+($638<<3))|0);
    $640=(+(HEAPF64[(($639)>>3)]));
    $641=(($inLow+($638<<3))|0);
    $642=(+(HEAPF64[(($641)>>3)]));
    $643=($640)-($642);
    $644=((($NearTrailingIdx_0)-($totIdx_031))|0);
    $645=(($inHigh+($644<<3))|0);
    $646=(+(HEAPF64[(($645)>>3)]));
    $647=(($inLow+($644<<3))|0);
    $648=(+(HEAPF64[(($647)>>3)]));
    $649=($646)-($648);
    $680=$649;$679=$643;
   } else {
    $680=0.0;$679=0.0;
   }


   $681=($679)-($680);
   $682=(($NearPeriodTotal+($totIdx_031<<3))|0);
   $683=(+(HEAPF64[(($682)>>3)]));
   $684=($683)+($681);
   HEAPF64[(($682)>>3)]=$684;
   $685=((($totIdx_031)-(1))|0);
   $686=($685|0)>0;
   if ($686) {
    $totIdx_031=$685;
   } else {
    break;
   }
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $688=(($548+212)|0);
  $689=((HEAP32[(($688)>>2)])|0);
  if (((($689|0))|0)==((1)|0)) {
   $698=(($inHigh+($i_4<<3))|0);
   $699=(+(HEAPF64[(($698)>>3)]));
   $700=(($inLow+($i_4<<3))|0);
   $701=(+(HEAPF64[(($700)>>3)]));
   $702=($699)-($701);
   $718=$702;
  } else if (((($689|0))|0)==((2)|0)) {
   $704=(($inHigh+($i_4<<3))|0);
   $705=(+(HEAPF64[(($704)>>3)]));
   $706=(($inClose+($i_4<<3))|0);
   $707=(+(HEAPF64[(($706)>>3)]));
   $708=(($inOpen+($i_4<<3))|0);
   $709=(+(HEAPF64[(($708)>>3)]));
   $710=$707<$709;
   $_26=($710?$709:$707);
   $711=($705)-($_26);
   $712=($710?$707:$709);
   $713=(($inLow+($i_4<<3))|0);
   $714=(+(HEAPF64[(($713)>>3)]));
   $715=($712)-($714);
   $716=($711)+($715);
   $718=$716;
  } else if (((($689|0))|0)==((0)|0)) {
   $691=(($inClose+($i_4<<3))|0);
   $692=(+(HEAPF64[(($691)>>3)]));
   $693=(($inOpen+($i_4<<3))|0);
   $694=(+(HEAPF64[(($693)>>3)]));
   $695=($692)-($694);
   $696=(+(Math_abs((+($695)))));
   $718=$696;
  } else {
   $718=0.0;
  }

  $719=((HEAP32[((272)>>2)])|0);
  $720=(($719+212)|0);
  $721=((HEAP32[(($720)>>2)])|0);
  if (((($721|0))|0)==((0)|0)) {
   $723=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $724=(+(HEAPF64[(($723)>>3)]));
   $725=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $726=(+(HEAPF64[(($725)>>3)]));
   $727=($724)-($726);
   $728=(+(Math_abs((+($727)))));
   $750=$728;
  } else if (((($721|0))|0)==((2)|0)) {
   $736=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $737=(+(HEAPF64[(($736)>>3)]));
   $738=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $739=(+(HEAPF64[(($738)>>3)]));
   $740=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $741=(+(HEAPF64[(($740)>>3)]));
   $742=$739<$741;
   $_27=($742?$741:$739);
   $743=($737)-($_27);
   $744=($742?$739:$741);
   $745=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $746=(+(HEAPF64[(($745)>>3)]));
   $747=($744)-($746);
   $748=($743)+($747);
   $750=$748;
  } else if (((($721|0))|0)==((1)|0)) {
   $730=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $731=(+(HEAPF64[(($730)>>3)]));
   $732=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $733=(+(HEAPF64[(($732)>>3)]));
   $734=($731)-($733);
   $750=$734;
  } else {
   $750=0.0;
  }

  $751=($718)-($750);
  $752=($BodyShortPeriodTotal_1)+($751);
  $753=((HEAP32[((272)>>2)])|0);
  $754=(($753+332)|0);
  $755=((HEAP32[(($754)>>2)])|0);
  if (((($755|0))|0)==((1)|0)) {
   $765=((($i_4)-(1))|0);
   $766=(($inHigh+($765<<3))|0);
   $767=(+(HEAPF64[(($766)>>3)]));
   $768=(($inLow+($765<<3))|0);
   $769=(+(HEAPF64[(($768)>>3)]));
   $770=($767)-($769);
   $787=$770;
  } else if (((($755|0))|0)==((2)|0)) {
   $772=((($i_4)-(1))|0);
   $773=(($inHigh+($772<<3))|0);
   $774=(+(HEAPF64[(($773)>>3)]));
   $775=(($inClose+($772<<3))|0);
   $776=(+(HEAPF64[(($775)>>3)]));
   $777=(($inOpen+($772<<3))|0);
   $778=(+(HEAPF64[(($777)>>3)]));
   $779=$776<$778;
   $_28=($779?$778:$776);
   $780=($774)-($_28);
   $781=($779?$776:$778);
   $782=(($inLow+($772<<3))|0);
   $783=(+(HEAPF64[(($782)>>3)]));
   $784=($781)-($783);
   $785=($780)+($784);
   $787=$785;
  } else if (((($755|0))|0)==((0)|0)) {
   $757=((($i_4)-(1))|0);
   $758=(($inClose+($757<<3))|0);
   $759=(+(HEAPF64[(($758)>>3)]));
   $760=(($inOpen+($757<<3))|0);
   $761=(+(HEAPF64[(($760)>>3)]));
   $762=($759)-($761);
   $763=(+(Math_abs((+($762)))));
   $787=$763;
  } else {
   $787=0.0;
  }

  $788=((HEAP32[((272)>>2)])|0);
  $789=(($788+332)|0);
  $790=((HEAP32[(($789)>>2)])|0);
  if (((($790|0))|0)==((2)|0)) {
   $807=((($ShadowVeryShortTrailingIdx_0)-(1))|0);
   $808=(($inHigh+($807<<3))|0);
   $809=(+(HEAPF64[(($808)>>3)]));
   $810=(($inClose+($807<<3))|0);
   $811=(+(HEAPF64[(($810)>>3)]));
   $812=(($inOpen+($807<<3))|0);
   $813=(+(HEAPF64[(($812)>>3)]));
   $814=$811<$813;
   $_29=($814?$813:$811);
   $815=($809)-($_29);
   $816=($814?$811:$813);
   $817=(($inLow+($807<<3))|0);
   $818=(+(HEAPF64[(($817)>>3)]));
   $819=($816)-($818);
   $820=($815)+($819);
   $822=$820;
  } else if (((($790|0))|0)==((0)|0)) {
   $792=((($ShadowVeryShortTrailingIdx_0)-(1))|0);
   $793=(($inClose+($792<<3))|0);
   $794=(+(HEAPF64[(($793)>>3)]));
   $795=(($inOpen+($792<<3))|0);
   $796=(+(HEAPF64[(($795)>>3)]));
   $797=($794)-($796);
   $798=(+(Math_abs((+($797)))));
   $822=$798;
  } else if (((($790|0))|0)==((1)|0)) {
   $800=((($ShadowVeryShortTrailingIdx_0)-(1))|0);
   $801=(($inHigh+($800<<3))|0);
   $802=(+(HEAPF64[(($801)>>3)]));
   $803=(($inLow+($800<<3))|0);
   $804=(+(HEAPF64[(($803)>>3)]));
   $805=($802)-($804);
   $822=$805;
  } else {
   $822=0.0;
  }

  $823=($787)-($822);
  $824=($ShadowVeryShortPeriodTotal_1)+($823);
  $825=((($i_4)+(1))|0);
  $826=((($BodyLongTrailingIdx_0)+(1))|0);
  $827=((($BodyShortTrailingIdx_0)+(1))|0);
  $828=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $829=((($NearTrailingIdx_0)+(1))|0);
  $830=($i_4|0)<($endIdx|0);
  if ($830) {
   $NearTrailingIdx_0=$829;$ShadowVeryShortTrailingIdx_0=$828;$BodyShortTrailingIdx_0=$827;$BodyLongTrailingIdx_0=$826;$outIdx_0=$outIdx_1;$i_4=$825;$ShadowVeryShortPeriodTotal_1=$824;$BodyShortPeriodTotal_1=$752;
  } else {
   break;
  }
 }
 $832=((($smax52)+(1))|0);
 $833=((($832)-($smax53))|0);
 HEAP32[(($outNBElement)>>2)]=$833;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_CDLSTICKSANDWICH_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+408)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((($3)+(2))|0);
 return (($4)|0);
}


function _TA_CDLSTICKSANDWICH($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond13=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$EqualPeriodTotal_0_lcssa=.0,$25=0,$smax=0,$26=0,$smax16=0,$27=0,$smax17=0,$i_015=0,$EqualPeriodTotal_014=.0,$30=0,$31=0,$32=.0,$33=0,$34=.0;
 var $35=.0,$36=.0,$38=0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$45=0,$46=0,$47=.0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$_=.0,$53=.0,$54=.0,$55=0;
 var $56=.0,$57=.0,$58=.0,$60=.0,$61=.0,$62=0,$63=0,$EqualPeriodTotal_1=.0,$i_1=0,$outIdx_0=0,$EqualTrailingIdx_0=0,$65=0,$66=0,$67=.0,$68=0,$69=.0,$70=0,$72=0,$73=0,$74=.0;
 var $75=0,$76=.0,$77=0,$79=0,$80=.0,$81=0,$82=.0,$not_7=0,$84=0,$85=.0,$86=0,$88=0,$89=0,$90=.0,$91=0,$92=0,$93=0,$95=.0,$96=.0,$98=0;
 var $99=0,$101=.0,$102=.0,$104=0,$105=.0,$106=0,$107=.0,$108=.0,$110=0,$111=.0,$_9=.0,$112=.0,$113=0,$114=.0,$115=0,$116=.0,$117=.0,$118=.0,$120=.0,$121=.0;
 var $122=0,$123=0,$124=0,$125=0,$126=.0,$127=.0,$128=.0,$129=0,$131=.0,$132=.0,$133=0,$134=.0,$135=0,$136=0,$137=0,$139=.0,$140=.0,$143=.0,$144=.0,$145=.0;
 var $147=0,$148=.0,$149=0,$150=.0,$151=.0,$154=0,$155=.0,$156=.0,$157=0,$_10=.0,$158=.0,$159=.0,$160=0,$161=.0,$162=.0,$163=.0,$165=.0,$166=.0,$167=0,$168=0;
 var $169=0,$170=0,$171=.0,$172=.0,$173=.0,$174=0,$176=0,$178=0,$outIdx_1=0,$180=0,$181=0,$182=0,$184=.0,$185=.0,$186=.0,$187=.0,$189=0,$190=.0,$191=0,$192=.0;
 var $193=.0,$195=0,$196=.0,$197=.0,$198=.0,$199=0,$_11=.0,$200=.0,$201=.0,$202=0,$203=.0,$204=.0,$205=.0,$207=.0,$208=0,$209=0,$210=0,$212=0,$213=0,$214=.0;
 var $215=0,$216=.0,$217=.0,$218=.0,$220=0,$221=0,$222=.0,$223=0,$224=.0,$225=.0,$227=0,$228=0,$229=.0,$230=0,$231=.0,$232=0,$233=.0,$234=0,$_12=.0,$235=.0;
 var $236=.0,$237=0,$238=.0,$239=.0,$240=.0,$242=.0,$243=.0,$244=.0,$245=0,$246=0,$247=0,$249=0,$250=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond13=$10|$or_cond5_not;
 if ($or_cond13) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLSTICKSANDWICH_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+408)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=($19|0)>0;
 if ($21) {
  $22=((HEAP32[((272)>>2)])|0);
  $23=(($22+404)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $EqualPeriodTotal_014=0.0;$i_015=$20;
  while(1) {


   if (((($24|0))|0)==((2)|0)) {
    $45=((($i_015)-(2))|0);
    $46=(($inHigh+($45<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inClose+($45<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inOpen+($45<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=$49<$51;
    $_=($52?$51:$49);
    $53=($47)-($_);
    $54=($52?$49:$51);
    $55=(($inLow+($45<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=($54)-($56);
    $58=($53)+($57);
    $60=$58;
   } else if (((($24|0))|0)==((1)|0)) {
    $38=((($i_015)-(2))|0);
    $39=(($inHigh+($38<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inLow+($38<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $60=$43;
   } else if (((($24|0))|0)==((0)|0)) {
    $30=((($i_015)-(2))|0);
    $31=(($inClose+($30<<3))|0);
    $32=(+(HEAPF64[(($31)>>3)]));
    $33=(($inOpen+($30<<3))|0);
    $34=(+(HEAPF64[(($33)>>3)]));
    $35=($32)-($34);
    $36=(+(Math_abs((+($35)))));
    $60=$36;
   } else {
    $60=0.0;
   }

   $61=($EqualPeriodTotal_014)+($60);
   $62=((($i_015)+(1))|0);
   $63=($62|0)<($_startIdx|0);
   if ($63) {
    $EqualPeriodTotal_014=$61;$i_015=$62;
   } else {
    $EqualPeriodTotal_0_lcssa=$61;
    break;
   }
  }
 } else {
  $EqualPeriodTotal_0_lcssa=0.0;
 }

 $25=($12|0)>($endIdx|0);
 $smax=($25?$12:$endIdx);
 $26=($smax|0)>($startIdx|0);
 $smax16=($26?$smax:$startIdx);
 $27=($12|0)>($startIdx|0);
 $smax17=($27?$12:$startIdx);
 $EqualTrailingIdx_0=$20;$outIdx_0=0;$i_1=$_startIdx;$EqualPeriodTotal_1=$EqualPeriodTotal_0_lcssa;
 while(1) {




  $65=((($i_1)-(2))|0);
  $66=(($inClose+($65<<3))|0);
  $67=(+(HEAPF64[(($66)>>3)]));
  $68=(($inOpen+($65<<3))|0);
  $69=(+(HEAPF64[(($68)>>3)]));
  $70=$67>=$69;
  do {
   if ($70) {
    label = 34;
   } else {
    $72=((($i_1)-(1))|0);
    $73=(($inClose+($72<<3))|0);
    $74=(+(HEAPF64[(($73)>>3)]));
    $75=(($inOpen+($72<<3))|0);
    $76=(+(HEAPF64[(($75)>>3)]));
    $77=$74<$76;
    if ($77) {
     label = 34;
     break;
    }
    $79=(($inClose+($i_1<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=(($inOpen+($i_1<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $not_7=$80<$82;
    if (!($not_7)) {
     label = 34;
     break;
    }
    $84=(($inLow+($72<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=$85>$67;
    if (!($86)) {
     label = 34;
     break;
    }
    $88=((HEAP32[((272)>>2)])|0);
    $89=(($88+416)|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($88+408)|0);
    $92=((HEAP32[(($91)>>2)])|0);
    $93=($92|0)==0;
    do {
     if ($93) {
      $98=(($88+404)|0);
      $99=((HEAP32[(($98)>>2)])|0);
      if (((($99|0))|0)==((0)|0)) {
       $101=($67)-($69);
       $102=(+(Math_abs((+($101)))));
       $120=$102;
       break;
      } else if (((($99|0))|0)==((2)|0)) {
       $110=(($inHigh+($65<<3))|0);
       $111=(+(HEAPF64[(($110)>>3)]));
       $_9=($70?$67:$69);
       $112=($111)-($_9);
       $113=$67<$69;
       $114=($113?$67:$69);
       $115=(($inLow+($65<<3))|0);
       $116=(+(HEAPF64[(($115)>>3)]));
       $117=($114)-($116);
       $118=($112)+($117);
       $120=$118;
       break;
      } else if (((($99|0))|0)==((1)|0)) {
       $104=(($inHigh+($65<<3))|0);
       $105=(+(HEAPF64[(($104)>>3)]));
       $106=(($inLow+($65<<3))|0);
       $107=(+(HEAPF64[(($106)>>3)]));
       $108=($105)-($107);
       $120=$108;
       break;
      } else {
       $120=0.0;
       break;
      }
     } else {
      $95=(+((($92|0))|0));
      $96=($EqualPeriodTotal_1)/($95);
      $120=$96;
     }
    } while(0);

    $121=($90)*($120);
    $122=((HEAP32[((272)>>2)])|0);
    $123=(($122+404)|0);
    $124=((HEAP32[(($123)>>2)])|0);
    $125=($124|0)==2;
    $126=($125?(2.0):(1.0));
    $127=($121)/($126);
    $128=($67)+($127);
    $129=$80>$128;
    if ($129) {
     label = 34;
     break;
    }
    $131=(+(HEAPF64[(($79)>>3)]));
    $132=(+(HEAPF64[(($66)>>3)]));
    $133=(($122+416)|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    $135=(($122+408)|0);
    $136=((HEAP32[(($135)>>2)])|0);
    $137=($136|0)==0;
    do {
     if ($137) {
      if (((($124|0))|0)==((1)|0)) {
       $147=(($inHigh+($65<<3))|0);
       $148=(+(HEAPF64[(($147)>>3)]));
       $149=(($inLow+($65<<3))|0);
       $150=(+(HEAPF64[(($149)>>3)]));
       $151=($148)-($150);
       $165=$151;
       break;
      } else if (((($124|0))|0)==((0)|0)) {
       $143=(+(HEAPF64[(($68)>>3)]));
       $144=($132)-($143);
       $145=(+(Math_abs((+($144)))));
       $165=$145;
       break;
      } else {
       if (!($125)) {
        $165=0.0;
        break;
       }
       $154=(($inHigh+($65<<3))|0);
       $155=(+(HEAPF64[(($154)>>3)]));
       $156=(+(HEAPF64[(($68)>>3)]));
       $157=$132<$156;
       $_10=($157?$156:$132);
       $158=($155)-($_10);
       $159=($157?$132:$156);
       $160=(($inLow+($65<<3))|0);
       $161=(+(HEAPF64[(($160)>>3)]));
       $162=($159)-($161);
       $163=($158)+($162);
       $165=$163;
       break;
      }
     } else {
      $139=(+((($136|0))|0));
      $140=($EqualPeriodTotal_1)/($139);
      $165=$140;
     }
    } while(0);

    $166=($134)*($165);
    $167=((HEAP32[((272)>>2)])|0);
    $168=(($167+404)|0);
    $169=((HEAP32[(($168)>>2)])|0);
    $170=($169|0)==2;
    $171=($170?(2.0):(1.0));
    $172=($166)/($171);
    $173=($132)-($172);
    $174=$131<$173;
    if ($174) {
     label = 34;
     break;
    }
    $176=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($176)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 34) {
   label = 0;
   $178=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($178)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $180=((HEAP32[((272)>>2)])|0);
  $181=(($180+404)|0);
  $182=((HEAP32[(($181)>>2)])|0);
  if (((($182|0))|0)==((1)|0)) {
   $189=(($inHigh+($65<<3))|0);
   $190=(+(HEAPF64[(($189)>>3)]));
   $191=(($inLow+($65<<3))|0);
   $192=(+(HEAPF64[(($191)>>3)]));
   $193=($190)-($192);
   $207=$193;
  } else if (((($182|0))|0)==((0)|0)) {
   $184=(+(HEAPF64[(($66)>>3)]));
   $185=(+(HEAPF64[(($68)>>3)]));
   $186=($184)-($185);
   $187=(+(Math_abs((+($186)))));
   $207=$187;
  } else if (((($182|0))|0)==((2)|0)) {
   $195=(($inHigh+($65<<3))|0);
   $196=(+(HEAPF64[(($195)>>3)]));
   $197=(+(HEAPF64[(($66)>>3)]));
   $198=(+(HEAPF64[(($68)>>3)]));
   $199=$197<$198;
   $_11=($199?$198:$197);
   $200=($196)-($_11);
   $201=($199?$197:$198);
   $202=(($inLow+($65<<3))|0);
   $203=(+(HEAPF64[(($202)>>3)]));
   $204=($201)-($203);
   $205=($200)+($204);
   $207=$205;
  } else {
   $207=0.0;
  }

  $208=((HEAP32[((272)>>2)])|0);
  $209=(($208+404)|0);
  $210=((HEAP32[(($209)>>2)])|0);
  if (((($210|0))|0)==((1)|0)) {
   $220=((($EqualTrailingIdx_0)-(2))|0);
   $221=(($inHigh+($220<<3))|0);
   $222=(+(HEAPF64[(($221)>>3)]));
   $223=(($inLow+($220<<3))|0);
   $224=(+(HEAPF64[(($223)>>3)]));
   $225=($222)-($224);
   $242=$225;
  } else if (((($210|0))|0)==((0)|0)) {
   $212=((($EqualTrailingIdx_0)-(2))|0);
   $213=(($inClose+($212<<3))|0);
   $214=(+(HEAPF64[(($213)>>3)]));
   $215=(($inOpen+($212<<3))|0);
   $216=(+(HEAPF64[(($215)>>3)]));
   $217=($214)-($216);
   $218=(+(Math_abs((+($217)))));
   $242=$218;
  } else if (((($210|0))|0)==((2)|0)) {
   $227=((($EqualTrailingIdx_0)-(2))|0);
   $228=(($inHigh+($227<<3))|0);
   $229=(+(HEAPF64[(($228)>>3)]));
   $230=(($inClose+($227<<3))|0);
   $231=(+(HEAPF64[(($230)>>3)]));
   $232=(($inOpen+($227<<3))|0);
   $233=(+(HEAPF64[(($232)>>3)]));
   $234=$231<$233;
   $_12=($234?$233:$231);
   $235=($229)-($_12);
   $236=($234?$231:$233);
   $237=(($inLow+($227<<3))|0);
   $238=(+(HEAPF64[(($237)>>3)]));
   $239=($236)-($238);
   $240=($235)+($239);
   $242=$240;
  } else {
   $242=0.0;
  }

  $243=($207)-($242);
  $244=($EqualPeriodTotal_1)+($243);
  $245=((($i_1)+(1))|0);
  $246=((($EqualTrailingIdx_0)+(1))|0);
  $247=($i_1|0)<($endIdx|0);
  if ($247) {
   $EqualTrailingIdx_0=$246;$outIdx_0=$outIdx_1;$i_1=$245;$EqualPeriodTotal_1=$244;
  } else {
   break;
  }
 }
 $249=((($smax16)+(1))|0);
 $250=((($249)-($smax17))|0);
 HEAP32[(($outNBElement)>>2)]=$250;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLTAKURI_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,$8=0,$9=0,$__=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+240)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+336)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=(($1+288)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($_|0)>($8|0);
 $__=($9?$_:$8);
 return (($__)|0);
}


function _TA_CDLTAKURI($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond21=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$BodyDojiPeriodTotal_0_lcssa=.0,$31=0,$32=0,$33=0,$34=0,$i_032=0,$BodyDojiPeriodTotal_031=.0,$37=0;
 var $38=.0,$39=0,$40=.0,$41=.0,$42=.0,$44=0,$45=.0,$46=0,$47=.0,$48=.0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$_=.0,$57=.0,$58=.0;
 var $59=0,$60=.0,$61=.0,$62=.0,$64=.0,$65=.0,$66=0,$67=0,$ShadowVeryShortPeriodTotal_0_lcssa=.0,$68=0,$69=0,$70=0,$71=0,$72=0,$smax36=0,$73=0,$smax37=0,$74=0,$75=0,$76=0;
 var $i_128=0,$ShadowVeryShortPeriodTotal_027=.0,$79=0,$80=.0,$81=0,$82=.0,$83=.0,$84=.0,$86=0,$87=.0,$88=0,$89=.0,$90=.0,$92=0,$93=.0,$94=0,$95=.0,$96=0,$97=.0,$98=0;
 var $_8=.0,$99=.0,$100=.0,$101=0,$102=.0,$103=.0,$104=.0,$106=.0,$107=.0,$108=0,$109=0,$smax38=0,$i_2_lcssa=0,$ShadowVeryLongPeriodTotal_0_lcssa=.0,$110=0,$smax=0,$111=0,$i_224=0,$ShadowVeryLongPeriodTotal_023=.0,$114=0;
 var $115=.0,$116=0,$117=.0,$118=.0,$119=.0,$121=0,$122=.0,$123=0,$124=.0,$125=.0,$127=0,$128=.0,$129=0,$130=.0,$131=0,$132=.0,$133=0,$_9=.0,$134=.0,$135=.0;
 var $136=0,$137=.0,$138=.0,$139=.0,$141=.0,$142=.0,$143=0,$144=0,$BodyDojiPeriodTotal_1=.0,$ShadowVeryShortPeriodTotal_1=.0,$ShadowVeryLongPeriodTotal_1=.0,$i_3=0,$outIdx_0=0,$BodyDojiTrailingIdx_0=0,$ShadowVeryShortTrailingIdx_0=0,$ShadowVeryLongTrailingIdx_0=0,$146=0,$147=.0,$148=0,$149=.0;
 var $150=.0,$151=.0,$152=0,$153=0,$154=.0,$155=0,$156=0,$157=0,$159=.0,$160=.0,$162=0,$163=0,$165=0,$166=.0,$167=0,$168=.0,$169=.0,$171=0,$173=0,$174=.0;
 var $175=0,$_10=.0,$176=.0,$177=.0,$178=0,$179=.0,$180=.0,$181=.0,$183=.0,$184=.0,$185=0,$186=0,$187=0,$188=0,$189=.0,$190=.0,$191=0,$193=0,$194=.0,$195=.0;
 var $196=.0,$197=0,$_11=.0,$198=.0,$199=0,$200=.0,$201=0,$202=0,$203=0,$205=.0,$206=.0,$208=0,$209=0,$211=.0,$212=.0,$214=0,$215=.0,$216=.0,$218=.0,$219=0;
 var $220=.0,$221=.0,$222=.0,$224=.0,$225=.0,$226=0,$227=0,$228=0,$229=0,$230=.0,$231=.0,$232=0,$234=.0,$235=.0,$236=0,$_13=.0,$237=0,$238=.0,$239=.0,$240=0;
 var $241=.0,$242=0,$243=0,$244=0,$246=.0,$247=.0,$249=0,$250=0,$252=.0,$253=.0,$255=.0,$256=.0,$258=.0,$_14=.0,$259=.0,$260=.0,$262=.0,$263=.0,$264=0,$265=0;
 var $266=0,$267=0,$268=.0,$269=.0,$270=0,$272=0,$274=0,$outIdx_1=0,$276=0,$277=0,$278=0,$280=.0,$281=.0,$282=.0,$283=.0,$285=0,$286=.0,$287=0,$288=.0,$289=.0;
 var $291=0,$292=.0,$293=.0,$294=.0,$295=0,$_15=.0,$296=.0,$297=.0,$298=0,$299=.0,$300=.0,$301=.0,$303=.0,$304=0,$305=0,$306=0,$308=0,$309=.0,$310=0,$311=.0;
 var $312=.0,$313=.0,$315=0,$316=.0,$317=0,$318=.0,$319=.0,$321=0,$322=.0,$323=0,$324=.0,$325=0,$326=.0,$327=0,$_16=.0,$328=.0,$329=.0,$330=0,$331=.0,$332=.0;
 var $333=.0,$335=.0,$336=.0,$337=.0,$338=0,$339=0,$340=0,$342=.0,$343=.0,$344=.0,$345=.0,$347=0,$348=.0,$349=0,$350=.0,$351=.0,$353=0,$354=.0,$355=.0,$356=.0;
 var $357=0,$_17=.0,$358=.0,$359=.0,$360=0,$361=.0,$362=.0,$363=.0,$365=.0,$366=0,$367=0,$368=0,$370=0,$371=.0,$372=0,$373=.0,$374=.0,$375=.0,$377=0,$378=.0;
 var $379=0,$380=.0,$381=.0,$383=0,$384=.0,$385=0,$386=.0,$387=0,$388=.0,$389=0,$_18=.0,$390=.0,$391=.0,$392=0,$393=.0,$394=.0,$395=.0,$397=.0,$398=.0,$399=.0;
 var $400=0,$401=0,$402=0,$404=.0,$405=.0,$406=.0,$407=.0,$409=0,$410=.0,$411=0,$412=.0,$413=.0,$415=0,$416=.0,$417=.0,$418=.0,$419=0,$_19=.0,$420=.0,$421=.0;
 var $422=0,$423=.0,$424=.0,$425=.0,$427=.0,$428=0,$429=0,$430=0,$432=0,$433=.0,$434=0,$435=.0,$436=.0,$437=.0,$439=0,$440=.0,$441=0,$442=.0,$443=.0,$445=0;
 var $446=.0,$447=0,$448=.0,$449=0,$450=.0,$451=0,$_20=.0,$452=.0,$453=.0,$454=0,$455=.0,$456=.0,$457=.0,$459=.0,$460=.0,$461=.0,$462=0,$463=0,$464=0,$465=0;
 var $466=0,$468=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond21=$10|$or_cond5_not;
 if ($or_cond21) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLTAKURI_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+240)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+336)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=(($17+288)|0);
 $25=((HEAP32[(($24)>>2)])|0);
 $26=((($_startIdx)-($25))|0);
 $27=($19|0)>0;
 if ($27) {
  $28=((HEAP32[((272)>>2)])|0);
  $29=(($28+236)|0);
  $30=((HEAP32[(($29)>>2)])|0);
  $BodyDojiPeriodTotal_031=0.0;$i_032=$20;
  while(1) {


   if (((($30|0))|0)==((2)|0)) {
    $50=(($inHigh+($i_032<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inClose+($i_032<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inOpen+($i_032<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=$53<$55;
    $_=($56?$55:$53);
    $57=($51)-($_);
    $58=($56?$53:$55);
    $59=(($inLow+($i_032<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=($57)+($61);
    $64=$62;
   } else if (((($30|0))|0)==((1)|0)) {
    $44=(($inHigh+($i_032<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=(($inLow+($i_032<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=($45)-($47);
    $64=$48;
   } else if (((($30|0))|0)==((0)|0)) {
    $37=(($inClose+($i_032<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=(($inOpen+($i_032<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=($38)-($40);
    $42=(+(Math_abs((+($41)))));
    $64=$42;
   } else {
    $64=0.0;
   }

   $65=($BodyDojiPeriodTotal_031)+($64);
   $66=((($i_032)+(1))|0);
   $67=($66|0)<($_startIdx|0);
   if ($67) {
    $BodyDojiPeriodTotal_031=$65;$i_032=$66;
   } else {
    $BodyDojiPeriodTotal_0_lcssa=$65;
    break;
   }
  }
 } else {
  $BodyDojiPeriodTotal_0_lcssa=0.0;
 }

 $31=($22|0)>0;
 if ($31) {
  $32=((HEAP32[((272)>>2)])|0);
  $33=(($32+332)|0);
  $34=((HEAP32[(($33)>>2)])|0);
  $ShadowVeryShortPeriodTotal_027=0.0;$i_128=$23;
  while(1) {


   if (((($34|0))|0)==((0)|0)) {
    $79=(($inClose+($i_128<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=(($inOpen+($i_128<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=($80)-($82);
    $84=(+(Math_abs((+($83)))));
    $106=$84;
   } else if (((($34|0))|0)==((1)|0)) {
    $86=(($inHigh+($i_128<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=(($inLow+($i_128<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=($87)-($89);
    $106=$90;
   } else if (((($34|0))|0)==((2)|0)) {
    $92=(($inHigh+($i_128<<3))|0);
    $93=(+(HEAPF64[(($92)>>3)]));
    $94=(($inClose+($i_128<<3))|0);
    $95=(+(HEAPF64[(($94)>>3)]));
    $96=(($inOpen+($i_128<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=$95<$97;
    $_8=($98?$97:$95);
    $99=($93)-($_8);
    $100=($98?$95:$97);
    $101=(($inLow+($i_128<<3))|0);
    $102=(+(HEAPF64[(($101)>>3)]));
    $103=($100)-($102);
    $104=($99)+($103);
    $106=$104;
   } else {
    $106=0.0;
   }

   $107=($ShadowVeryShortPeriodTotal_027)+($106);
   $108=((($i_128)+(1))|0);
   $109=($108|0)<($_startIdx|0);
   if ($109) {
    $ShadowVeryShortPeriodTotal_027=$107;$i_128=$108;
   } else {
    $ShadowVeryShortPeriodTotal_0_lcssa=$107;
    break;
   }
  }
 } else {
  $ShadowVeryShortPeriodTotal_0_lcssa=0.0;
 }

 $68=($25|0)>0;
 if ($68) {
  $69=((HEAP32[((272)>>2)])|0);
  $70=(($69+284)|0);
  $71=((HEAP32[(($70)>>2)])|0);
  $72=($12|0)>($startIdx|0);
  $smax36=($72?$12:$startIdx);
  $73=($12|0)>($startIdx|0);
  $smax37=($73?$12:$startIdx);
  $74=((($smax37)+(1))|0);
  $75=((($74)-($25))|0);
  $76=($smax36|0)>($75|0);
  $ShadowVeryLongPeriodTotal_023=0.0;$i_224=$26;
  while(1) {


   if (((($71|0))|0)==((2)|0)) {
    $127=(($inHigh+($i_224<<3))|0);
    $128=(+(HEAPF64[(($127)>>3)]));
    $129=(($inClose+($i_224<<3))|0);
    $130=(+(HEAPF64[(($129)>>3)]));
    $131=(($inOpen+($i_224<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=$130<$132;
    $_9=($133?$132:$130);
    $134=($128)-($_9);
    $135=($133?$130:$132);
    $136=(($inLow+($i_224<<3))|0);
    $137=(+(HEAPF64[(($136)>>3)]));
    $138=($135)-($137);
    $139=($134)+($138);
    $141=$139;
   } else if (((($71|0))|0)==((0)|0)) {
    $114=(($inClose+($i_224<<3))|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $116=(($inOpen+($i_224<<3))|0);
    $117=(+(HEAPF64[(($116)>>3)]));
    $118=($115)-($117);
    $119=(+(Math_abs((+($118)))));
    $141=$119;
   } else if (((($71|0))|0)==((1)|0)) {
    $121=(($inHigh+($i_224<<3))|0);
    $122=(+(HEAPF64[(($121)>>3)]));
    $123=(($inLow+($i_224<<3))|0);
    $124=(+(HEAPF64[(($123)>>3)]));
    $125=($122)-($124);
    $141=$125;
   } else {
    $141=0.0;
   }

   $142=($ShadowVeryLongPeriodTotal_023)+($141);
   $143=((($i_224)+(1))|0);
   $144=($143|0)<($_startIdx|0);
   if ($144) {
    $ShadowVeryLongPeriodTotal_023=$142;$i_224=$143;
   } else {
    break;
   }
  }
  $smax38=($76?$smax36:$75);
  $ShadowVeryLongPeriodTotal_0_lcssa=$142;$i_2_lcssa=$smax38;
 } else {
  $ShadowVeryLongPeriodTotal_0_lcssa=0.0;$i_2_lcssa=$26;
 }


 $110=($i_2_lcssa|0)>($endIdx|0);
 $smax=($110?$i_2_lcssa:$endIdx);
 $111=((($smax)+(1))|0);
 $ShadowVeryLongTrailingIdx_0=$26;$ShadowVeryShortTrailingIdx_0=$23;$BodyDojiTrailingIdx_0=$20;$outIdx_0=0;$i_3=$i_2_lcssa;$ShadowVeryLongPeriodTotal_1=$ShadowVeryLongPeriodTotal_0_lcssa;$ShadowVeryShortPeriodTotal_1=$ShadowVeryShortPeriodTotal_0_lcssa;$BodyDojiPeriodTotal_1=$BodyDojiPeriodTotal_0_lcssa;
 while(1) {








  $146=(($inClose+($i_3<<3))|0);
  $147=(+(HEAPF64[(($146)>>3)]));
  $148=(($inOpen+($i_3<<3))|0);
  $149=(+(HEAPF64[(($148)>>3)]));
  $150=($147)-($149);
  $151=(+(Math_abs((+($150)))));
  $152=((HEAP32[((272)>>2)])|0);
  $153=(($152+248)|0);
  $154=(+(HEAPF64[(($153)>>3)]));
  $155=(($152+240)|0);
  $156=((HEAP32[(($155)>>2)])|0);
  $157=($156|0)==0;
  do {
   if ($157) {
    $162=(($152+236)|0);
    $163=((HEAP32[(($162)>>2)])|0);
    if (((($163|0))|0)==((0)|0)) {
     $183=$151;
     break;
    } else if (((($163|0))|0)==((1)|0)) {
     $165=(($inHigh+($i_3<<3))|0);
     $166=(+(HEAPF64[(($165)>>3)]));
     $167=(($inLow+($i_3<<3))|0);
     $168=(+(HEAPF64[(($167)>>3)]));
     $169=($166)-($168);
     $183=$169;
     break;
    }
    $171=($163|0)==2;
    if (!($171)) {
     $183=0.0;
     break;
    }
    $173=(($inHigh+($i_3<<3))|0);
    $174=(+(HEAPF64[(($173)>>3)]));
    $175=$147<$149;
    $_10=($175?$149:$147);
    $176=($174)-($_10);
    $177=($175?$147:$149);
    $178=(($inLow+($i_3<<3))|0);
    $179=(+(HEAPF64[(($178)>>3)]));
    $180=($177)-($179);
    $181=($176)+($180);
    $183=$181;
   } else {
    $159=(+((($156|0))|0));
    $160=($BodyDojiPeriodTotal_1)/($159);
    $183=$160;
   }
  } while(0);

  $184=($154)*($183);
  $185=((HEAP32[((272)>>2)])|0);
  $186=(($185+236)|0);
  $187=((HEAP32[(($186)>>2)])|0);
  $188=($187|0)==2;
  $189=($188?(2.0):(1.0));
  $190=($184)/($189);
  $191=$151>$190;
  do {
   if ($191) {
    label = 51;
   } else {
    $193=(($inHigh+($i_3<<3))|0);
    $194=(+(HEAPF64[(($193)>>3)]));
    $195=(+(HEAPF64[(($146)>>3)]));
    $196=(+(HEAPF64[(($148)>>3)]));
    $197=$195<$196;
    $_11=($197?$196:$195);
    $198=($194)-($_11);
    $199=(($185+344)|0);
    $200=(+(HEAPF64[(($199)>>3)]));
    $201=(($185+336)|0);
    $202=((HEAP32[(($201)>>2)])|0);
    $203=($202|0)==0;
    do {
     if ($203) {
      $208=(($185+332)|0);
      $209=((HEAP32[(($208)>>2)])|0);
      if (((($209|0))|0)==((2)|0)) {
       $218=($197?$195:$196);
       $219=(($inLow+($i_3<<3))|0);
       $220=(+(HEAPF64[(($219)>>3)]));
       $221=($218)-($220);
       $222=($198)+($221);
       $224=$222;
       break;
      } else if (((($209|0))|0)==((0)|0)) {
       $211=($195)-($196);
       $212=(+(Math_abs((+($211)))));
       $224=$212;
       break;
      } else if (((($209|0))|0)==((1)|0)) {
       $214=(($inLow+($i_3<<3))|0);
       $215=(+(HEAPF64[(($214)>>3)]));
       $216=($194)-($215);
       $224=$216;
       break;
      } else {
       $224=0.0;
       break;
      }
     } else {
      $205=(+((($202|0))|0));
      $206=($ShadowVeryShortPeriodTotal_1)/($205);
      $224=$206;
     }
    } while(0);

    $225=($200)*($224);
    $226=((HEAP32[((272)>>2)])|0);
    $227=(($226+332)|0);
    $228=((HEAP32[(($227)>>2)])|0);
    $229=($228|0)==2;
    $230=($229?(2.0):(1.0));
    $231=($225)/($230);
    $232=$198<$231;
    if (!($232)) {
     label = 51;
     break;
    }
    $234=(+(HEAPF64[(($146)>>3)]));
    $235=(+(HEAPF64[(($148)>>3)]));
    $236=$234<$235;
    $_13=($236?$234:$235);
    $237=(($inLow+($i_3<<3))|0);
    $238=(+(HEAPF64[(($237)>>3)]));
    $239=($_13)-($238);
    $240=(($226+296)|0);
    $241=(+(HEAPF64[(($240)>>3)]));
    $242=(($226+288)|0);
    $243=((HEAP32[(($242)>>2)])|0);
    $244=($243|0)==0;
    do {
     if ($244) {
      $249=(($226+284)|0);
      $250=((HEAP32[(($249)>>2)])|0);
      if (((($250|0))|0)==((1)|0)) {
       $255=(+(HEAPF64[(($193)>>3)]));
       $256=($255)-($238);
       $262=$256;
       break;
      } else if (((($250|0))|0)==((0)|0)) {
       $252=($234)-($235);
       $253=(+(Math_abs((+($252)))));
       $262=$253;
       break;
      } else if (((($250|0))|0)==((2)|0)) {
       $258=(+(HEAPF64[(($193)>>3)]));
       $_14=($236?$235:$234);
       $259=($258)-($_14);
       $260=($239)+($259);
       $262=$260;
       break;
      } else {
       $262=0.0;
       break;
      }
     } else {
      $246=(+((($243|0))|0));
      $247=($ShadowVeryLongPeriodTotal_1)/($246);
      $262=$247;
     }
    } while(0);

    $263=($241)*($262);
    $264=((HEAP32[((272)>>2)])|0);
    $265=(($264+284)|0);
    $266=((HEAP32[(($265)>>2)])|0);
    $267=($266|0)==2;
    $268=($267?(2.0):(1.0));
    $269=($263)/($268);
    $270=$239>$269;
    if (!($270)) {
     label = 51;
     break;
    }
    $272=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($272)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 51) {
   label = 0;
   $274=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($274)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $276=((HEAP32[((272)>>2)])|0);
  $277=(($276+236)|0);
  $278=((HEAP32[(($277)>>2)])|0);
  if (((($278|0))|0)==((1)|0)) {
   $285=(($inHigh+($i_3<<3))|0);
   $286=(+(HEAPF64[(($285)>>3)]));
   $287=(($inLow+($i_3<<3))|0);
   $288=(+(HEAPF64[(($287)>>3)]));
   $289=($286)-($288);
   $303=$289;
  } else if (((($278|0))|0)==((2)|0)) {
   $291=(($inHigh+($i_3<<3))|0);
   $292=(+(HEAPF64[(($291)>>3)]));
   $293=(+(HEAPF64[(($146)>>3)]));
   $294=(+(HEAPF64[(($148)>>3)]));
   $295=$293<$294;
   $_15=($295?$294:$293);
   $296=($292)-($_15);
   $297=($295?$293:$294);
   $298=(($inLow+($i_3<<3))|0);
   $299=(+(HEAPF64[(($298)>>3)]));
   $300=($297)-($299);
   $301=($296)+($300);
   $303=$301;
  } else if (((($278|0))|0)==((0)|0)) {
   $280=(+(HEAPF64[(($146)>>3)]));
   $281=(+(HEAPF64[(($148)>>3)]));
   $282=($280)-($281);
   $283=(+(Math_abs((+($282)))));
   $303=$283;
  } else {
   $303=0.0;
  }

  $304=((HEAP32[((272)>>2)])|0);
  $305=(($304+236)|0);
  $306=((HEAP32[(($305)>>2)])|0);
  if (((($306|0))|0)==((0)|0)) {
   $308=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $309=(+(HEAPF64[(($308)>>3)]));
   $310=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $311=(+(HEAPF64[(($310)>>3)]));
   $312=($309)-($311);
   $313=(+(Math_abs((+($312)))));
   $335=$313;
  } else if (((($306|0))|0)==((1)|0)) {
   $315=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $316=(+(HEAPF64[(($315)>>3)]));
   $317=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $318=(+(HEAPF64[(($317)>>3)]));
   $319=($316)-($318);
   $335=$319;
  } else if (((($306|0))|0)==((2)|0)) {
   $321=(($inHigh+($BodyDojiTrailingIdx_0<<3))|0);
   $322=(+(HEAPF64[(($321)>>3)]));
   $323=(($inClose+($BodyDojiTrailingIdx_0<<3))|0);
   $324=(+(HEAPF64[(($323)>>3)]));
   $325=(($inOpen+($BodyDojiTrailingIdx_0<<3))|0);
   $326=(+(HEAPF64[(($325)>>3)]));
   $327=$324<$326;
   $_16=($327?$326:$324);
   $328=($322)-($_16);
   $329=($327?$324:$326);
   $330=(($inLow+($BodyDojiTrailingIdx_0<<3))|0);
   $331=(+(HEAPF64[(($330)>>3)]));
   $332=($329)-($331);
   $333=($328)+($332);
   $335=$333;
  } else {
   $335=0.0;
  }

  $336=($303)-($335);
  $337=($BodyDojiPeriodTotal_1)+($336);
  $338=((HEAP32[((272)>>2)])|0);
  $339=(($338+332)|0);
  $340=((HEAP32[(($339)>>2)])|0);
  if (((($340|0))|0)==((0)|0)) {
   $342=(+(HEAPF64[(($146)>>3)]));
   $343=(+(HEAPF64[(($148)>>3)]));
   $344=($342)-($343);
   $345=(+(Math_abs((+($344)))));
   $365=$345;
  } else if (((($340|0))|0)==((1)|0)) {
   $347=(($inHigh+($i_3<<3))|0);
   $348=(+(HEAPF64[(($347)>>3)]));
   $349=(($inLow+($i_3<<3))|0);
   $350=(+(HEAPF64[(($349)>>3)]));
   $351=($348)-($350);
   $365=$351;
  } else if (((($340|0))|0)==((2)|0)) {
   $353=(($inHigh+($i_3<<3))|0);
   $354=(+(HEAPF64[(($353)>>3)]));
   $355=(+(HEAPF64[(($146)>>3)]));
   $356=(+(HEAPF64[(($148)>>3)]));
   $357=$355<$356;
   $_17=($357?$356:$355);
   $358=($354)-($_17);
   $359=($357?$355:$356);
   $360=(($inLow+($i_3<<3))|0);
   $361=(+(HEAPF64[(($360)>>3)]));
   $362=($359)-($361);
   $363=($358)+($362);
   $365=$363;
  } else {
   $365=0.0;
  }

  $366=((HEAP32[((272)>>2)])|0);
  $367=(($366+332)|0);
  $368=((HEAP32[(($367)>>2)])|0);
  if (((($368|0))|0)==((2)|0)) {
   $383=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $384=(+(HEAPF64[(($383)>>3)]));
   $385=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $386=(+(HEAPF64[(($385)>>3)]));
   $387=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $388=(+(HEAPF64[(($387)>>3)]));
   $389=$386<$388;
   $_18=($389?$388:$386);
   $390=($384)-($_18);
   $391=($389?$386:$388);
   $392=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $393=(+(HEAPF64[(($392)>>3)]));
   $394=($391)-($393);
   $395=($390)+($394);
   $397=$395;
  } else if (((($368|0))|0)==((0)|0)) {
   $370=(($inClose+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $371=(+(HEAPF64[(($370)>>3)]));
   $372=(($inOpen+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $373=(+(HEAPF64[(($372)>>3)]));
   $374=($371)-($373);
   $375=(+(Math_abs((+($374)))));
   $397=$375;
  } else if (((($368|0))|0)==((1)|0)) {
   $377=(($inHigh+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $378=(+(HEAPF64[(($377)>>3)]));
   $379=(($inLow+($ShadowVeryShortTrailingIdx_0<<3))|0);
   $380=(+(HEAPF64[(($379)>>3)]));
   $381=($378)-($380);
   $397=$381;
  } else {
   $397=0.0;
  }

  $398=($365)-($397);
  $399=($ShadowVeryShortPeriodTotal_1)+($398);
  $400=((HEAP32[((272)>>2)])|0);
  $401=(($400+284)|0);
  $402=((HEAP32[(($401)>>2)])|0);
  if (((($402|0))|0)==((2)|0)) {
   $415=(($inHigh+($i_3<<3))|0);
   $416=(+(HEAPF64[(($415)>>3)]));
   $417=(+(HEAPF64[(($146)>>3)]));
   $418=(+(HEAPF64[(($148)>>3)]));
   $419=$417<$418;
   $_19=($419?$418:$417);
   $420=($416)-($_19);
   $421=($419?$417:$418);
   $422=(($inLow+($i_3<<3))|0);
   $423=(+(HEAPF64[(($422)>>3)]));
   $424=($421)-($423);
   $425=($420)+($424);
   $427=$425;
  } else if (((($402|0))|0)==((0)|0)) {
   $404=(+(HEAPF64[(($146)>>3)]));
   $405=(+(HEAPF64[(($148)>>3)]));
   $406=($404)-($405);
   $407=(+(Math_abs((+($406)))));
   $427=$407;
  } else if (((($402|0))|0)==((1)|0)) {
   $409=(($inHigh+($i_3<<3))|0);
   $410=(+(HEAPF64[(($409)>>3)]));
   $411=(($inLow+($i_3<<3))|0);
   $412=(+(HEAPF64[(($411)>>3)]));
   $413=($410)-($412);
   $427=$413;
  } else {
   $427=0.0;
  }

  $428=((HEAP32[((272)>>2)])|0);
  $429=(($428+284)|0);
  $430=((HEAP32[(($429)>>2)])|0);
  if (((($430|0))|0)==((2)|0)) {
   $445=(($inHigh+($ShadowVeryLongTrailingIdx_0<<3))|0);
   $446=(+(HEAPF64[(($445)>>3)]));
   $447=(($inClose+($ShadowVeryLongTrailingIdx_0<<3))|0);
   $448=(+(HEAPF64[(($447)>>3)]));
   $449=(($inOpen+($ShadowVeryLongTrailingIdx_0<<3))|0);
   $450=(+(HEAPF64[(($449)>>3)]));
   $451=$448<$450;
   $_20=($451?$450:$448);
   $452=($446)-($_20);
   $453=($451?$448:$450);
   $454=(($inLow+($ShadowVeryLongTrailingIdx_0<<3))|0);
   $455=(+(HEAPF64[(($454)>>3)]));
   $456=($453)-($455);
   $457=($452)+($456);
   $459=$457;
  } else if (((($430|0))|0)==((0)|0)) {
   $432=(($inClose+($ShadowVeryLongTrailingIdx_0<<3))|0);
   $433=(+(HEAPF64[(($432)>>3)]));
   $434=(($inOpen+($ShadowVeryLongTrailingIdx_0<<3))|0);
   $435=(+(HEAPF64[(($434)>>3)]));
   $436=($433)-($435);
   $437=(+(Math_abs((+($436)))));
   $459=$437;
  } else if (((($430|0))|0)==((1)|0)) {
   $439=(($inHigh+($ShadowVeryLongTrailingIdx_0<<3))|0);
   $440=(+(HEAPF64[(($439)>>3)]));
   $441=(($inLow+($ShadowVeryLongTrailingIdx_0<<3))|0);
   $442=(+(HEAPF64[(($441)>>3)]));
   $443=($440)-($442);
   $459=$443;
  } else {
   $459=0.0;
  }

  $460=($427)-($459);
  $461=($ShadowVeryLongPeriodTotal_1)+($460);
  $462=((($i_3)+(1))|0);
  $463=((($BodyDojiTrailingIdx_0)+(1))|0);
  $464=((($ShadowVeryShortTrailingIdx_0)+(1))|0);
  $465=((($ShadowVeryLongTrailingIdx_0)+(1))|0);
  $466=($i_3|0)<($endIdx|0);
  if ($466) {
   $ShadowVeryLongTrailingIdx_0=$465;$ShadowVeryShortTrailingIdx_0=$464;$BodyDojiTrailingIdx_0=$463;$outIdx_0=$outIdx_1;$i_3=$462;$ShadowVeryLongPeriodTotal_1=$461;$ShadowVeryShortPeriodTotal_1=$399;$BodyDojiPeriodTotal_1=$337;
  } else {
   break;
  }
 }
 $468=((($111)-($i_2_lcssa))|0);
 HEAP32[(($outNBElement)>>2)]=$468;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLTASUKIGAP_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+360)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((($3)+(2))|0);
 return (($4)|0);
}


function _TA_CDLTASUKIGAP($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond23=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$NearPeriodTotal_0_lcssa=.0,$25=0,$smax=0,$26=0,$smax26=0,$27=0,$smax27=0,$i_025=0,$NearPeriodTotal_024=.0,$30=0,$31=0,$32=.0,$33=0,$34=.0;
 var $35=.0,$36=.0,$38=0,$39=0,$40=.0,$41=0,$42=.0,$43=.0,$45=0,$46=0,$47=.0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$_=.0,$53=.0,$54=.0,$55=0;
 var $56=.0,$57=.0,$58=.0,$60=.0,$61=.0,$62=0,$63=0,$NearPeriodTotal_1=.0,$i_1=0,$outIdx_0=0,$NearTrailingIdx_0=0,$65=0,$66=0,$67=.0,$68=0,$69=.0,$70=0,$_9=.0,$71=0,$72=0;
 var $73=.0,$74=0,$75=.0,$76=0,$77=.0,$78=0,$80=0,$82=0,$83=.0,$84=0,$85=.0,$not_7=0,$86=0,$or_cond10=0,$87=0,$or_cond11=0,$88=0,$or_cond12=0,$90=0,$_13=.0;
 var $91=0,$93=.0,$94=.0,$95=.0,$96=.0,$97=.0,$98=.0,$99=0,$100=0,$101=.0,$102=0,$103=0,$104=0,$106=.0,$107=.0,$109=0,$110=0,$112=0,$113=.0,$114=0;
 var $115=.0,$116=.0,$118=0,$120=0,$121=.0,$_14=.0,$122=.0,$123=.0,$124=0,$125=.0,$126=.0,$127=.0,$129=.0,$130=.0,$131=0,$132=0,$133=0,$134=0,$135=.0,$136=.0;
 var $137=0,$139=.0,$140=.0,$141=0,$_15=.0,$142=.0,$143=.0,$144=0,$145=.0,$146=0,$not_=0,$149=0,$150=.0,$151=0,$152=.0,$153=0,$154=0,$or_cond16=0,$155=0,$or_cond17=0;
 var $156=0,$or_cond18=0,$158=0,$_19=.0,$159=0,$161=.0,$162=.0,$163=.0,$164=.0,$165=.0,$166=.0,$167=0,$168=0,$169=.0,$170=0,$171=0,$172=0,$174=.0,$175=.0,$177=0;
 var $178=0,$180=0,$181=.0,$182=0,$183=.0,$184=.0,$186=0,$188=0,$189=.0,$_20=.0,$190=.0,$191=.0,$192=0,$193=.0,$194=.0,$195=.0,$197=.0,$198=.0,$199=0,$200=0;
 var $201=0,$202=0,$203=.0,$204=.0,$205=0,$207=.0,$208=.0,$209=0,$210=0,$211=0,$213=0,$outIdx_1=0,$215=0,$216=0,$217=0,$219=.0,$220=.0,$221=.0,$222=.0,$224=0;
 var $225=.0,$226=0,$227=.0,$228=.0,$230=0,$231=.0,$232=.0,$233=.0,$234=0,$_21=.0,$235=.0,$236=.0,$237=0,$238=.0,$239=.0,$240=.0,$242=.0,$243=0,$244=0,$245=0;
 var $247=0,$248=0,$249=.0,$250=0,$251=.0,$252=.0,$253=.0,$255=0,$256=0,$257=.0,$258=0,$259=.0,$260=.0,$262=0,$263=0,$264=.0,$265=0,$266=.0,$267=0,$268=.0;
 var $269=0,$_22=.0,$270=.0,$271=.0,$272=0,$273=.0,$274=.0,$275=.0,$277=.0,$278=.0,$279=.0,$280=0,$281=0,$282=0,$284=0,$285=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond23=$10|$or_cond5_not;
 if ($or_cond23) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLTASUKIGAP_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+360)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=($19|0)>0;
 if ($21) {
  $22=((HEAP32[((272)>>2)])|0);
  $23=(($22+356)|0);
  $24=((HEAP32[(($23)>>2)])|0);
  $NearPeriodTotal_024=0.0;$i_025=$20;
  while(1) {


   if (((($24|0))|0)==((2)|0)) {
    $45=((($i_025)-(1))|0);
    $46=(($inHigh+($45<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inClose+($45<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inOpen+($45<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=$49<$51;
    $_=($52?$51:$49);
    $53=($47)-($_);
    $54=($52?$49:$51);
    $55=(($inLow+($45<<3))|0);
    $56=(+(HEAPF64[(($55)>>3)]));
    $57=($54)-($56);
    $58=($53)+($57);
    $60=$58;
   } else if (((($24|0))|0)==((1)|0)) {
    $38=((($i_025)-(1))|0);
    $39=(($inHigh+($38<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inLow+($38<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($40)-($42);
    $60=$43;
   } else if (((($24|0))|0)==((0)|0)) {
    $30=((($i_025)-(1))|0);
    $31=(($inClose+($30<<3))|0);
    $32=(+(HEAPF64[(($31)>>3)]));
    $33=(($inOpen+($30<<3))|0);
    $34=(+(HEAPF64[(($33)>>3)]));
    $35=($32)-($34);
    $36=(+(Math_abs((+($35)))));
    $60=$36;
   } else {
    $60=0.0;
   }

   $61=($NearPeriodTotal_024)+($60);
   $62=((($i_025)+(1))|0);
   $63=($62|0)<($_startIdx|0);
   if ($63) {
    $NearPeriodTotal_024=$61;$i_025=$62;
   } else {
    $NearPeriodTotal_0_lcssa=$61;
    break;
   }
  }
 } else {
  $NearPeriodTotal_0_lcssa=0.0;
 }

 $25=($12|0)>($endIdx|0);
 $smax=($25?$12:$endIdx);
 $26=($smax|0)>($startIdx|0);
 $smax26=($26?$smax:$startIdx);
 $27=($12|0)>($startIdx|0);
 $smax27=($27?$12:$startIdx);
 $NearTrailingIdx_0=$20;$outIdx_0=0;$i_1=$_startIdx;$NearPeriodTotal_1=$NearPeriodTotal_0_lcssa;
 while(1) {




  $65=((($i_1)-(1))|0);
  $66=(($inOpen+($65<<3))|0);
  $67=(+(HEAPF64[(($66)>>3)]));
  $68=(($inClose+($65<<3))|0);
  $69=(+(HEAPF64[(($68)>>3)]));
  $70=$67<$69;
  $_9=($70?$67:$69);
  $71=((($i_1)-(2))|0);
  $72=(($inOpen+($71<<3))|0);
  $73=(+(HEAPF64[(($72)>>3)]));
  $74=(($inClose+($71<<3))|0);
  $75=(+(HEAPF64[(($74)>>3)]));
  $76=$73>$75;
  $77=($76?$73:$75);
  $78=$_9>$77;
  do {
   if ($78) {
    $80=$69<$67;
    if ($80) {
     label = 25;
     break;
    }
    $82=(($inClose+($i_1<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inOpen+($i_1<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $not_7=$83<$85;
    $86=$85<$69;
    $or_cond10=$not_7&$86;
    $87=$85>$67;
    $or_cond11=$or_cond10&$87;
    $88=$83<$67;
    $or_cond12=$or_cond11&$88;
    if (!($or_cond12)) {
     label = 25;
     break;
    }
    $90=$75>$73;
    $_13=($90?$75:$73);
    $91=$83>$_13;
    if (!($91)) {
     label = 25;
     break;
    }
    $93=($69)-($67);
    $94=(+(Math_abs((+($93)))));
    $95=($83)-($85);
    $96=(+(Math_abs((+($95)))));
    $97=($94)-($96);
    $98=(+(Math_abs((+($97)))));
    $99=((HEAP32[((272)>>2)])|0);
    $100=(($99+368)|0);
    $101=(+(HEAPF64[(($100)>>3)]));
    $102=(($99+360)|0);
    $103=((HEAP32[(($102)>>2)])|0);
    $104=($103|0)==0;
    do {
     if ($104) {
      $109=(($99+356)|0);
      $110=((HEAP32[(($109)>>2)])|0);
      if (((($110|0))|0)==((0)|0)) {
       $129=$94;
       break;
      } else if (((($110|0))|0)==((1)|0)) {
       $112=(($inHigh+($65<<3))|0);
       $113=(+(HEAPF64[(($112)>>3)]));
       $114=(($inLow+($65<<3))|0);
       $115=(+(HEAPF64[(($114)>>3)]));
       $116=($113)-($115);
       $129=$116;
       break;
      }
      $118=($110|0)==2;
      if (!($118)) {
       $129=0.0;
       break;
      }
      $120=(($inHigh+($65<<3))|0);
      $121=(+(HEAPF64[(($120)>>3)]));
      $_14=($80?$67:$69);
      $122=($121)-($_14);
      $123=($80?$69:$67);
      $124=(($inLow+($65<<3))|0);
      $125=(+(HEAPF64[(($124)>>3)]));
      $126=($123)-($125);
      $127=($122)+($126);
      $129=$127;
     } else {
      $106=(+((($103|0))|0));
      $107=($NearPeriodTotal_1)/($106);
      $129=$107;
     }
    } while(0);

    $130=($101)*($129);
    $131=((HEAP32[((272)>>2)])|0);
    $132=(($131+356)|0);
    $133=((HEAP32[(($132)>>2)])|0);
    $134=($133|0)==2;
    $135=($134?(2.0):(1.0));
    $136=($130)/($135);
    $137=$98<$136;
    if ($137) {
     label = 36;
    } else {
     label = 25;
    }
   } else {
    label = 25;
   }
  } while(0);
  L39: do {
   if ((label|0) == 25) {
    label = 0;
    $139=(+(HEAPF64[(($66)>>3)]));
    $140=(+(HEAPF64[(($68)>>3)]));
    $141=$139>$140;
    $_15=($141?$139:$140);
    $142=(+(HEAPF64[(($72)>>3)]));
    $143=(+(HEAPF64[(($74)>>3)]));
    $144=$142<$143;
    $145=($144?$142:$143);
    $146=$_15<$145;
    do {
     if ($146) {
      $not_=$140<$139;
      if (!($not_)) {
       break;
      }
      $149=(($inClose+($i_1<<3))|0);
      $150=(+(HEAPF64[(($149)>>3)]));
      $151=(($inOpen+($i_1<<3))|0);
      $152=(+(HEAPF64[(($151)>>3)]));
      $153=$150>=$152;
      $154=$152<$139;
      $or_cond16=$153&$154;
      $155=$152>$140;
      $or_cond17=$or_cond16&$155;
      $156=$150>$139;
      $or_cond18=$or_cond17&$156;
      if (!($or_cond18)) {
       break;
      }
      $158=$143<$142;
      $_19=($158?$143:$142);
      $159=$150<$_19;
      if (!($159)) {
       break;
      }
      $161=($140)-($139);
      $162=(+(Math_abs((+($161)))));
      $163=($150)-($152);
      $164=(+(Math_abs((+($163)))));
      $165=($162)-($164);
      $166=(+(Math_abs((+($165)))));
      $167=((HEAP32[((272)>>2)])|0);
      $168=(($167+368)|0);
      $169=(+(HEAPF64[(($168)>>3)]));
      $170=(($167+360)|0);
      $171=((HEAP32[(($170)>>2)])|0);
      $172=($171|0)==0;
      do {
       if ($172) {
        $177=(($167+356)|0);
        $178=((HEAP32[(($177)>>2)])|0);
        if (((($178|0))|0)==((1)|0)) {
         $180=(($inHigh+($65<<3))|0);
         $181=(+(HEAPF64[(($180)>>3)]));
         $182=(($inLow+($65<<3))|0);
         $183=(+(HEAPF64[(($182)>>3)]));
         $184=($181)-($183);
         $197=$184;
         break;
        } else if (((($178|0))|0)==((0)|0)) {
         $197=$162;
         break;
        }
        $186=($178|0)==2;
        if (!($186)) {
         $197=0.0;
         break;
        }
        $188=(($inHigh+($65<<3))|0);
        $189=(+(HEAPF64[(($188)>>3)]));
        $_20=($not_?$139:$140);
        $190=($189)-($_20);
        $191=($not_?$140:$139);
        $192=(($inLow+($65<<3))|0);
        $193=(+(HEAPF64[(($192)>>3)]));
        $194=($191)-($193);
        $195=($190)+($194);
        $197=$195;
       } else {
        $174=(+((($171|0))|0));
        $175=($NearPeriodTotal_1)/($174);
        $197=$175;
       }
      } while(0);

      $198=($169)*($197);
      $199=((HEAP32[((272)>>2)])|0);
      $200=(($199+356)|0);
      $201=((HEAP32[(($200)>>2)])|0);
      $202=($201|0)==2;
      $203=($202?(2.0):(1.0));
      $204=($198)/($203);
      $205=$166<$204;
      if ($205) {
       label = 36;
       break L39;
      }
     }
    } while(0);
    $213=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($213)>>2)]=0;
   }
  } while(0);
  if ((label|0) == 36) {
   label = 0;
   $207=(+(HEAPF64[(($68)>>3)]));
   $208=(+(HEAPF64[(($66)>>3)]));
   $209=$207>=$208;
   $210=($209?100:-100);
   $211=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($211)>>2)]=$210;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $215=((HEAP32[((272)>>2)])|0);
  $216=(($215+356)|0);
  $217=((HEAP32[(($216)>>2)])|0);
  if (((($217|0))|0)==((2)|0)) {
   $230=(($inHigh+($65<<3))|0);
   $231=(+(HEAPF64[(($230)>>3)]));
   $232=(+(HEAPF64[(($68)>>3)]));
   $233=(+(HEAPF64[(($66)>>3)]));
   $234=$232<$233;
   $_21=($234?$233:$232);
   $235=($231)-($_21);
   $236=($234?$232:$233);
   $237=(($inLow+($65<<3))|0);
   $238=(+(HEAPF64[(($237)>>3)]));
   $239=($236)-($238);
   $240=($235)+($239);
   $242=$240;
  } else if (((($217|0))|0)==((1)|0)) {
   $224=(($inHigh+($65<<3))|0);
   $225=(+(HEAPF64[(($224)>>3)]));
   $226=(($inLow+($65<<3))|0);
   $227=(+(HEAPF64[(($226)>>3)]));
   $228=($225)-($227);
   $242=$228;
  } else if (((($217|0))|0)==((0)|0)) {
   $219=(+(HEAPF64[(($68)>>3)]));
   $220=(+(HEAPF64[(($66)>>3)]));
   $221=($219)-($220);
   $222=(+(Math_abs((+($221)))));
   $242=$222;
  } else {
   $242=0.0;
  }

  $243=((HEAP32[((272)>>2)])|0);
  $244=(($243+356)|0);
  $245=((HEAP32[(($244)>>2)])|0);
  if (((($245|0))|0)==((1)|0)) {
   $255=((($NearTrailingIdx_0)-(1))|0);
   $256=(($inHigh+($255<<3))|0);
   $257=(+(HEAPF64[(($256)>>3)]));
   $258=(($inLow+($255<<3))|0);
   $259=(+(HEAPF64[(($258)>>3)]));
   $260=($257)-($259);
   $277=$260;
  } else if (((($245|0))|0)==((0)|0)) {
   $247=((($NearTrailingIdx_0)-(1))|0);
   $248=(($inClose+($247<<3))|0);
   $249=(+(HEAPF64[(($248)>>3)]));
   $250=(($inOpen+($247<<3))|0);
   $251=(+(HEAPF64[(($250)>>3)]));
   $252=($249)-($251);
   $253=(+(Math_abs((+($252)))));
   $277=$253;
  } else if (((($245|0))|0)==((2)|0)) {
   $262=((($NearTrailingIdx_0)-(1))|0);
   $263=(($inHigh+($262<<3))|0);
   $264=(+(HEAPF64[(($263)>>3)]));
   $265=(($inClose+($262<<3))|0);
   $266=(+(HEAPF64[(($265)>>3)]));
   $267=(($inOpen+($262<<3))|0);
   $268=(+(HEAPF64[(($267)>>3)]));
   $269=$266<$268;
   $_22=($269?$268:$266);
   $270=($264)-($_22);
   $271=($269?$266:$268);
   $272=(($inLow+($262<<3))|0);
   $273=(+(HEAPF64[(($272)>>3)]));
   $274=($271)-($273);
   $275=($270)+($274);
   $277=$275;
  } else {
   $277=0.0;
  }

  $278=($242)-($277);
  $279=($NearPeriodTotal_1)+($278);
  $280=((($i_1)+(1))|0);
  $281=((($NearTrailingIdx_0)+(1))|0);
  $282=($i_1|0)<($endIdx|0);
  if ($282) {
   $NearTrailingIdx_0=$281;$outIdx_0=$outIdx_1;$i_1=$280;$NearPeriodTotal_1=$279;
  } else {
   break;
  }
 }
 $284=((($smax26)+(1))|0);
 $285=((($284)-($smax27))|0);
 HEAP32[(($outNBElement)>>2)]=$285;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLTHRUSTING_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+408)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(1))|0);
 return (($7)|0);
}


function _TA_CDLTHRUSTING($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond15=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$EqualPeriodTotal_0_lcssa=.0,$28=0,$29=0,$30=0,$31=0,$i_020=0,$EqualPeriodTotal_019=.0,$34=0,$35=0,$36=.0,$37=0;
 var $38=.0,$39=.0,$40=.0,$42=0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$49=0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$55=.0,$56=0,$_=.0,$57=.0,$58=.0;
 var $59=0,$60=.0,$61=.0,$62=.0,$64=.0,$65=.0,$66=0,$67=0,$BodyLongPeriodTotal_0_lcssa=.0,$68=0,$smax=0,$69=0,$smax23=0,$70=0,$smax24=0,$i_118=0,$BodyLongPeriodTotal_017=.0,$73=0,$74=0,$75=.0;
 var $76=0,$77=.0,$78=.0,$79=.0,$81=0,$82=0,$83=.0,$84=0,$85=.0,$86=.0,$88=0,$89=0,$90=.0,$91=0,$92=.0,$93=0,$94=.0,$95=0,$_8=.0,$96=.0;
 var $97=.0,$98=0,$99=.0,$100=.0,$101=.0,$103=.0,$104=.0,$105=0,$106=0,$EqualPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$EqualTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$108=0,$109=0,$110=.0,$111=0,$112=.0;
 var $113=0,$115=.0,$116=.0,$117=0,$118=0,$119=.0,$120=0,$121=0,$122=0,$124=.0,$125=.0,$127=0,$128=0,$130=0,$131=.0,$132=0,$133=.0,$134=.0,$136=0,$138=0;
 var $139=.0,$_9=.0,$140=.0,$141=0,$142=.0,$143=0,$144=.0,$145=.0,$146=.0,$148=.0,$149=.0,$150=0,$151=0,$152=0,$153=0,$154=.0,$155=.0,$156=0,$158=0,$159=.0;
 var $160=0,$161=.0,$162=0,$164=0,$165=.0,$166=0,$168=.0,$169=0,$170=.0,$171=0,$172=0,$173=0,$175=.0,$176=.0,$178=0,$179=0,$181=.0,$182=.0,$183=.0,$185=0;
 var $186=.0,$187=.0,$189=0,$190=.0,$191=.0,$192=0,$_10=.0,$193=.0,$194=.0,$195=.0,$196=.0,$198=.0,$199=.0,$200=0,$201=0,$202=0,$203=0,$204=.0,$205=.0,$206=.0;
 var $207=0,$209=.0,$210=.0,$211=.0,$212=.0,$213=.0,$214=.0,$215=.0,$216=0,$218=0,$220=0,$outIdx_1=0,$222=0,$223=0,$224=0,$226=.0,$227=.0,$228=.0,$229=.0,$231=0;
 var $232=.0,$233=0,$234=.0,$235=.0,$237=0,$238=.0,$239=.0,$240=.0,$241=0,$_11=.0,$242=.0,$243=.0,$244=0,$245=.0,$246=.0,$247=.0,$249=.0,$250=0,$251=0,$252=0;
 var $254=0,$255=0,$256=.0,$257=0,$258=.0,$259=.0,$260=.0,$262=0,$263=0,$264=.0,$265=0,$266=.0,$267=.0,$269=0,$270=0,$271=.0,$272=0,$273=.0,$274=0,$275=.0;
 var $276=0,$_12=.0,$277=.0,$278=.0,$279=0,$280=.0,$281=.0,$282=.0,$284=.0,$285=.0,$286=.0,$287=0,$288=0,$289=0,$291=.0,$292=.0,$293=.0,$294=.0,$296=0,$297=.0;
 var $298=0,$299=.0,$300=.0,$302=0,$303=.0,$304=.0,$305=.0,$306=0,$_13=.0,$307=.0,$308=.0,$309=0,$310=.0,$311=.0,$312=.0,$314=.0,$315=0,$316=0,$317=0,$319=0;
 var $320=0,$321=.0,$322=0,$323=.0,$324=.0,$325=.0,$327=0,$328=0,$329=.0,$330=0,$331=.0,$332=.0,$334=0,$335=0,$336=.0,$337=0,$338=.0,$339=0,$340=.0,$341=0;
 var $_14=.0,$342=.0,$343=.0,$344=0,$345=.0,$346=.0,$347=.0,$349=.0,$350=.0,$351=.0,$352=0,$353=0,$354=0,$355=0,$357=0,$358=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond15=$10|$or_cond5_not;
 if ($or_cond15) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLTHRUSTING_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((HEAP32[((272)>>2)])|0);
 $18=(($17+408)|0);
 $19=((HEAP32[(($18)>>2)])|0);
 $20=((($_startIdx)-($19))|0);
 $21=(($17+168)|0);
 $22=((HEAP32[(($21)>>2)])|0);
 $23=((($_startIdx)-($22))|0);
 $24=($19|0)>0;
 if ($24) {
  $25=((HEAP32[((272)>>2)])|0);
  $26=(($25+404)|0);
  $27=((HEAP32[(($26)>>2)])|0);
  $EqualPeriodTotal_019=0.0;$i_020=$20;
  while(1) {


   if (((($27|0))|0)==((0)|0)) {
    $34=((($i_020)-(1))|0);
    $35=(($inClose+($34<<3))|0);
    $36=(+(HEAPF64[(($35)>>3)]));
    $37=(($inOpen+($34<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=($36)-($38);
    $40=(+(Math_abs((+($39)))));
    $64=$40;
   } else if (((($27|0))|0)==((2)|0)) {
    $49=((($i_020)-(1))|0);
    $50=(($inHigh+($49<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inClose+($49<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=(($inOpen+($49<<3))|0);
    $55=(+(HEAPF64[(($54)>>3)]));
    $56=$53<$55;
    $_=($56?$55:$53);
    $57=($51)-($_);
    $58=($56?$53:$55);
    $59=(($inLow+($49<<3))|0);
    $60=(+(HEAPF64[(($59)>>3)]));
    $61=($58)-($60);
    $62=($57)+($61);
    $64=$62;
   } else if (((($27|0))|0)==((1)|0)) {
    $42=((($i_020)-(1))|0);
    $43=(($inHigh+($42<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=(($inLow+($42<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=($44)-($46);
    $64=$47;
   } else {
    $64=0.0;
   }

   $65=($EqualPeriodTotal_019)+($64);
   $66=((($i_020)+(1))|0);
   $67=($66|0)<($_startIdx|0);
   if ($67) {
    $EqualPeriodTotal_019=$65;$i_020=$66;
   } else {
    $EqualPeriodTotal_0_lcssa=$65;
    break;
   }
  }
 } else {
  $EqualPeriodTotal_0_lcssa=0.0;
 }

 $28=($22|0)>0;
 if ($28) {
  $29=((HEAP32[((272)>>2)])|0);
  $30=(($29+164)|0);
  $31=((HEAP32[(($30)>>2)])|0);
  $BodyLongPeriodTotal_017=0.0;$i_118=$23;
  while(1) {


   if (((($31|0))|0)==((0)|0)) {
    $73=((($i_118)-(1))|0);
    $74=(($inClose+($73<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=(($inOpen+($73<<3))|0);
    $77=(+(HEAPF64[(($76)>>3)]));
    $78=($75)-($77);
    $79=(+(Math_abs((+($78)))));
    $103=$79;
   } else if (((($31|0))|0)==((1)|0)) {
    $81=((($i_118)-(1))|0);
    $82=(($inHigh+($81<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    $84=(($inLow+($81<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=($83)-($85);
    $103=$86;
   } else if (((($31|0))|0)==((2)|0)) {
    $88=((($i_118)-(1))|0);
    $89=(($inHigh+($88<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=(($inClose+($88<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=(($inOpen+($88<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=$92<$94;
    $_8=($95?$94:$92);
    $96=($90)-($_8);
    $97=($95?$92:$94);
    $98=(($inLow+($88<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    $100=($97)-($99);
    $101=($96)+($100);
    $103=$101;
   } else {
    $103=0.0;
   }

   $104=($BodyLongPeriodTotal_017)+($103);
   $105=((($i_118)+(1))|0);
   $106=($105|0)<($_startIdx|0);
   if ($106) {
    $BodyLongPeriodTotal_017=$104;$i_118=$105;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$104;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $68=($12|0)>($endIdx|0);
 $smax=($68?$12:$endIdx);
 $69=($smax|0)>($startIdx|0);
 $smax23=($69?$smax:$startIdx);
 $70=($12|0)>($startIdx|0);
 $smax24=($70?$12:$startIdx);
 $BodyLongTrailingIdx_0=$23;$EqualTrailingIdx_0=$20;$outIdx_0=0;$i_2=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$EqualPeriodTotal_1=$EqualPeriodTotal_0_lcssa;
 while(1) {






  $108=((($i_2)-(1))|0);
  $109=(($inClose+($108<<3))|0);
  $110=(+(HEAPF64[(($109)>>3)]));
  $111=(($inOpen+($108<<3))|0);
  $112=(+(HEAPF64[(($111)>>3)]));
  $113=$110>=$112;
  do {
   if ($113) {
    label = 40;
   } else {
    $115=($110)-($112);
    $116=(+(Math_abs((+($115)))));
    $117=((HEAP32[((272)>>2)])|0);
    $118=(($117+176)|0);
    $119=(+(HEAPF64[(($118)>>3)]));
    $120=(($117+168)|0);
    $121=((HEAP32[(($120)>>2)])|0);
    $122=($121|0)==0;
    do {
     if ($122) {
      $127=(($117+164)|0);
      $128=((HEAP32[(($127)>>2)])|0);
      if (((($128|0))|0)==((0)|0)) {
       $148=$116;
       break;
      } else if (((($128|0))|0)==((1)|0)) {
       $130=(($inHigh+($108<<3))|0);
       $131=(+(HEAPF64[(($130)>>3)]));
       $132=(($inLow+($108<<3))|0);
       $133=(+(HEAPF64[(($132)>>3)]));
       $134=($131)-($133);
       $148=$134;
       break;
      }
      $136=($128|0)==2;
      if (!($136)) {
       $148=0.0;
       break;
      }
      $138=(($inHigh+($108<<3))|0);
      $139=(+(HEAPF64[(($138)>>3)]));
      $_9=($113?$110:$112);
      $140=($139)-($_9);
      $141=$110<$112;
      $142=($141?$110:$112);
      $143=(($inLow+($108<<3))|0);
      $144=(+(HEAPF64[(($143)>>3)]));
      $145=($142)-($144);
      $146=($140)+($145);
      $148=$146;
     } else {
      $124=(+((($121|0))|0));
      $125=($BodyLongPeriodTotal_1)/($124);
      $148=$125;
     }
    } while(0);

    $149=($119)*($148);
    $150=((HEAP32[((272)>>2)])|0);
    $151=(($150+164)|0);
    $152=((HEAP32[(($151)>>2)])|0);
    $153=($152|0)==2;
    $154=($153?(2.0):(1.0));
    $155=($149)/($154);
    $156=$116>$155;
    if (!($156)) {
     label = 40;
     break;
    }
    $158=(($inClose+($i_2<<3))|0);
    $159=(+(HEAPF64[(($158)>>3)]));
    $160=(($inOpen+($i_2<<3))|0);
    $161=(+(HEAPF64[(($160)>>3)]));
    $162=$159<$161;
    if ($162) {
     label = 40;
     break;
    }
    $164=(($inLow+($108<<3))|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    $166=$161<$165;
    if (!($166)) {
     label = 40;
     break;
    }
    $168=(+(HEAPF64[(($109)>>3)]));
    $169=(($150+416)|0);
    $170=(+(HEAPF64[(($169)>>3)]));
    $171=(($150+408)|0);
    $172=((HEAP32[(($171)>>2)])|0);
    $173=($172|0)==0;
    do {
     if ($173) {
      $178=(($150+404)|0);
      $179=((HEAP32[(($178)>>2)])|0);
      if (((($179|0))|0)==((0)|0)) {
       $181=(+(HEAPF64[(($111)>>3)]));
       $182=($168)-($181);
       $183=(+(Math_abs((+($182)))));
       $198=$183;
       break;
      } else if (((($179|0))|0)==((1)|0)) {
       $185=(($inHigh+($108<<3))|0);
       $186=(+(HEAPF64[(($185)>>3)]));
       $187=($186)-($165);
       $198=$187;
       break;
      } else if (((($179|0))|0)==((2)|0)) {
       $189=(($inHigh+($108<<3))|0);
       $190=(+(HEAPF64[(($189)>>3)]));
       $191=(+(HEAPF64[(($111)>>3)]));
       $192=$168<$191;
       $_10=($192?$191:$168);
       $193=($190)-($_10);
       $194=($192?$168:$191);
       $195=($194)-($165);
       $196=($193)+($195);
       $198=$196;
       break;
      } else {
       $198=0.0;
       break;
      }
     } else {
      $175=(+((($172|0))|0));
      $176=($EqualPeriodTotal_1)/($175);
      $198=$176;
     }
    } while(0);

    $199=($170)*($198);
    $200=((HEAP32[((272)>>2)])|0);
    $201=(($200+404)|0);
    $202=((HEAP32[(($201)>>2)])|0);
    $203=($202|0)==2;
    $204=($203?(2.0):(1.0));
    $205=($199)/($204);
    $206=($168)+($205);
    $207=$159>$206;
    if (!($207)) {
     label = 40;
     break;
    }
    $209=(+(HEAPF64[(($158)>>3)]));
    $210=(+(HEAPF64[(($109)>>3)]));
    $211=(+(HEAPF64[(($111)>>3)]));
    $212=($210)-($211);
    $213=(+(Math_abs((+($212)))));
    $214=($213)*((0.5));
    $215=($210)+($214);
    $216=$209>$215;
    if ($216) {
     label = 40;
     break;
    }
    $218=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($218)>>2)]=-100;
   }
  } while(0);
  if ((label|0) == 40) {
   label = 0;
   $220=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($220)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $222=((HEAP32[((272)>>2)])|0);
  $223=(($222+404)|0);
  $224=((HEAP32[(($223)>>2)])|0);
  if (((($224|0))|0)==((0)|0)) {
   $226=(+(HEAPF64[(($109)>>3)]));
   $227=(+(HEAPF64[(($111)>>3)]));
   $228=($226)-($227);
   $229=(+(Math_abs((+($228)))));
   $249=$229;
  } else if (((($224|0))|0)==((1)|0)) {
   $231=(($inHigh+($108<<3))|0);
   $232=(+(HEAPF64[(($231)>>3)]));
   $233=(($inLow+($108<<3))|0);
   $234=(+(HEAPF64[(($233)>>3)]));
   $235=($232)-($234);
   $249=$235;
  } else if (((($224|0))|0)==((2)|0)) {
   $237=(($inHigh+($108<<3))|0);
   $238=(+(HEAPF64[(($237)>>3)]));
   $239=(+(HEAPF64[(($109)>>3)]));
   $240=(+(HEAPF64[(($111)>>3)]));
   $241=$239<$240;
   $_11=($241?$240:$239);
   $242=($238)-($_11);
   $243=($241?$239:$240);
   $244=(($inLow+($108<<3))|0);
   $245=(+(HEAPF64[(($244)>>3)]));
   $246=($243)-($245);
   $247=($242)+($246);
   $249=$247;
  } else {
   $249=0.0;
  }

  $250=((HEAP32[((272)>>2)])|0);
  $251=(($250+404)|0);
  $252=((HEAP32[(($251)>>2)])|0);
  if (((($252|0))|0)==((2)|0)) {
   $269=((($EqualTrailingIdx_0)-(1))|0);
   $270=(($inHigh+($269<<3))|0);
   $271=(+(HEAPF64[(($270)>>3)]));
   $272=(($inClose+($269<<3))|0);
   $273=(+(HEAPF64[(($272)>>3)]));
   $274=(($inOpen+($269<<3))|0);
   $275=(+(HEAPF64[(($274)>>3)]));
   $276=$273<$275;
   $_12=($276?$275:$273);
   $277=($271)-($_12);
   $278=($276?$273:$275);
   $279=(($inLow+($269<<3))|0);
   $280=(+(HEAPF64[(($279)>>3)]));
   $281=($278)-($280);
   $282=($277)+($281);
   $284=$282;
  } else if (((($252|0))|0)==((1)|0)) {
   $262=((($EqualTrailingIdx_0)-(1))|0);
   $263=(($inHigh+($262<<3))|0);
   $264=(+(HEAPF64[(($263)>>3)]));
   $265=(($inLow+($262<<3))|0);
   $266=(+(HEAPF64[(($265)>>3)]));
   $267=($264)-($266);
   $284=$267;
  } else if (((($252|0))|0)==((0)|0)) {
   $254=((($EqualTrailingIdx_0)-(1))|0);
   $255=(($inClose+($254<<3))|0);
   $256=(+(HEAPF64[(($255)>>3)]));
   $257=(($inOpen+($254<<3))|0);
   $258=(+(HEAPF64[(($257)>>3)]));
   $259=($256)-($258);
   $260=(+(Math_abs((+($259)))));
   $284=$260;
  } else {
   $284=0.0;
  }

  $285=($249)-($284);
  $286=($EqualPeriodTotal_1)+($285);
  $287=((HEAP32[((272)>>2)])|0);
  $288=(($287+164)|0);
  $289=((HEAP32[(($288)>>2)])|0);
  if (((($289|0))|0)==((2)|0)) {
   $302=(($inHigh+($108<<3))|0);
   $303=(+(HEAPF64[(($302)>>3)]));
   $304=(+(HEAPF64[(($109)>>3)]));
   $305=(+(HEAPF64[(($111)>>3)]));
   $306=$304<$305;
   $_13=($306?$305:$304);
   $307=($303)-($_13);
   $308=($306?$304:$305);
   $309=(($inLow+($108<<3))|0);
   $310=(+(HEAPF64[(($309)>>3)]));
   $311=($308)-($310);
   $312=($307)+($311);
   $314=$312;
  } else if (((($289|0))|0)==((0)|0)) {
   $291=(+(HEAPF64[(($109)>>3)]));
   $292=(+(HEAPF64[(($111)>>3)]));
   $293=($291)-($292);
   $294=(+(Math_abs((+($293)))));
   $314=$294;
  } else if (((($289|0))|0)==((1)|0)) {
   $296=(($inHigh+($108<<3))|0);
   $297=(+(HEAPF64[(($296)>>3)]));
   $298=(($inLow+($108<<3))|0);
   $299=(+(HEAPF64[(($298)>>3)]));
   $300=($297)-($299);
   $314=$300;
  } else {
   $314=0.0;
  }

  $315=((HEAP32[((272)>>2)])|0);
  $316=(($315+164)|0);
  $317=((HEAP32[(($316)>>2)])|0);
  if (((($317|0))|0)==((1)|0)) {
   $327=((($BodyLongTrailingIdx_0)-(1))|0);
   $328=(($inHigh+($327<<3))|0);
   $329=(+(HEAPF64[(($328)>>3)]));
   $330=(($inLow+($327<<3))|0);
   $331=(+(HEAPF64[(($330)>>3)]));
   $332=($329)-($331);
   $349=$332;
  } else if (((($317|0))|0)==((2)|0)) {
   $334=((($BodyLongTrailingIdx_0)-(1))|0);
   $335=(($inHigh+($334<<3))|0);
   $336=(+(HEAPF64[(($335)>>3)]));
   $337=(($inClose+($334<<3))|0);
   $338=(+(HEAPF64[(($337)>>3)]));
   $339=(($inOpen+($334<<3))|0);
   $340=(+(HEAPF64[(($339)>>3)]));
   $341=$338<$340;
   $_14=($341?$340:$338);
   $342=($336)-($_14);
   $343=($341?$338:$340);
   $344=(($inLow+($334<<3))|0);
   $345=(+(HEAPF64[(($344)>>3)]));
   $346=($343)-($345);
   $347=($342)+($346);
   $349=$347;
  } else if (((($317|0))|0)==((0)|0)) {
   $319=((($BodyLongTrailingIdx_0)-(1))|0);
   $320=(($inClose+($319<<3))|0);
   $321=(+(HEAPF64[(($320)>>3)]));
   $322=(($inOpen+($319<<3))|0);
   $323=(+(HEAPF64[(($322)>>3)]));
   $324=($321)-($323);
   $325=(+(Math_abs((+($324)))));
   $349=$325;
  } else {
   $349=0.0;
  }

  $350=($314)-($349);
  $351=($BodyLongPeriodTotal_1)+($350);
  $352=((($i_2)+(1))|0);
  $353=((($EqualTrailingIdx_0)+(1))|0);
  $354=((($BodyLongTrailingIdx_0)+(1))|0);
  $355=($i_2|0)<($endIdx|0);
  if ($355) {
   $BodyLongTrailingIdx_0=$354;$EqualTrailingIdx_0=$353;$outIdx_0=$outIdx_1;$i_2=$352;$BodyLongPeriodTotal_1=$351;$EqualPeriodTotal_1=$286;
  } else {
   break;
  }
 }
 $357=((($smax23)+(1))|0);
 $358=((($357)-($smax24))|0);
 HEAP32[(($outNBElement)>>2)]=$358;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLTRISTAR_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+240)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=((($3)+(2))|0);
 return (($4)|0);
}


function _TA_CDLTRISTAR($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond17=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$BodyPeriodTotal_0_lcssa=.0,$26=0,$smax=0,$27=0,$smax20=0,$28=0,$smax21=0,$i_019=0,$BodyPeriodTotal_018=.0,$31=0,$32=.0,$33=0,$34=.0;
 var $35=.0,$36=.0,$38=0,$39=.0,$40=0,$41=.0,$42=.0,$44=0,$45=.0,$46=0,$47=.0,$48=0,$49=.0,$50=0,$_=.0,$51=.0,$52=.0,$53=0,$54=.0,$55=.0;
 var $56=.0,$58=.0,$59=.0,$60=0,$61=0,$BodyPeriodTotal_1=.0,$i_1=0,$outIdx_0=0,$BodyTrailingIdx_0=0,$63=0,$64=0,$65=.0,$66=0,$67=.0,$68=.0,$69=.0,$70=0,$71=0,$72=.0,$73=0;
 var $74=0,$75=0,$77=.0,$78=.0,$80=0,$81=0,$83=0,$84=.0,$85=0,$86=.0,$87=.0,$89=0,$91=0,$92=.0,$93=0,$_8=.0,$94=.0,$95=.0,$96=0,$97=.0;
 var $98=.0,$99=.0,$101=.0,$102=.0,$103=0,$104=0,$105=0,$106=0,$107=.0,$108=.0,$109=0,$111=0,$112=0,$113=.0,$114=0,$115=.0,$116=.0,$117=.0,$118=0,$119=.0;
 var $120=0,$121=0,$122=0,$124=.0,$125=.0,$128=.0,$129=.0,$130=.0,$131=.0,$133=0,$134=.0,$135=0,$136=.0,$137=.0,$140=0,$141=.0,$142=.0,$143=.0,$144=0,$_9=.0;
 var $145=.0,$146=.0,$147=0,$148=.0,$149=.0,$150=.0,$152=.0,$153=.0,$154=0,$155=0,$156=0,$157=0,$158=.0,$159=.0,$160=0,$162=0,$163=.0,$164=0,$165=.0,$166=.0;
 var $167=.0,$168=0,$169=.0,$170=0,$171=0,$172=0,$174=.0,$175=.0,$178=.0,$179=.0,$180=.0,$181=.0,$183=0,$184=.0,$185=0,$186=.0,$187=.0,$190=0,$191=.0,$192=.0;
 var $193=.0,$194=0,$_10=.0,$195=.0,$196=.0,$197=0,$198=.0,$199=.0,$200=.0,$202=.0,$203=.0,$204=0,$205=0,$206=0,$207=0,$208=.0,$209=.0,$210=0,$212=0,$213=.0;
 var $214=.0,$215=0,$_11=.0,$216=.0,$217=.0,$218=0,$219=.0,$220=0,$222=.0,$223=.0,$224=0,$_12=.0,$225=0,$226=.0,$227=0,$230=.0,$231=.0,$232=0,$_13=.0,$233=.0;
 var $234=.0,$235=0,$236=.0,$237=0,$239=.0,$240=.0,$241=0,$_14=.0,$242=0,$243=.0,$244=0,$247=0,$outIdx_1=0,$249=0,$250=0,$251=0,$253=.0,$254=.0,$255=.0,$256=.0;
 var $258=0,$259=.0,$260=0,$261=.0,$262=.0,$264=0,$265=.0,$266=.0,$267=.0,$268=0,$_15=.0,$269=.0,$270=.0,$271=0,$272=.0,$273=.0,$274=.0,$276=.0,$277=0,$278=0;
 var $279=0,$281=0,$282=.0,$283=0,$284=.0,$285=.0,$286=.0,$288=0,$289=.0,$290=0,$291=.0,$292=.0,$294=0,$295=.0,$296=0,$297=.0,$298=0,$299=.0,$300=0,$_16=.0;
 var $301=.0,$302=.0,$303=0,$304=.0,$305=.0,$306=.0,$308=.0,$309=.0,$310=.0,$311=0,$312=0,$313=0,$315=0,$316=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond17=$10|$or_cond5_not;
 if ($or_cond17) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLTRISTAR_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((($_startIdx)-(2))|0);
 $18=((HEAP32[((272)>>2)])|0);
 $19=(($18+240)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((($17)-($20))|0);
 $22=($20|0)>0;
 if ($22) {
  $23=((HEAP32[((272)>>2)])|0);
  $24=(($23+236)|0);
  $25=((HEAP32[(($24)>>2)])|0);
  $BodyPeriodTotal_018=0.0;$i_019=$21;
  while(1) {


   if (((($25|0))|0)==((1)|0)) {
    $38=(($inHigh+($i_019<<3))|0);
    $39=(+(HEAPF64[(($38)>>3)]));
    $40=(($inLow+($i_019<<3))|0);
    $41=(+(HEAPF64[(($40)>>3)]));
    $42=($39)-($41);
    $58=$42;
   } else if (((($25|0))|0)==((2)|0)) {
    $44=(($inHigh+($i_019<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=(($inClose+($i_019<<3))|0);
    $47=(+(HEAPF64[(($46)>>3)]));
    $48=(($inOpen+($i_019<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=$47<$49;
    $_=($50?$49:$47);
    $51=($45)-($_);
    $52=($50?$47:$49);
    $53=(($inLow+($i_019<<3))|0);
    $54=(+(HEAPF64[(($53)>>3)]));
    $55=($52)-($54);
    $56=($51)+($55);
    $58=$56;
   } else if (((($25|0))|0)==((0)|0)) {
    $31=(($inClose+($i_019<<3))|0);
    $32=(+(HEAPF64[(($31)>>3)]));
    $33=(($inOpen+($i_019<<3))|0);
    $34=(+(HEAPF64[(($33)>>3)]));
    $35=($32)-($34);
    $36=(+(Math_abs((+($35)))));
    $58=$36;
   } else {
    $58=0.0;
   }

   $59=($BodyPeriodTotal_018)+($58);
   $60=((($i_019)+(1))|0);
   $61=($60|0)<($17|0);
   if ($61) {
    $BodyPeriodTotal_018=$59;$i_019=$60;
   } else {
    $BodyPeriodTotal_0_lcssa=$59;
    break;
   }
  }
 } else {
  $BodyPeriodTotal_0_lcssa=0.0;
 }

 $26=($12|0)>($endIdx|0);
 $smax=($26?$12:$endIdx);
 $27=($smax|0)>($startIdx|0);
 $smax20=($27?$smax:$startIdx);
 $28=($12|0)>($startIdx|0);
 $smax21=($28?$12:$startIdx);
 $BodyTrailingIdx_0=$21;$outIdx_0=0;$i_1=$_startIdx;$BodyPeriodTotal_1=$BodyPeriodTotal_0_lcssa;
 while(1) {




  $63=((($i_1)-(2))|0);
  $64=(($inClose+($63<<3))|0);
  $65=(+(HEAPF64[(($64)>>3)]));
  $66=(($inOpen+($63<<3))|0);
  $67=(+(HEAPF64[(($66)>>3)]));
  $68=($65)-($67);
  $69=(+(Math_abs((+($68)))));
  $70=((HEAP32[((272)>>2)])|0);
  $71=(($70+248)|0);
  $72=(+(HEAPF64[(($71)>>3)]));
  $73=(($70+240)|0);
  $74=((HEAP32[(($73)>>2)])|0);
  $75=($74|0)==0;
  do {
   if ($75) {
    $80=(($70+236)|0);
    $81=((HEAP32[(($80)>>2)])|0);
    if (((($81|0))|0)==((1)|0)) {
     $83=(($inHigh+($63<<3))|0);
     $84=(+(HEAPF64[(($83)>>3)]));
     $85=(($inLow+($63<<3))|0);
     $86=(+(HEAPF64[(($85)>>3)]));
     $87=($84)-($86);
     $101=$87;
     break;
    } else if (((($81|0))|0)==((0)|0)) {
     $101=$69;
     break;
    }
    $89=($81|0)==2;
    if (!($89)) {
     $101=0.0;
     break;
    }
    $91=(($inHigh+($63<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    $93=$65<$67;
    $_8=($93?$67:$65);
    $94=($92)-($_8);
    $95=($93?$65:$67);
    $96=(($inLow+($63<<3))|0);
    $97=(+(HEAPF64[(($96)>>3)]));
    $98=($95)-($97);
    $99=($94)+($98);
    $101=$99;
   } else {
    $77=(+((($74|0))|0));
    $78=($BodyPeriodTotal_1)/($77);
    $101=$78;
   }
  } while(0);

  $102=($72)*($101);
  $103=((HEAP32[((272)>>2)])|0);
  $104=(($103+236)|0);
  $105=((HEAP32[(($104)>>2)])|0);
  $106=($105|0)==2;
  $107=($106?(2.0):(1.0));
  $108=($102)/($107);
  $109=$69>$108;
  do {
   if ($109) {
    label = 43;
   } else {
    $111=((($i_1)-(1))|0);
    $112=(($inClose+($111<<3))|0);
    $113=(+(HEAPF64[(($112)>>3)]));
    $114=(($inOpen+($111<<3))|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $116=($113)-($115);
    $117=(+(Math_abs((+($116)))));
    $118=(($103+248)|0);
    $119=(+(HEAPF64[(($118)>>3)]));
    $120=(($103+240)|0);
    $121=((HEAP32[(($120)>>2)])|0);
    $122=($121|0)==0;
    do {
     if ($122) {
      if (((($105|0))|0)==((0)|0)) {
       $128=(+(HEAPF64[(($64)>>3)]));
       $129=(+(HEAPF64[(($66)>>3)]));
       $130=($128)-($129);
       $131=(+(Math_abs((+($130)))));
       $152=$131;
       break;
      } else if (((($105|0))|0)==((1)|0)) {
       $133=(($inHigh+($63<<3))|0);
       $134=(+(HEAPF64[(($133)>>3)]));
       $135=(($inLow+($63<<3))|0);
       $136=(+(HEAPF64[(($135)>>3)]));
       $137=($134)-($136);
       $152=$137;
       break;
      } else {
       if (!($106)) {
        $152=0.0;
        break;
       }
       $140=(($inHigh+($63<<3))|0);
       $141=(+(HEAPF64[(($140)>>3)]));
       $142=(+(HEAPF64[(($64)>>3)]));
       $143=(+(HEAPF64[(($66)>>3)]));
       $144=$142<$143;
       $_9=($144?$143:$142);
       $145=($141)-($_9);
       $146=($144?$142:$143);
       $147=(($inLow+($63<<3))|0);
       $148=(+(HEAPF64[(($147)>>3)]));
       $149=($146)-($148);
       $150=($145)+($149);
       $152=$150;
       break;
      }
     } else {
      $124=(+((($121|0))|0));
      $125=($BodyPeriodTotal_1)/($124);
      $152=$125;
     }
    } while(0);

    $153=($119)*($152);
    $154=((HEAP32[((272)>>2)])|0);
    $155=(($154+236)|0);
    $156=((HEAP32[(($155)>>2)])|0);
    $157=($156|0)==2;
    $158=($157?(2.0):(1.0));
    $159=($153)/($158);
    $160=$117>$159;
    if ($160) {
     label = 43;
     break;
    }
    $162=(($inClose+($i_1<<3))|0);
    $163=(+(HEAPF64[(($162)>>3)]));
    $164=(($inOpen+($i_1<<3))|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    $166=($163)-($165);
    $167=(+(Math_abs((+($166)))));
    $168=(($154+248)|0);
    $169=(+(HEAPF64[(($168)>>3)]));
    $170=(($154+240)|0);
    $171=((HEAP32[(($170)>>2)])|0);
    $172=($171|0)==0;
    do {
     if ($172) {
      if (((($156|0))|0)==((0)|0)) {
       $178=(+(HEAPF64[(($64)>>3)]));
       $179=(+(HEAPF64[(($66)>>3)]));
       $180=($178)-($179);
       $181=(+(Math_abs((+($180)))));
       $202=$181;
       break;
      } else if (((($156|0))|0)==((1)|0)) {
       $183=(($inHigh+($63<<3))|0);
       $184=(+(HEAPF64[(($183)>>3)]));
       $185=(($inLow+($63<<3))|0);
       $186=(+(HEAPF64[(($185)>>3)]));
       $187=($184)-($186);
       $202=$187;
       break;
      } else {
       if (!($157)) {
        $202=0.0;
        break;
       }
       $190=(($inHigh+($63<<3))|0);
       $191=(+(HEAPF64[(($190)>>3)]));
       $192=(+(HEAPF64[(($64)>>3)]));
       $193=(+(HEAPF64[(($66)>>3)]));
       $194=$192<$193;
       $_10=($194?$193:$192);
       $195=($191)-($_10);
       $196=($194?$192:$193);
       $197=(($inLow+($63<<3))|0);
       $198=(+(HEAPF64[(($197)>>3)]));
       $199=($196)-($198);
       $200=($195)+($199);
       $202=$200;
       break;
      }
     } else {
      $174=(+((($171|0))|0));
      $175=($BodyPeriodTotal_1)/($174);
      $202=$175;
     }
    } while(0);

    $203=($169)*($202);
    $204=((HEAP32[((272)>>2)])|0);
    $205=(($204+236)|0);
    $206=((HEAP32[(($205)>>2)])|0);
    $207=($206|0)==2;
    $208=($207?(2.0):(1.0));
    $209=($203)/($208);
    $210=$167>$209;
    if ($210) {
     label = 43;
     break;
    }
    $212=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($212)>>2)]=0;
    $213=(+(HEAPF64[(($114)>>3)]));
    $214=(+(HEAPF64[(($112)>>3)]));
    $215=$213<$214;
    $_11=($215?$213:$214);
    $216=(+(HEAPF64[(($66)>>3)]));
    $217=(+(HEAPF64[(($64)>>3)]));
    $218=$216>$217;
    $219=($218?$216:$217);
    $220=$_11>$219;
    do {
     if ($220) {
      $222=(+(HEAPF64[(($164)>>3)]));
      $223=(+(HEAPF64[(($162)>>3)]));
      $224=$222>$223;
      $_12=($224?$222:$223);
      $225=$213>$214;
      $226=($225?$213:$214);
      $227=$_12<$226;
      if (!($227)) {
       break;
      }
      HEAP32[(($212)>>2)]=-100;
     }
    } while(0);
    $230=(+(HEAPF64[(($114)>>3)]));
    $231=(+(HEAPF64[(($112)>>3)]));
    $232=$230>$231;
    $_13=($232?$230:$231);
    $233=(+(HEAPF64[(($66)>>3)]));
    $234=(+(HEAPF64[(($64)>>3)]));
    $235=$233<$234;
    $236=($235?$233:$234);
    $237=$_13<$236;
    if (!($237)) {
     break;
    }
    $239=(+(HEAPF64[(($164)>>3)]));
    $240=(+(HEAPF64[(($162)>>3)]));
    $241=$239<$240;
    $_14=($241?$239:$240);
    $242=$230<$231;
    $243=($242?$230:$231);
    $244=$_14>$243;
    if (!($244)) {
     break;
    }
    HEAP32[(($212)>>2)]=100;
   }
  } while(0);
  if ((label|0) == 43) {
   label = 0;
   $247=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($247)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $249=((HEAP32[((272)>>2)])|0);
  $250=(($249+236)|0);
  $251=((HEAP32[(($250)>>2)])|0);
  if (((($251|0))|0)==((1)|0)) {
   $258=(($inHigh+($63<<3))|0);
   $259=(+(HEAPF64[(($258)>>3)]));
   $260=(($inLow+($63<<3))|0);
   $261=(+(HEAPF64[(($260)>>3)]));
   $262=($259)-($261);
   $276=$262;
  } else if (((($251|0))|0)==((2)|0)) {
   $264=(($inHigh+($63<<3))|0);
   $265=(+(HEAPF64[(($264)>>3)]));
   $266=(+(HEAPF64[(($64)>>3)]));
   $267=(+(HEAPF64[(($66)>>3)]));
   $268=$266<$267;
   $_15=($268?$267:$266);
   $269=($265)-($_15);
   $270=($268?$266:$267);
   $271=(($inLow+($63<<3))|0);
   $272=(+(HEAPF64[(($271)>>3)]));
   $273=($270)-($272);
   $274=($269)+($273);
   $276=$274;
  } else if (((($251|0))|0)==((0)|0)) {
   $253=(+(HEAPF64[(($64)>>3)]));
   $254=(+(HEAPF64[(($66)>>3)]));
   $255=($253)-($254);
   $256=(+(Math_abs((+($255)))));
   $276=$256;
  } else {
   $276=0.0;
  }

  $277=((HEAP32[((272)>>2)])|0);
  $278=(($277+236)|0);
  $279=((HEAP32[(($278)>>2)])|0);
  if (((($279|0))|0)==((0)|0)) {
   $281=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $282=(+(HEAPF64[(($281)>>3)]));
   $283=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $284=(+(HEAPF64[(($283)>>3)]));
   $285=($282)-($284);
   $286=(+(Math_abs((+($285)))));
   $308=$286;
  } else if (((($279|0))|0)==((1)|0)) {
   $288=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $289=(+(HEAPF64[(($288)>>3)]));
   $290=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $291=(+(HEAPF64[(($290)>>3)]));
   $292=($289)-($291);
   $308=$292;
  } else if (((($279|0))|0)==((2)|0)) {
   $294=(($inHigh+($BodyTrailingIdx_0<<3))|0);
   $295=(+(HEAPF64[(($294)>>3)]));
   $296=(($inClose+($BodyTrailingIdx_0<<3))|0);
   $297=(+(HEAPF64[(($296)>>3)]));
   $298=(($inOpen+($BodyTrailingIdx_0<<3))|0);
   $299=(+(HEAPF64[(($298)>>3)]));
   $300=$297<$299;
   $_16=($300?$299:$297);
   $301=($295)-($_16);
   $302=($300?$297:$299);
   $303=(($inLow+($BodyTrailingIdx_0<<3))|0);
   $304=(+(HEAPF64[(($303)>>3)]));
   $305=($302)-($304);
   $306=($301)+($305);
   $308=$306;
  } else {
   $308=0.0;
  }

  $309=($276)-($308);
  $310=($BodyPeriodTotal_1)+($309);
  $311=((($i_1)+(1))|0);
  $312=((($BodyTrailingIdx_0)+(1))|0);
  $313=($i_1|0)<($endIdx|0);
  if ($313) {
   $BodyTrailingIdx_0=$312;$outIdx_0=$outIdx_1;$i_1=$311;$BodyPeriodTotal_1=$310;
  } else {
   break;
  }
 }
 $315=((($smax20)+(1))|0);
 $316=((($315)-($smax21))|0);
 HEAP32[(($outNBElement)>>2)]=$316;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLUNIQUE3RIVER_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(2))|0);
 return (($7)|0);
}


function _TA_CDLUNIQUE3RIVER($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond18=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$BodyLongPeriodTotal_0_lcssa=.0,$29=0,$30=0,$31=0,$32=0,$i_023=0,$BodyLongPeriodTotal_022=.0,$35=0,$36=.0,$37=0;
 var $38=.0,$39=.0,$40=.0,$42=0,$43=.0,$44=0,$45=.0,$46=.0,$48=0,$49=.0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$_=.0,$55=.0,$56=.0,$57=0,$58=.0;
 var $59=.0,$60=.0,$62=.0,$63=.0,$64=0,$65=0,$BodyShortPeriodTotal_0_lcssa=.0,$66=0,$smax=0,$67=0,$smax26=0,$68=0,$smax27=0,$i_121=0,$BodyShortPeriodTotal_020=.0,$71=0,$72=.0,$73=0,$74=.0,$75=.0;
 var $76=.0,$78=0,$79=.0,$80=0,$81=.0,$82=.0,$84=0,$85=.0,$86=0,$87=.0,$88=0,$89=.0,$90=0,$_9=.0,$91=.0,$92=.0,$93=0,$94=.0,$95=.0,$96=.0;
 var $98=.0,$99=.0,$100=0,$101=0,$BodyShortPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$103=0,$104=0,$105=.0,$106=0,$107=.0,$108=.0,$109=.0,$110=0,$111=0,$112=.0;
 var $113=0,$114=0,$115=0,$117=.0,$118=.0,$120=0,$121=0,$123=0,$124=.0,$125=0,$126=.0,$127=.0,$129=0,$131=0,$132=.0,$133=0,$_10=.0,$134=.0,$135=.0,$136=0;
 var $137=.0,$138=.0,$139=.0,$141=.0,$142=.0,$143=0,$144=0,$145=0,$146=0,$147=.0,$148=.0,$149=0,$151=.0,$152=.0,$not_=0,$154=0,$155=0,$156=.0,$157=0,$158=.0;
 var $notlhs=0,$notrhs=0,$or_cond11_not=0,$159=0,$or_cond12=0,$161=0,$162=.0,$163=0,$164=.0,$165=0,$167=0,$168=.0,$169=0,$170=.0,$171=.0,$172=.0,$173=0,$174=.0,$175=0,$176=0;
 var $177=0,$179=.0,$180=.0,$182=0,$183=0,$185=0,$186=.0,$187=0,$188=.0,$189=.0,$191=0,$193=0,$194=.0,$195=0,$_13=.0,$196=.0,$197=.0,$198=0,$199=.0,$200=.0;
 var $201=.0,$203=.0,$204=.0,$205=0,$206=0,$207=0,$208=0,$209=.0,$210=.0,$211=0,$213=.0,$214=.0,$215=0,$217=.0,$218=0,$220=0,$222=0,$outIdx_1=0,$224=0,$225=0;
 var $226=0,$228=.0,$229=.0,$230=.0,$231=.0,$233=0,$234=.0,$235=0,$236=.0,$237=.0,$239=0,$240=.0,$241=.0,$242=.0,$243=0,$_14=.0,$244=.0,$245=.0,$246=0,$247=.0;
 var $248=.0,$249=.0,$251=.0,$252=0,$253=0,$254=0,$256=0,$257=.0,$258=0,$259=.0,$260=.0,$261=.0,$263=0,$264=.0,$265=0,$266=.0,$267=.0,$269=0,$270=.0,$271=0;
 var $272=.0,$273=0,$274=.0,$275=0,$_15=.0,$276=.0,$277=.0,$278=0,$279=.0,$280=.0,$281=.0,$283=.0,$284=.0,$285=.0,$286=0,$287=0,$288=0,$290=0,$291=.0,$292=0;
 var $293=.0,$294=.0,$295=.0,$297=0,$298=.0,$299=0,$300=.0,$301=.0,$303=0,$304=.0,$305=0,$306=.0,$307=0,$308=.0,$309=0,$_16=.0,$310=.0,$311=.0,$312=0,$313=.0;
 var $314=.0,$315=.0,$317=.0,$318=0,$319=0,$320=0,$322=0,$323=.0,$324=0,$325=.0,$326=.0,$327=.0,$329=0,$330=.0,$331=0,$332=.0,$333=.0,$335=0,$336=.0,$337=0;
 var $338=.0,$339=0,$340=.0,$341=0,$_17=.0,$342=.0,$343=.0,$344=0,$345=.0,$346=.0,$347=.0,$349=.0,$350=.0,$351=.0,$352=0,$353=0,$354=0,$355=0,$357=0,$358=0;
 var $_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond18=$10|$or_cond5_not;
 if ($or_cond18) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLUNIQUE3RIVER_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((($_startIdx)-(2))|0);
 $18=((HEAP32[((272)>>2)])|0);
 $19=(($18+168)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((($17)-($20))|0);
 $22=(($18+216)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=((($_startIdx)-($23))|0);
 $25=($20|0)>0;
 if ($25) {
  $26=((HEAP32[((272)>>2)])|0);
  $27=(($26+164)|0);
  $28=((HEAP32[(($27)>>2)])|0);
  $BodyLongPeriodTotal_022=0.0;$i_023=$21;
  while(1) {


   if (((($28|0))|0)==((0)|0)) {
    $35=(($inClose+($i_023<<3))|0);
    $36=(+(HEAPF64[(($35)>>3)]));
    $37=(($inOpen+($i_023<<3))|0);
    $38=(+(HEAPF64[(($37)>>3)]));
    $39=($36)-($38);
    $40=(+(Math_abs((+($39)))));
    $62=$40;
   } else if (((($28|0))|0)==((1)|0)) {
    $42=(($inHigh+($i_023<<3))|0);
    $43=(+(HEAPF64[(($42)>>3)]));
    $44=(($inLow+($i_023<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=($43)-($45);
    $62=$46;
   } else if (((($28|0))|0)==((2)|0)) {
    $48=(($inHigh+($i_023<<3))|0);
    $49=(+(HEAPF64[(($48)>>3)]));
    $50=(($inClose+($i_023<<3))|0);
    $51=(+(HEAPF64[(($50)>>3)]));
    $52=(($inOpen+($i_023<<3))|0);
    $53=(+(HEAPF64[(($52)>>3)]));
    $54=$51<$53;
    $_=($54?$53:$51);
    $55=($49)-($_);
    $56=($54?$51:$53);
    $57=(($inLow+($i_023<<3))|0);
    $58=(+(HEAPF64[(($57)>>3)]));
    $59=($56)-($58);
    $60=($55)+($59);
    $62=$60;
   } else {
    $62=0.0;
   }

   $63=($BodyLongPeriodTotal_022)+($62);
   $64=((($i_023)+(1))|0);
   $65=($64|0)<($17|0);
   if ($65) {
    $BodyLongPeriodTotal_022=$63;$i_023=$64;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$63;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $29=($23|0)>0;
 if ($29) {
  $30=((HEAP32[((272)>>2)])|0);
  $31=(($30+212)|0);
  $32=((HEAP32[(($31)>>2)])|0);
  $BodyShortPeriodTotal_020=0.0;$i_121=$24;
  while(1) {


   if (((($32|0))|0)==((2)|0)) {
    $84=(($inHigh+($i_121<<3))|0);
    $85=(+(HEAPF64[(($84)>>3)]));
    $86=(($inClose+($i_121<<3))|0);
    $87=(+(HEAPF64[(($86)>>3)]));
    $88=(($inOpen+($i_121<<3))|0);
    $89=(+(HEAPF64[(($88)>>3)]));
    $90=$87<$89;
    $_9=($90?$89:$87);
    $91=($85)-($_9);
    $92=($90?$87:$89);
    $93=(($inLow+($i_121<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=($92)-($94);
    $96=($91)+($95);
    $98=$96;
   } else if (((($32|0))|0)==((0)|0)) {
    $71=(($inClose+($i_121<<3))|0);
    $72=(+(HEAPF64[(($71)>>3)]));
    $73=(($inOpen+($i_121<<3))|0);
    $74=(+(HEAPF64[(($73)>>3)]));
    $75=($72)-($74);
    $76=(+(Math_abs((+($75)))));
    $98=$76;
   } else if (((($32|0))|0)==((1)|0)) {
    $78=(($inHigh+($i_121<<3))|0);
    $79=(+(HEAPF64[(($78)>>3)]));
    $80=(($inLow+($i_121<<3))|0);
    $81=(+(HEAPF64[(($80)>>3)]));
    $82=($79)-($81);
    $98=$82;
   } else {
    $98=0.0;
   }

   $99=($BodyShortPeriodTotal_020)+($98);
   $100=((($i_121)+(1))|0);
   $101=($100|0)<($_startIdx|0);
   if ($101) {
    $BodyShortPeriodTotal_020=$99;$i_121=$100;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$99;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;
 }

 $66=($12|0)>($endIdx|0);
 $smax=($66?$12:$endIdx);
 $67=($smax|0)>($startIdx|0);
 $smax26=($67?$smax:$startIdx);
 $68=($12|0)>($startIdx|0);
 $smax27=($68?$12:$startIdx);
 $BodyLongTrailingIdx_0=$21;$BodyShortTrailingIdx_0=$24;$outIdx_0=0;$i_2=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;
 while(1) {






  $103=((($i_2)-(2))|0);
  $104=(($inClose+($103<<3))|0);
  $105=(+(HEAPF64[(($104)>>3)]));
  $106=(($inOpen+($103<<3))|0);
  $107=(+(HEAPF64[(($106)>>3)]));
  $108=($105)-($107);
  $109=(+(Math_abs((+($108)))));
  $110=((HEAP32[((272)>>2)])|0);
  $111=(($110+176)|0);
  $112=(+(HEAPF64[(($111)>>3)]));
  $113=(($110+168)|0);
  $114=((HEAP32[(($113)>>2)])|0);
  $115=($114|0)==0;
  do {
   if ($115) {
    $120=(($110+164)|0);
    $121=((HEAP32[(($120)>>2)])|0);
    if (((($121|0))|0)==((0)|0)) {
     $141=$109;
     break;
    } else if (((($121|0))|0)==((1)|0)) {
     $123=(($inHigh+($103<<3))|0);
     $124=(+(HEAPF64[(($123)>>3)]));
     $125=(($inLow+($103<<3))|0);
     $126=(+(HEAPF64[(($125)>>3)]));
     $127=($124)-($126);
     $141=$127;
     break;
    }
    $129=($121|0)==2;
    if (!($129)) {
     $141=0.0;
     break;
    }
    $131=(($inHigh+($103<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    $133=$105<$107;
    $_10=($133?$107:$105);
    $134=($132)-($_10);
    $135=($133?$105:$107);
    $136=(($inLow+($103<<3))|0);
    $137=(+(HEAPF64[(($136)>>3)]));
    $138=($135)-($137);
    $139=($134)+($138);
    $141=$139;
   } else {
    $117=(+((($114|0))|0));
    $118=($BodyLongPeriodTotal_1)/($117);
    $141=$118;
   }
  } while(0);

  $142=($112)*($141);
  $143=((HEAP32[((272)>>2)])|0);
  $144=(($143+164)|0);
  $145=((HEAP32[(($144)>>2)])|0);
  $146=($145|0)==2;
  $147=($146?(2.0):(1.0));
  $148=($142)/($147);
  $149=$109>$148;
  do {
   if ($149) {
    $151=(+(HEAPF64[(($104)>>3)]));
    $152=(+(HEAPF64[(($106)>>3)]));
    $not_=$151<$152;
    if (!($not_)) {
     label = 41;
     break;
    }
    $154=((($i_2)-(1))|0);
    $155=(($inClose+($154<<3))|0);
    $156=(+(HEAPF64[(($155)>>3)]));
    $157=(($inOpen+($154<<3))|0);
    $158=(+(HEAPF64[(($157)>>3)]));
    $notlhs=$156>=$158;
    $notrhs=$156<=$151;
    $or_cond11_not=$notrhs|$notlhs;
    $159=$158>$152;
    $or_cond12=$or_cond11_not|$159;
    if ($or_cond12) {
     label = 41;
     break;
    }
    $161=(($inLow+($154<<3))|0);
    $162=(+(HEAPF64[(($161)>>3)]));
    $163=(($inLow+($103<<3))|0);
    $164=(+(HEAPF64[(($163)>>3)]));
    $165=$162<$164;
    if (!($165)) {
     label = 41;
     break;
    }
    $167=(($inClose+($i_2<<3))|0);
    $168=(+(HEAPF64[(($167)>>3)]));
    $169=(($inOpen+($i_2<<3))|0);
    $170=(+(HEAPF64[(($169)>>3)]));
    $171=($168)-($170);
    $172=(+(Math_abs((+($171)))));
    $173=(($143+224)|0);
    $174=(+(HEAPF64[(($173)>>3)]));
    $175=(($143+216)|0);
    $176=((HEAP32[(($175)>>2)])|0);
    $177=($176|0)==0;
    do {
     if ($177) {
      $182=(($143+212)|0);
      $183=((HEAP32[(($182)>>2)])|0);
      if (((($183|0))|0)==((0)|0)) {
       $203=$172;
       break;
      } else if (((($183|0))|0)==((1)|0)) {
       $185=(($inHigh+($i_2<<3))|0);
       $186=(+(HEAPF64[(($185)>>3)]));
       $187=(($inLow+($i_2<<3))|0);
       $188=(+(HEAPF64[(($187)>>3)]));
       $189=($186)-($188);
       $203=$189;
       break;
      }
      $191=($183|0)==2;
      if (!($191)) {
       $203=0.0;
       break;
      }
      $193=(($inHigh+($i_2<<3))|0);
      $194=(+(HEAPF64[(($193)>>3)]));
      $195=$168<$170;
      $_13=($195?$170:$168);
      $196=($194)-($_13);
      $197=($195?$168:$170);
      $198=(($inLow+($i_2<<3))|0);
      $199=(+(HEAPF64[(($198)>>3)]));
      $200=($197)-($199);
      $201=($196)+($200);
      $203=$201;
     } else {
      $179=(+((($176|0))|0));
      $180=($BodyShortPeriodTotal_1)/($179);
      $203=$180;
     }
    } while(0);

    $204=($174)*($203);
    $205=((HEAP32[((272)>>2)])|0);
    $206=(($205+212)|0);
    $207=((HEAP32[(($206)>>2)])|0);
    $208=($207|0)==2;
    $209=($208?(2.0):(1.0));
    $210=($204)/($209);
    $211=$172<$210;
    if (!($211)) {
     label = 41;
     break;
    }
    $213=(+(HEAPF64[(($167)>>3)]));
    $214=(+(HEAPF64[(($169)>>3)]));
    $215=$213<$214;
    if ($215) {
     label = 41;
     break;
    }
    $217=(+(HEAPF64[(($161)>>3)]));
    $218=$214>$217;
    if (!($218)) {
     label = 41;
     break;
    }
    $220=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($220)>>2)]=100;
   } else {
    label = 41;
   }
  } while(0);
  if ((label|0) == 41) {
   label = 0;
   $222=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($222)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $224=((HEAP32[((272)>>2)])|0);
  $225=(($224+164)|0);
  $226=((HEAP32[(($225)>>2)])|0);
  if (((($226|0))|0)==((1)|0)) {
   $233=(($inHigh+($103<<3))|0);
   $234=(+(HEAPF64[(($233)>>3)]));
   $235=(($inLow+($103<<3))|0);
   $236=(+(HEAPF64[(($235)>>3)]));
   $237=($234)-($236);
   $251=$237;
  } else if (((($226|0))|0)==((0)|0)) {
   $228=(+(HEAPF64[(($104)>>3)]));
   $229=(+(HEAPF64[(($106)>>3)]));
   $230=($228)-($229);
   $231=(+(Math_abs((+($230)))));
   $251=$231;
  } else if (((($226|0))|0)==((2)|0)) {
   $239=(($inHigh+($103<<3))|0);
   $240=(+(HEAPF64[(($239)>>3)]));
   $241=(+(HEAPF64[(($104)>>3)]));
   $242=(+(HEAPF64[(($106)>>3)]));
   $243=$241<$242;
   $_14=($243?$242:$241);
   $244=($240)-($_14);
   $245=($243?$241:$242);
   $246=(($inLow+($103<<3))|0);
   $247=(+(HEAPF64[(($246)>>3)]));
   $248=($245)-($247);
   $249=($244)+($248);
   $251=$249;
  } else {
   $251=0.0;
  }

  $252=((HEAP32[((272)>>2)])|0);
  $253=(($252+164)|0);
  $254=((HEAP32[(($253)>>2)])|0);
  if (((($254|0))|0)==((2)|0)) {
   $269=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $270=(+(HEAPF64[(($269)>>3)]));
   $271=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $272=(+(HEAPF64[(($271)>>3)]));
   $273=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $274=(+(HEAPF64[(($273)>>3)]));
   $275=$272<$274;
   $_15=($275?$274:$272);
   $276=($270)-($_15);
   $277=($275?$272:$274);
   $278=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $279=(+(HEAPF64[(($278)>>3)]));
   $280=($277)-($279);
   $281=($276)+($280);
   $283=$281;
  } else if (((($254|0))|0)==((0)|0)) {
   $256=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $257=(+(HEAPF64[(($256)>>3)]));
   $258=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $259=(+(HEAPF64[(($258)>>3)]));
   $260=($257)-($259);
   $261=(+(Math_abs((+($260)))));
   $283=$261;
  } else if (((($254|0))|0)==((1)|0)) {
   $263=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $264=(+(HEAPF64[(($263)>>3)]));
   $265=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $266=(+(HEAPF64[(($265)>>3)]));
   $267=($264)-($266);
   $283=$267;
  } else {
   $283=0.0;
  }

  $284=($251)-($283);
  $285=($BodyLongPeriodTotal_1)+($284);
  $286=((HEAP32[((272)>>2)])|0);
  $287=(($286+212)|0);
  $288=((HEAP32[(($287)>>2)])|0);
  if (((($288|0))|0)==((2)|0)) {
   $303=(($inHigh+($i_2<<3))|0);
   $304=(+(HEAPF64[(($303)>>3)]));
   $305=(($inClose+($i_2<<3))|0);
   $306=(+(HEAPF64[(($305)>>3)]));
   $307=(($inOpen+($i_2<<3))|0);
   $308=(+(HEAPF64[(($307)>>3)]));
   $309=$306<$308;
   $_16=($309?$308:$306);
   $310=($304)-($_16);
   $311=($309?$306:$308);
   $312=(($inLow+($i_2<<3))|0);
   $313=(+(HEAPF64[(($312)>>3)]));
   $314=($311)-($313);
   $315=($310)+($314);
   $317=$315;
  } else if (((($288|0))|0)==((1)|0)) {
   $297=(($inHigh+($i_2<<3))|0);
   $298=(+(HEAPF64[(($297)>>3)]));
   $299=(($inLow+($i_2<<3))|0);
   $300=(+(HEAPF64[(($299)>>3)]));
   $301=($298)-($300);
   $317=$301;
  } else if (((($288|0))|0)==((0)|0)) {
   $290=(($inClose+($i_2<<3))|0);
   $291=(+(HEAPF64[(($290)>>3)]));
   $292=(($inOpen+($i_2<<3))|0);
   $293=(+(HEAPF64[(($292)>>3)]));
   $294=($291)-($293);
   $295=(+(Math_abs((+($294)))));
   $317=$295;
  } else {
   $317=0.0;
  }

  $318=((HEAP32[((272)>>2)])|0);
  $319=(($318+212)|0);
  $320=((HEAP32[(($319)>>2)])|0);
  if (((($320|0))|0)==((1)|0)) {
   $329=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $330=(+(HEAPF64[(($329)>>3)]));
   $331=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $332=(+(HEAPF64[(($331)>>3)]));
   $333=($330)-($332);
   $349=$333;
  } else if (((($320|0))|0)==((2)|0)) {
   $335=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $336=(+(HEAPF64[(($335)>>3)]));
   $337=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $338=(+(HEAPF64[(($337)>>3)]));
   $339=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $340=(+(HEAPF64[(($339)>>3)]));
   $341=$338<$340;
   $_17=($341?$340:$338);
   $342=($336)-($_17);
   $343=($341?$338:$340);
   $344=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $345=(+(HEAPF64[(($344)>>3)]));
   $346=($343)-($345);
   $347=($342)+($346);
   $349=$347;
  } else if (((($320|0))|0)==((0)|0)) {
   $322=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $323=(+(HEAPF64[(($322)>>3)]));
   $324=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $325=(+(HEAPF64[(($324)>>3)]));
   $326=($323)-($325);
   $327=(+(Math_abs((+($326)))));
   $349=$327;
  } else {
   $349=0.0;
  }

  $350=($317)-($349);
  $351=($BodyShortPeriodTotal_1)+($350);
  $352=((($i_2)+(1))|0);
  $353=((($BodyLongTrailingIdx_0)+(1))|0);
  $354=((($BodyShortTrailingIdx_0)+(1))|0);
  $355=($i_2|0)<($endIdx|0);
  if ($355) {
   $BodyLongTrailingIdx_0=$353;$BodyShortTrailingIdx_0=$354;$outIdx_0=$outIdx_1;$i_2=$352;$BodyLongPeriodTotal_1=$285;$BodyShortPeriodTotal_1=$351;
  } else {
   break;
  }
 }
 $357=((($smax26)+(1))|0);
 $358=((($357)-($smax27))|0);
 HEAP32[(($outNBElement)>>2)]=$358;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLUPSIDEGAP2CROWS_Lookback(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$_=0,$7=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=(($1+216)|0);
 $3=((HEAP32[(($2)>>2)])|0);
 $4=(($1+168)|0);
 $5=((HEAP32[(($4)>>2)])|0);
 $6=($3|0)>($5|0);
 $_=($6?$3:$5);
 $7=((($_)+(2))|0);
 return (($7)|0);
}


function _TA_CDLUPSIDEGAP2CROWS($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond17=0,$12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0;
 var $19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$BodyLongPeriodTotal_0_lcssa=.0,$30=0,$31=0,$32=0,$33=0,$i_025=0,$BodyLongPeriodTotal_024=.0,$36=0,$37=.0;
 var $38=0,$39=.0,$40=.0,$41=.0,$43=0,$44=.0,$45=0,$46=.0,$47=.0,$49=0,$50=.0,$51=0,$52=.0,$53=0,$54=.0,$55=0,$_=.0,$56=.0,$57=.0,$58=0;
 var $59=.0,$60=.0,$61=.0,$63=.0,$64=.0,$65=0,$66=0,$BodyShortPeriodTotal_0_lcssa=.0,$67=0,$smax=0,$68=0,$smax28=0,$69=0,$smax29=0,$i_123=0,$BodyShortPeriodTotal_022=.0,$72=0,$73=.0,$74=0,$75=.0;
 var $76=.0,$77=.0,$79=0,$80=.0,$81=0,$82=.0,$83=.0,$85=0,$86=.0,$87=0,$88=.0,$89=0,$90=.0,$91=0,$_9=.0,$92=.0,$93=.0,$94=0,$95=.0,$96=.0;
 var $97=.0,$99=.0,$100=.0,$101=0,$102=0,$BodyShortPeriodTotal_1=.0,$BodyLongPeriodTotal_1=.0,$i_2=0,$outIdx_0=0,$BodyShortTrailingIdx_0=0,$BodyLongTrailingIdx_0=0,$104=0,$105=0,$106=.0,$107=0,$108=.0,$109=0,$111=.0,$112=.0,$113=0;
 var $114=0,$115=.0,$116=0,$117=0,$118=0,$120=.0,$121=.0,$123=0,$124=0,$126=0,$127=.0,$128=0,$129=.0,$130=.0,$132=0,$134=0,$135=.0,$_10=.0,$136=.0,$137=0;
 var $138=.0,$139=0,$140=.0,$141=.0,$142=.0,$144=.0,$145=.0,$146=0,$147=0,$148=0,$149=0,$150=.0,$151=.0,$152=0,$154=0,$155=0,$156=.0,$157=0,$158=.0,$159=0;
 var $161=.0,$162=.0,$163=0,$164=.0,$165=0,$166=0,$167=0,$169=.0,$170=.0,$172=0,$173=0,$175=0,$176=.0,$177=0,$178=.0,$179=.0,$181=0,$183=0,$184=.0,$_11=.0;
 var $185=.0,$186=0,$187=.0,$188=0,$189=.0,$190=.0,$191=.0,$193=.0,$194=.0,$195=0,$196=0,$197=0,$198=0,$199=.0,$200=.0,$201=0,$203=.0,$204=.0,$205=0,$_12=.0;
 var $206=.0,$207=.0,$208=0,$209=.0,$210=0,$212=0,$213=.0,$214=0,$215=.0,$not_7=0,$216=0,$or_cond18=0,$217=0,$or_cond19=0,$218=0,$or_cond20=0,$220=0,$222=0,$outIdx_1=0,$224=0;
 var $225=0,$226=0,$228=.0,$229=.0,$230=.0,$231=.0,$233=0,$234=.0,$235=0,$236=.0,$237=.0,$239=0,$240=.0,$241=.0,$242=.0,$243=0,$_13=.0,$244=.0,$245=.0,$246=0;
 var $247=.0,$248=.0,$249=.0,$251=.0,$252=0,$253=0,$254=0,$256=0,$257=.0,$258=0,$259=.0,$260=.0,$261=.0,$263=0,$264=.0,$265=0,$266=.0,$267=.0,$269=0,$270=.0;
 var $271=0,$272=.0,$273=0,$274=.0,$275=0,$_14=.0,$276=.0,$277=.0,$278=0,$279=.0,$280=.0,$281=.0,$283=.0,$284=.0,$285=.0,$286=0,$287=0,$288=0,$290=0,$291=0;
 var $292=.0,$293=0,$294=.0,$295=.0,$296=.0,$298=0,$299=0,$300=.0,$301=0,$302=.0,$303=.0,$305=0,$306=0,$307=.0,$308=0,$309=.0,$310=0,$311=.0,$312=0,$_15=.0;
 var $313=.0,$314=.0,$315=0,$316=.0,$317=.0,$318=.0,$320=.0,$321=0,$322=0,$323=0,$325=0,$326=.0,$327=0,$328=.0,$329=.0,$330=.0,$332=0,$333=.0,$334=0,$335=.0;
 var $336=.0,$338=0,$339=.0,$340=0,$341=.0,$342=0,$343=.0,$344=0,$_16=.0,$345=.0,$346=.0,$347=0,$348=.0,$349=.0,$350=.0,$352=.0,$353=.0,$354=.0,$355=0,$356=0;
 var $357=0,$358=0,$360=0,$361=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond17=$10|$or_cond5_not;
 if ($or_cond17) {
  $_0=2;

  return (($_0)|0);
 }
 $12=((_TA_CDLUPSIDEGAP2CROWS_Lookback())|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $17=((($_startIdx)-(2))|0);
 $18=((HEAP32[((272)>>2)])|0);
 $19=(($18+168)|0);
 $20=((HEAP32[(($19)>>2)])|0);
 $21=((($17)-($20))|0);
 $22=((($_startIdx)-(1))|0);
 $23=(($18+216)|0);
 $24=((HEAP32[(($23)>>2)])|0);
 $25=((($22)-($24))|0);
 $26=($20|0)>0;
 if ($26) {
  $27=((HEAP32[((272)>>2)])|0);
  $28=(($27+164)|0);
  $29=((HEAP32[(($28)>>2)])|0);
  $BodyLongPeriodTotal_024=0.0;$i_025=$21;
  while(1) {


   if (((($29|0))|0)==((0)|0)) {
    $36=(($inClose+($i_025<<3))|0);
    $37=(+(HEAPF64[(($36)>>3)]));
    $38=(($inOpen+($i_025<<3))|0);
    $39=(+(HEAPF64[(($38)>>3)]));
    $40=($37)-($39);
    $41=(+(Math_abs((+($40)))));
    $63=$41;
   } else if (((($29|0))|0)==((1)|0)) {
    $43=(($inHigh+($i_025<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=(($inLow+($i_025<<3))|0);
    $46=(+(HEAPF64[(($45)>>3)]));
    $47=($44)-($46);
    $63=$47;
   } else if (((($29|0))|0)==((2)|0)) {
    $49=(($inHigh+($i_025<<3))|0);
    $50=(+(HEAPF64[(($49)>>3)]));
    $51=(($inClose+($i_025<<3))|0);
    $52=(+(HEAPF64[(($51)>>3)]));
    $53=(($inOpen+($i_025<<3))|0);
    $54=(+(HEAPF64[(($53)>>3)]));
    $55=$52<$54;
    $_=($55?$54:$52);
    $56=($50)-($_);
    $57=($55?$52:$54);
    $58=(($inLow+($i_025<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=($57)-($59);
    $61=($56)+($60);
    $63=$61;
   } else {
    $63=0.0;
   }

   $64=($BodyLongPeriodTotal_024)+($63);
   $65=((($i_025)+(1))|0);
   $66=($65|0)<($17|0);
   if ($66) {
    $BodyLongPeriodTotal_024=$64;$i_025=$65;
   } else {
    $BodyLongPeriodTotal_0_lcssa=$64;
    break;
   }
  }
 } else {
  $BodyLongPeriodTotal_0_lcssa=0.0;
 }

 $30=($24|0)>0;
 if ($30) {
  $31=((HEAP32[((272)>>2)])|0);
  $32=(($31+212)|0);
  $33=((HEAP32[(($32)>>2)])|0);
  $BodyShortPeriodTotal_022=0.0;$i_123=$25;
  while(1) {


   if (((($33|0))|0)==((0)|0)) {
    $72=(($inClose+($i_123<<3))|0);
    $73=(+(HEAPF64[(($72)>>3)]));
    $74=(($inOpen+($i_123<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=($73)-($75);
    $77=(+(Math_abs((+($76)))));
    $99=$77;
   } else if (((($33|0))|0)==((2)|0)) {
    $85=(($inHigh+($i_123<<3))|0);
    $86=(+(HEAPF64[(($85)>>3)]));
    $87=(($inClose+($i_123<<3))|0);
    $88=(+(HEAPF64[(($87)>>3)]));
    $89=(($inOpen+($i_123<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    $91=$88<$90;
    $_9=($91?$90:$88);
    $92=($86)-($_9);
    $93=($91?$88:$90);
    $94=(($inLow+($i_123<<3))|0);
    $95=(+(HEAPF64[(($94)>>3)]));
    $96=($93)-($95);
    $97=($92)+($96);
    $99=$97;
   } else if (((($33|0))|0)==((1)|0)) {
    $79=(($inHigh+($i_123<<3))|0);
    $80=(+(HEAPF64[(($79)>>3)]));
    $81=(($inLow+($i_123<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    $83=($80)-($82);
    $99=$83;
   } else {
    $99=0.0;
   }

   $100=($BodyShortPeriodTotal_022)+($99);
   $101=((($i_123)+(1))|0);
   $102=($101|0)<($22|0);
   if ($102) {
    $BodyShortPeriodTotal_022=$100;$i_123=$101;
   } else {
    $BodyShortPeriodTotal_0_lcssa=$100;
    break;
   }
  }
 } else {
  $BodyShortPeriodTotal_0_lcssa=0.0;
 }

 $67=($12|0)>($endIdx|0);
 $smax=($67?$12:$endIdx);
 $68=($smax|0)>($startIdx|0);
 $smax28=($68?$smax:$startIdx);
 $69=($12|0)>($startIdx|0);
 $smax29=($69?$12:$startIdx);
 $BodyLongTrailingIdx_0=$21;$BodyShortTrailingIdx_0=$25;$outIdx_0=0;$i_2=$_startIdx;$BodyLongPeriodTotal_1=$BodyLongPeriodTotal_0_lcssa;$BodyShortPeriodTotal_1=$BodyShortPeriodTotal_0_lcssa;
 while(1) {






  $104=((($i_2)-(2))|0);
  $105=(($inClose+($104<<3))|0);
  $106=(+(HEAPF64[(($105)>>3)]));
  $107=(($inOpen+($104<<3))|0);
  $108=(+(HEAPF64[(($107)>>3)]));
  $109=$106>=$108;
  do {
   if ($109) {
    $111=($106)-($108);
    $112=(+(Math_abs((+($111)))));
    $113=((HEAP32[((272)>>2)])|0);
    $114=(($113+176)|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $116=(($113+168)|0);
    $117=((HEAP32[(($116)>>2)])|0);
    $118=($117|0)==0;
    do {
     if ($118) {
      $123=(($113+164)|0);
      $124=((HEAP32[(($123)>>2)])|0);
      if (((($124|0))|0)==((0)|0)) {
       $144=$112;
       break;
      } else if (((($124|0))|0)==((1)|0)) {
       $126=(($inHigh+($104<<3))|0);
       $127=(+(HEAPF64[(($126)>>3)]));
       $128=(($inLow+($104<<3))|0);
       $129=(+(HEAPF64[(($128)>>3)]));
       $130=($127)-($129);
       $144=$130;
       break;
      }
      $132=($124|0)==2;
      if (!($132)) {
       $144=0.0;
       break;
      }
      $134=(($inHigh+($104<<3))|0);
      $135=(+(HEAPF64[(($134)>>3)]));
      $_10=($109?$106:$108);
      $136=($135)-($_10);
      $137=$106<$108;
      $138=($137?$106:$108);
      $139=(($inLow+($104<<3))|0);
      $140=(+(HEAPF64[(($139)>>3)]));
      $141=($138)-($140);
      $142=($136)+($141);
      $144=$142;
     } else {
      $120=(+((($117|0))|0));
      $121=($BodyLongPeriodTotal_1)/($120);
      $144=$121;
     }
    } while(0);

    $145=($115)*($144);
    $146=((HEAP32[((272)>>2)])|0);
    $147=(($146+164)|0);
    $148=((HEAP32[(($147)>>2)])|0);
    $149=($148|0)==2;
    $150=($149?(2.0):(1.0));
    $151=($145)/($150);
    $152=$112>$151;
    if (!($152)) {
     label = 40;
     break;
    }
    $154=((($i_2)-(1))|0);
    $155=(($inClose+($154<<3))|0);
    $156=(+(HEAPF64[(($155)>>3)]));
    $157=(($inOpen+($154<<3))|0);
    $158=(+(HEAPF64[(($157)>>3)]));
    $159=$156>=$158;
    if ($159) {
     label = 40;
     break;
    }
    $161=($156)-($158);
    $162=(+(Math_abs((+($161)))));
    $163=(($146+224)|0);
    $164=(+(HEAPF64[(($163)>>3)]));
    $165=(($146+216)|0);
    $166=((HEAP32[(($165)>>2)])|0);
    $167=($166|0)==0;
    do {
     if ($167) {
      $172=(($146+212)|0);
      $173=((HEAP32[(($172)>>2)])|0);
      if (((($173|0))|0)==((0)|0)) {
       $193=$162;
       break;
      } else if (((($173|0))|0)==((1)|0)) {
       $175=(($inHigh+($154<<3))|0);
       $176=(+(HEAPF64[(($175)>>3)]));
       $177=(($inLow+($154<<3))|0);
       $178=(+(HEAPF64[(($177)>>3)]));
       $179=($176)-($178);
       $193=$179;
       break;
      }
      $181=($173|0)==2;
      if (!($181)) {
       $193=0.0;
       break;
      }
      $183=(($inHigh+($154<<3))|0);
      $184=(+(HEAPF64[(($183)>>3)]));
      $_11=($159?$156:$158);
      $185=($184)-($_11);
      $186=$156<$158;
      $187=($186?$156:$158);
      $188=(($inLow+($154<<3))|0);
      $189=(+(HEAPF64[(($188)>>3)]));
      $190=($187)-($189);
      $191=($185)+($190);
      $193=$191;
     } else {
      $169=(+((($166|0))|0));
      $170=($BodyShortPeriodTotal_1)/($169);
      $193=$170;
     }
    } while(0);

    $194=($164)*($193);
    $195=((HEAP32[((272)>>2)])|0);
    $196=(($195+212)|0);
    $197=((HEAP32[(($196)>>2)])|0);
    $198=($197|0)==2;
    $199=($198?(2.0):(1.0));
    $200=($194)/($199);
    $201=$162>$200;
    if ($201) {
     label = 40;
     break;
    }
    $203=(+(HEAPF64[(($157)>>3)]));
    $204=(+(HEAPF64[(($155)>>3)]));
    $205=$203<$204;
    $_12=($205?$203:$204);
    $206=(+(HEAPF64[(($107)>>3)]));
    $207=(+(HEAPF64[(($105)>>3)]));
    $208=$206>$207;
    $209=($208?$206:$207);
    $210=$_12>$209;
    if (!($210)) {
     label = 40;
     break;
    }
    $212=(($inClose+($i_2<<3))|0);
    $213=(+(HEAPF64[(($212)>>3)]));
    $214=(($inOpen+($i_2<<3))|0);
    $215=(+(HEAPF64[(($214)>>3)]));
    $not_7=$213<$215;
    $216=$215>$203;
    $or_cond18=$not_7&$216;
    $217=$213<$204;
    $or_cond19=$or_cond18&$217;
    $218=$213>$207;
    $or_cond20=$or_cond19&$218;
    if (!($or_cond20)) {
     label = 40;
     break;
    }
    $220=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($220)>>2)]=-100;
   } else {
    label = 40;
   }
  } while(0);
  if ((label|0) == 40) {
   label = 0;
   $222=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($222)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $224=((HEAP32[((272)>>2)])|0);
  $225=(($224+164)|0);
  $226=((HEAP32[(($225)>>2)])|0);
  if (((($226|0))|0)==((1)|0)) {
   $233=(($inHigh+($104<<3))|0);
   $234=(+(HEAPF64[(($233)>>3)]));
   $235=(($inLow+($104<<3))|0);
   $236=(+(HEAPF64[(($235)>>3)]));
   $237=($234)-($236);
   $251=$237;
  } else if (((($226|0))|0)==((2)|0)) {
   $239=(($inHigh+($104<<3))|0);
   $240=(+(HEAPF64[(($239)>>3)]));
   $241=(+(HEAPF64[(($105)>>3)]));
   $242=(+(HEAPF64[(($107)>>3)]));
   $243=$241<$242;
   $_13=($243?$242:$241);
   $244=($240)-($_13);
   $245=($243?$241:$242);
   $246=(($inLow+($104<<3))|0);
   $247=(+(HEAPF64[(($246)>>3)]));
   $248=($245)-($247);
   $249=($244)+($248);
   $251=$249;
  } else if (((($226|0))|0)==((0)|0)) {
   $228=(+(HEAPF64[(($105)>>3)]));
   $229=(+(HEAPF64[(($107)>>3)]));
   $230=($228)-($229);
   $231=(+(Math_abs((+($230)))));
   $251=$231;
  } else {
   $251=0.0;
  }

  $252=((HEAP32[((272)>>2)])|0);
  $253=(($252+164)|0);
  $254=((HEAP32[(($253)>>2)])|0);
  if (((($254|0))|0)==((0)|0)) {
   $256=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $257=(+(HEAPF64[(($256)>>3)]));
   $258=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $259=(+(HEAPF64[(($258)>>3)]));
   $260=($257)-($259);
   $261=(+(Math_abs((+($260)))));
   $283=$261;
  } else if (((($254|0))|0)==((1)|0)) {
   $263=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $264=(+(HEAPF64[(($263)>>3)]));
   $265=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $266=(+(HEAPF64[(($265)>>3)]));
   $267=($264)-($266);
   $283=$267;
  } else if (((($254|0))|0)==((2)|0)) {
   $269=(($inHigh+($BodyLongTrailingIdx_0<<3))|0);
   $270=(+(HEAPF64[(($269)>>3)]));
   $271=(($inClose+($BodyLongTrailingIdx_0<<3))|0);
   $272=(+(HEAPF64[(($271)>>3)]));
   $273=(($inOpen+($BodyLongTrailingIdx_0<<3))|0);
   $274=(+(HEAPF64[(($273)>>3)]));
   $275=$272<$274;
   $_14=($275?$274:$272);
   $276=($270)-($_14);
   $277=($275?$272:$274);
   $278=(($inLow+($BodyLongTrailingIdx_0<<3))|0);
   $279=(+(HEAPF64[(($278)>>3)]));
   $280=($277)-($279);
   $281=($276)+($280);
   $283=$281;
  } else {
   $283=0.0;
  }

  $284=($251)-($283);
  $285=($BodyLongPeriodTotal_1)+($284);
  $286=((HEAP32[((272)>>2)])|0);
  $287=(($286+212)|0);
  $288=((HEAP32[(($287)>>2)])|0);
  if (((($288|0))|0)==((1)|0)) {
   $298=((($i_2)-(1))|0);
   $299=(($inHigh+($298<<3))|0);
   $300=(+(HEAPF64[(($299)>>3)]));
   $301=(($inLow+($298<<3))|0);
   $302=(+(HEAPF64[(($301)>>3)]));
   $303=($300)-($302);
   $320=$303;
  } else if (((($288|0))|0)==((0)|0)) {
   $290=((($i_2)-(1))|0);
   $291=(($inClose+($290<<3))|0);
   $292=(+(HEAPF64[(($291)>>3)]));
   $293=(($inOpen+($290<<3))|0);
   $294=(+(HEAPF64[(($293)>>3)]));
   $295=($292)-($294);
   $296=(+(Math_abs((+($295)))));
   $320=$296;
  } else if (((($288|0))|0)==((2)|0)) {
   $305=((($i_2)-(1))|0);
   $306=(($inHigh+($305<<3))|0);
   $307=(+(HEAPF64[(($306)>>3)]));
   $308=(($inClose+($305<<3))|0);
   $309=(+(HEAPF64[(($308)>>3)]));
   $310=(($inOpen+($305<<3))|0);
   $311=(+(HEAPF64[(($310)>>3)]));
   $312=$309<$311;
   $_15=($312?$311:$309);
   $313=($307)-($_15);
   $314=($312?$309:$311);
   $315=(($inLow+($305<<3))|0);
   $316=(+(HEAPF64[(($315)>>3)]));
   $317=($314)-($316);
   $318=($313)+($317);
   $320=$318;
  } else {
   $320=0.0;
  }

  $321=((HEAP32[((272)>>2)])|0);
  $322=(($321+212)|0);
  $323=((HEAP32[(($322)>>2)])|0);
  if (((($323|0))|0)==((1)|0)) {
   $332=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $333=(+(HEAPF64[(($332)>>3)]));
   $334=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $335=(+(HEAPF64[(($334)>>3)]));
   $336=($333)-($335);
   $352=$336;
  } else if (((($323|0))|0)==((0)|0)) {
   $325=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $326=(+(HEAPF64[(($325)>>3)]));
   $327=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $328=(+(HEAPF64[(($327)>>3)]));
   $329=($326)-($328);
   $330=(+(Math_abs((+($329)))));
   $352=$330;
  } else if (((($323|0))|0)==((2)|0)) {
   $338=(($inHigh+($BodyShortTrailingIdx_0<<3))|0);
   $339=(+(HEAPF64[(($338)>>3)]));
   $340=(($inClose+($BodyShortTrailingIdx_0<<3))|0);
   $341=(+(HEAPF64[(($340)>>3)]));
   $342=(($inOpen+($BodyShortTrailingIdx_0<<3))|0);
   $343=(+(HEAPF64[(($342)>>3)]));
   $344=$341<$343;
   $_16=($344?$343:$341);
   $345=($339)-($_16);
   $346=($344?$341:$343);
   $347=(($inLow+($BodyShortTrailingIdx_0<<3))|0);
   $348=(+(HEAPF64[(($347)>>3)]));
   $349=($346)-($348);
   $350=($345)+($349);
   $352=$350;
  } else {
   $352=0.0;
  }

  $353=($320)-($352);
  $354=($BodyShortPeriodTotal_1)+($353);
  $355=((($i_2)+(1))|0);
  $356=((($BodyLongTrailingIdx_0)+(1))|0);
  $357=((($BodyShortTrailingIdx_0)+(1))|0);
  $358=($i_2|0)<($endIdx|0);
  if ($358) {
   $BodyLongTrailingIdx_0=$356;$BodyShortTrailingIdx_0=$357;$outIdx_0=$outIdx_1;$i_2=$355;$BodyLongPeriodTotal_1=$285;$BodyShortPeriodTotal_1=$354;
  } else {
   break;
  }
 }
 $360=((($smax28)+(1))|0);
 $361=((($360)-($smax29))|0);
 HEAP32[(($outNBElement)>>2)]=$361;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CDLXSIDEGAP3METHODS($startIdx,$endIdx,$inOpen,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond7=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$or_cond5_not=0,$10=0,$or_cond13=0,$12=0,$_startIdx=0,$13=0,$14=0,$smax=0,$i_0=0;
 var $outIdx_0=0,$17=0,$18=0,$19=.0,$20=0,$21=.0,$22=0,$23=0,$24=0,$25=0,$26=.0,$27=0,$28=.0,$29=0,$30=0,$31=0,$33=0,$34=.0,$35=0,$36=.0;
 var $37=0,$38=0,$39=0,$41=0,$_=.0,$42=0,$44=0,$_8=.0,$45=0,$47=0,$_9=.0,$48=0,$50=0,$_10=.0,$51=0,$53=0,$_11=.0,$55=.0,$56=0,$58=.0;
 var $59=.0,$not_=0,$61=.0,$62=.0,$63=0,$_12=.0,$64=0,$65=.0,$66=0,$68=.0,$69=.0,$70=0,$71=0,$72=0,$74=0,$outIdx_1=0,$76=0,$77=0,$79=0,$80=0;
 var $_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond7=$3|$4;
 if ($or_cond7) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inHigh|0)!=0;
 $or_cond=$6&$7;
 $8=($inLow|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inClose|0)!=0;
 $or_cond5=$or_cond3&$9;
 $or_cond5_not=$or_cond5^1;
 $10=($outInteger|0)==0;
 $or_cond13=$10|$or_cond5_not;
 if ($or_cond13) {
  $_0=2;

  return (($_0)|0);
 }
 $12=($startIdx|0)<2;
 $_startIdx=($12?2:$startIdx);
 $13=($_startIdx|0)>($endIdx|0);
 if ($13) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $14=($startIdx|0)>2;
 $smax=($14?$startIdx:2);
 $outIdx_0=0;$i_0=$_startIdx;
 while(1) {


  $17=((($i_0)-(2))|0);
  $18=(($inClose+($17<<3))|0);
  $19=(+(HEAPF64[(($18)>>3)]));
  $20=(($inOpen+($17<<3))|0);
  $21=(+(HEAPF64[(($20)>>3)]));
  $22=$19>=$21;
  $23=($22?1:-1);
  $24=((($i_0)-(1))|0);
  $25=(($inClose+($24<<3))|0);
  $26=(+(HEAPF64[(($25)>>3)]));
  $27=(($inOpen+($24<<3))|0);
  $28=(+(HEAPF64[(($27)>>3)]));
  $29=$26>=$28;
  $30=($29?1:-1);
  $31=($23|0)==($30|0);
  do {
   if ($31) {
    $33=(($inClose+($i_0<<3))|0);
    $34=(+(HEAPF64[(($33)>>3)]));
    $35=(($inOpen+($i_0<<3))|0);
    $36=(+(HEAPF64[(($35)>>3)]));
    $37=$34>=$36;
    $38=($37?-1:1);
    $39=($30|0)==($38|0);
    if (!($39)) {
     label = 18;
     break;
    }
    $41=$26>$28;
    $_=($41?$26:$28);
    $42=$36<$_;
    if (!($42)) {
     label = 18;
     break;
    }
    $44=$26<$28;
    $_8=($44?$26:$28);
    $45=$36>$_8;
    if (!($45)) {
     label = 18;
     break;
    }
    $47=$19>$21;
    $_9=($47?$19:$21);
    $48=$34<$_9;
    if (!($48)) {
     label = 18;
     break;
    }
    $50=$19<$21;
    $_10=($50?$19:$21);
    $51=$34>$_10;
    if (!($51)) {
     label = 18;
     break;
    }
    $53=$19<$21;
    if ($53) {
     label = 15;
    } else {
     $_11=($41?$28:$26);
     $55=($50?$21:$19);
     $56=$_11>$55;
     if (!($56)) {
      label = 15;
     }
    }
    if ((label|0) == 15) {
     label = 0;
     $58=(+(HEAPF64[(($18)>>3)]));
     $59=(+(HEAPF64[(($20)>>3)]));
     $not_=$58<$59;
     if (!($not_)) {
      label = 18;
      break;
     }
     $61=(+(HEAPF64[(($27)>>3)]));
     $62=(+(HEAPF64[(($25)>>3)]));
     $63=$61>$62;
     $_12=($63?$61:$62);
     $64=$59<$58;
     $65=($64?$59:$58);
     $66=$_12<$65;
     if (!($66)) {
      label = 18;
      break;
     }
    }
    $68=(+(HEAPF64[(($18)>>3)]));
    $69=(+(HEAPF64[(($20)>>3)]));
    $70=$68>=$69;
    $71=($70?100:-100);
    $72=(($outInteger+($outIdx_0<<2))|0);
    HEAP32[(($72)>>2)]=$71;
   } else {
    label = 18;
   }
  } while(0);
  if ((label|0) == 18) {
   label = 0;
   $74=(($outInteger+($outIdx_0<<2))|0);
   HEAP32[(($74)>>2)]=0;
  }
  $outIdx_1=((($outIdx_0)+(1))|0);
  $76=((($i_0)+(1))|0);
  $77=($i_0|0)<($endIdx|0);
  if ($77) {
   $outIdx_0=$outIdx_1;$i_0=$76;
  } else {
   break;
  }
 }
 $79=((($endIdx)+(1))|0);
 $80=((($79)-($smax))|0);
 HEAP32[(($outNBElement)>>2)]=$80;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CEIL($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(Math_ceil($13)));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_CMO_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$_=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((HEAP32[((272)>>2)])|0);
 $6=(($5+72)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=((($7)+($_0))|0);
 $9=(($5+56)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($10|0)==1;
 $12=(($11<<31)>>31);
 $_=((($8)+($12))|0);
 $_02=$_;

 return (($_02)|0);
}


function _TA_CMO($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_09=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$18=0,$20=0,$21=0,$22=0,$23=0,$24=0;
 var $25=0,$27=0,$28=0,$29=.0,$30=0,$31=0,$32=0,$33=0,$35=0,$36=0,$37=0,$38=0,$39=0,$smax57=0,$40=0,$prevValue_044=.0,$prevLoss_043=.0,$prevGain_042=.0,$i_041=0,$today_040=0;
 var $42=0,$43=0,$44=.0,$45=.0,$46=0,$48=.0,$50=.0,$prevGain_1=.0,$prevLoss_1=.0,$52=0,$53=0,$54=0,$prevLoss_0_lcssa=.0,$prevGain_0_lcssa=.0,$today_0_lcssa=0,$56=.0,$57=.0,$58=.0,$59=.0,$60=0;
 var $61=0,$or_cond3=0,$63=.0,$64=.0,$65=.0,$storemerge=.0,$67=0,$70=0,$today_1=0,$outIdx_1=0,$today_225=0,$72=0,$73=0,$today_230=0,$prevValue_229=.0,$prevLoss_228=.0,$prevGain_227=.0,$i_126=0,$75=0,$76=.0;
 var $77=.0,$78=0,$80=.0,$82=.0,$prevGain_3=.0,$prevLoss_3=.0,$84=0,$today_2=0,$85=0,$86=0,$today_2_lcssa=0,$prevValue_2_lcssa=.0,$prevLoss_2_lcssa=.0,$prevGain_2_lcssa=.0,$today_2_in_lcssa=0,$88=.0,$89=.0,$90=.0,$91=0,$92=0;
 var $93=0,$94=.0,$95=0,$97=.0,$98=0,$99=0,$or_cond5=0,$101=.0,$102=.0,$103=.0,$104=0,$105=0,$107=0,$108=0,$smax53=0,$today_4_ph=0,$outIdx_2_ph=0,$prevGain_6_ph=.0,$prevLoss_6_ph=.0,$prevValue_4_ph=.0;
 var $109=0,$110=0,$111=.0,$112=0,$smax=0,$113=0,$114=0,$prevValue_319=.0,$prevLoss_418=.0,$prevGain_417=.0,$today_316=0,$116=0,$117=.0,$118=.0,$119=.0,$120=.0,$121=0,$123=.0,$125=.0,$prevGain_5=.0;
 var $prevLoss_5=.0,$127=.0,$128=.0,$129=0,$130=0,$prevValue_414=.0,$prevLoss_613=.0,$prevGain_612=.0,$outIdx_211=0,$today_410=0,$132=0,$133=0,$134=.0,$135=.0,$136=.0,$137=.0,$138=0,$140=.0,$142=.0,$prevGain_7=.0;
 var $prevLoss_7=.0,$144=.0,$145=.0,$146=.0,$147=0,$148=0,$or_cond7=0,$150=.0,$151=.0,$152=.0,$153=0,$155=0,$outIdx_2_be=0,$156=0,$157=0,$outIdx_2_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_09=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_09=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $14=((_TA_CMO_Lookback($_09))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  $_0=0;

  return (($_0)|0);
 }
 $18=($_09|0)==1;
 if ($18) {
  HEAP32[(($outBegIdx)>>2)]=$_startIdx;
  $20=((($endIdx)-($_startIdx))|0);
  $21=((($20)+(1))|0);
  HEAP32[(($outNBElement)>>2)]=$21;
  $22=$outReal;
  $23=(($inReal+($_startIdx<<3))|0);
  $24=$23;
  $25=$21<<3;
  ((_memmove((($22)|0),(($24)|0),(($25)|0)))|0);
  $_0=0;

  return (($_0)|0);
 }
 $27=((($_startIdx)-($14))|0);
 $28=(($inReal+($27<<3))|0);
 $29=(+(HEAPF64[(($28)>>3)]));
 $30=((HEAP32[((272)>>2)])|0);
 $31=(($30+72)|0);
 $32=((HEAP32[(($31)>>2)])|0);
 $33=($32|0)==0;
 do {
  if ($33) {
   $35=(($30+56)|0);
   $36=((HEAP32[(($35)>>2)])|0);
   $37=($36|0)==1;
   if (!($37)) {
    $outIdx_1=0;$today_1=$27;
    break;
   }
   $38=($_09|0)>0;
   if ($38) {
    $39=($14|0)>($startIdx|0);
    $smax57=($39?$14:$startIdx);
    $40=((($_09)+($smax57))|0);
    $today_040=$27;$i_041=$_09;$prevGain_042=0.0;$prevLoss_043=0.0;$prevValue_044=$29;
    while(1) {





     $42=((($today_040)+(1))|0);
     $43=(($inReal+($today_040<<3))|0);
     $44=(+(HEAPF64[(($43)>>3)]));
     $45=($44)-($prevValue_044);
     $46=$45<(0.0);
     if ($46) {
      $48=($prevLoss_043)-($45);
      $prevLoss_1=$48;$prevGain_1=$prevGain_042;
     } else {
      $50=($prevGain_042)+($45);
      $prevLoss_1=$prevLoss_043;$prevGain_1=$50;
     }


     $52=((($i_041)-(1))|0);
     $53=($52|0)>0;
     if ($53) {
      $today_040=$42;$i_041=$52;$prevGain_042=$prevGain_1;$prevLoss_043=$prevLoss_1;$prevValue_044=$44;
     } else {
      break;
     }
    }
    $54=((($40)-($14))|0);
    $today_0_lcssa=$54;$prevGain_0_lcssa=$prevGain_1;$prevLoss_0_lcssa=$prevLoss_1;
   } else {
    $today_0_lcssa=$27;$prevGain_0_lcssa=0.0;$prevLoss_0_lcssa=0.0;
   }



   $56=(+((($_09|0))|0));
   $57=($prevLoss_0_lcssa)/($56);
   $58=($prevGain_0_lcssa)/($56);
   $59=($57)+($58);
   $60=$59>(-1.0e-14);
   $61=$59<(1.0e-14);
   $or_cond3=$60&$61;
   if ($or_cond3) {
    $storemerge=0.0;
   } else {
    $63=($58)-($57);
    $64=($63)/($59);
    $65=($64)*((100.0));
    $storemerge=$65;
   }

   HEAPF64[(($outReal)>>3)]=$storemerge;
   $67=($today_0_lcssa|0)>($endIdx|0);
   if (!($67)) {
    $70=((($today_0_lcssa)-($_09))|0);
    $outIdx_1=1;$today_1=$70;
    break;
   }
   HEAP32[(($outBegIdx)>>2)]=$_startIdx;
   HEAP32[(($outNBElement)>>2)]=1;
   $_0=0;

   return (($_0)|0);
  } else {
   $outIdx_1=0;$today_1=$27;
  }
 } while(0);


 $today_225=((($today_1)+(1))|0);
 $72=($_09|0)>0;
 if ($72) {
  $73=((($today_1)+($_09))|0);
  $i_126=$_09;$prevGain_227=0.0;$prevLoss_228=0.0;$prevValue_229=$29;$today_230=$today_225;
  while(1) {





   $75=(($inReal+($today_230<<3))|0);
   $76=(+(HEAPF64[(($75)>>3)]));
   $77=($76)-($prevValue_229);
   $78=$77<(0.0);
   if ($78) {
    $80=($prevLoss_228)-($77);
    $prevLoss_3=$80;$prevGain_3=$prevGain_227;
   } else {
    $82=($prevGain_227)+($77);
    $prevLoss_3=$prevLoss_228;$prevGain_3=$82;
   }


   $84=((($i_126)-(1))|0);
   $today_2=((($today_230)+(1))|0);
   $85=($84|0)>0;
   if ($85) {
    $i_126=$84;$prevGain_227=$prevGain_3;$prevLoss_228=$prevLoss_3;$prevValue_229=$76;$today_230=$today_2;
   } else {
    break;
   }
  }
  $86=((($73)+(1))|0);
  $today_2_in_lcssa=$73;$prevGain_2_lcssa=$prevGain_3;$prevLoss_2_lcssa=$prevLoss_3;$prevValue_2_lcssa=$76;$today_2_lcssa=$86;
 } else {
  $today_2_in_lcssa=$today_1;$prevGain_2_lcssa=0.0;$prevLoss_2_lcssa=0.0;$prevValue_2_lcssa=$29;$today_2_lcssa=$today_225;
 }





 $88=(+((($_09|0))|0));
 $89=($prevLoss_2_lcssa)/($88);
 $90=($prevGain_2_lcssa)/($88);
 $91=($today_2_in_lcssa|0)<($_startIdx|0);
 do {
  if ($91) {
   $92=($today_2_lcssa|0)<($_startIdx|0);
   if (!($92)) {
    $prevValue_4_ph=$prevValue_2_lcssa;$prevLoss_6_ph=$89;$prevGain_6_ph=$90;$outIdx_2_ph=$outIdx_1;$today_4_ph=$today_2_lcssa;
    break;
   }
   $93=((($_09)-(1))|0);
   $94=(+((($93|0))|0));
   $95=($14|0)>($startIdx|0);
   $today_316=$today_2_lcssa;$prevGain_417=$90;$prevLoss_418=$89;$prevValue_319=$prevValue_2_lcssa;
   while(1) {




    $116=(($inReal+($today_316<<3))|0);
    $117=(+(HEAPF64[(($116)>>3)]));
    $118=($117)-($prevValue_319);
    $119=($94)*($prevLoss_418);
    $120=($94)*($prevGain_417);
    $121=$118<(0.0);
    if ($121) {
     $123=($119)-($118);
     $prevLoss_5=$123;$prevGain_5=$120;
    } else {
     $125=($120)+($118);
     $prevLoss_5=$119;$prevGain_5=$125;
    }


    $127=($prevLoss_5)/($88);
    $128=($prevGain_5)/($88);
    $129=((($today_316)+(1))|0);
    $130=($129|0)<($_startIdx|0);
    if ($130) {
     $today_316=$129;$prevGain_417=$128;$prevLoss_418=$127;$prevValue_319=$117;
    } else {
     break;
    }
   }
   $smax53=($95?$14:$startIdx);
   $prevValue_4_ph=$117;$prevLoss_6_ph=$127;$prevGain_6_ph=$128;$outIdx_2_ph=$outIdx_1;$today_4_ph=$smax53;
  } else {
   $97=($89)+($90);
   $98=$97>(-1.0e-14);
   $99=$97<(1.0e-14);
   $or_cond5=$98&$99;
   if ($or_cond5) {
    $107=((($outIdx_1)+(1))|0);
    $108=(($outReal+($outIdx_1<<3))|0);
    HEAPF64[(($108)>>3)]=0.0;
    $prevValue_4_ph=$prevValue_2_lcssa;$prevLoss_6_ph=$89;$prevGain_6_ph=$90;$outIdx_2_ph=$107;$today_4_ph=$today_2_lcssa;
    break;
   } else {
    $101=($90)-($89);
    $102=($101)/($97);
    $103=($102)*((100.0));
    $104=((($outIdx_1)+(1))|0);
    $105=(($outReal+($outIdx_1<<3))|0);
    HEAPF64[(($105)>>3)]=$103;
    $prevValue_4_ph=$prevValue_2_lcssa;$prevLoss_6_ph=$89;$prevGain_6_ph=$90;$outIdx_2_ph=$104;$today_4_ph=$today_2_lcssa;
    break;
   }
  }
 } while(0);





 $109=($today_4_ph|0)>($endIdx|0);
 if ($109) {
  $outIdx_2_lcssa=$outIdx_2_ph;
 } else {
  $110=((($_09)-(1))|0);
  $111=(+((($110|0))|0));
  $112=($today_4_ph|0)>($endIdx|0);
  $smax=($112?$today_4_ph:$endIdx);
  $113=((($outIdx_2_ph)+($smax))|0);
  $114=((($113)+(1))|0);
  $today_410=$today_4_ph;$outIdx_211=$outIdx_2_ph;$prevGain_612=$prevGain_6_ph;$prevLoss_613=$prevLoss_6_ph;$prevValue_414=$prevValue_4_ph;
  while(1) {





   $132=((($today_410)+(1))|0);
   $133=(($inReal+($today_410<<3))|0);
   $134=(+(HEAPF64[(($133)>>3)]));
   $135=($134)-($prevValue_414);
   $136=($111)*($prevLoss_613);
   $137=($111)*($prevGain_612);
   $138=$135<(0.0);
   if ($138) {
    $140=($136)-($135);
    $prevLoss_7=$140;$prevGain_7=$137;
   } else {
    $142=($137)+($135);
    $prevLoss_7=$136;$prevGain_7=$142;
   }


   $144=($prevLoss_7)/($88);
   $145=($prevGain_7)/($88);
   $146=($144)+($145);
   $147=$146>(-1.0e-14);
   $148=$146<(1.0e-14);
   $or_cond7=$147&$148;
   if ($or_cond7) {
    $155=(($outReal+($outIdx_211<<3))|0);
    HEAPF64[(($155)>>3)]=0.0;
   } else {
    $150=($145)-($144);
    $151=($150)/($146);
    $152=($151)*((100.0));
    $153=(($outReal+($outIdx_211<<3))|0);
    HEAPF64[(($153)>>3)]=$152;
   }
   $outIdx_2_be=((($outIdx_211)+(1))|0);
   $156=($today_410|0)<($endIdx|0);
   if ($156) {
    $today_410=$132;$outIdx_211=$outIdx_2_be;$prevGain_612=$145;$prevLoss_613=$144;$prevValue_414=$134;
   } else {
    break;
   }
  }
  $157=((($114)-($today_4_ph))|0);
  $outIdx_2_lcssa=$157;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_2_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_CORREL($startIdx,$endIdx,$inReal0,$inReal1,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal0=($inReal0)|0;
 $inReal1=($inReal1)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond4=0,$9=0,$optInTimePeriod_off=0,$11=0,$_03=0,$13=0,$15=0,$16=0,$_startIdx=0,$17=0,$20=0,$21=0,$22=0,$23=0;
 var $smax35=0,$24=0,$25=0,$26=0,$smax36=0,$27=0,$smax37=0,$today_020=0,$sumY2_019=.0,$sumX2_018=.0,$sumY_017=.0,$sumX_016=.0,$sumXY_015=.0,$29=0,$30=.0,$31=.0,$32=.0,$33=.0,$34=0,$35=.0;
 var $36=.0,$37=.0,$38=.0,$39=.0,$40=.0,$41=0,$42=0,$43=0,$today_0_lcssa=0,$sumY2_0_lcssa=.0,$sumX2_0_lcssa=.0,$sumY_0_lcssa=.0,$sumX_0_lcssa=.0,$sumXY_0_lcssa=.0,$45=0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0;
 var $51=.0,$52=.0,$53=.0,$54=.0,$55=.0,$56=.0,$57=0,$59=.0,$60=.0,$61=.0,$62=.0,$63=.0,$storemerge=.0,$65=0,$66=0,$smax=0,$67=0,$outIdx_014=0,$trailingIdx_013_in=0,$today_112=0;
 var $trailingY_011=.0,$trailingX_010=.0,$sumY2_19=.0,$sumX2_18=.0,$sumY_17=.0,$sumX_16=.0,$sumXY_15=.0,$trailingIdx_013=0,$69=.0,$70=.0,$71=.0,$72=.0,$73=.0,$74=.0,$75=.0,$76=.0,$77=0,$78=.0,$79=.0,$80=.0;
 var $81=.0,$82=0,$83=0,$84=.0,$85=.0,$86=.0,$87=.0,$88=.0,$89=.0,$90=0,$91=.0,$92=0,$93=.0,$94=.0,$95=.0,$96=.0,$97=.0,$98=.0,$99=.0,$100=.0;
 var $101=0,$103=.0,$104=.0,$105=.0,$106=.0,$107=.0,$108=0,$110=0,$outIdx_0_be=0,$111=0,$112=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal0|0)==0;
 $7=($inReal1|0)==0;
 $or_cond4=$6|$7;
 if ($or_cond4) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($optInTimePeriod|0)==-2147483648;
 do {
  if ($9) {
   $_03=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $11=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($11) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $13=($outReal|0)==0;
 if ($13) {
  $_0=2;

  return (($_0)|0);
 }
 $15=((($_03)-(1))|0);
 $16=($15|0)>($startIdx|0);
 $_startIdx=($16?$15:$startIdx);
 $17=($_startIdx|0)>($endIdx|0);
 if ($17) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $20=((($_startIdx)-($15))|0);
 $21=($_03|0)<1;
 if ($21) {
  $sumXY_0_lcssa=0.0;$sumX_0_lcssa=0.0;$sumY_0_lcssa=0.0;$sumX2_0_lcssa=0.0;$sumY2_0_lcssa=0.0;$today_0_lcssa=$20;
 } else {
  $22=((($_03)-(1))|0);
  $23=($22|0)<($startIdx|0);
  $smax35=($23?$startIdx:$22);
  $24=((($smax35)+(1))|0);
  $25=((($24)-($_03))|0);
  $26=($25|0)<($startIdx|0);
  $smax36=($26?$startIdx:$25);
  $27=($smax36|0)>($22|0);
  $smax37=($27?$smax36:$22);
  $sumXY_015=0.0;$sumX_016=0.0;$sumY_017=0.0;$sumX2_018=0.0;$sumY2_019=0.0;$today_020=$20;
  while(1) {






   $29=(($inReal0+($today_020<<3))|0);
   $30=(+(HEAPF64[(($29)>>3)]));
   $31=($sumX_016)+($30);
   $32=($30)*($30);
   $33=($sumX2_018)+($32);
   $34=(($inReal1+($today_020<<3))|0);
   $35=(+(HEAPF64[(($34)>>3)]));
   $36=($30)*($35);
   $37=($sumXY_015)+($36);
   $38=($sumY_017)+($35);
   $39=($35)*($35);
   $40=($sumY2_019)+($39);
   $41=((($today_020)+(1))|0);
   $42=($today_020|0)<($_startIdx|0);
   if ($42) {
    $sumXY_015=$37;$sumX_016=$31;$sumY_017=$38;$sumX2_018=$33;$sumY2_019=$40;$today_020=$41;
   } else {
    break;
   }
  }
  $43=((($smax37)+(1))|0);
  $sumXY_0_lcssa=$37;$sumX_0_lcssa=$31;$sumY_0_lcssa=$38;$sumX2_0_lcssa=$33;$sumY2_0_lcssa=$40;$today_0_lcssa=$43;
 }






 $45=(($inReal0+($20<<3))|0);
 $46=(+(HEAPF64[(($45)>>3)]));
 $47=(($inReal1+($20<<3))|0);
 $48=(+(HEAPF64[(($47)>>3)]));
 $49=($sumX_0_lcssa)*($sumX_0_lcssa);
 $50=(+((($_03|0))|0));
 $51=($49)/($50);
 $52=($sumX2_0_lcssa)-($51);
 $53=($sumY_0_lcssa)*($sumY_0_lcssa);
 $54=($53)/($50);
 $55=($sumY2_0_lcssa)-($54);
 $56=($52)*($55);
 $57=$56<(1.0e-14);
 if ($57) {
  $storemerge=0.0;
 } else {
  $59=($sumX_0_lcssa)*($sumY_0_lcssa);
  $60=($59)/($50);
  $61=($sumXY_0_lcssa)-($60);
  $62=(+(Math_sqrt($56)));
  $63=($61)/($62);
  $storemerge=$63;
 }

 HEAPF64[(($outReal)>>3)]=$storemerge;
 $65=($today_0_lcssa|0)>($endIdx|0);
 if ($65) {
  $outIdx_0_lcssa=1;
 } else {
  $66=($today_0_lcssa|0)>($endIdx|0);
  $smax=($66?$today_0_lcssa:$endIdx);
  $67=((($smax)+(2))|0);
  $sumXY_15=$sumXY_0_lcssa;$sumX_16=$sumX_0_lcssa;$sumY_17=$sumY_0_lcssa;$sumX2_18=$sumX2_0_lcssa;$sumY2_19=$sumY2_0_lcssa;$trailingX_010=$46;$trailingY_011=$48;$today_112=$today_0_lcssa;$trailingIdx_013_in=$20;$outIdx_014=1;
  while(1) {










   $trailingIdx_013=((($trailingIdx_013_in)+(1))|0);
   $69=($sumX_16)-($trailingX_010);
   $70=($trailingX_010)*($trailingX_010);
   $71=($sumX2_18)-($70);
   $72=($trailingX_010)*($trailingY_011);
   $73=($sumXY_15)-($72);
   $74=($sumY_17)-($trailingY_011);
   $75=($trailingY_011)*($trailingY_011);
   $76=($sumY2_19)-($75);
   $77=(($inReal0+($today_112<<3))|0);
   $78=(+(HEAPF64[(($77)>>3)]));
   $79=($69)+($78);
   $80=($78)*($78);
   $81=($71)+($80);
   $82=((($today_112)+(1))|0);
   $83=(($inReal1+($today_112<<3))|0);
   $84=(+(HEAPF64[(($83)>>3)]));
   $85=($78)*($84);
   $86=($73)+($85);
   $87=($74)+($84);
   $88=($84)*($84);
   $89=($76)+($88);
   $90=(($inReal0+($trailingIdx_013<<3))|0);
   $91=(+(HEAPF64[(($90)>>3)]));
   $92=(($inReal1+($trailingIdx_013<<3))|0);
   $93=(+(HEAPF64[(($92)>>3)]));
   $94=($79)*($79);
   $95=($94)/($50);
   $96=($81)-($95);
   $97=($87)*($87);
   $98=($97)/($50);
   $99=($89)-($98);
   $100=($96)*($99);
   $101=$100<(1.0e-14);
   if ($101) {
    $110=(($outReal+($outIdx_014<<3))|0);
    HEAPF64[(($110)>>3)]=0.0;
   } else {
    $103=($79)*($87);
    $104=($103)/($50);
    $105=($86)-($104);
    $106=(+(Math_sqrt($100)));
    $107=($105)/($106);
    $108=(($outReal+($outIdx_014<<3))|0);
    HEAPF64[(($108)>>3)]=$107;
   }
   $outIdx_0_be=((($outIdx_014)+(1))|0);
   $111=($today_112|0)<($endIdx|0);
   if ($111) {
    $sumXY_15=$86;$sumX_16=$79;$sumY_17=$87;$sumX2_18=$81;$sumY2_19=$89;$trailingX_010=$91;$trailingY_011=$93;$today_112=$82;$trailingIdx_013_in=$trailingIdx_013;$outIdx_014=$outIdx_0_be;
   } else {
    break;
   }
  }
  $112=((($67)-($today_0_lcssa))|0);
  $outIdx_0_lcssa=$112;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_COS($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(Math_cos($13)));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_COSH($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(_cosh((+($13)))));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_DEMA_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$6=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((_TA_EMA_Lookback($_0))|0);
 $6=$5<<1;
 $_02=$6;

 return (($_02)|0);
}


function _TA_DEMA($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $firstEMABegIdx=0,$firstEMANbElement=0,$secondEMABegIdx=0,$secondEMANbElement=0,$1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_07=0,$12=0,$14=0,$15=0,$16=0,$_startIdx=0,$17=0,$19=0;
 var $21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$firstEMA_0=0,$29=0,$30=.0,$31=.0,$32=0,$33=0,$34=0,$35=0,$36=0,$or_cond3=0,$38=0,$40=0,$42=0;
 var $43=0,$44=0,$45=0,$47=0,$49=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$or_cond5=0,$58=0,$60=0,$63=0,$64=0,$65=0,$66=0,$67=0,$firstEMAIdx_09=0;
 var $outIdx_08=0,$69=0,$70=0,$71=.0,$72=.0,$73=0,$74=.0,$75=.0,$76=0,$77=0,$78=0,$smax=0,$outIdx_0_lcssa=0,$80=0,$82=0,$84=0,$85=0,$86=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $firstEMABegIdx=((sp)|0);
 $firstEMANbElement=(((sp)+(8))|0);
 $secondEMABegIdx=(((sp)+(16))|0);
 $secondEMANbElement=(((sp)+(24))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_07=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_07=$optInTimePeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outNBElement)>>2)]=0;
 HEAP32[(($outBegIdx)>>2)]=0;
 $14=((_TA_EMA_Lookback($_07))|0);
 $15=$14<<1;
 $16=($15|0)>($startIdx|0);
 $_startIdx=($16?$15:$startIdx);
 $17=($_startIdx|0)>($endIdx|0);
 if ($17) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $19=($inReal|0)==($outReal|0);
 do {
  if ($19) {
   $firstEMA_0=$outReal;
  } else {
   $21=((($15)+($endIdx))|0);
   $22=((($21)-($_startIdx))|0);
   $23=$22<<3;
   $24=((($23)+(8))|0);
   $25=((_malloc($24))|0);
   $26=$25;
   $27=($25|0)==0;
   if ($27) {
    $_0=3;
   } else {
    $firstEMA_0=$26;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $29=((($_07)+(1))|0);
 $30=(+((($29|0))|0));
 $31=((2.0))/($30);
 $32=((($_startIdx)-($14))|0);
 $33=((_TA_INT_EMA($32,$endIdx,$inReal,$_07,$31,$firstEMABegIdx,$firstEMANbElement,$firstEMA_0))|0);
 $34=($33|0)!=0;
 $35=((HEAP32[(($firstEMANbElement)>>2)])|0);
 $36=($35|0)==0;
 $or_cond3=$34|$36;
 if ($or_cond3) {
  $38=($firstEMA_0|0)==($outReal|0);
  if ($38) {
   $_0=$33;

   STACKTOP=sp;return (($_0)|0);
  }
  $40=$firstEMA_0;
  _free($40);
  $_0=$33;

  STACKTOP=sp;return (($_0)|0);
 }
 $42=$35<<3;
 $43=((_malloc($42))|0);
 $44=$43;
 $45=($43|0)==0;
 if ($45) {
  $47=($firstEMA_0|0)==($outReal|0);
  if ($47) {
   $_0=3;

   STACKTOP=sp;return (($_0)|0);
  }
  $49=$firstEMA_0;
  _free($49);
  $_0=3;

  STACKTOP=sp;return (($_0)|0);
 }
 $51=((HEAP32[(($firstEMANbElement)>>2)])|0);
 $52=((($51)-(1))|0);
 $53=((_TA_INT_EMA(0,$52,$firstEMA_0,$_07,$31,$secondEMABegIdx,$secondEMANbElement,$44))|0);
 $54=($53|0)!=0;
 $55=((HEAP32[(($secondEMANbElement)>>2)])|0);
 $56=($55|0)==0;
 $or_cond5=$54|$56;
 if ($or_cond5) {
  $58=($firstEMA_0|0)==($outReal|0);
  if (!($58)) {
   $60=$firstEMA_0;
   _free($60);
  }
  _free($43);
  $_0=$53;

  STACKTOP=sp;return (($_0)|0);
 }
 $63=((HEAP32[(($secondEMANbElement)>>2)])|0);
 $64=($63|0)>0;
 if ($64) {
  $65=((HEAP32[(($secondEMABegIdx)>>2)])|0);
  $66=((HEAP32[(($secondEMANbElement)>>2)])|0);
  $67=($66|0)>1;
  $outIdx_08=0;$firstEMAIdx_09=$65;
  while(1) {


   $69=((($firstEMAIdx_09)+(1))|0);
   $70=(($firstEMA_0+($firstEMAIdx_09<<3))|0);
   $71=(+(HEAPF64[(($70)>>3)]));
   $72=($71)*((2.0));
   $73=(($44+($outIdx_08<<3))|0);
   $74=(+(HEAPF64[(($73)>>3)]));
   $75=($72)-($74);
   $76=(($outReal+($outIdx_08<<3))|0);
   HEAPF64[(($76)>>3)]=$75;
   $77=((($outIdx_08)+(1))|0);
   $78=($77|0)<($66|0);
   if ($78) {
    $outIdx_08=$77;$firstEMAIdx_09=$69;
   } else {
    break;
   }
  }
  $smax=($67?$66:1);
  $outIdx_0_lcssa=$smax;
 } else {
  $outIdx_0_lcssa=0;
 }

 $80=($firstEMA_0|0)==($outReal|0);
 if (!($80)) {
  $82=$firstEMA_0;
  _free($82);
 }
 _free($43);
 $84=((HEAP32[(($firstEMABegIdx)>>2)])|0);
 $85=((HEAP32[(($secondEMABegIdx)>>2)])|0);
 $86=((($85)+($84))|0);
 HEAP32[(($outBegIdx)>>2)]=$86;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_DIV($startIdx,$endIdx,$inReal0,$inReal1,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal0=($inReal0)|0;
 $inReal1=($inReal1)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$or_cond2=0,$9=0,$10=0,$smax=0,$11=0,$i_04=0,$outIdx_03=0,$13=0,$14=.0,$15=0,$16=.0,$17=.0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal0|0)==0;
 $7=($inReal1|0)==0;
 $or_cond1=$6|$7;
 $8=($outReal|0)==0;
 $or_cond2=$or_cond1|$8;
 if ($or_cond2) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($startIdx|0)>($endIdx|0);
 if ($9) {
  $outIdx_0_lcssa=0;
 } else {
  $10=($endIdx|0)>($startIdx|0);
  $smax=($10?$endIdx:$startIdx);
  $11=((($smax)+(1))|0);
  $outIdx_03=0;$i_04=$startIdx;
  while(1) {


   $13=(($inReal0+($i_04<<3))|0);
   $14=(+(HEAPF64[(($13)>>3)]));
   $15=(($inReal1+($i_04<<3))|0);
   $16=(+(HEAPF64[(($15)>>3)]));
   $17=($14)/($16);
   $18=(($outReal+($outIdx_03<<3))|0);
   HEAPF64[(($18)>>3)]=$17;
   $19=((($i_04)+(1))|0);
   $20=((($outIdx_03)+(1))|0);
   $21=($i_04|0)<($endIdx|0);
   if ($21) {
    $outIdx_03=$20;$i_04=$19;
   } else {
    break;
   }
  }
  $22=((($11)-($startIdx))|0);
  $outIdx_0_lcssa=$22;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_DX($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond16=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInTimePeriod_off=0,$12=0,$_015=0,$14=0,$16=0,$18=0,$19=0,$20=0,$21=0,$lookbackTotal_0=0;
 var $23=0,$lookbackTotal_0_startIdx=0,$24=0,$27=0,$28=0,$29=.0,$30=0,$31=.0,$prevClose_0_in48=0,$i_049=0,$prevClose_050=.0,$32=0,$33=0,$smax=0,$34=0,$35=0,$prevClose_058=.0,$i_057=0,$prevTR_056=.0,$prevPlusDM_055=.0;
 var $prevMinusDM_054=.0,$prevLow_053=.0,$prevHigh_052=.0,$today_051=0,$37=0,$38=0,$39=.0,$40=.0,$41=0,$42=.0,$43=.0,$44=0,$45=0,$or_cond17=0,$47=.0,$49=0,$50=0,$or_cond18=0,$52=.0,$prevMinusDM_1=.0;
 var $prevPlusDM_1=.0,$54=.0,$55=.0,$56=.0,$57=0,$tempReal_0=.0,$58=.0,$59=.0,$60=0,$tempReal_1=.0,$61=.0,$prevClose_0_in=0,$i_0=0,$prevClose_0=.0,$62=0,$63=0,$prevClose_0_lcssa=.0,$prevTR_0_lcssa=.0,$prevPlusDM_0_lcssa=.0,$prevMinusDM_0_lcssa=.0;
 var $prevLow_0_lcssa=.0,$prevHigh_0_lcssa=.0,$today_0_lcssa=0,$65=0,$66=0,$67=0,$68=0,$69=.0,$70=0,$72=0,$prevTR_137=.0,$prevPlusDM_236=.0,$prevMinusDM_235=.0,$prevClose_134=.0,$prevLow_133=.0,$prevHigh_132=.0,$today_131=0,$73=0,$74=0,$75=.0;
 var $76=.0,$77=0,$78=.0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=0,$85=0,$or_cond19=0,$87=.0,$89=0,$90=0,$or_cond20=0,$92=.0,$prevMinusDM_3=.0,$prevPlusDM_3=.0,$94=.0,$95=.0;
 var $96=.0,$97=0,$tempReal_2=.0,$98=.0,$99=.0,$100=0,$tempReal_3=.0,$101=.0,$102=.0,$103=.0,$104=0,$105=.0,$106=0,$107=0,$108=0,$prevTR_1_lcssa=.0,$prevPlusDM_2_lcssa=.0,$prevMinusDM_2_lcssa=.0,$prevClose_1_lcssa=.0,$prevLow_1_lcssa=.0;
 var $prevHigh_1_lcssa=.0,$today_1_lcssa=0,$110=0,$111=0,$or_cond7=0,$113=.0,$114=.0,$115=.0,$116=.0,$117=.0,$118=0,$119=0,$or_cond9=0,$121=.0,$122=.0,$123=.0,$124=.0,$127=0,$128=.0,$129=0;
 var $prevTR_230=.0,$prevPlusDM_429=.0,$prevMinusDM_428=.0,$prevClose_227=.0,$prevLow_226=.0,$prevHigh_225=.0,$outIdx_024=0,$today_223=0,$131=0,$132=0,$133=.0,$134=.0,$135=0,$136=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=0;
 var $143=0,$or_cond21=0,$145=.0,$147=0,$148=0,$or_cond22=0,$150=.0,$prevMinusDM_5=.0,$prevPlusDM_5=.0,$152=.0,$153=.0,$154=.0,$155=0,$tempReal_4=.0,$156=.0,$157=.0,$158=0,$tempReal_5=.0,$159=.0,$160=.0;
 var $161=.0,$162=0,$163=.0,$164=0,$165=0,$or_cond11=0,$167=.0,$168=.0,$169=.0,$170=.0,$171=.0,$172=0,$173=0,$or_cond13=0,$175=.0,$176=.0,$177=.0,$178=.0,$179=0,$181=0;
 var $182=0,$183=.0,$184=0,$186=0,$187=0,$188=.0,$189=0,$191=0,$192=0,$193=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond16=$3|$4;
 if ($or_cond16) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  return (($_0)|0);
 }
 $10=($optInTimePeriod|0)==-2147483648;
 do {
  if ($10) {
   $_015=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $12=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_015=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $14=($outReal|0)==0;
 if ($14) {
  $_0=2;

  return (($_0)|0);
 }
 $16=($_015|0)>1;
 if ($16) {
  $18=((HEAP32[((272)>>2)])|0);
  $19=(($18+76)|0);
  $20=((HEAP32[(($19)>>2)])|0);
  $21=((($20)+($_015))|0);
  $lookbackTotal_0=$21;
 } else {
  $lookbackTotal_0=2;
 }

 $23=($lookbackTotal_0|0)>($startIdx|0);
 $lookbackTotal_0_startIdx=($23?$lookbackTotal_0:$startIdx);
 $24=($lookbackTotal_0_startIdx|0)>($endIdx|0);
 if ($24) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$lookbackTotal_0_startIdx;
 $27=((($lookbackTotal_0_startIdx)-($lookbackTotal_0))|0);
 $28=(($inHigh+($27<<3))|0);
 $29=(+(HEAPF64[(($28)>>3)]));
 $30=(($inLow+($27<<3))|0);
 $31=(+(HEAPF64[(($30)>>3)]));
 $prevClose_0_in48=(($inClose+($27<<3))|0);
 $i_049=((($_015)-(1))|0);
 $prevClose_050=(+(HEAPF64[(($prevClose_0_in48)>>3)]));
 $32=($i_049|0)>0;
 if ($32) {
  $33=($lookbackTotal_0|0)>($startIdx|0);
  $smax=($33?$lookbackTotal_0:$startIdx);
  $34=((($_015)+($smax))|0);
  $35=((($34)-(1))|0);
  $today_051=$27;$prevHigh_052=$29;$prevLow_053=$31;$prevMinusDM_054=0.0;$prevPlusDM_055=0.0;$prevTR_056=0.0;$i_057=$i_049;$prevClose_058=$prevClose_050;
  while(1) {








   $37=((($today_051)+(1))|0);
   $38=(($inHigh+($37<<3))|0);
   $39=(+(HEAPF64[(($38)>>3)]));
   $40=($39)-($prevHigh_052);
   $41=(($inLow+($37<<3))|0);
   $42=(+(HEAPF64[(($41)>>3)]));
   $43=($prevLow_053)-($42);
   $44=$43>(0.0);
   $45=$40<$43;
   $or_cond17=$44&$45;
   do {
    if ($or_cond17) {
     $47=($prevMinusDM_054)+($43);
     $prevPlusDM_1=$prevPlusDM_055;$prevMinusDM_1=$47;
    } else {
     $49=$40>(0.0);
     $50=$40>$43;
     $or_cond18=$49&$50;
     if (!($or_cond18)) {
      $prevPlusDM_1=$prevPlusDM_055;$prevMinusDM_1=$prevMinusDM_054;
      break;
     }
     $52=($prevPlusDM_055)+($40);
     $prevPlusDM_1=$52;$prevMinusDM_1=$prevMinusDM_054;
    }
   } while(0);


   $54=($39)-($42);
   $55=($39)-($prevClose_058);
   $56=(+(Math_abs((+($55)))));
   $57=$56>$54;
   $tempReal_0=($57?$56:$54);
   $58=($42)-($prevClose_058);
   $59=(+(Math_abs((+($58)))));
   $60=$59>$tempReal_0;
   $tempReal_1=($60?$59:$tempReal_0);
   $61=($prevTR_056)+($tempReal_1);
   $prevClose_0_in=(($inClose+($37<<3))|0);
   $i_0=((($i_057)-(1))|0);
   $prevClose_0=(+(HEAPF64[(($prevClose_0_in)>>3)]));
   $62=($i_0|0)>0;
   if ($62) {
    $today_051=$37;$prevHigh_052=$39;$prevLow_053=$42;$prevMinusDM_054=$prevMinusDM_1;$prevPlusDM_055=$prevPlusDM_1;$prevTR_056=$61;$i_057=$i_0;$prevClose_058=$prevClose_0;
   } else {
    break;
   }
  }
  $63=((($35)-($lookbackTotal_0))|0);
  $today_0_lcssa=$63;$prevHigh_0_lcssa=$39;$prevLow_0_lcssa=$42;$prevMinusDM_0_lcssa=$prevMinusDM_1;$prevPlusDM_0_lcssa=$prevPlusDM_1;$prevTR_0_lcssa=$61;$prevClose_0_lcssa=$prevClose_0;
 } else {
  $today_0_lcssa=$27;$prevHigh_0_lcssa=$29;$prevLow_0_lcssa=$31;$prevMinusDM_0_lcssa=0.0;$prevPlusDM_0_lcssa=0.0;$prevTR_0_lcssa=0.0;$prevClose_0_lcssa=$prevClose_050;
 }







 $65=((HEAP32[((272)>>2)])|0);
 $66=(($65+76)|0);
 $67=((HEAP32[(($66)>>2)])|0);
 $68=($67|0)==-1;
 if ($68) {
  $today_1_lcssa=$today_0_lcssa;$prevHigh_1_lcssa=$prevHigh_0_lcssa;$prevLow_1_lcssa=$prevLow_0_lcssa;$prevClose_1_lcssa=$prevClose_0_lcssa;$prevMinusDM_2_lcssa=$prevMinusDM_0_lcssa;$prevPlusDM_2_lcssa=$prevPlusDM_0_lcssa;$prevTR_1_lcssa=$prevTR_0_lcssa;
 } else {
  $69=(+((($_015|0))|0));
  $70=((($today_0_lcssa)+($67))|0);
  $today_131=$today_0_lcssa;$prevHigh_132=$prevHigh_0_lcssa;$prevLow_133=$prevLow_0_lcssa;$prevClose_134=$prevClose_0_lcssa;$prevMinusDM_235=$prevMinusDM_0_lcssa;$prevPlusDM_236=$prevPlusDM_0_lcssa;$prevTR_137=$prevTR_0_lcssa;$72=$67;
  while(1) {








   $73=((($today_131)+(1))|0);
   $74=(($inHigh+($73<<3))|0);
   $75=(+(HEAPF64[(($74)>>3)]));
   $76=($75)-($prevHigh_132);
   $77=(($inLow+($73<<3))|0);
   $78=(+(HEAPF64[(($77)>>3)]));
   $79=($prevLow_133)-($78);
   $80=($prevMinusDM_235)/($69);
   $81=($prevMinusDM_235)-($80);
   $82=($prevPlusDM_236)/($69);
   $83=($prevPlusDM_236)-($82);
   $84=$79>(0.0);
   $85=$76<$79;
   $or_cond19=$84&$85;
   do {
    if ($or_cond19) {
     $87=($79)+($81);
     $prevPlusDM_3=$83;$prevMinusDM_3=$87;
    } else {
     $89=$76>(0.0);
     $90=$76>$79;
     $or_cond20=$89&$90;
     if (!($or_cond20)) {
      $prevPlusDM_3=$83;$prevMinusDM_3=$81;
      break;
     }
     $92=($76)+($83);
     $prevPlusDM_3=$92;$prevMinusDM_3=$81;
    }
   } while(0);


   $94=($75)-($78);
   $95=($75)-($prevClose_134);
   $96=(+(Math_abs((+($95)))));
   $97=$96>$94;
   $tempReal_2=($97?$96:$94);
   $98=($78)-($prevClose_134);
   $99=(+(Math_abs((+($98)))));
   $100=$99>$tempReal_2;
   $tempReal_3=($100?$99:$tempReal_2);
   $101=($prevTR_137)/($69);
   $102=($prevTR_137)-($101);
   $103=($102)+($tempReal_3);
   $104=(($inClose+($73<<3))|0);
   $105=(+(HEAPF64[(($104)>>3)]));
   $106=((($72)-(1))|0);
   $107=($72|0)==0;
   if ($107) {
    break;
   } else {
    $today_131=$73;$prevHigh_132=$75;$prevLow_133=$78;$prevClose_134=$105;$prevMinusDM_235=$prevMinusDM_3;$prevPlusDM_236=$prevPlusDM_3;$prevTR_137=$103;$72=$106;
   }
  }
  $108=((($70)+(1))|0);
  $today_1_lcssa=$108;$prevHigh_1_lcssa=$75;$prevLow_1_lcssa=$78;$prevClose_1_lcssa=$105;$prevMinusDM_2_lcssa=$prevMinusDM_3;$prevPlusDM_2_lcssa=$prevPlusDM_3;$prevTR_1_lcssa=$103;
 }







 $110=$prevTR_1_lcssa>(-1.0e-14);
 $111=$prevTR_1_lcssa<(1.0e-14);
 $or_cond7=$110&$111;
 do {
  if ($or_cond7) {
   HEAPF64[(($outReal)>>3)]=0.0;
  } else {
   $113=($prevMinusDM_2_lcssa)/($prevTR_1_lcssa);
   $114=($113)*((100.0));
   $115=($prevPlusDM_2_lcssa)/($prevTR_1_lcssa);
   $116=($115)*((100.0));
   $117=($114)+($116);
   $118=$117>(-1.0e-14);
   $119=$117<(1.0e-14);
   $or_cond9=$118&$119;
   if ($or_cond9) {
    HEAPF64[(($outReal)>>3)]=0.0;
    break;
   } else {
    $121=($114)-($116);
    $122=(+(Math_abs((+($121)))));
    $123=($122)/($117);
    $124=($123)*((100.0));
    HEAPF64[(($outReal)>>3)]=$124;
    break;
   }
  }
 } while(0);
 $127=($today_1_lcssa|0)<($endIdx|0);
 if ($127) {
  $128=(+((($_015|0))|0));
  $129=((($endIdx)+(1))|0);
  $today_223=$today_1_lcssa;$outIdx_024=1;$prevHigh_225=$prevHigh_1_lcssa;$prevLow_226=$prevLow_1_lcssa;$prevClose_227=$prevClose_1_lcssa;$prevMinusDM_428=$prevMinusDM_2_lcssa;$prevPlusDM_429=$prevPlusDM_2_lcssa;$prevTR_230=$prevTR_1_lcssa;
  while(1) {








   $131=((($today_223)+(1))|0);
   $132=(($inHigh+($131<<3))|0);
   $133=(+(HEAPF64[(($132)>>3)]));
   $134=($133)-($prevHigh_225);
   $135=(($inLow+($131<<3))|0);
   $136=(+(HEAPF64[(($135)>>3)]));
   $137=($prevLow_226)-($136);
   $138=($prevMinusDM_428)/($128);
   $139=($prevMinusDM_428)-($138);
   $140=($prevPlusDM_429)/($128);
   $141=($prevPlusDM_429)-($140);
   $142=$137>(0.0);
   $143=$134<$137;
   $or_cond21=$142&$143;
   do {
    if ($or_cond21) {
     $145=($137)+($139);
     $prevPlusDM_5=$141;$prevMinusDM_5=$145;
    } else {
     $147=$134>(0.0);
     $148=$134>$137;
     $or_cond22=$147&$148;
     if (!($or_cond22)) {
      $prevPlusDM_5=$141;$prevMinusDM_5=$139;
      break;
     }
     $150=($134)+($141);
     $prevPlusDM_5=$150;$prevMinusDM_5=$139;
    }
   } while(0);


   $152=($133)-($136);
   $153=($133)-($prevClose_227);
   $154=(+(Math_abs((+($153)))));
   $155=$154>$152;
   $tempReal_4=($155?$154:$152);
   $156=($136)-($prevClose_227);
   $157=(+(Math_abs((+($156)))));
   $158=$157>$tempReal_4;
   $tempReal_5=($158?$157:$tempReal_4);
   $159=($prevTR_230)/($128);
   $160=($prevTR_230)-($159);
   $161=($160)+($tempReal_5);
   $162=(($inClose+($131<<3))|0);
   $163=(+(HEAPF64[(($162)>>3)]));
   $164=$161>(-1.0e-14);
   $165=$161<(1.0e-14);
   $or_cond11=$164&$165;
   do {
    if ($or_cond11) {
     $186=((($outIdx_024)-(1))|0);
     $187=(($outReal+($186<<3))|0);
     $188=(+(HEAPF64[(($187)>>3)]));
     $189=(($outReal+($outIdx_024<<3))|0);
     HEAPF64[(($189)>>3)]=$188;
    } else {
     $167=($prevMinusDM_5)/($161);
     $168=($167)*((100.0));
     $169=($prevPlusDM_5)/($161);
     $170=($169)*((100.0));
     $171=($168)+($170);
     $172=$171>(-1.0e-14);
     $173=$171<(1.0e-14);
     $or_cond13=$172&$173;
     if ($or_cond13) {
      $181=((($outIdx_024)-(1))|0);
      $182=(($outReal+($181<<3))|0);
      $183=(+(HEAPF64[(($182)>>3)]));
      $184=(($outReal+($outIdx_024<<3))|0);
      HEAPF64[(($184)>>3)]=$183;
      break;
     } else {
      $175=($168)-($170);
      $176=(+(Math_abs((+($175)))));
      $177=($176)/($171);
      $178=($177)*((100.0));
      $179=(($outReal+($outIdx_024<<3))|0);
      HEAPF64[(($179)>>3)]=$178;
      break;
     }
    }
   } while(0);
   $191=((($outIdx_024)+(1))|0);
   $192=($131|0)<($endIdx|0);
   if ($192) {
    $today_223=$131;$outIdx_024=$191;$prevHigh_225=$133;$prevLow_226=$136;$prevClose_227=$163;$prevMinusDM_428=$prevMinusDM_5;$prevPlusDM_429=$prevPlusDM_5;$prevTR_230=$161;
   } else {
    break;
   }
  }
  $193=((($129)-($today_1_lcssa))|0);
  $outIdx_0_lcssa=$193;
 } else {
  $outIdx_0_lcssa=1;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_EMA_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$6=0,$7=0,$8=0,$9=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((($_0)-(1))|0);
 $6=((HEAP32[((272)>>2)])|0);
 $7=(($6+80)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=((($5)+($8))|0);
 $_02=$9;

 return (($_02)|0);
}


function _TA_EMA($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_02=0,$12=0,$14=0,$15=.0,$16=.0,$17=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 do {
  if ($1) {
   $_0=12;
  } else {
   $3=($endIdx|0)<0;
   $4=($endIdx|0)<($startIdx|0);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_0=13;
    break;
   }
   $6=($inReal|0)==0;
   if ($6) {
    $_0=2;
    break;
   }
   $8=($optInTimePeriod|0)==-2147483648;
   if ($8) {
    $_02=30;
   } else {
    $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
    $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
    if ($10) {
     $_0=2;
     break;
    } else {
     $_02=$optInTimePeriod;
    }
   }

   $12=($outReal|0)==0;
   if ($12) {
    $_0=2;
    break;
   }
   $14=((($_02)+(1))|0);
   $15=(+((($14|0))|0));
   $16=((2.0))/($15);
   $17=((_TA_INT_EMA($startIdx,$endIdx,$inReal,$_02,$16,$outBegIdx,$outNBElement,$outReal))|0);
   $_0=0;
  }
 } while(0);

 return (($_0)|0);
}


function _TA_INT_EMA($startIdx,$endIdx,$inReal,$optInTimePeriod,$optInK_1,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $optInK_1=+($optInK_1);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$2=0,$_startIdx=0,$3=0,$6=0,$7=0,$8=0,$9=0,$11=0,$12=0,$13=0,$smax22=0,$14=0,$today_012=0,$i_011=0,$tempReal_010=.0,$16=0,$17=0,$18=0,$19=.0;
 var $20=.0,$21=0,$22=0,$today_0_lcssa=0,$tempReal_0_lcssa=.0,$24=.0,$25=.0,$27=.0,$prevMA_0_ph=.0,$today_1_ph=0,$28=0,$29=0,$smax19=0,$30=0,$smax20=0,$today_16=0,$prevMA_05=.0,$32=0,$33=0,$34=.0;
 var $35=.0,$36=.0,$37=.0,$38=0,$39=0,$today_1_lcssa=0,$prevMA_0_lcssa=.0,$41=0,$42=0,$smax=0,$43=0,$outIdx_04=0,$today_23=0,$prevMA_12=.0,$45=0,$46=0,$47=.0,$48=.0,$49=.0,$50=.0;
 var $51=0,$52=0,$53=0,$54=0,$storemerge=0,label=0;

 $1=((_TA_EMA_Lookback($optInTimePeriod))|0);
 $2=($1|0)>($startIdx|0);
 $_startIdx=($2?$1:$startIdx);
 $3=($_startIdx|0)>($endIdx|0);
 if ($3) {
  HEAP32[(($outBegIdx)>>2)]=0;
  $storemerge=0;

  HEAP32[(($outNBElement)>>2)]=$storemerge;
  return ((0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $6=((HEAP32[((272)>>2)])|0);
 $7=(($6+56)|0);
 $8=((HEAP32[(($7)>>2)])|0);
 $9=($8|0)==0;
 if ($9) {
  $11=((($_startIdx)-($1))|0);
  $12=($optInTimePeriod|0)>0;
  if ($12) {
   $13=($1|0)>($startIdx|0);
   $smax22=($13?$1:$startIdx);
   $14=((($smax22)+($optInTimePeriod))|0);
   $tempReal_010=0.0;$i_011=$optInTimePeriod;$today_012=$11;
   while(1) {



    $16=((($i_011)-(1))|0);
    $17=((($today_012)+(1))|0);
    $18=(($inReal+($today_012<<3))|0);
    $19=(+(HEAPF64[(($18)>>3)]));
    $20=($tempReal_010)+($19);
    $21=($16|0)>0;
    if ($21) {
     $tempReal_010=$20;$i_011=$16;$today_012=$17;
    } else {
     break;
    }
   }
   $22=((($14)-($1))|0);
   $tempReal_0_lcssa=$20;$today_0_lcssa=$22;
  } else {
   $tempReal_0_lcssa=0.0;$today_0_lcssa=$11;
  }


  $24=(+((($optInTimePeriod|0))|0));
  $25=($tempReal_0_lcssa)/($24);
  $today_1_ph=$today_0_lcssa;$prevMA_0_ph=$25;
 } else {
  $27=(+(HEAPF64[(($inReal)>>3)]));
  $today_1_ph=1;$prevMA_0_ph=$27;
 }


 $28=($today_1_ph|0)>($_startIdx|0);
 if ($28) {
  $prevMA_0_lcssa=$prevMA_0_ph;$today_1_lcssa=$today_1_ph;
 } else {
  $29=($1|0)>($today_1_ph|0);
  $smax19=($29?$1:$today_1_ph);
  $30=($smax19|0)>($startIdx|0);
  $smax20=($30?$smax19:$startIdx);
  $prevMA_05=$prevMA_0_ph;$today_16=$today_1_ph;
  while(1) {


   $32=((($today_16)+(1))|0);
   $33=(($inReal+($today_16<<3))|0);
   $34=(+(HEAPF64[(($33)>>3)]));
   $35=($34)-($prevMA_05);
   $36=($35)*($optInK_1);
   $37=($prevMA_05)+($36);
   $38=($today_16|0)<($_startIdx|0);
   if ($38) {
    $prevMA_05=$37;$today_16=$32;
   } else {
    break;
   }
  }
  $39=((($smax20)+(1))|0);
  $prevMA_0_lcssa=$37;$today_1_lcssa=$39;
 }


 HEAPF64[(($outReal)>>3)]=$prevMA_0_lcssa;
 $41=($today_1_lcssa|0)>($endIdx|0);
 if ($41) {
  $storemerge=1;

  HEAP32[(($outNBElement)>>2)]=$storemerge;
  return ((0)|0);
 }
 $42=($today_1_lcssa|0)>($endIdx|0);
 $smax=($42?$today_1_lcssa:$endIdx);
 $43=((($smax)+(2))|0);
 $prevMA_12=$prevMA_0_lcssa;$today_23=$today_1_lcssa;$outIdx_04=1;
 while(1) {



  $45=((($today_23)+(1))|0);
  $46=(($inReal+($today_23<<3))|0);
  $47=(+(HEAPF64[(($46)>>3)]));
  $48=($47)-($prevMA_12);
  $49=($48)*($optInK_1);
  $50=($prevMA_12)+($49);
  $51=((($outIdx_04)+(1))|0);
  $52=(($outReal+($outIdx_04<<3))|0);
  HEAPF64[(($52)>>3)]=$50;
  $53=($today_23|0)<($endIdx|0);
  if ($53) {
   $prevMA_12=$50;$today_23=$45;$outIdx_04=$51;
  } else {
   break;
  }
 }
 $54=((($43)-($today_1_lcssa))|0);
 $storemerge=$54;

 HEAP32[(($outNBElement)>>2)]=$storemerge;
 return ((0)|0);
}


function _TA_EXP($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(Math_exp($13)));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_FLOOR($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(Math_floor($13)));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_HT_DCPERIOD($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $detrender_Odd=0,$detrender_Even=0,$Q1_Odd=0,$Q1_Even=0,$jI_Odd=0,$jI_Even=0,$jQ_Odd=0,$jQ_Even=0,$1=0,$3=0,$4=0,$or_cond5=0,$6=0,$7=0,$or_cond6=0,$9=0,$10=0,$11=0,$12=0,$13=0;
 var $_startIdx=0,$14=0,$17=0,$18=0,$19=0,$20=.0,$21=0,$22=0,$23=.0,$24=0,$25=.0,$26=0,$27=0,$smax=0,$28=0,$29=.0,$30=0,$31=.0,$32=0,$33=0;
 var $34=.0,$35=.0,$36=0,$37=0,$38=.0,$39=0,$40=0,$41=.0,$42=.0,$43=.0,$44=0,$45=0,$46=.0,$47=0,$48=0,$49=.0,$50=.0,$51=.0,$52=0,$53=0;
 var $54=.0,$55=0,$56=0,$57=.0,$58=.0,$59=.0,$60=0,$61=0,$62=.0,$63=0,$64=0,$65=.0,$66=.0,$67=.0,$68=0,$69=0,$70=.0,$71=0,$72=0,$73=.0;
 var $74=.0,$75=.0,$76=0,$77=0,$78=.0,$79=0,$80=0,$81=.0,$82=.0,$83=.0,$84=0,$85=0,$86=.0,$87=0,$88=0,$89=.0,$90=.0,$91=.0,$92=0,$93=0;
 var $94=.0,$95=0,$96=.0,$97=.0,$98=.0,$99=0,$100=.0,$101=0,$102=0,$103=0,$104=0,$105=0,$106=0,$107=0,$108=0,$109=0,$110=0,$111=.0,$112=.0,$113=.0;
 var $114=.0,$115=.0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$122=.0,$123=.0,$124=.0,$125=.0,$126=.0,$127=.0,$128=.0,$129=.0,$130=.0,$131=.0,$132=.0,$133=.0;
 var $134=.0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=0,$142=0,$143=0,$144=0,$145=.0,$smoothPeriod_039=.0,$I1ForEvenPrev3_038=.0,$I1ForEvenPrev2_037=.0,$I1ForOddPrev3_036=.0,$I1ForOddPrev2_035=.0,$Im_034=.0,$Re_033=.0,$prevI2_032=.0;
 var $prevQ2_031=.0,$prev_jQ_input_Even_030=.0,$prev_jQ_input_Odd_029=.0,$prev_jQ_Even_028=.0,$prev_jQ_Odd_027=.0,$prev_jI_input_Even_026=.0,$prev_jI_input_Odd_025=.0,$prev_jI_Even_024=.0,$prev_jI_Odd_023=.0,$prev_Q1_input_Even_022=.0,$prev_Q1_input_Odd_021=.0,$prev_Q1_Even_020=.0,$prev_Q1_Odd_019=.0,$prev_detrender_input_Even_018=.0,$prev_detrender_input_Odd_017=.0,$prev_detrender_Even_016=.0,$prev_detrender_Odd_015=.0,$hilbertIdx_014=0,$outIdx_013=0,$trailingWMAValue_112=.0;
 var $periodWMASub_111=.0,$periodWMASum_110=.0,$trailingWMAIdx_19=0,$period_08=.0,$today_17=0,$147=.0,$148=.0,$149=0,$150=.0,$151=.0,$152=.0,$153=.0,$154=.0,$155=0,$156=0,$157=.0,$158=.0,$159=.0,$160=0,$161=0;
 var $162=.0,$164=0,$165=.0,$166=.0,$167=.0,$168=.0,$169=.0,$170=.0,$171=.0,$172=0,$173=.0,$174=.0,$175=.0,$176=.0,$177=.0,$178=.0,$179=.0,$180=0,$181=.0,$182=.0;
 var $183=.0,$184=.0,$185=.0,$186=.0,$187=.0,$188=0,$189=.0,$190=.0,$191=.0,$192=.0,$193=.0,$194=.0,$195=0,$196=0,$_=0,$197=.0,$198=.0,$199=.0,$200=.0,$201=.0;
 var $202=.0,$203=.0,$204=.0,$206=0,$207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=.0,$214=0,$215=.0,$216=.0,$217=.0,$218=.0,$219=.0,$220=.0,$221=.0,$222=0;
 var $223=.0,$224=.0,$225=.0,$226=.0,$227=.0,$228=.0,$229=.0,$230=0,$231=.0,$232=.0,$233=.0,$234=.0,$235=.0,$236=.0,$237=.0,$238=.0,$239=.0,$240=.0,$241=.0,$242=.0;
 var $243=.0,$244=.0,$hilbertIdx_1=0,$prev_detrender_Odd_1=.0,$prev_detrender_Even_1=.0,$prev_detrender_input_Odd_1=.0,$prev_detrender_input_Even_1=.0,$prev_Q1_Odd_1=.0,$prev_Q1_Even_1=.0,$prev_Q1_input_Odd_1=.0,$prev_Q1_input_Even_1=.0,$prev_jI_Odd_1=.0,$prev_jI_Even_1=.0,$prev_jI_input_Odd_1=.0,$prev_jI_input_Even_1=.0,$prev_jQ_Odd_1=.0,$prev_jQ_Even_1=.0,$prev_jQ_input_Odd_1=.0,$prev_jQ_input_Even_1=.0,$Q2_0=.0;
 var $I2_0=.0,$I1ForOddPrev2_1=.0,$I1ForOddPrev3_1=.0,$I1ForEvenPrev2_1=.0,$I1ForEvenPrev3_1=.0,$246=.0,$247=.0,$248=.0,$249=.0,$250=.0,$251=.0,$252=.0,$253=.0,$254=.0,$255=.0,$256=0,$257=0,$or_cond=0,$259=.0,$260=.0;
 var $261=.0,$262=.0,$period_1=.0,$264=.0,$265=0,$period_2=.0,$266=.0,$267=0,$period_3=.0,$268=0,$270=0,$period_4=.0,$273=.0,$274=.0,$275=.0,$276=.0,$277=.0,$278=0,$280=0,$281=0;
 var $outIdx_1=0,$283=0,$phitmp=.0,$phitmp3=.0,$phitmp4=.0,$284=0,$outIdx_0_lcssa=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+192)|0;
 $detrender_Odd=((sp)|0);
 $detrender_Even=(((sp)+(24))|0);
 $Q1_Odd=(((sp)+(48))|0);
 $Q1_Even=(((sp)+(72))|0);
 $jI_Odd=(((sp)+(96))|0);
 $jI_Even=(((sp)+(120))|0);
 $jQ_Odd=(((sp)+(144))|0);
 $jQ_Even=(((sp)+(168))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond5=$3|$4;
 if ($or_cond5) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond6=$6|$7;
 if ($or_cond6) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $9=((HEAP32[((272)>>2)])|0);
 $10=(($9+84)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=((($11)+(32))|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $17=((($_startIdx)-($12))|0);
 $18=((($17)+(1))|0);
 $19=(($inReal+($17<<3))|0);
 $20=(+(HEAPF64[(($19)>>3)]));
 $21=((($17)+(2))|0);
 $22=(($inReal+($18<<3))|0);
 $23=(+(HEAPF64[(($22)>>3)]));
 $24=(($inReal+($21<<3))|0);
 $25=(+(HEAPF64[(($24)>>3)]));
 $26=((($11)+(32))|0);
 $27=($26|0)<($startIdx|0);
 $smax=($27?$startIdx:$26);
 $28=((($17)+(3))|0);
 $29=($20)+($23);
 $30=((($smax)-(21))|0);
 $31=($29)+($25);
 $32=((($17)+(4))|0);
 $33=(($inReal+($28<<3))|0);
 $34=(+(HEAPF64[(($33)>>3)]));
 $35=($31)+($34);
 $36=((($17)+(1))|0);
 $37=(($inReal+($17<<3))|0);
 $38=(+(HEAPF64[(($37)>>3)]));
 $39=((($17)+(5))|0);
 $40=(($inReal+($32<<3))|0);
 $41=(+(HEAPF64[(($40)>>3)]));
 $42=($35)+($41);
 $43=($42)-($38);
 $44=((($17)+(2))|0);
 $45=(($inReal+($36<<3))|0);
 $46=(+(HEAPF64[(($45)>>3)]));
 $47=((($17)+(6))|0);
 $48=(($inReal+($39<<3))|0);
 $49=(+(HEAPF64[(($48)>>3)]));
 $50=($43)+($49);
 $51=($50)-($46);
 $52=((($17)+(3))|0);
 $53=(($inReal+($44<<3))|0);
 $54=(+(HEAPF64[(($53)>>3)]));
 $55=((($17)+(7))|0);
 $56=(($inReal+($47<<3))|0);
 $57=(+(HEAPF64[(($56)>>3)]));
 $58=($51)+($57);
 $59=($58)-($54);
 $60=((($17)+(4))|0);
 $61=(($inReal+($52<<3))|0);
 $62=(+(HEAPF64[(($61)>>3)]));
 $63=((($17)+(8))|0);
 $64=(($inReal+($55<<3))|0);
 $65=(+(HEAPF64[(($64)>>3)]));
 $66=($59)+($65);
 $67=($66)-($62);
 $68=((($17)+(5))|0);
 $69=(($inReal+($60<<3))|0);
 $70=(+(HEAPF64[(($69)>>3)]));
 $71=((($17)+(9))|0);
 $72=(($inReal+($63<<3))|0);
 $73=(+(HEAPF64[(($72)>>3)]));
 $74=($67)+($73);
 $75=($74)-($70);
 $76=((($17)+(6))|0);
 $77=(($inReal+($68<<3))|0);
 $78=(+(HEAPF64[(($77)>>3)]));
 $79=((($17)+(10))|0);
 $80=(($inReal+($71<<3))|0);
 $81=(+(HEAPF64[(($80)>>3)]));
 $82=($75)+($81);
 $83=($82)-($78);
 $84=((($17)+(7))|0);
 $85=(($inReal+($76<<3))|0);
 $86=(+(HEAPF64[(($85)>>3)]));
 $87=((($17)+(11))|0);
 $88=(($inReal+($79<<3))|0);
 $89=(+(HEAPF64[(($88)>>3)]));
 $90=($83)+($89);
 $91=($90)-($86);
 $92=((($17)+(8))|0);
 $93=(($inReal+($84<<3))|0);
 $94=(+(HEAPF64[(($93)>>3)]));
 $95=(($inReal+($87<<3))|0);
 $96=(+(HEAPF64[(($95)>>3)]));
 $97=($91)+($96);
 $98=($97)-($94);
 $99=(($inReal+($92<<3))|0);
 $100=(+(HEAPF64[(($99)>>3)]));
 $101=((($30)-($11))|0);
 $102=$detrender_Odd;
 _memset((((($102)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $103=$detrender_Even;
 _memset((((($103)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $104=$Q1_Odd;
 _memset((((($104)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $105=$Q1_Even;
 _memset((((($105)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $106=$jI_Odd;
 _memset((((($106)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $107=$jI_Even;
 _memset((((($107)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $108=$jQ_Odd;
 _memset((((($108)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $109=($101|0)<($endIdx|0);
 $110=$jQ_Even;
 _memset((((($110)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 if ($109) {
  $111=($23)*((2.0));
  $112=($20)+($111);
  $113=($25)*((3.0));
  $114=($34)*((4.0));
  $115=($112)+($113);
  $116=($115)+($114);
  $117=($41)*((4.0));
  $118=($116)-($35);
  $119=($118)+($117);
  $120=($49)*((4.0));
  $121=($119)-($43);
  $122=($121)+($120);
  $123=($57)*((4.0));
  $124=($122)-($51);
  $125=($124)+($123);
  $126=($65)*((4.0));
  $127=($125)-($59);
  $128=($127)+($126);
  $129=($73)*((4.0));
  $130=($128)-($67);
  $131=($130)+($129);
  $132=($81)*((4.0));
  $133=($131)-($75);
  $134=($133)+($132);
  $135=($89)*((4.0));
  $136=($134)-($83);
  $137=($136)+($135);
  $138=($96)*((4.0));
  $139=($137)-($91);
  $140=($139)+($138);
  $141=((($smax)-(23))|0);
  $142=((($smax)-(20))|0);
  $143=((($142)-($11))|0);
  $144=((($141)-($11))|0);
  $145=($140)-($98);
  $today_17=$143;$period_08=0.0;$trailingWMAIdx_19=$144;$periodWMASum_110=$145;$periodWMASub_111=$98;$trailingWMAValue_112=$100;$outIdx_013=0;$hilbertIdx_014=0;$prev_detrender_Odd_015=0.0;$prev_detrender_Even_016=0.0;$prev_detrender_input_Odd_017=0.0;$prev_detrender_input_Even_018=0.0;$prev_Q1_Odd_019=0.0;$prev_Q1_Even_020=0.0;$prev_Q1_input_Odd_021=0.0;$prev_Q1_input_Even_022=0.0;$prev_jI_Odd_023=0.0;$prev_jI_Even_024=0.0;$prev_jI_input_Odd_025=0.0;$prev_jI_input_Even_026=0.0;$prev_jQ_Odd_027=0.0;$prev_jQ_Even_028=0.0;$prev_jQ_input_Odd_029=0.0;$prev_jQ_input_Even_030=0.0;$prevQ2_031=0.0;$prevI2_032=0.0;$Re_033=0.0;$Im_034=0.0;$I1ForOddPrev2_035=0.0;$I1ForOddPrev3_036=0.0;$I1ForEvenPrev2_037=0.0;$I1ForEvenPrev3_038=0.0;$smoothPeriod_039=0.0;
  while(1) {

































   $147=($period_08)*((0.075));
   $148=($147)+((0.54));
   $149=(($inReal+($today_17<<3))|0);
   $150=(+(HEAPF64[(($149)>>3)]));
   $151=($periodWMASub_111)+($150);
   $152=($151)-($trailingWMAValue_112);
   $153=($150)*((4.0));
   $154=($periodWMASum_110)+($153);
   $155=((($trailingWMAIdx_19)+(1))|0);
   $156=(($inReal+($trailingWMAIdx_19<<3))|0);
   $157=(+(HEAPF64[(($156)>>3)]));
   $158=($154)*((0.1));
   $159=($154)-($152);
   $160=$today_17&1;
   $161=($160|0)==0;
   $162=($158)*((0.0962));
   if ($161) {
    $164=(($detrender_Even+($hilbertIdx_014<<3))|0);
    $165=(+(HEAPF64[(($164)>>3)]));
    HEAPF64[(($164)>>3)]=$162;
    $166=($162)-($165);
    $167=($166)-($prev_detrender_Even_016);
    $168=($prev_detrender_input_Even_018)*((0.5769));
    $169=($168)+($167);
    $170=($148)*($169);
    $171=($170)*((0.0962));
    $172=(($Q1_Even+($hilbertIdx_014<<3))|0);
    $173=(+(HEAPF64[(($172)>>3)]));
    HEAPF64[(($172)>>3)]=$171;
    $174=($171)-($173);
    $175=($174)-($prev_Q1_Even_020);
    $176=($prev_Q1_input_Even_022)*((0.5769));
    $177=($176)+($175);
    $178=($148)*($177);
    $179=($I1ForEvenPrev3_038)*((0.0962));
    $180=(($jI_Even+($hilbertIdx_014<<3))|0);
    $181=(+(HEAPF64[(($180)>>3)]));
    HEAPF64[(($180)>>3)]=$179;
    $182=($179)-($181);
    $183=($182)-($prev_jI_Even_024);
    $184=($prev_jI_input_Even_026)*((0.5769));
    $185=($184)+($183);
    $186=($148)*($185);
    $187=($178)*((0.0962));
    $188=(($jQ_Even+($hilbertIdx_014<<3))|0);
    $189=(+(HEAPF64[(($188)>>3)]));
    HEAPF64[(($188)>>3)]=$187;
    $190=($187)-($189);
    $191=($190)-($prev_jQ_Even_028);
    $192=($prev_jQ_input_Even_030)*((0.5769));
    $193=($192)+($191);
    $194=($148)*($193);
    $195=((($hilbertIdx_014)+(1))|0);
    $196=($195|0)==3;
    $_=($196?0:$195);
    $197=($186)+($178);
    $198=($197)*((0.2));
    $199=($prevQ2_031)*((0.8));
    $200=($199)+($198);
    $201=($I1ForEvenPrev3_038)-($194);
    $202=($201)*((0.2));
    $203=($prevI2_032)*((0.8));
    $204=($203)+($202);
    $I1ForEvenPrev3_1=$I1ForEvenPrev3_038;$I1ForEvenPrev2_1=$I1ForEvenPrev2_037;$I1ForOddPrev3_1=$I1ForOddPrev2_035;$I1ForOddPrev2_1=$170;$I2_0=$204;$Q2_0=$200;$prev_jQ_input_Even_1=$178;$prev_jQ_input_Odd_1=$prev_jQ_input_Odd_029;$prev_jQ_Even_1=$192;$prev_jQ_Odd_1=$prev_jQ_Odd_027;$prev_jI_input_Even_1=$I1ForEvenPrev3_038;$prev_jI_input_Odd_1=$prev_jI_input_Odd_025;$prev_jI_Even_1=$184;$prev_jI_Odd_1=$prev_jI_Odd_023;$prev_Q1_input_Even_1=$170;$prev_Q1_input_Odd_1=$prev_Q1_input_Odd_021;$prev_Q1_Even_1=$176;$prev_Q1_Odd_1=$prev_Q1_Odd_019;$prev_detrender_input_Even_1=$158;$prev_detrender_input_Odd_1=$prev_detrender_input_Odd_017;$prev_detrender_Even_1=$168;$prev_detrender_Odd_1=$prev_detrender_Odd_015;$hilbertIdx_1=$_;
   } else {
    $206=(($detrender_Odd+($hilbertIdx_014<<3))|0);
    $207=(+(HEAPF64[(($206)>>3)]));
    HEAPF64[(($206)>>3)]=$162;
    $208=($162)-($207);
    $209=($208)-($prev_detrender_Odd_015);
    $210=($prev_detrender_input_Odd_017)*((0.5769));
    $211=($210)+($209);
    $212=($148)*($211);
    $213=($212)*((0.0962));
    $214=(($Q1_Odd+($hilbertIdx_014<<3))|0);
    $215=(+(HEAPF64[(($214)>>3)]));
    HEAPF64[(($214)>>3)]=$213;
    $216=($213)-($215);
    $217=($216)-($prev_Q1_Odd_019);
    $218=($prev_Q1_input_Odd_021)*((0.5769));
    $219=($218)+($217);
    $220=($148)*($219);
    $221=($I1ForOddPrev3_036)*((0.0962));
    $222=(($jI_Odd+($hilbertIdx_014<<3))|0);
    $223=(+(HEAPF64[(($222)>>3)]));
    HEAPF64[(($222)>>3)]=$221;
    $224=($221)-($223);
    $225=($224)-($prev_jI_Odd_023);
    $226=($prev_jI_input_Odd_025)*((0.5769));
    $227=($226)+($225);
    $228=($148)*($227);
    $229=($220)*((0.0962));
    $230=(($jQ_Odd+($hilbertIdx_014<<3))|0);
    $231=(+(HEAPF64[(($230)>>3)]));
    HEAPF64[(($230)>>3)]=$229;
    $232=($229)-($231);
    $233=($232)-($prev_jQ_Odd_027);
    $234=($prev_jQ_input_Odd_029)*((0.5769));
    $235=($234)+($233);
    $236=($148)*($235);
    $237=($228)+($220);
    $238=($237)*((0.2));
    $239=($prevQ2_031)*((0.8));
    $240=($239)+($238);
    $241=($I1ForOddPrev3_036)-($236);
    $242=($241)*((0.2));
    $243=($prevI2_032)*((0.8));
    $244=($243)+($242);
    $I1ForEvenPrev3_1=$I1ForEvenPrev2_037;$I1ForEvenPrev2_1=$212;$I1ForOddPrev3_1=$I1ForOddPrev3_036;$I1ForOddPrev2_1=$I1ForOddPrev2_035;$I2_0=$244;$Q2_0=$240;$prev_jQ_input_Even_1=$prev_jQ_input_Even_030;$prev_jQ_input_Odd_1=$220;$prev_jQ_Even_1=$prev_jQ_Even_028;$prev_jQ_Odd_1=$234;$prev_jI_input_Even_1=$prev_jI_input_Even_026;$prev_jI_input_Odd_1=$I1ForOddPrev3_036;$prev_jI_Even_1=$prev_jI_Even_024;$prev_jI_Odd_1=$226;$prev_Q1_input_Even_1=$prev_Q1_input_Even_022;$prev_Q1_input_Odd_1=$212;$prev_Q1_Even_1=$prev_Q1_Even_020;$prev_Q1_Odd_1=$218;$prev_detrender_input_Even_1=$prev_detrender_input_Even_018;$prev_detrender_input_Odd_1=$158;$prev_detrender_Even_1=$prev_detrender_Even_016;$prev_detrender_Odd_1=$210;$hilbertIdx_1=$hilbertIdx_014;
   }























   $246=($prevI2_032)*($I2_0);
   $247=($prevQ2_031)*($Q2_0);
   $248=($247)+($246);
   $249=($248)*((0.2));
   $250=($Re_033)+($249);
   $251=($prevQ2_031)*($I2_0);
   $252=($prevI2_032)*($Q2_0);
   $253=($251)-($252);
   $254=($253)*((0.2));
   $255=($Im_034)+($254);
   $256=$255!=(0.0);
   $257=$250!=(0.0);
   $or_cond=$256&$257;
   if ($or_cond) {
    $259=($255)/($250);
    $260=(+(Math_atan($259)));
    $261=($260)*((57.29577951308232));
    $262=((360.0))/($261);
    $period_1=$262;
   } else {
    $period_1=$period_08;
   }

   $264=($period_08)*((1.5));
   $265=$period_1>$264;
   $period_2=($265?$264:$period_1);
   $266=($period_08)*((0.67));
   $267=$period_2<$266;
   $period_3=($267?$266:$period_2);
   $268=$period_3<(6.0);
   do {
    if ($268) {
     $period_4=6.0;
    } else {
     $270=$period_3>(50.0);
     if (!($270)) {
      $period_4=$period_3;
      break;
     }
     $period_4=50.0;
    }
   } while(0);

   $273=($period_4)*((0.2));
   $274=($period_08)*((0.8));
   $275=($274)+($273);
   $276=($275)*((0.33));
   $277=($smoothPeriod_039)+($276);
   $278=($today_17|0)<($_startIdx|0);
   if ($278) {
    $outIdx_1=$outIdx_013;
   } else {
    $280=((($outIdx_013)+(1))|0);
    $281=(($outReal+($outIdx_013<<3))|0);
    HEAPF64[(($281)>>3)]=$277;
    $outIdx_1=$280;
   }

   $283=((($today_17)+(1))|0);
   $phitmp=($250)*((0.8));
   $phitmp3=($255)*((0.8));
   $phitmp4=($277)*((0.67));
   $284=($today_17|0)<($endIdx|0);
   if ($284) {
    $today_17=$283;$period_08=$275;$trailingWMAIdx_19=$155;$periodWMASum_110=$159;$periodWMASub_111=$152;$trailingWMAValue_112=$157;$outIdx_013=$outIdx_1;$hilbertIdx_014=$hilbertIdx_1;$prev_detrender_Odd_015=$prev_detrender_Odd_1;$prev_detrender_Even_016=$prev_detrender_Even_1;$prev_detrender_input_Odd_017=$prev_detrender_input_Odd_1;$prev_detrender_input_Even_018=$prev_detrender_input_Even_1;$prev_Q1_Odd_019=$prev_Q1_Odd_1;$prev_Q1_Even_020=$prev_Q1_Even_1;$prev_Q1_input_Odd_021=$prev_Q1_input_Odd_1;$prev_Q1_input_Even_022=$prev_Q1_input_Even_1;$prev_jI_Odd_023=$prev_jI_Odd_1;$prev_jI_Even_024=$prev_jI_Even_1;$prev_jI_input_Odd_025=$prev_jI_input_Odd_1;$prev_jI_input_Even_026=$prev_jI_input_Even_1;$prev_jQ_Odd_027=$prev_jQ_Odd_1;$prev_jQ_Even_028=$prev_jQ_Even_1;$prev_jQ_input_Odd_029=$prev_jQ_input_Odd_1;$prev_jQ_input_Even_030=$prev_jQ_input_Even_1;$prevQ2_031=$Q2_0;$prevI2_032=$I2_0;$Re_033=$phitmp;$Im_034=$phitmp3;$I1ForOddPrev2_035=$I1ForOddPrev2_1;$I1ForOddPrev3_036=$I1ForOddPrev3_1;$I1ForEvenPrev2_037=$I1ForEvenPrev2_1;$I1ForEvenPrev3_038=$I1ForEvenPrev3_1;$smoothPeriod_039=$phitmp4;
   } else {
    $outIdx_0_lcssa=$outIdx_1;
    break;
   }
  }
 } else {
  $outIdx_0_lcssa=0;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_HT_DCPHASE($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $detrender_Odd=0,$detrender_Even=0,$Q1_Odd=0,$Q1_Even=0,$jI_Odd=0,$jI_Even=0,$jQ_Odd=0,$jQ_Even=0,$local_smoothPrice=0,$local_smoothPrice57=0,$1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond7=0,$9=0,$10=0,$11=0;
 var $12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0,$19=0,$20=.0,$21=0,$22=0,$23=.0,$24=.0,$25=.0,$26=.0,$27=0,$28=0,$29=.0,$30=.0,$31=.0,$32=.0;
 var $33=0,$34=0,$smax=0,$35=0,$36=0,$37=0,$periodWMASum_0=.0,$periodWMASub_0=.0,$trailingWMAValue_0=.0,$trailingWMAIdx_0=0,$today_0=0,$i_0=0,$39=0,$40=0,$41=.0,$42=.0,$43=.0,$44=.0,$45=.0,$46=0;
 var $47=0,$48=.0,$49=.0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$DCPhase_047=.0,$outIdx_046=0,$smoothPrice_Idx_045=0;
 var $smoothPeriod_044=.0,$today_143=0,$I1ForEvenPrev3_042=.0,$I1ForEvenPrev2_041=.0,$I1ForOddPrev3_040=.0,$I1ForOddPrev2_039=.0,$Im_038=.0,$Re_037=.0,$prevI2_036=.0,$prevQ2_035=.0,$prev_jQ_input_Even_034=.0,$prev_jQ_input_Odd_033=.0,$prev_jQ_Even_032=.0,$prev_jQ_Odd_031=.0,$prev_jI_input_Even_030=.0,$prev_jI_input_Odd_029=.0,$prev_jI_Even_028=.0,$prev_jI_Odd_027=.0,$prev_Q1_input_Even_026=.0,$prev_Q1_input_Odd_025=.0;
 var $prev_Q1_Even_024=.0,$prev_Q1_Odd_023=.0,$prev_detrender_input_Even_022=.0,$prev_detrender_input_Odd_021=.0,$prev_detrender_Even_020=.0,$prev_detrender_Odd_019=.0,$hilbertIdx_018=0,$period_017=.0,$trailingWMAIdx_116=0,$trailingWMAValue_115=.0,$periodWMASub_114=.0,$periodWMASum_113=.0,$64=.0,$65=.0,$66=0,$67=.0,$68=.0,$69=.0,$70=.0,$71=.0;
 var $72=0,$73=0,$74=.0,$75=.0,$76=.0,$77=0,$78=0,$79=0,$80=.0,$82=0,$83=.0,$84=.0,$85=.0,$86=.0,$87=.0,$88=.0,$89=.0,$90=0,$91=.0,$92=.0;
 var $93=.0,$94=.0,$95=.0,$96=.0,$97=.0,$98=0,$99=.0,$100=.0,$101=.0,$102=.0,$103=.0,$104=.0,$105=.0,$106=0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0;
 var $113=0,$114=0,$_=0,$115=.0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$122=.0,$124=0,$125=.0,$126=.0,$127=.0,$128=.0,$129=.0,$130=.0,$131=.0,$132=0;
 var $133=.0,$134=.0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=0,$141=.0,$142=.0,$143=.0,$144=.0,$145=.0,$146=.0,$147=.0,$148=0,$149=.0,$150=.0,$151=.0,$152=.0;
 var $153=.0,$154=.0,$155=.0,$156=.0,$157=.0,$158=.0,$159=.0,$160=.0,$161=.0,$162=.0,$hilbertIdx_1=0,$prev_detrender_Odd_1=.0,$prev_detrender_Even_1=.0,$prev_detrender_input_Odd_1=.0,$prev_detrender_input_Even_1=.0,$prev_Q1_Odd_1=.0,$prev_Q1_Even_1=.0,$prev_Q1_input_Odd_1=.0,$prev_Q1_input_Even_1=.0,$prev_jI_Odd_1=.0;
 var $prev_jI_Even_1=.0,$prev_jI_input_Odd_1=.0,$prev_jI_input_Even_1=.0,$prev_jQ_Odd_1=.0,$prev_jQ_Even_1=.0,$prev_jQ_input_Odd_1=.0,$prev_jQ_input_Even_1=.0,$Q2_0=.0,$I2_0=.0,$I1ForOddPrev2_1=.0,$I1ForOddPrev3_1=.0,$I1ForEvenPrev2_1=.0,$I1ForEvenPrev3_1=.0,$164=.0,$165=.0,$166=.0,$167=.0,$168=.0,$169=.0,$170=.0;
 var $171=.0,$172=.0,$173=.0,$174=0,$175=0,$or_cond=0,$177=.0,$178=.0,$179=.0,$180=.0,$period_1=.0,$182=.0,$183=0,$period_2=.0,$184=.0,$185=0,$period_3=.0,$186=0,$188=0,$period_4=.0;
 var $191=.0,$192=.0,$193=.0,$194=.0,$195=.0,$196=.0,$197=0,$198=0,$199=.0,$realPart_011=.0,$imagPart_010=.0,$idx_09=0,$i_28=0,$201=.0,$202=.0,$203=.0,$204=0,$205=.0,$206=.0,$207=.0;
 var $208=.0,$209=.0,$210=.0,$211=.0,$212=0,$213=0,$idx_1=0,$214=0,$215=0,$216=0,$218=.0,$219=.0,$220=.0,$imagPart_0_lcssa65=.0,$realPart_0_lcssa63=.0,$221=.0,$222=0,$224=0,$226=.0,$228=0;
 var $230=.0,$imagPart_0_lcssa64=.0,$DCPhase_1=.0,$232=.0,$233=.0,$234=.0,$235=0,$237=.0,$DCPhase_2=.0,$239=0,$241=.0,$DCPhase_3=.0,$243=0,$245=0,$246=0,$outIdx_1=0,$248=0,$249=0,$_2=0,$250=0;
 var $phitmp=.0,$phitmp4=.0,$phitmp5=.0,$251=0,$outIdx_0_lcssa=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+592)|0;
 $detrender_Odd=((sp)|0);
 $detrender_Even=(((sp)+(24))|0);
 $Q1_Odd=(((sp)+(48))|0);
 $Q1_Even=(((sp)+(72))|0);
 $jI_Odd=(((sp)+(96))|0);
 $jI_Even=(((sp)+(120))|0);
 $jQ_Odd=(((sp)+(144))|0);
 $jQ_Even=(((sp)+(168))|0);
 $local_smoothPrice=(((sp)+(192))|0);
 $local_smoothPrice57=$local_smoothPrice;
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond7=$6|$7;
 if ($or_cond7) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $9=((HEAP32[((272)>>2)])|0);
 $10=(($9+88)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=((($11)+(63))|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $17=((($_startIdx)-($12))|0);
 $18=((($17)+(1))|0);
 $19=(($inReal+($17<<3))|0);
 $20=(+(HEAPF64[(($19)>>3)]));
 $21=((($17)+(2))|0);
 $22=(($inReal+($18<<3))|0);
 $23=(+(HEAPF64[(($22)>>3)]));
 $24=($20)+($23);
 $25=($23)*((2.0));
 $26=($20)+($25);
 $27=((($17)+(3))|0);
 $28=(($inReal+($21<<3))|0);
 $29=(+(HEAPF64[(($28)>>3)]));
 $30=($24)+($29);
 $31=($29)*((3.0));
 $32=($26)+($31);
 $33=((($11)+(63))|0);
 $34=($33|0)<($startIdx|0);
 $smax=($34?$startIdx:$33);
 $35=((($smax)-(29))|0);
 $36=((($smax)-(26))|0);
 $37=((($smax)-(27))|0);
 $i_0=34;$today_0=$27;$trailingWMAIdx_0=$17;$trailingWMAValue_0=0.0;$periodWMASub_0=$30;$periodWMASum_0=$32;
 while(1) {






  $39=((($today_0)+(1))|0);
  $40=(($inReal+($today_0<<3))|0);
  $41=(+(HEAPF64[(($40)>>3)]));
  $42=($periodWMASub_0)+($41);
  $43=($42)-($trailingWMAValue_0);
  $44=($41)*((4.0));
  $45=($periodWMASum_0)+($44);
  $46=((($trailingWMAIdx_0)+(1))|0);
  $47=(($inReal+($trailingWMAIdx_0<<3))|0);
  $48=(+(HEAPF64[(($47)>>3)]));
  $49=($45)-($43);
  $50=((($i_0)-(1))|0);
  $51=($50|0)==0;
  if ($51) {
   break;
  } else {
   $i_0=$50;$today_0=$39;$trailingWMAIdx_0=$46;$trailingWMAValue_0=$48;$periodWMASub_0=$43;$periodWMASum_0=$49;
  }
 }
 $52=((($35)-($11))|0);
 $53=((($36)-($11))|0);
 $54=$detrender_Odd;
 _memset((((($54)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $55=$detrender_Even;
 _memset((((($55)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $56=$Q1_Odd;
 _memset((((($56)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $57=$Q1_Even;
 _memset((((($57)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $58=$jI_Odd;
 _memset((((($58)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $59=$jI_Even;
 _memset((((($59)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $60=$jQ_Odd;
 _memset((((($60)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $61=$jQ_Even;
 _memset((((($61)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 _memset((((($local_smoothPrice57)|0))|0), ((((0)|0))|0), ((((400)|0))|0))|0;
 $62=((($37)-($11))|0);
 $63=($62|0)<($endIdx|0);
 if ($63) {
  $periodWMASum_113=$49;$periodWMASub_114=$43;$trailingWMAValue_115=$48;$trailingWMAIdx_116=$52;$period_017=0.0;$hilbertIdx_018=0;$prev_detrender_Odd_019=0.0;$prev_detrender_Even_020=0.0;$prev_detrender_input_Odd_021=0.0;$prev_detrender_input_Even_022=0.0;$prev_Q1_Odd_023=0.0;$prev_Q1_Even_024=0.0;$prev_Q1_input_Odd_025=0.0;$prev_Q1_input_Even_026=0.0;$prev_jI_Odd_027=0.0;$prev_jI_Even_028=0.0;$prev_jI_input_Odd_029=0.0;$prev_jI_input_Even_030=0.0;$prev_jQ_Odd_031=0.0;$prev_jQ_Even_032=0.0;$prev_jQ_input_Odd_033=0.0;$prev_jQ_input_Even_034=0.0;$prevQ2_035=0.0;$prevI2_036=0.0;$Re_037=0.0;$Im_038=0.0;$I1ForOddPrev2_039=0.0;$I1ForOddPrev3_040=0.0;$I1ForEvenPrev2_041=0.0;$I1ForEvenPrev3_042=0.0;$today_143=$53;$smoothPeriod_044=0.0;$smoothPrice_Idx_045=0;$outIdx_046=0;$DCPhase_047=0.0;
  while(1) {



































   $64=($period_017)*((0.075));
   $65=($64)+((0.54));
   $66=(($inReal+($today_143<<3))|0);
   $67=(+(HEAPF64[(($66)>>3)]));
   $68=($periodWMASub_114)+($67);
   $69=($68)-($trailingWMAValue_115);
   $70=($67)*((4.0));
   $71=($periodWMASum_113)+($70);
   $72=((($trailingWMAIdx_116)+(1))|0);
   $73=(($inReal+($trailingWMAIdx_116<<3))|0);
   $74=(+(HEAPF64[(($73)>>3)]));
   $75=($71)*((0.1));
   $76=($71)-($69);
   $77=(($local_smoothPrice+($smoothPrice_Idx_045<<3))|0);
   HEAPF64[(($77)>>3)]=$75;
   $78=$today_143&1;
   $79=($78|0)==0;
   $80=($75)*((0.0962));
   if ($79) {
    $82=(($detrender_Even+($hilbertIdx_018<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    HEAPF64[(($82)>>3)]=$80;
    $84=($80)-($83);
    $85=($84)-($prev_detrender_Even_020);
    $86=($prev_detrender_input_Even_022)*((0.5769));
    $87=($86)+($85);
    $88=($65)*($87);
    $89=($88)*((0.0962));
    $90=(($Q1_Even+($hilbertIdx_018<<3))|0);
    $91=(+(HEAPF64[(($90)>>3)]));
    HEAPF64[(($90)>>3)]=$89;
    $92=($89)-($91);
    $93=($92)-($prev_Q1_Even_024);
    $94=($prev_Q1_input_Even_026)*((0.5769));
    $95=($94)+($93);
    $96=($65)*($95);
    $97=($I1ForEvenPrev3_042)*((0.0962));
    $98=(($jI_Even+($hilbertIdx_018<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    HEAPF64[(($98)>>3)]=$97;
    $100=($97)-($99);
    $101=($100)-($prev_jI_Even_028);
    $102=($prev_jI_input_Even_030)*((0.5769));
    $103=($102)+($101);
    $104=($65)*($103);
    $105=($96)*((0.0962));
    $106=(($jQ_Even+($hilbertIdx_018<<3))|0);
    $107=(+(HEAPF64[(($106)>>3)]));
    HEAPF64[(($106)>>3)]=$105;
    $108=($105)-($107);
    $109=($108)-($prev_jQ_Even_032);
    $110=($prev_jQ_input_Even_034)*((0.5769));
    $111=($110)+($109);
    $112=($65)*($111);
    $113=((($hilbertIdx_018)+(1))|0);
    $114=($113|0)==3;
    $_=($114?0:$113);
    $115=($104)+($96);
    $116=($115)*((0.2));
    $117=($prevQ2_035)*((0.8));
    $118=($117)+($116);
    $119=($I1ForEvenPrev3_042)-($112);
    $120=($119)*((0.2));
    $121=($prevI2_036)*((0.8));
    $122=($121)+($120);
    $I1ForEvenPrev3_1=$I1ForEvenPrev3_042;$I1ForEvenPrev2_1=$I1ForEvenPrev2_041;$I1ForOddPrev3_1=$I1ForOddPrev2_039;$I1ForOddPrev2_1=$88;$I2_0=$122;$Q2_0=$118;$prev_jQ_input_Even_1=$96;$prev_jQ_input_Odd_1=$prev_jQ_input_Odd_033;$prev_jQ_Even_1=$110;$prev_jQ_Odd_1=$prev_jQ_Odd_031;$prev_jI_input_Even_1=$I1ForEvenPrev3_042;$prev_jI_input_Odd_1=$prev_jI_input_Odd_029;$prev_jI_Even_1=$102;$prev_jI_Odd_1=$prev_jI_Odd_027;$prev_Q1_input_Even_1=$88;$prev_Q1_input_Odd_1=$prev_Q1_input_Odd_025;$prev_Q1_Even_1=$94;$prev_Q1_Odd_1=$prev_Q1_Odd_023;$prev_detrender_input_Even_1=$75;$prev_detrender_input_Odd_1=$prev_detrender_input_Odd_021;$prev_detrender_Even_1=$86;$prev_detrender_Odd_1=$prev_detrender_Odd_019;$hilbertIdx_1=$_;
   } else {
    $124=(($detrender_Odd+($hilbertIdx_018<<3))|0);
    $125=(+(HEAPF64[(($124)>>3)]));
    HEAPF64[(($124)>>3)]=$80;
    $126=($80)-($125);
    $127=($126)-($prev_detrender_Odd_019);
    $128=($prev_detrender_input_Odd_021)*((0.5769));
    $129=($128)+($127);
    $130=($65)*($129);
    $131=($130)*((0.0962));
    $132=(($Q1_Odd+($hilbertIdx_018<<3))|0);
    $133=(+(HEAPF64[(($132)>>3)]));
    HEAPF64[(($132)>>3)]=$131;
    $134=($131)-($133);
    $135=($134)-($prev_Q1_Odd_023);
    $136=($prev_Q1_input_Odd_025)*((0.5769));
    $137=($136)+($135);
    $138=($65)*($137);
    $139=($I1ForOddPrev3_040)*((0.0962));
    $140=(($jI_Odd+($hilbertIdx_018<<3))|0);
    $141=(+(HEAPF64[(($140)>>3)]));
    HEAPF64[(($140)>>3)]=$139;
    $142=($139)-($141);
    $143=($142)-($prev_jI_Odd_027);
    $144=($prev_jI_input_Odd_029)*((0.5769));
    $145=($144)+($143);
    $146=($65)*($145);
    $147=($138)*((0.0962));
    $148=(($jQ_Odd+($hilbertIdx_018<<3))|0);
    $149=(+(HEAPF64[(($148)>>3)]));
    HEAPF64[(($148)>>3)]=$147;
    $150=($147)-($149);
    $151=($150)-($prev_jQ_Odd_031);
    $152=($prev_jQ_input_Odd_033)*((0.5769));
    $153=($152)+($151);
    $154=($65)*($153);
    $155=($146)+($138);
    $156=($155)*((0.2));
    $157=($prevQ2_035)*((0.8));
    $158=($157)+($156);
    $159=($I1ForOddPrev3_040)-($154);
    $160=($159)*((0.2));
    $161=($prevI2_036)*((0.8));
    $162=($161)+($160);
    $I1ForEvenPrev3_1=$I1ForEvenPrev2_041;$I1ForEvenPrev2_1=$130;$I1ForOddPrev3_1=$I1ForOddPrev3_040;$I1ForOddPrev2_1=$I1ForOddPrev2_039;$I2_0=$162;$Q2_0=$158;$prev_jQ_input_Even_1=$prev_jQ_input_Even_034;$prev_jQ_input_Odd_1=$138;$prev_jQ_Even_1=$prev_jQ_Even_032;$prev_jQ_Odd_1=$152;$prev_jI_input_Even_1=$prev_jI_input_Even_030;$prev_jI_input_Odd_1=$I1ForOddPrev3_040;$prev_jI_Even_1=$prev_jI_Even_028;$prev_jI_Odd_1=$144;$prev_Q1_input_Even_1=$prev_Q1_input_Even_026;$prev_Q1_input_Odd_1=$130;$prev_Q1_Even_1=$prev_Q1_Even_024;$prev_Q1_Odd_1=$136;$prev_detrender_input_Even_1=$prev_detrender_input_Even_022;$prev_detrender_input_Odd_1=$75;$prev_detrender_Even_1=$prev_detrender_Even_020;$prev_detrender_Odd_1=$128;$hilbertIdx_1=$hilbertIdx_018;
   }























   $164=($prevI2_036)*($I2_0);
   $165=($prevQ2_035)*($Q2_0);
   $166=($165)+($164);
   $167=($166)*((0.2));
   $168=($Re_037)+($167);
   $169=($prevQ2_035)*($I2_0);
   $170=($prevI2_036)*($Q2_0);
   $171=($169)-($170);
   $172=($171)*((0.2));
   $173=($Im_038)+($172);
   $174=$173!=(0.0);
   $175=$168!=(0.0);
   $or_cond=$174&$175;
   if ($or_cond) {
    $177=($173)/($168);
    $178=(+(Math_atan($177)));
    $179=($178)*((57.29577951308232));
    $180=((360.0))/($179);
    $period_1=$180;
   } else {
    $period_1=$period_017;
   }

   $182=($period_017)*((1.5));
   $183=$period_1>$182;
   $period_2=($183?$182:$period_1);
   $184=($period_017)*((0.67));
   $185=$period_2<$184;
   $period_3=($185?$184:$period_2);
   $186=$period_3<(6.0);
   do {
    if ($186) {
     $period_4=6.0;
    } else {
     $188=$period_3>(50.0);
     if (!($188)) {
      $period_4=$period_3;
      break;
     }
     $period_4=50.0;
    }
   } while(0);

   $191=($period_4)*((0.2));
   $192=($period_017)*((0.8));
   $193=($192)+($191);
   $194=($193)*((0.33));
   $195=($smoothPeriod_044)+($194);
   $196=($195)+((0.5));
   $197=(~~($196));
   $198=($197|0)>0;
   do {
    if ($198) {
     $199=(+((($197|0))|0));
     $i_28=0;$idx_09=$smoothPrice_Idx_045;$imagPart_010=0.0;$realPart_011=0.0;
     while(1) {




      $201=(+((($i_28|0))|0));
      $202=($201)*((6.283185307179586));
      $203=($202)/($199);
      $204=(($local_smoothPrice+($idx_09<<3))|0);
      $205=(+(HEAPF64[(($204)>>3)]));
      $206=(+(Math_sin($203)));
      $207=($205)*($206);
      $208=($realPart_011)+($207);
      $209=(+(Math_cos($203)));
      $210=($205)*($209);
      $211=($imagPart_010)+($210);
      $212=($idx_09|0)==0;
      $213=((($idx_09)-(1))|0);
      $idx_1=($212?49:$213);
      $214=((($i_28)+(1))|0);
      $215=($214|0)<($197|0);
      if ($215) {
       $i_28=$214;$idx_09=$idx_1;$imagPart_010=$211;$realPart_011=$208;
      } else {
       break;
      }
     }
     $216=$211==(0.0);
     if ($216) {
      $realPart_0_lcssa63=$208;$imagPart_0_lcssa65=$211;
      label = 22;
      break;
     }
     $218=($208)/($211);
     $219=(+(Math_atan($218)));
     $220=($219)*((57.29577951308232));
     $DCPhase_1=$220;$imagPart_0_lcssa64=$211;
    } else {
     $realPart_0_lcssa63=0.0;$imagPart_0_lcssa65=0.0;
     label = 22;
    }
   } while(0);
   do {
    if ((label|0) == 22) {
     label = 0;


     $221=(+(Math_abs((+($imagPart_0_lcssa65)))));
     $222=$221>(0.01);
     if ($222) {
      $DCPhase_1=$DCPhase_047;$imagPart_0_lcssa64=$imagPart_0_lcssa65;
      break;
     }
     $224=$realPart_0_lcssa63<(0.0);
     if ($224) {
      $226=($DCPhase_047)+((-90.0));
      $DCPhase_1=$226;$imagPart_0_lcssa64=$imagPart_0_lcssa65;
      break;
     }
     $228=$realPart_0_lcssa63>(0.0);
     if (!($228)) {
      $DCPhase_1=$DCPhase_047;$imagPart_0_lcssa64=$imagPart_0_lcssa65;
      break;
     }
     $230=($DCPhase_047)+((90.0));
     $DCPhase_1=$230;$imagPart_0_lcssa64=$imagPart_0_lcssa65;
    }
   } while(0);


   $232=($DCPhase_1)+((90.0));
   $233=((360.0))/($195);
   $234=($232)+($233);
   $235=$imagPart_0_lcssa64<(0.0);
   if ($235) {
    $237=($234)+((180.0));
    $DCPhase_2=$237;
   } else {
    $DCPhase_2=$234;
   }

   $239=$DCPhase_2>(315.0);
   if ($239) {
    $241=($DCPhase_2)+((-360.0));
    $DCPhase_3=$241;
   } else {
    $DCPhase_3=$DCPhase_2;
   }

   $243=($today_143|0)<($_startIdx|0);
   if ($243) {
    $outIdx_1=$outIdx_046;
   } else {
    $245=((($outIdx_046)+(1))|0);
    $246=(($outReal+($outIdx_046<<3))|0);
    HEAPF64[(($246)>>3)]=$DCPhase_3;
    $outIdx_1=$245;
   }

   $248=((($smoothPrice_Idx_045)+(1))|0);
   $249=($smoothPrice_Idx_045|0)>48;
   $_2=($249?0:$248);
   $250=((($today_143)+(1))|0);
   $phitmp=($168)*((0.8));
   $phitmp4=($173)*((0.8));
   $phitmp5=($195)*((0.67));
   $251=($today_143|0)<($endIdx|0);
   if ($251) {
    $periodWMASum_113=$76;$periodWMASub_114=$69;$trailingWMAValue_115=$74;$trailingWMAIdx_116=$72;$period_017=$193;$hilbertIdx_018=$hilbertIdx_1;$prev_detrender_Odd_019=$prev_detrender_Odd_1;$prev_detrender_Even_020=$prev_detrender_Even_1;$prev_detrender_input_Odd_021=$prev_detrender_input_Odd_1;$prev_detrender_input_Even_022=$prev_detrender_input_Even_1;$prev_Q1_Odd_023=$prev_Q1_Odd_1;$prev_Q1_Even_024=$prev_Q1_Even_1;$prev_Q1_input_Odd_025=$prev_Q1_input_Odd_1;$prev_Q1_input_Even_026=$prev_Q1_input_Even_1;$prev_jI_Odd_027=$prev_jI_Odd_1;$prev_jI_Even_028=$prev_jI_Even_1;$prev_jI_input_Odd_029=$prev_jI_input_Odd_1;$prev_jI_input_Even_030=$prev_jI_input_Even_1;$prev_jQ_Odd_031=$prev_jQ_Odd_1;$prev_jQ_Even_032=$prev_jQ_Even_1;$prev_jQ_input_Odd_033=$prev_jQ_input_Odd_1;$prev_jQ_input_Even_034=$prev_jQ_input_Even_1;$prevQ2_035=$Q2_0;$prevI2_036=$I2_0;$Re_037=$phitmp;$Im_038=$phitmp4;$I1ForOddPrev2_039=$I1ForOddPrev2_1;$I1ForOddPrev3_040=$I1ForOddPrev3_1;$I1ForEvenPrev2_041=$I1ForEvenPrev2_1;$I1ForEvenPrev3_042=$I1ForEvenPrev3_1;$today_143=$250;$smoothPeriod_044=$phitmp5;$smoothPrice_Idx_045=$_2;$outIdx_046=$outIdx_1;$DCPhase_047=$DCPhase_3;
   } else {
    $outIdx_0_lcssa=$outIdx_1;
    break;
   }
  }
 } else {
  $outIdx_0_lcssa=0;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_HT_PHASOR($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outInPhase,$outQuadrature){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInPhase=($outInPhase)|0;
 $outQuadrature=($outQuadrature)|0;
 var $detrender_Odd=0,$detrender_Even=0,$Q1_Odd=0,$Q1_Even=0,$jI_Odd=0,$jI_Even=0,$jQ_Odd=0,$jQ_Even=0,$1=0,$3=0,$4=0,$or_cond4=0,$6=0,$7=0,$or_cond5=0,$8=0,$or_cond6=0,$10=0,$11=0,$12=0;
 var $13=0,$14=0,$_startIdx=0,$15=0,$18=0,$19=0,$20=0,$21=.0,$22=0,$23=0,$24=.0,$25=0,$26=.0,$27=0,$28=0,$smax=0,$29=0,$30=.0,$31=0,$32=.0;
 var $33=0,$34=0,$35=.0,$36=.0,$37=0,$38=0,$39=.0,$40=0,$41=0,$42=.0,$43=.0,$44=.0,$45=0,$46=0,$47=.0,$48=0,$49=0,$50=.0,$51=.0,$52=.0;
 var $53=0,$54=0,$55=.0,$56=0,$57=0,$58=.0,$59=.0,$60=.0,$61=0,$62=0,$63=.0,$64=0,$65=0,$66=.0,$67=.0,$68=.0,$69=0,$70=0,$71=.0,$72=0;
 var $73=0,$74=.0,$75=.0,$76=.0,$77=0,$78=0,$79=.0,$80=0,$81=0,$82=.0,$83=.0,$84=.0,$85=0,$86=0,$87=.0,$88=0,$89=0,$90=.0,$91=.0,$92=.0;
 var $93=0,$94=0,$95=.0,$96=0,$97=.0,$98=.0,$99=.0,$100=0,$101=.0,$102=0,$103=0,$104=0,$105=0,$106=0,$107=0,$108=0,$109=0,$110=0,$111=0,$112=.0;
 var $113=.0,$114=.0,$115=.0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$122=.0,$123=.0,$124=.0,$125=.0,$126=.0,$127=.0,$128=.0,$129=.0,$130=.0,$131=.0,$132=.0;
 var $133=.0,$134=.0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=0,$143=0,$144=0,$145=0,$146=.0,$I1ForEvenPrev3_038=.0,$I1ForEvenPrev2_037=.0,$I1ForOddPrev3_036=.0,$I1ForOddPrev2_035=.0,$Im_034=.0,$Re_033=.0;
 var $prevI2_032=.0,$prevQ2_031=.0,$prev_jQ_input_Even_030=.0,$prev_jQ_input_Odd_029=.0,$prev_jQ_Even_028=.0,$prev_jQ_Odd_027=.0,$prev_jI_input_Even_026=.0,$prev_jI_input_Odd_025=.0,$prev_jI_Even_024=.0,$prev_jI_Odd_023=.0,$prev_Q1_input_Even_022=.0,$prev_Q1_input_Odd_021=.0,$prev_Q1_Even_020=.0,$prev_Q1_Odd_019=.0,$prev_detrender_input_Even_018=.0,$prev_detrender_input_Odd_017=.0,$prev_detrender_Even_016=.0,$prev_detrender_Odd_015=.0,$hilbertIdx_014=0,$outIdx_013=0;
 var $trailingWMAValue_112=.0,$periodWMASub_111=.0,$periodWMASum_110=.0,$trailingWMAIdx_19=0,$period_08=.0,$today_17=0,$148=.0,$149=.0,$150=0,$151=.0,$152=.0,$153=.0,$154=.0,$155=.0,$156=0,$157=0,$158=.0,$159=.0,$160=.0,$161=0;
 var $162=0,$163=.0,$165=0,$166=.0,$167=.0,$168=.0,$169=.0,$170=.0,$171=.0,$172=.0,$173=0,$174=.0,$175=.0,$176=.0,$177=.0,$178=.0,$179=.0,$180=0,$182=0,$183=0;
 var $184=0,$outIdx_1=0,$186=.0,$187=0,$188=.0,$189=.0,$190=.0,$191=.0,$192=.0,$193=.0,$194=.0,$195=0,$196=.0,$197=.0,$198=.0,$199=.0,$200=.0,$201=.0,$202=0,$203=0;
 var $_=0,$204=.0,$205=.0,$206=.0,$207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$213=0,$214=.0,$215=.0,$216=.0,$217=.0,$218=.0,$219=.0,$220=.0,$221=0,$222=.0,$223=.0;
 var $224=.0,$225=.0,$226=.0,$227=.0,$228=0,$230=0,$231=0,$232=0,$outIdx_2=0,$234=.0,$235=0,$236=.0,$237=.0,$238=.0,$239=.0,$240=.0,$241=.0,$242=.0,$243=0,$244=.0;
 var $245=.0,$246=.0,$247=.0,$248=.0,$249=.0,$250=.0,$251=.0,$252=.0,$253=.0,$254=.0,$255=.0,$256=.0,$257=.0,$outIdx_3=0,$hilbertIdx_1=0,$prev_detrender_Odd_1=.0,$prev_detrender_Even_1=.0,$prev_detrender_input_Odd_1=.0,$prev_detrender_input_Even_1=.0,$prev_Q1_Odd_1=.0;
 var $prev_Q1_Even_1=.0,$prev_Q1_input_Odd_1=.0,$prev_Q1_input_Even_1=.0,$prev_jI_Odd_1=.0,$prev_jI_Even_1=.0,$prev_jI_input_Odd_1=.0,$prev_jI_input_Even_1=.0,$prev_jQ_Odd_1=.0,$prev_jQ_Even_1=.0,$prev_jQ_input_Odd_1=.0,$prev_jQ_input_Even_1=.0,$Q2_0=.0,$I2_0=.0,$I1ForOddPrev2_1=.0,$I1ForOddPrev3_1=.0,$I1ForEvenPrev2_1=.0,$I1ForEvenPrev3_1=.0,$259=.0,$260=.0,$261=.0;
 var $262=.0,$263=.0,$264=.0,$265=.0,$266=.0,$267=.0,$268=.0,$269=0,$270=0,$or_cond=0,$272=.0,$273=.0,$274=.0,$275=.0,$period_1=.0,$277=.0,$278=0,$period_2=.0,$279=.0,$280=0;
 var $period_3=.0,$281=0,$283=0,$period_4=.0,$286=.0,$287=.0,$288=.0,$289=0,$phitmp=.0,$phitmp3=.0,$290=0,$outIdx_0_lcssa=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+192)|0;
 $detrender_Odd=((sp)|0);
 $detrender_Even=(((sp)+(24))|0);
 $Q1_Odd=(((sp)+(48))|0);
 $Q1_Even=(((sp)+(72))|0);
 $jI_Odd=(((sp)+(96))|0);
 $jI_Even=(((sp)+(120))|0);
 $jQ_Odd=(((sp)+(144))|0);
 $jQ_Even=(((sp)+(168))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond4=$3|$4;
 if ($or_cond4) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outInPhase|0)==0;
 $or_cond5=$6|$7;
 $8=($outQuadrature|0)==0;
 $or_cond6=$or_cond5|$8;
 if ($or_cond6) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $10=((HEAP32[((272)>>2)])|0);
 $11=(($10+92)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=((($12)+(32))|0);
 $14=($13|0)>($startIdx|0);
 $_startIdx=($14?$13:$startIdx);
 $15=($_startIdx|0)>($endIdx|0);
 if ($15) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $18=((($_startIdx)-($13))|0);
 $19=((($18)+(1))|0);
 $20=(($inReal+($18<<3))|0);
 $21=(+(HEAPF64[(($20)>>3)]));
 $22=((($18)+(2))|0);
 $23=(($inReal+($19<<3))|0);
 $24=(+(HEAPF64[(($23)>>3)]));
 $25=(($inReal+($22<<3))|0);
 $26=(+(HEAPF64[(($25)>>3)]));
 $27=((($12)+(32))|0);
 $28=($27|0)<($startIdx|0);
 $smax=($28?$startIdx:$27);
 $29=((($18)+(3))|0);
 $30=($21)+($24);
 $31=((($smax)-(21))|0);
 $32=($30)+($26);
 $33=((($18)+(4))|0);
 $34=(($inReal+($29<<3))|0);
 $35=(+(HEAPF64[(($34)>>3)]));
 $36=($32)+($35);
 $37=((($18)+(1))|0);
 $38=(($inReal+($18<<3))|0);
 $39=(+(HEAPF64[(($38)>>3)]));
 $40=((($18)+(5))|0);
 $41=(($inReal+($33<<3))|0);
 $42=(+(HEAPF64[(($41)>>3)]));
 $43=($36)+($42);
 $44=($43)-($39);
 $45=((($18)+(2))|0);
 $46=(($inReal+($37<<3))|0);
 $47=(+(HEAPF64[(($46)>>3)]));
 $48=((($18)+(6))|0);
 $49=(($inReal+($40<<3))|0);
 $50=(+(HEAPF64[(($49)>>3)]));
 $51=($44)+($50);
 $52=($51)-($47);
 $53=((($18)+(3))|0);
 $54=(($inReal+($45<<3))|0);
 $55=(+(HEAPF64[(($54)>>3)]));
 $56=((($18)+(7))|0);
 $57=(($inReal+($48<<3))|0);
 $58=(+(HEAPF64[(($57)>>3)]));
 $59=($52)+($58);
 $60=($59)-($55);
 $61=((($18)+(4))|0);
 $62=(($inReal+($53<<3))|0);
 $63=(+(HEAPF64[(($62)>>3)]));
 $64=((($18)+(8))|0);
 $65=(($inReal+($56<<3))|0);
 $66=(+(HEAPF64[(($65)>>3)]));
 $67=($60)+($66);
 $68=($67)-($63);
 $69=((($18)+(5))|0);
 $70=(($inReal+($61<<3))|0);
 $71=(+(HEAPF64[(($70)>>3)]));
 $72=((($18)+(9))|0);
 $73=(($inReal+($64<<3))|0);
 $74=(+(HEAPF64[(($73)>>3)]));
 $75=($68)+($74);
 $76=($75)-($71);
 $77=((($18)+(6))|0);
 $78=(($inReal+($69<<3))|0);
 $79=(+(HEAPF64[(($78)>>3)]));
 $80=((($18)+(10))|0);
 $81=(($inReal+($72<<3))|0);
 $82=(+(HEAPF64[(($81)>>3)]));
 $83=($76)+($82);
 $84=($83)-($79);
 $85=((($18)+(7))|0);
 $86=(($inReal+($77<<3))|0);
 $87=(+(HEAPF64[(($86)>>3)]));
 $88=((($18)+(11))|0);
 $89=(($inReal+($80<<3))|0);
 $90=(+(HEAPF64[(($89)>>3)]));
 $91=($84)+($90);
 $92=($91)-($87);
 $93=((($18)+(8))|0);
 $94=(($inReal+($85<<3))|0);
 $95=(+(HEAPF64[(($94)>>3)]));
 $96=(($inReal+($88<<3))|0);
 $97=(+(HEAPF64[(($96)>>3)]));
 $98=($92)+($97);
 $99=($98)-($95);
 $100=(($inReal+($93<<3))|0);
 $101=(+(HEAPF64[(($100)>>3)]));
 $102=((($31)-($12))|0);
 $103=$detrender_Odd;
 _memset((((($103)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $104=$detrender_Even;
 _memset((((($104)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $105=$Q1_Odd;
 _memset((((($105)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $106=$Q1_Even;
 _memset((((($106)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $107=$jI_Odd;
 _memset((((($107)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $108=$jI_Even;
 _memset((((($108)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $109=$jQ_Odd;
 _memset((((($109)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $110=($102|0)<($endIdx|0);
 $111=$jQ_Even;
 _memset((((($111)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 if ($110) {
  $112=($24)*((2.0));
  $113=($21)+($112);
  $114=($26)*((3.0));
  $115=($35)*((4.0));
  $116=($113)+($114);
  $117=($116)+($115);
  $118=($42)*((4.0));
  $119=($117)-($36);
  $120=($119)+($118);
  $121=($50)*((4.0));
  $122=($120)-($44);
  $123=($122)+($121);
  $124=($58)*((4.0));
  $125=($123)-($52);
  $126=($125)+($124);
  $127=($66)*((4.0));
  $128=($126)-($60);
  $129=($128)+($127);
  $130=($74)*((4.0));
  $131=($129)-($68);
  $132=($131)+($130);
  $133=($82)*((4.0));
  $134=($132)-($76);
  $135=($134)+($133);
  $136=($90)*((4.0));
  $137=($135)-($84);
  $138=($137)+($136);
  $139=($97)*((4.0));
  $140=($138)-($92);
  $141=($140)+($139);
  $142=((($smax)-(23))|0);
  $143=((($smax)-(20))|0);
  $144=((($143)-($12))|0);
  $145=((($142)-($12))|0);
  $146=($141)-($99);
  $today_17=$144;$period_08=0.0;$trailingWMAIdx_19=$145;$periodWMASum_110=$146;$periodWMASub_111=$99;$trailingWMAValue_112=$101;$outIdx_013=0;$hilbertIdx_014=0;$prev_detrender_Odd_015=0.0;$prev_detrender_Even_016=0.0;$prev_detrender_input_Odd_017=0.0;$prev_detrender_input_Even_018=0.0;$prev_Q1_Odd_019=0.0;$prev_Q1_Even_020=0.0;$prev_Q1_input_Odd_021=0.0;$prev_Q1_input_Even_022=0.0;$prev_jI_Odd_023=0.0;$prev_jI_Even_024=0.0;$prev_jI_input_Odd_025=0.0;$prev_jI_input_Even_026=0.0;$prev_jQ_Odd_027=0.0;$prev_jQ_Even_028=0.0;$prev_jQ_input_Odd_029=0.0;$prev_jQ_input_Even_030=0.0;$prevQ2_031=0.0;$prevI2_032=0.0;$Re_033=0.0;$Im_034=0.0;$I1ForOddPrev2_035=0.0;$I1ForOddPrev3_036=0.0;$I1ForEvenPrev2_037=0.0;$I1ForEvenPrev3_038=0.0;
  while(1) {
































   $148=($period_08)*((0.075));
   $149=($148)+((0.54));
   $150=(($inReal+($today_17<<3))|0);
   $151=(+(HEAPF64[(($150)>>3)]));
   $152=($periodWMASub_111)+($151);
   $153=($152)-($trailingWMAValue_112);
   $154=($151)*((4.0));
   $155=($periodWMASum_110)+($154);
   $156=((($trailingWMAIdx_19)+(1))|0);
   $157=(($inReal+($trailingWMAIdx_19<<3))|0);
   $158=(+(HEAPF64[(($157)>>3)]));
   $159=($155)*((0.1));
   $160=($155)-($153);
   $161=$today_17&1;
   $162=($161|0)==0;
   $163=($159)*((0.0962));
   if ($162) {
    $165=(($detrender_Even+($hilbertIdx_014<<3))|0);
    $166=(+(HEAPF64[(($165)>>3)]));
    HEAPF64[(($165)>>3)]=$163;
    $167=($163)-($166);
    $168=($167)-($prev_detrender_Even_016);
    $169=($prev_detrender_input_Even_018)*((0.5769));
    $170=($169)+($168);
    $171=($149)*($170);
    $172=($171)*((0.0962));
    $173=(($Q1_Even+($hilbertIdx_014<<3))|0);
    $174=(+(HEAPF64[(($173)>>3)]));
    HEAPF64[(($173)>>3)]=$172;
    $175=($172)-($174);
    $176=($175)-($prev_Q1_Even_020);
    $177=($prev_Q1_input_Even_022)*((0.5769));
    $178=($177)+($176);
    $179=($149)*($178);
    $180=($today_17|0)<($_startIdx|0);
    if ($180) {
     $outIdx_1=$outIdx_013;
    } else {
     $182=(($outQuadrature+($outIdx_013<<3))|0);
     HEAPF64[(($182)>>3)]=$179;
     $183=((($outIdx_013)+(1))|0);
     $184=(($outInPhase+($outIdx_013<<3))|0);
     HEAPF64[(($184)>>3)]=$I1ForEvenPrev3_038;
     $outIdx_1=$183;
    }

    $186=($I1ForEvenPrev3_038)*((0.0962));
    $187=(($jI_Even+($hilbertIdx_014<<3))|0);
    $188=(+(HEAPF64[(($187)>>3)]));
    HEAPF64[(($187)>>3)]=$186;
    $189=($186)-($188);
    $190=($189)-($prev_jI_Even_024);
    $191=($prev_jI_input_Even_026)*((0.5769));
    $192=($191)+($190);
    $193=($149)*($192);
    $194=($179)*((0.0962));
    $195=(($jQ_Even+($hilbertIdx_014<<3))|0);
    $196=(+(HEAPF64[(($195)>>3)]));
    HEAPF64[(($195)>>3)]=$194;
    $197=($194)-($196);
    $198=($197)-($prev_jQ_Even_028);
    $199=($prev_jQ_input_Even_030)*((0.5769));
    $200=($199)+($198);
    $201=($149)*($200);
    $202=((($hilbertIdx_014)+(1))|0);
    $203=($202|0)==3;
    $_=($203?0:$202);
    $204=($179)+($193);
    $205=($204)*((0.2));
    $206=($prevQ2_031)*((0.8));
    $207=($206)+($205);
    $208=($I1ForEvenPrev3_038)-($201);
    $209=($208)*((0.2));
    $210=($prevI2_032)*((0.8));
    $211=($210)+($209);
    $I1ForEvenPrev3_1=$I1ForEvenPrev3_038;$I1ForEvenPrev2_1=$I1ForEvenPrev2_037;$I1ForOddPrev3_1=$I1ForOddPrev2_035;$I1ForOddPrev2_1=$171;$I2_0=$211;$Q2_0=$207;$prev_jQ_input_Even_1=$179;$prev_jQ_input_Odd_1=$prev_jQ_input_Odd_029;$prev_jQ_Even_1=$199;$prev_jQ_Odd_1=$prev_jQ_Odd_027;$prev_jI_input_Even_1=$I1ForEvenPrev3_038;$prev_jI_input_Odd_1=$prev_jI_input_Odd_025;$prev_jI_Even_1=$191;$prev_jI_Odd_1=$prev_jI_Odd_023;$prev_Q1_input_Even_1=$171;$prev_Q1_input_Odd_1=$prev_Q1_input_Odd_021;$prev_Q1_Even_1=$177;$prev_Q1_Odd_1=$prev_Q1_Odd_019;$prev_detrender_input_Even_1=$159;$prev_detrender_input_Odd_1=$prev_detrender_input_Odd_017;$prev_detrender_Even_1=$169;$prev_detrender_Odd_1=$prev_detrender_Odd_015;$hilbertIdx_1=$_;$outIdx_3=$outIdx_1;
   } else {
    $213=(($detrender_Odd+($hilbertIdx_014<<3))|0);
    $214=(+(HEAPF64[(($213)>>3)]));
    HEAPF64[(($213)>>3)]=$163;
    $215=($163)-($214);
    $216=($215)-($prev_detrender_Odd_015);
    $217=($prev_detrender_input_Odd_017)*((0.5769));
    $218=($217)+($216);
    $219=($149)*($218);
    $220=($219)*((0.0962));
    $221=(($Q1_Odd+($hilbertIdx_014<<3))|0);
    $222=(+(HEAPF64[(($221)>>3)]));
    HEAPF64[(($221)>>3)]=$220;
    $223=($220)-($222);
    $224=($223)-($prev_Q1_Odd_019);
    $225=($prev_Q1_input_Odd_021)*((0.5769));
    $226=($225)+($224);
    $227=($149)*($226);
    $228=($today_17|0)<($_startIdx|0);
    if ($228) {
     $outIdx_2=$outIdx_013;
    } else {
     $230=(($outQuadrature+($outIdx_013<<3))|0);
     HEAPF64[(($230)>>3)]=$227;
     $231=((($outIdx_013)+(1))|0);
     $232=(($outInPhase+($outIdx_013<<3))|0);
     HEAPF64[(($232)>>3)]=$I1ForOddPrev3_036;
     $outIdx_2=$231;
    }

    $234=($I1ForOddPrev3_036)*((0.0962));
    $235=(($jI_Odd+($hilbertIdx_014<<3))|0);
    $236=(+(HEAPF64[(($235)>>3)]));
    HEAPF64[(($235)>>3)]=$234;
    $237=($234)-($236);
    $238=($237)-($prev_jI_Odd_023);
    $239=($prev_jI_input_Odd_025)*((0.5769));
    $240=($239)+($238);
    $241=($149)*($240);
    $242=($227)*((0.0962));
    $243=(($jQ_Odd+($hilbertIdx_014<<3))|0);
    $244=(+(HEAPF64[(($243)>>3)]));
    HEAPF64[(($243)>>3)]=$242;
    $245=($242)-($244);
    $246=($245)-($prev_jQ_Odd_027);
    $247=($prev_jQ_input_Odd_029)*((0.5769));
    $248=($247)+($246);
    $249=($149)*($248);
    $250=($227)+($241);
    $251=($250)*((0.2));
    $252=($prevQ2_031)*((0.8));
    $253=($252)+($251);
    $254=($I1ForOddPrev3_036)-($249);
    $255=($254)*((0.2));
    $256=($prevI2_032)*((0.8));
    $257=($256)+($255);
    $I1ForEvenPrev3_1=$I1ForEvenPrev2_037;$I1ForEvenPrev2_1=$219;$I1ForOddPrev3_1=$I1ForOddPrev3_036;$I1ForOddPrev2_1=$I1ForOddPrev2_035;$I2_0=$257;$Q2_0=$253;$prev_jQ_input_Even_1=$prev_jQ_input_Even_030;$prev_jQ_input_Odd_1=$227;$prev_jQ_Even_1=$prev_jQ_Even_028;$prev_jQ_Odd_1=$247;$prev_jI_input_Even_1=$prev_jI_input_Even_026;$prev_jI_input_Odd_1=$I1ForOddPrev3_036;$prev_jI_Even_1=$prev_jI_Even_024;$prev_jI_Odd_1=$239;$prev_Q1_input_Even_1=$prev_Q1_input_Even_022;$prev_Q1_input_Odd_1=$219;$prev_Q1_Even_1=$prev_Q1_Even_020;$prev_Q1_Odd_1=$225;$prev_detrender_input_Even_1=$prev_detrender_input_Even_018;$prev_detrender_input_Odd_1=$159;$prev_detrender_Even_1=$prev_detrender_Even_016;$prev_detrender_Odd_1=$217;$hilbertIdx_1=$hilbertIdx_014;$outIdx_3=$outIdx_2;
   }
























   $259=($prevI2_032)*($I2_0);
   $260=($prevQ2_031)*($Q2_0);
   $261=($260)+($259);
   $262=($261)*((0.2));
   $263=($Re_033)+($262);
   $264=($prevQ2_031)*($I2_0);
   $265=($prevI2_032)*($Q2_0);
   $266=($264)-($265);
   $267=($266)*((0.2));
   $268=($Im_034)+($267);
   $269=$268!=(0.0);
   $270=$263!=(0.0);
   $or_cond=$269&$270;
   if ($or_cond) {
    $272=($268)/($263);
    $273=(+(Math_atan($272)));
    $274=($273)*((57.29577951308232));
    $275=((360.0))/($274);
    $period_1=$275;
   } else {
    $period_1=$period_08;
   }

   $277=($period_08)*((1.5));
   $278=$period_1>$277;
   $period_2=($278?$277:$period_1);
   $279=($period_08)*((0.67));
   $280=$period_2<$279;
   $period_3=($280?$279:$period_2);
   $281=$period_3<(6.0);
   do {
    if ($281) {
     $period_4=6.0;
    } else {
     $283=$period_3>(50.0);
     if (!($283)) {
      $period_4=$period_3;
      break;
     }
     $period_4=50.0;
    }
   } while(0);

   $286=($period_4)*((0.2));
   $287=($period_08)*((0.8));
   $288=($287)+($286);
   $289=((($today_17)+(1))|0);
   $phitmp=($263)*((0.8));
   $phitmp3=($268)*((0.8));
   $290=($today_17|0)<($endIdx|0);
   if ($290) {
    $today_17=$289;$period_08=$288;$trailingWMAIdx_19=$156;$periodWMASum_110=$160;$periodWMASub_111=$153;$trailingWMAValue_112=$158;$outIdx_013=$outIdx_3;$hilbertIdx_014=$hilbertIdx_1;$prev_detrender_Odd_015=$prev_detrender_Odd_1;$prev_detrender_Even_016=$prev_detrender_Even_1;$prev_detrender_input_Odd_017=$prev_detrender_input_Odd_1;$prev_detrender_input_Even_018=$prev_detrender_input_Even_1;$prev_Q1_Odd_019=$prev_Q1_Odd_1;$prev_Q1_Even_020=$prev_Q1_Even_1;$prev_Q1_input_Odd_021=$prev_Q1_input_Odd_1;$prev_Q1_input_Even_022=$prev_Q1_input_Even_1;$prev_jI_Odd_023=$prev_jI_Odd_1;$prev_jI_Even_024=$prev_jI_Even_1;$prev_jI_input_Odd_025=$prev_jI_input_Odd_1;$prev_jI_input_Even_026=$prev_jI_input_Even_1;$prev_jQ_Odd_027=$prev_jQ_Odd_1;$prev_jQ_Even_028=$prev_jQ_Even_1;$prev_jQ_input_Odd_029=$prev_jQ_input_Odd_1;$prev_jQ_input_Even_030=$prev_jQ_input_Even_1;$prevQ2_031=$Q2_0;$prevI2_032=$I2_0;$Re_033=$phitmp;$Im_034=$phitmp3;$I1ForOddPrev2_035=$I1ForOddPrev2_1;$I1ForOddPrev3_036=$I1ForOddPrev3_1;$I1ForEvenPrev2_037=$I1ForEvenPrev2_1;$I1ForEvenPrev3_038=$I1ForEvenPrev3_1;
   } else {
    $outIdx_0_lcssa=$outIdx_3;
    break;
   }
  }
 } else {
  $outIdx_0_lcssa=0;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_HT_SINE($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outSine,$outLeadSine){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outSine=($outSine)|0;
 $outLeadSine=($outLeadSine)|0;
 var $detrender_Odd=0,$detrender_Even=0,$Q1_Odd=0,$Q1_Even=0,$jI_Odd=0,$jI_Even=0,$jQ_Odd=0,$jQ_Even=0,$local_smoothPrice=0,$local_smoothPrice58=0,$1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond7=0,$8=0,$or_cond8=0,$10=0;
 var $11=0,$12=0,$13=0,$14=0,$_startIdx=0,$15=0,$18=0,$19=0,$20=0,$21=.0,$22=0,$23=0,$24=.0,$25=.0,$26=.0,$27=.0,$28=0,$29=0,$30=.0,$31=.0;
 var $32=.0,$33=.0,$34=0,$35=0,$smax=0,$36=0,$37=0,$38=0,$periodWMASub_0=.0,$trailingWMAValue_0=.0,$periodWMASum_0=.0,$trailingWMAIdx_0=0,$today_0=0,$i_0=0,$40=0,$41=0,$42=.0,$43=.0,$44=.0,$45=.0;
 var $46=.0,$47=0,$48=0,$49=.0,$50=.0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$DCPhase_048=.0;
 var $outIdx_047=0,$smoothPrice_Idx_046=0,$smoothPeriod_045=.0,$today_144=0,$period_043=.0,$I1ForEvenPrev3_042=.0,$I1ForEvenPrev2_041=.0,$I1ForOddPrev3_040=.0,$I1ForOddPrev2_039=.0,$Im_038=.0,$Re_037=.0,$prevI2_036=.0,$prevQ2_035=.0,$prev_jQ_input_Even_034=.0,$prev_jQ_input_Odd_033=.0,$prev_jQ_Even_032=.0,$prev_jQ_Odd_031=.0,$prev_jI_input_Even_030=.0,$prev_jI_input_Odd_029=.0,$prev_jI_Even_028=.0;
 var $prev_jI_Odd_027=.0,$prev_Q1_input_Even_026=.0,$prev_Q1_input_Odd_025=.0,$prev_Q1_Even_024=.0,$prev_Q1_Odd_023=.0,$prev_detrender_input_Even_022=.0,$prev_detrender_input_Odd_021=.0,$prev_detrender_Even_020=.0,$prev_detrender_Odd_019=.0,$hilbertIdx_018=0,$trailingWMAIdx_117=0,$periodWMASum_116=.0,$trailingWMAValue_115=.0,$periodWMASub_114=.0,$65=.0,$66=.0,$67=0,$68=.0,$69=.0,$70=.0;
 var $71=.0,$72=.0,$73=0,$74=0,$75=.0,$76=.0,$77=.0,$78=0,$79=0,$80=0,$81=.0,$83=0,$84=.0,$85=.0,$86=.0,$87=.0,$88=.0,$89=.0,$90=.0,$91=0;
 var $92=.0,$93=.0,$94=.0,$95=.0,$96=.0,$97=.0,$98=.0,$99=0,$100=.0,$101=.0,$102=.0,$103=.0,$104=.0,$105=.0,$106=.0,$107=0,$108=.0,$109=.0,$110=.0,$111=.0;
 var $112=.0,$113=.0,$114=0,$115=0,$_=0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$122=.0,$123=.0,$125=0,$126=.0,$127=.0,$128=.0,$129=.0,$130=.0,$131=.0;
 var $132=.0,$133=0,$134=.0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=0,$142=.0,$143=.0,$144=.0,$145=.0,$146=.0,$147=.0,$148=.0,$149=0,$150=.0,$151=.0;
 var $152=.0,$153=.0,$154=.0,$155=.0,$156=.0,$157=.0,$158=.0,$159=.0,$160=.0,$161=.0,$162=.0,$163=.0,$hilbertIdx_1=0,$prev_detrender_Odd_1=.0,$prev_detrender_Even_1=.0,$prev_detrender_input_Odd_1=.0,$prev_detrender_input_Even_1=.0,$prev_Q1_Odd_1=.0,$prev_Q1_Even_1=.0,$prev_Q1_input_Odd_1=.0;
 var $prev_Q1_input_Even_1=.0,$prev_jI_Odd_1=.0,$prev_jI_Even_1=.0,$prev_jI_input_Odd_1=.0,$prev_jI_input_Even_1=.0,$prev_jQ_Odd_1=.0,$prev_jQ_Even_1=.0,$prev_jQ_input_Odd_1=.0,$prev_jQ_input_Even_1=.0,$Q2_0=.0,$I2_0=.0,$I1ForOddPrev2_1=.0,$I1ForOddPrev3_1=.0,$I1ForEvenPrev2_1=.0,$I1ForEvenPrev3_1=.0,$165=.0,$166=.0,$167=.0,$168=.0,$169=.0;
 var $170=.0,$171=.0,$172=.0,$173=.0,$174=.0,$175=0,$176=0,$or_cond=0,$178=.0,$179=.0,$180=.0,$181=.0,$period_1=.0,$183=.0,$184=0,$period_2=.0,$185=.0,$186=0,$period_3=.0,$187=0;
 var $189=0,$period_4=.0,$192=.0,$193=.0,$194=.0,$195=.0,$196=.0,$197=.0,$198=0,$199=0,$200=.0,$realPart_012=.0,$imagPart_011=.0,$idx_010=0,$i_29=0,$202=.0,$203=.0,$204=.0,$205=0,$206=.0;
 var $207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=0,$214=0,$idx_1=0,$215=0,$216=0,$217=0,$219=.0,$220=.0,$221=.0,$imagPart_0_lcssa66=.0,$realPart_0_lcssa64=.0,$222=.0,$223=0,$225=0;
 var $227=.0,$229=0,$231=.0,$imagPart_0_lcssa65=.0,$DCPhase_1=.0,$233=.0,$234=.0,$235=.0,$236=0,$238=.0,$DCPhase_2=.0,$240=0,$242=.0,$DCPhase_3=.0,$244=0,$246=.0,$247=.0,$248=0,$249=.0,$250=.0;
 var $251=.0,$252=0,$253=0,$outIdx_1=0,$255=0,$256=0,$_2=0,$257=0,$phitmp=.0,$phitmp4=.0,$phitmp5=.0,$258=0,$outIdx_0_lcssa=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+592)|0;
 $detrender_Odd=((sp)|0);
 $detrender_Even=(((sp)+(24))|0);
 $Q1_Odd=(((sp)+(48))|0);
 $Q1_Even=(((sp)+(72))|0);
 $jI_Odd=(((sp)+(96))|0);
 $jI_Even=(((sp)+(120))|0);
 $jQ_Odd=(((sp)+(144))|0);
 $jQ_Even=(((sp)+(168))|0);
 $local_smoothPrice=(((sp)+(192))|0);
 $local_smoothPrice58=$local_smoothPrice;
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outSine|0)==0;
 $or_cond7=$6|$7;
 $8=($outLeadSine|0)==0;
 $or_cond8=$or_cond7|$8;
 if ($or_cond8) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $10=((HEAP32[((272)>>2)])|0);
 $11=(($10+96)|0);
 $12=((HEAP32[(($11)>>2)])|0);
 $13=((($12)+(63))|0);
 $14=($13|0)>($startIdx|0);
 $_startIdx=($14?$13:$startIdx);
 $15=($_startIdx|0)>($endIdx|0);
 if ($15) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $18=((($_startIdx)-($13))|0);
 $19=((($18)+(1))|0);
 $20=(($inReal+($18<<3))|0);
 $21=(+(HEAPF64[(($20)>>3)]));
 $22=((($18)+(2))|0);
 $23=(($inReal+($19<<3))|0);
 $24=(+(HEAPF64[(($23)>>3)]));
 $25=($21)+($24);
 $26=($24)*((2.0));
 $27=($21)+($26);
 $28=((($18)+(3))|0);
 $29=(($inReal+($22<<3))|0);
 $30=(+(HEAPF64[(($29)>>3)]));
 $31=($25)+($30);
 $32=($30)*((3.0));
 $33=($27)+($32);
 $34=((($12)+(63))|0);
 $35=($34|0)<($startIdx|0);
 $smax=($35?$startIdx:$34);
 $36=((($smax)-(29))|0);
 $37=((($smax)-(26))|0);
 $38=((($smax)-(27))|0);
 $i_0=34;$today_0=$28;$trailingWMAIdx_0=$18;$periodWMASum_0=$33;$trailingWMAValue_0=0.0;$periodWMASub_0=$31;
 while(1) {






  $40=((($today_0)+(1))|0);
  $41=(($inReal+($today_0<<3))|0);
  $42=(+(HEAPF64[(($41)>>3)]));
  $43=($periodWMASub_0)+($42);
  $44=($43)-($trailingWMAValue_0);
  $45=($42)*((4.0));
  $46=($periodWMASum_0)+($45);
  $47=((($trailingWMAIdx_0)+(1))|0);
  $48=(($inReal+($trailingWMAIdx_0<<3))|0);
  $49=(+(HEAPF64[(($48)>>3)]));
  $50=($46)-($44);
  $51=((($i_0)-(1))|0);
  $52=($51|0)==0;
  if ($52) {
   break;
  } else {
   $i_0=$51;$today_0=$40;$trailingWMAIdx_0=$47;$periodWMASum_0=$50;$trailingWMAValue_0=$49;$periodWMASub_0=$44;
  }
 }
 $53=((($36)-($12))|0);
 $54=((($37)-($12))|0);
 $55=$detrender_Odd;
 _memset((((($55)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $56=$detrender_Even;
 _memset((((($56)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $57=$Q1_Odd;
 _memset((((($57)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $58=$Q1_Even;
 _memset((((($58)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $59=$jI_Odd;
 _memset((((($59)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $60=$jI_Even;
 _memset((((($60)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $61=$jQ_Odd;
 _memset((((($61)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $62=$jQ_Even;
 _memset((((($62)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 _memset((((($local_smoothPrice58)|0))|0), ((((0)|0))|0), ((((400)|0))|0))|0;
 $63=((($38)-($12))|0);
 $64=($63|0)<($endIdx|0);
 if ($64) {
  $periodWMASub_114=$44;$trailingWMAValue_115=$49;$periodWMASum_116=$50;$trailingWMAIdx_117=$53;$hilbertIdx_018=0;$prev_detrender_Odd_019=0.0;$prev_detrender_Even_020=0.0;$prev_detrender_input_Odd_021=0.0;$prev_detrender_input_Even_022=0.0;$prev_Q1_Odd_023=0.0;$prev_Q1_Even_024=0.0;$prev_Q1_input_Odd_025=0.0;$prev_Q1_input_Even_026=0.0;$prev_jI_Odd_027=0.0;$prev_jI_Even_028=0.0;$prev_jI_input_Odd_029=0.0;$prev_jI_input_Even_030=0.0;$prev_jQ_Odd_031=0.0;$prev_jQ_Even_032=0.0;$prev_jQ_input_Odd_033=0.0;$prev_jQ_input_Even_034=0.0;$prevQ2_035=0.0;$prevI2_036=0.0;$Re_037=0.0;$Im_038=0.0;$I1ForOddPrev2_039=0.0;$I1ForOddPrev3_040=0.0;$I1ForEvenPrev2_041=0.0;$I1ForEvenPrev3_042=0.0;$period_043=0.0;$today_144=$54;$smoothPeriod_045=0.0;$smoothPrice_Idx_046=0;$outIdx_047=0;$DCPhase_048=0.0;
  while(1) {



































   $65=($period_043)*((0.075));
   $66=($65)+((0.54));
   $67=(($inReal+($today_144<<3))|0);
   $68=(+(HEAPF64[(($67)>>3)]));
   $69=($periodWMASub_114)+($68);
   $70=($69)-($trailingWMAValue_115);
   $71=($68)*((4.0));
   $72=($periodWMASum_116)+($71);
   $73=((($trailingWMAIdx_117)+(1))|0);
   $74=(($inReal+($trailingWMAIdx_117<<3))|0);
   $75=(+(HEAPF64[(($74)>>3)]));
   $76=($72)*((0.1));
   $77=($72)-($70);
   $78=(($local_smoothPrice+($smoothPrice_Idx_046<<3))|0);
   HEAPF64[(($78)>>3)]=$76;
   $79=$today_144&1;
   $80=($79|0)==0;
   $81=($76)*((0.0962));
   if ($80) {
    $83=(($detrender_Even+($hilbertIdx_018<<3))|0);
    $84=(+(HEAPF64[(($83)>>3)]));
    HEAPF64[(($83)>>3)]=$81;
    $85=($81)-($84);
    $86=($85)-($prev_detrender_Even_020);
    $87=($prev_detrender_input_Even_022)*((0.5769));
    $88=($87)+($86);
    $89=($66)*($88);
    $90=($89)*((0.0962));
    $91=(($Q1_Even+($hilbertIdx_018<<3))|0);
    $92=(+(HEAPF64[(($91)>>3)]));
    HEAPF64[(($91)>>3)]=$90;
    $93=($90)-($92);
    $94=($93)-($prev_Q1_Even_024);
    $95=($prev_Q1_input_Even_026)*((0.5769));
    $96=($95)+($94);
    $97=($66)*($96);
    $98=($I1ForEvenPrev3_042)*((0.0962));
    $99=(($jI_Even+($hilbertIdx_018<<3))|0);
    $100=(+(HEAPF64[(($99)>>3)]));
    HEAPF64[(($99)>>3)]=$98;
    $101=($98)-($100);
    $102=($101)-($prev_jI_Even_028);
    $103=($prev_jI_input_Even_030)*((0.5769));
    $104=($103)+($102);
    $105=($66)*($104);
    $106=($97)*((0.0962));
    $107=(($jQ_Even+($hilbertIdx_018<<3))|0);
    $108=(+(HEAPF64[(($107)>>3)]));
    HEAPF64[(($107)>>3)]=$106;
    $109=($106)-($108);
    $110=($109)-($prev_jQ_Even_032);
    $111=($prev_jQ_input_Even_034)*((0.5769));
    $112=($111)+($110);
    $113=($66)*($112);
    $114=((($hilbertIdx_018)+(1))|0);
    $115=($114|0)==3;
    $_=($115?0:$114);
    $116=($105)+($97);
    $117=($116)*((0.2));
    $118=($prevQ2_035)*((0.8));
    $119=($118)+($117);
    $120=($I1ForEvenPrev3_042)-($113);
    $121=($120)*((0.2));
    $122=($prevI2_036)*((0.8));
    $123=($122)+($121);
    $I1ForEvenPrev3_1=$I1ForEvenPrev3_042;$I1ForEvenPrev2_1=$I1ForEvenPrev2_041;$I1ForOddPrev3_1=$I1ForOddPrev2_039;$I1ForOddPrev2_1=$89;$I2_0=$123;$Q2_0=$119;$prev_jQ_input_Even_1=$97;$prev_jQ_input_Odd_1=$prev_jQ_input_Odd_033;$prev_jQ_Even_1=$111;$prev_jQ_Odd_1=$prev_jQ_Odd_031;$prev_jI_input_Even_1=$I1ForEvenPrev3_042;$prev_jI_input_Odd_1=$prev_jI_input_Odd_029;$prev_jI_Even_1=$103;$prev_jI_Odd_1=$prev_jI_Odd_027;$prev_Q1_input_Even_1=$89;$prev_Q1_input_Odd_1=$prev_Q1_input_Odd_025;$prev_Q1_Even_1=$95;$prev_Q1_Odd_1=$prev_Q1_Odd_023;$prev_detrender_input_Even_1=$76;$prev_detrender_input_Odd_1=$prev_detrender_input_Odd_021;$prev_detrender_Even_1=$87;$prev_detrender_Odd_1=$prev_detrender_Odd_019;$hilbertIdx_1=$_;
   } else {
    $125=(($detrender_Odd+($hilbertIdx_018<<3))|0);
    $126=(+(HEAPF64[(($125)>>3)]));
    HEAPF64[(($125)>>3)]=$81;
    $127=($81)-($126);
    $128=($127)-($prev_detrender_Odd_019);
    $129=($prev_detrender_input_Odd_021)*((0.5769));
    $130=($129)+($128);
    $131=($66)*($130);
    $132=($131)*((0.0962));
    $133=(($Q1_Odd+($hilbertIdx_018<<3))|0);
    $134=(+(HEAPF64[(($133)>>3)]));
    HEAPF64[(($133)>>3)]=$132;
    $135=($132)-($134);
    $136=($135)-($prev_Q1_Odd_023);
    $137=($prev_Q1_input_Odd_025)*((0.5769));
    $138=($137)+($136);
    $139=($66)*($138);
    $140=($I1ForOddPrev3_040)*((0.0962));
    $141=(($jI_Odd+($hilbertIdx_018<<3))|0);
    $142=(+(HEAPF64[(($141)>>3)]));
    HEAPF64[(($141)>>3)]=$140;
    $143=($140)-($142);
    $144=($143)-($prev_jI_Odd_027);
    $145=($prev_jI_input_Odd_029)*((0.5769));
    $146=($145)+($144);
    $147=($66)*($146);
    $148=($139)*((0.0962));
    $149=(($jQ_Odd+($hilbertIdx_018<<3))|0);
    $150=(+(HEAPF64[(($149)>>3)]));
    HEAPF64[(($149)>>3)]=$148;
    $151=($148)-($150);
    $152=($151)-($prev_jQ_Odd_031);
    $153=($prev_jQ_input_Odd_033)*((0.5769));
    $154=($153)+($152);
    $155=($66)*($154);
    $156=($147)+($139);
    $157=($156)*((0.2));
    $158=($prevQ2_035)*((0.8));
    $159=($158)+($157);
    $160=($I1ForOddPrev3_040)-($155);
    $161=($160)*((0.2));
    $162=($prevI2_036)*((0.8));
    $163=($162)+($161);
    $I1ForEvenPrev3_1=$I1ForEvenPrev2_041;$I1ForEvenPrev2_1=$131;$I1ForOddPrev3_1=$I1ForOddPrev3_040;$I1ForOddPrev2_1=$I1ForOddPrev2_039;$I2_0=$163;$Q2_0=$159;$prev_jQ_input_Even_1=$prev_jQ_input_Even_034;$prev_jQ_input_Odd_1=$139;$prev_jQ_Even_1=$prev_jQ_Even_032;$prev_jQ_Odd_1=$153;$prev_jI_input_Even_1=$prev_jI_input_Even_030;$prev_jI_input_Odd_1=$I1ForOddPrev3_040;$prev_jI_Even_1=$prev_jI_Even_028;$prev_jI_Odd_1=$145;$prev_Q1_input_Even_1=$prev_Q1_input_Even_026;$prev_Q1_input_Odd_1=$131;$prev_Q1_Even_1=$prev_Q1_Even_024;$prev_Q1_Odd_1=$137;$prev_detrender_input_Even_1=$prev_detrender_input_Even_022;$prev_detrender_input_Odd_1=$76;$prev_detrender_Even_1=$prev_detrender_Even_020;$prev_detrender_Odd_1=$129;$hilbertIdx_1=$hilbertIdx_018;
   }























   $165=($prevI2_036)*($I2_0);
   $166=($prevQ2_035)*($Q2_0);
   $167=($166)+($165);
   $168=($167)*((0.2));
   $169=($Re_037)+($168);
   $170=($prevQ2_035)*($I2_0);
   $171=($prevI2_036)*($Q2_0);
   $172=($170)-($171);
   $173=($172)*((0.2));
   $174=($Im_038)+($173);
   $175=$174!=(0.0);
   $176=$169!=(0.0);
   $or_cond=$175&$176;
   if ($or_cond) {
    $178=($174)/($169);
    $179=(+(Math_atan($178)));
    $180=($179)*((57.29577951308232));
    $181=((360.0))/($180);
    $period_1=$181;
   } else {
    $period_1=$period_043;
   }

   $183=($period_043)*((1.5));
   $184=$period_1>$183;
   $period_2=($184?$183:$period_1);
   $185=($period_043)*((0.67));
   $186=$period_2<$185;
   $period_3=($186?$185:$period_2);
   $187=$period_3<(6.0);
   do {
    if ($187) {
     $period_4=6.0;
    } else {
     $189=$period_3>(50.0);
     if (!($189)) {
      $period_4=$period_3;
      break;
     }
     $period_4=50.0;
    }
   } while(0);

   $192=($period_4)*((0.2));
   $193=($period_043)*((0.8));
   $194=($193)+($192);
   $195=($194)*((0.33));
   $196=($smoothPeriod_045)+($195);
   $197=($196)+((0.5));
   $198=(~~($197));
   $199=($198|0)>0;
   do {
    if ($199) {
     $200=(+((($198|0))|0));
     $i_29=0;$idx_010=$smoothPrice_Idx_046;$imagPart_011=0.0;$realPart_012=0.0;
     while(1) {




      $202=(+((($i_29|0))|0));
      $203=($202)*((6.283185307179586));
      $204=($203)/($200);
      $205=(($local_smoothPrice+($idx_010<<3))|0);
      $206=(+(HEAPF64[(($205)>>3)]));
      $207=(+(Math_sin($204)));
      $208=($206)*($207);
      $209=($realPart_012)+($208);
      $210=(+(Math_cos($204)));
      $211=($206)*($210);
      $212=($imagPart_011)+($211);
      $213=($idx_010|0)==0;
      $214=((($idx_010)-(1))|0);
      $idx_1=($213?49:$214);
      $215=((($i_29)+(1))|0);
      $216=($215|0)<($198|0);
      if ($216) {
       $i_29=$215;$idx_010=$idx_1;$imagPart_011=$212;$realPart_012=$209;
      } else {
       break;
      }
     }
     $217=$212==(0.0);
     if ($217) {
      $realPart_0_lcssa64=$209;$imagPart_0_lcssa66=$212;
      label = 22;
      break;
     }
     $219=($209)/($212);
     $220=(+(Math_atan($219)));
     $221=($220)*((57.29577951308232));
     $DCPhase_1=$221;$imagPart_0_lcssa65=$212;
    } else {
     $realPart_0_lcssa64=0.0;$imagPart_0_lcssa66=0.0;
     label = 22;
    }
   } while(0);
   do {
    if ((label|0) == 22) {
     label = 0;


     $222=(+(Math_abs((+($imagPart_0_lcssa66)))));
     $223=$222>(0.01);
     if ($223) {
      $DCPhase_1=$DCPhase_048;$imagPart_0_lcssa65=$imagPart_0_lcssa66;
      break;
     }
     $225=$realPart_0_lcssa64<(0.0);
     if ($225) {
      $227=($DCPhase_048)+((-90.0));
      $DCPhase_1=$227;$imagPart_0_lcssa65=$imagPart_0_lcssa66;
      break;
     }
     $229=$realPart_0_lcssa64>(0.0);
     if (!($229)) {
      $DCPhase_1=$DCPhase_048;$imagPart_0_lcssa65=$imagPart_0_lcssa66;
      break;
     }
     $231=($DCPhase_048)+((90.0));
     $DCPhase_1=$231;$imagPart_0_lcssa65=$imagPart_0_lcssa66;
    }
   } while(0);


   $233=($DCPhase_1)+((90.0));
   $234=((360.0))/($196);
   $235=($233)+($234);
   $236=$imagPart_0_lcssa65<(0.0);
   if ($236) {
    $238=($235)+((180.0));
    $DCPhase_2=$238;
   } else {
    $DCPhase_2=$235;
   }

   $240=$DCPhase_2>(315.0);
   if ($240) {
    $242=($DCPhase_2)+((-360.0));
    $DCPhase_3=$242;
   } else {
    $DCPhase_3=$DCPhase_2;
   }

   $244=($today_144|0)<($_startIdx|0);
   if ($244) {
    $outIdx_1=$outIdx_047;
   } else {
    $246=($DCPhase_3)*((0.017453292519943295));
    $247=(+(Math_sin($246)));
    $248=(($outSine+($outIdx_047<<3))|0);
    HEAPF64[(($248)>>3)]=$247;
    $249=($DCPhase_3)+((45.0));
    $250=($249)*((0.017453292519943295));
    $251=(+(Math_sin($250)));
    $252=((($outIdx_047)+(1))|0);
    $253=(($outLeadSine+($outIdx_047<<3))|0);
    HEAPF64[(($253)>>3)]=$251;
    $outIdx_1=$252;
   }

   $255=((($smoothPrice_Idx_046)+(1))|0);
   $256=($smoothPrice_Idx_046|0)>48;
   $_2=($256?0:$255);
   $257=((($today_144)+(1))|0);
   $phitmp=($169)*((0.8));
   $phitmp4=($174)*((0.8));
   $phitmp5=($196)*((0.67));
   $258=($today_144|0)<($endIdx|0);
   if ($258) {
    $periodWMASub_114=$70;$trailingWMAValue_115=$75;$periodWMASum_116=$77;$trailingWMAIdx_117=$73;$hilbertIdx_018=$hilbertIdx_1;$prev_detrender_Odd_019=$prev_detrender_Odd_1;$prev_detrender_Even_020=$prev_detrender_Even_1;$prev_detrender_input_Odd_021=$prev_detrender_input_Odd_1;$prev_detrender_input_Even_022=$prev_detrender_input_Even_1;$prev_Q1_Odd_023=$prev_Q1_Odd_1;$prev_Q1_Even_024=$prev_Q1_Even_1;$prev_Q1_input_Odd_025=$prev_Q1_input_Odd_1;$prev_Q1_input_Even_026=$prev_Q1_input_Even_1;$prev_jI_Odd_027=$prev_jI_Odd_1;$prev_jI_Even_028=$prev_jI_Even_1;$prev_jI_input_Odd_029=$prev_jI_input_Odd_1;$prev_jI_input_Even_030=$prev_jI_input_Even_1;$prev_jQ_Odd_031=$prev_jQ_Odd_1;$prev_jQ_Even_032=$prev_jQ_Even_1;$prev_jQ_input_Odd_033=$prev_jQ_input_Odd_1;$prev_jQ_input_Even_034=$prev_jQ_input_Even_1;$prevQ2_035=$Q2_0;$prevI2_036=$I2_0;$Re_037=$phitmp;$Im_038=$phitmp4;$I1ForOddPrev2_039=$I1ForOddPrev2_1;$I1ForOddPrev3_040=$I1ForOddPrev3_1;$I1ForEvenPrev2_041=$I1ForEvenPrev2_1;$I1ForEvenPrev3_042=$I1ForEvenPrev3_1;$period_043=$194;$today_144=$257;$smoothPeriod_045=$phitmp5;$smoothPrice_Idx_046=$_2;$outIdx_047=$outIdx_1;$DCPhase_048=$DCPhase_3;
   } else {
    $outIdx_0_lcssa=$outIdx_1;
    break;
   }
  }
 } else {
  $outIdx_0_lcssa=0;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_HT_TRENDLINE($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $detrender_Odd=0,$detrender_Even=0,$Q1_Odd=0,$Q1_Even=0,$jI_Odd=0,$jI_Even=0,$jQ_Odd=0,$jQ_Even=0,$1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond7=0,$9=0,$10=0,$11=0,$12=0,$13=0;
 var $_startIdx=0,$14=0,$17=0,$18=0,$19=0,$20=.0,$21=0,$22=0,$23=.0,$24=.0,$25=.0,$26=.0,$27=0,$28=0,$29=.0,$30=.0,$31=.0,$32=.0,$33=0,$34=0;
 var $smax=0,$35=0,$36=0,$37=0,$trailingWMAIdx_0=0,$periodWMASum_0=.0,$periodWMASub_0=.0,$trailingWMAValue_0=.0,$today_0=0,$i_0=0,$39=0,$40=0,$41=.0,$42=.0,$43=.0,$44=.0,$45=.0,$46=0,$47=0,$48=.0;
 var $49=.0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$outIdx_047=0,$smoothPeriod_045=.0,$today_144=0,$I1ForEvenPrev3_043=.0,$I1ForEvenPrev2_042=.0;
 var $I1ForOddPrev3_041=.0,$I1ForOddPrev2_040=.0,$Im_039=.0,$Re_038=.0,$prevI2_037=.0,$prevQ2_036=.0,$prev_jQ_input_Even_035=.0,$prev_jQ_input_Odd_034=.0,$prev_jQ_Even_033=.0,$prev_jQ_Odd_032=.0,$prev_jI_input_Even_031=.0,$prev_jI_input_Odd_030=.0,$prev_jI_Even_029=.0,$prev_jI_Odd_028=.0,$prev_Q1_input_Even_027=.0,$prev_Q1_input_Odd_026=.0,$prev_Q1_Even_025=.0,$prev_Q1_Odd_024=.0,$prev_detrender_input_Even_023=.0,$prev_detrender_input_Odd_022=.0;
 var $prev_detrender_Even_021=.0,$prev_detrender_Odd_020=.0,$hilbertIdx_019=0,$period_018=.0,$iTrend3_017=.0,$iTrend2_016=.0,$iTrend1_015=.0,$trailingWMAValue_114=.0,$periodWMASub_113=.0,$periodWMASum_112=.0,$trailingWMAIdx_111=0,$64=.0,$65=.0,$66=0,$67=.0,$68=.0,$69=.0,$70=.0,$71=.0,$72=0;
 var $73=0,$74=.0,$75=.0,$76=.0,$77=0,$78=0,$79=.0,$81=0,$82=.0,$83=.0,$84=.0,$85=.0,$86=.0,$87=.0,$88=.0,$89=0,$90=.0,$91=.0,$92=.0,$93=.0;
 var $94=.0,$95=.0,$96=.0,$97=0,$98=.0,$99=.0,$100=.0,$101=.0,$102=.0,$103=.0,$104=.0,$105=0,$106=.0,$107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=0,$113=0;
 var $_=0,$114=.0,$115=.0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$123=0,$124=.0,$125=.0,$126=.0,$127=.0,$128=.0,$129=.0,$130=.0,$131=0,$132=.0,$133=.0;
 var $134=.0,$135=.0,$136=.0,$137=.0,$138=.0,$139=0,$140=.0,$141=.0,$142=.0,$143=.0,$144=.0,$145=.0,$146=.0,$147=0,$148=.0,$149=.0,$150=.0,$151=.0,$152=.0,$153=.0;
 var $154=.0,$155=.0,$156=.0,$157=.0,$158=.0,$159=.0,$160=.0,$161=.0,$hilbertIdx_1=0,$prev_detrender_Odd_1=.0,$prev_detrender_Even_1=.0,$prev_detrender_input_Odd_1=.0,$prev_detrender_input_Even_1=.0,$prev_Q1_Odd_1=.0,$prev_Q1_Even_1=.0,$prev_Q1_input_Odd_1=.0,$prev_Q1_input_Even_1=.0,$prev_jI_Odd_1=.0,$prev_jI_Even_1=.0,$prev_jI_input_Odd_1=.0;
 var $prev_jI_input_Even_1=.0,$prev_jQ_Odd_1=.0,$prev_jQ_Even_1=.0,$prev_jQ_input_Odd_1=.0,$prev_jQ_input_Even_1=.0,$Q2_0=.0,$I2_0=.0,$I1ForOddPrev2_1=.0,$I1ForOddPrev3_1=.0,$I1ForEvenPrev2_1=.0,$I1ForEvenPrev3_1=.0,$163=.0,$164=.0,$165=.0,$166=.0,$167=.0,$168=.0,$169=.0,$170=.0,$171=.0;
 var $172=.0,$173=0,$174=0,$or_cond=0,$176=.0,$177=.0,$178=.0,$179=.0,$period_1=.0,$181=.0,$182=0,$period_2=.0,$183=.0,$184=0,$period_3=.0,$185=0,$187=0,$period_4=.0,$190=.0,$191=.0;
 var $192=.0,$193=.0,$194=.0,$195=.0,$196=0,$197=0,$idx_010=0,$i_29=0,$tempReal_08=.0,$198=0,$199=0,$200=.0,$201=.0,$202=0,$203=0,$204=0,$206=.0,$207=.0,$tempReal_1=.0,$208=0;
 var $210=.0,$211=.0,$212=.0,$213=.0,$214=.0,$215=.0,$216=.0,$217=0,$218=0,$outIdx_1=0,$220=0,$phitmp=.0,$phitmp4=.0,$phitmp5=.0,$221=0,$outIdx_0_lcssa=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+192)|0;
 $detrender_Odd=((sp)|0);
 $detrender_Even=(((sp)+(24))|0);
 $Q1_Odd=(((sp)+(48))|0);
 $Q1_Even=(((sp)+(72))|0);
 $jI_Odd=(((sp)+(96))|0);
 $jI_Even=(((sp)+(120))|0);
 $jQ_Odd=(((sp)+(144))|0);
 $jQ_Even=(((sp)+(168))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond7=$6|$7;
 if ($or_cond7) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $9=((HEAP32[((272)>>2)])|0);
 $10=(($9+100)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=((($11)+(63))|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $17=((($_startIdx)-($12))|0);
 $18=((($17)+(1))|0);
 $19=(($inReal+($17<<3))|0);
 $20=(+(HEAPF64[(($19)>>3)]));
 $21=((($17)+(2))|0);
 $22=(($inReal+($18<<3))|0);
 $23=(+(HEAPF64[(($22)>>3)]));
 $24=($20)+($23);
 $25=($23)*((2.0));
 $26=($20)+($25);
 $27=((($17)+(3))|0);
 $28=(($inReal+($21<<3))|0);
 $29=(+(HEAPF64[(($28)>>3)]));
 $30=($24)+($29);
 $31=($29)*((3.0));
 $32=($26)+($31);
 $33=((($11)+(63))|0);
 $34=($33|0)<($startIdx|0);
 $smax=($34?$startIdx:$33);
 $35=((($smax)-(29))|0);
 $36=((($smax)-(26))|0);
 $37=((($smax)-(27))|0);
 $i_0=34;$today_0=$27;$trailingWMAValue_0=0.0;$periodWMASub_0=$30;$periodWMASum_0=$32;$trailingWMAIdx_0=$17;
 while(1) {






  $39=((($today_0)+(1))|0);
  $40=(($inReal+($today_0<<3))|0);
  $41=(+(HEAPF64[(($40)>>3)]));
  $42=($periodWMASub_0)+($41);
  $43=($42)-($trailingWMAValue_0);
  $44=($41)*((4.0));
  $45=($periodWMASum_0)+($44);
  $46=((($trailingWMAIdx_0)+(1))|0);
  $47=(($inReal+($trailingWMAIdx_0<<3))|0);
  $48=(+(HEAPF64[(($47)>>3)]));
  $49=($45)-($43);
  $50=((($i_0)-(1))|0);
  $51=($50|0)==0;
  if ($51) {
   break;
  } else {
   $i_0=$50;$today_0=$39;$trailingWMAValue_0=$48;$periodWMASub_0=$43;$periodWMASum_0=$49;$trailingWMAIdx_0=$46;
  }
 }
 $52=((($35)-($11))|0);
 $53=((($36)-($11))|0);
 $54=$detrender_Odd;
 _memset((((($54)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $55=$detrender_Even;
 _memset((((($55)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $56=$Q1_Odd;
 _memset((((($56)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $57=$Q1_Even;
 _memset((((($57)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $58=$jI_Odd;
 _memset((((($58)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $59=$jI_Even;
 _memset((((($59)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $60=$jQ_Odd;
 _memset((((($60)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $61=$jQ_Even;
 _memset((((($61)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $62=((($37)-($11))|0);
 $63=($62|0)<($endIdx|0);
 if ($63) {
  $trailingWMAIdx_111=$52;$periodWMASum_112=$49;$periodWMASub_113=$43;$trailingWMAValue_114=$48;$iTrend1_015=0.0;$iTrend2_016=0.0;$iTrend3_017=0.0;$period_018=0.0;$hilbertIdx_019=0;$prev_detrender_Odd_020=0.0;$prev_detrender_Even_021=0.0;$prev_detrender_input_Odd_022=0.0;$prev_detrender_input_Even_023=0.0;$prev_Q1_Odd_024=0.0;$prev_Q1_Even_025=0.0;$prev_Q1_input_Odd_026=0.0;$prev_Q1_input_Even_027=0.0;$prev_jI_Odd_028=0.0;$prev_jI_Even_029=0.0;$prev_jI_input_Odd_030=0.0;$prev_jI_input_Even_031=0.0;$prev_jQ_Odd_032=0.0;$prev_jQ_Even_033=0.0;$prev_jQ_input_Odd_034=0.0;$prev_jQ_input_Even_035=0.0;$prevQ2_036=0.0;$prevI2_037=0.0;$Re_038=0.0;$Im_039=0.0;$I1ForOddPrev2_040=0.0;$I1ForOddPrev3_041=0.0;$I1ForEvenPrev2_042=0.0;$I1ForEvenPrev3_043=0.0;$today_144=$53;$smoothPeriod_045=0.0;$outIdx_047=0;
  while(1) {




































   $64=($period_018)*((0.075));
   $65=($64)+((0.54));
   $66=(($inReal+($today_144<<3))|0);
   $67=(+(HEAPF64[(($66)>>3)]));
   $68=($periodWMASub_113)+($67);
   $69=($68)-($trailingWMAValue_114);
   $70=($67)*((4.0));
   $71=($periodWMASum_112)+($70);
   $72=((($trailingWMAIdx_111)+(1))|0);
   $73=(($inReal+($trailingWMAIdx_111<<3))|0);
   $74=(+(HEAPF64[(($73)>>3)]));
   $75=($71)*((0.1));
   $76=($71)-($69);
   $77=$today_144&1;
   $78=($77|0)==0;
   $79=($75)*((0.0962));
   if ($78) {
    $81=(($detrender_Even+($hilbertIdx_019<<3))|0);
    $82=(+(HEAPF64[(($81)>>3)]));
    HEAPF64[(($81)>>3)]=$79;
    $83=($79)-($82);
    $84=($83)-($prev_detrender_Even_021);
    $85=($prev_detrender_input_Even_023)*((0.5769));
    $86=($85)+($84);
    $87=($65)*($86);
    $88=($87)*((0.0962));
    $89=(($Q1_Even+($hilbertIdx_019<<3))|0);
    $90=(+(HEAPF64[(($89)>>3)]));
    HEAPF64[(($89)>>3)]=$88;
    $91=($88)-($90);
    $92=($91)-($prev_Q1_Even_025);
    $93=($prev_Q1_input_Even_027)*((0.5769));
    $94=($93)+($92);
    $95=($65)*($94);
    $96=($I1ForEvenPrev3_043)*((0.0962));
    $97=(($jI_Even+($hilbertIdx_019<<3))|0);
    $98=(+(HEAPF64[(($97)>>3)]));
    HEAPF64[(($97)>>3)]=$96;
    $99=($96)-($98);
    $100=($99)-($prev_jI_Even_029);
    $101=($prev_jI_input_Even_031)*((0.5769));
    $102=($101)+($100);
    $103=($65)*($102);
    $104=($95)*((0.0962));
    $105=(($jQ_Even+($hilbertIdx_019<<3))|0);
    $106=(+(HEAPF64[(($105)>>3)]));
    HEAPF64[(($105)>>3)]=$104;
    $107=($104)-($106);
    $108=($107)-($prev_jQ_Even_033);
    $109=($prev_jQ_input_Even_035)*((0.5769));
    $110=($109)+($108);
    $111=($65)*($110);
    $112=((($hilbertIdx_019)+(1))|0);
    $113=($112|0)==3;
    $_=($113?0:$112);
    $114=($103)+($95);
    $115=($114)*((0.2));
    $116=($prevQ2_036)*((0.8));
    $117=($116)+($115);
    $118=($I1ForEvenPrev3_043)-($111);
    $119=($118)*((0.2));
    $120=($prevI2_037)*((0.8));
    $121=($120)+($119);
    $I1ForEvenPrev3_1=$I1ForEvenPrev3_043;$I1ForEvenPrev2_1=$I1ForEvenPrev2_042;$I1ForOddPrev3_1=$I1ForOddPrev2_040;$I1ForOddPrev2_1=$87;$I2_0=$121;$Q2_0=$117;$prev_jQ_input_Even_1=$95;$prev_jQ_input_Odd_1=$prev_jQ_input_Odd_034;$prev_jQ_Even_1=$109;$prev_jQ_Odd_1=$prev_jQ_Odd_032;$prev_jI_input_Even_1=$I1ForEvenPrev3_043;$prev_jI_input_Odd_1=$prev_jI_input_Odd_030;$prev_jI_Even_1=$101;$prev_jI_Odd_1=$prev_jI_Odd_028;$prev_Q1_input_Even_1=$87;$prev_Q1_input_Odd_1=$prev_Q1_input_Odd_026;$prev_Q1_Even_1=$93;$prev_Q1_Odd_1=$prev_Q1_Odd_024;$prev_detrender_input_Even_1=$75;$prev_detrender_input_Odd_1=$prev_detrender_input_Odd_022;$prev_detrender_Even_1=$85;$prev_detrender_Odd_1=$prev_detrender_Odd_020;$hilbertIdx_1=$_;
   } else {
    $123=(($detrender_Odd+($hilbertIdx_019<<3))|0);
    $124=(+(HEAPF64[(($123)>>3)]));
    HEAPF64[(($123)>>3)]=$79;
    $125=($79)-($124);
    $126=($125)-($prev_detrender_Odd_020);
    $127=($prev_detrender_input_Odd_022)*((0.5769));
    $128=($127)+($126);
    $129=($65)*($128);
    $130=($129)*((0.0962));
    $131=(($Q1_Odd+($hilbertIdx_019<<3))|0);
    $132=(+(HEAPF64[(($131)>>3)]));
    HEAPF64[(($131)>>3)]=$130;
    $133=($130)-($132);
    $134=($133)-($prev_Q1_Odd_024);
    $135=($prev_Q1_input_Odd_026)*((0.5769));
    $136=($135)+($134);
    $137=($65)*($136);
    $138=($I1ForOddPrev3_041)*((0.0962));
    $139=(($jI_Odd+($hilbertIdx_019<<3))|0);
    $140=(+(HEAPF64[(($139)>>3)]));
    HEAPF64[(($139)>>3)]=$138;
    $141=($138)-($140);
    $142=($141)-($prev_jI_Odd_028);
    $143=($prev_jI_input_Odd_030)*((0.5769));
    $144=($143)+($142);
    $145=($65)*($144);
    $146=($137)*((0.0962));
    $147=(($jQ_Odd+($hilbertIdx_019<<3))|0);
    $148=(+(HEAPF64[(($147)>>3)]));
    HEAPF64[(($147)>>3)]=$146;
    $149=($146)-($148);
    $150=($149)-($prev_jQ_Odd_032);
    $151=($prev_jQ_input_Odd_034)*((0.5769));
    $152=($151)+($150);
    $153=($65)*($152);
    $154=($145)+($137);
    $155=($154)*((0.2));
    $156=($prevQ2_036)*((0.8));
    $157=($156)+($155);
    $158=($I1ForOddPrev3_041)-($153);
    $159=($158)*((0.2));
    $160=($prevI2_037)*((0.8));
    $161=($160)+($159);
    $I1ForEvenPrev3_1=$I1ForEvenPrev2_042;$I1ForEvenPrev2_1=$129;$I1ForOddPrev3_1=$I1ForOddPrev3_041;$I1ForOddPrev2_1=$I1ForOddPrev2_040;$I2_0=$161;$Q2_0=$157;$prev_jQ_input_Even_1=$prev_jQ_input_Even_035;$prev_jQ_input_Odd_1=$137;$prev_jQ_Even_1=$prev_jQ_Even_033;$prev_jQ_Odd_1=$151;$prev_jI_input_Even_1=$prev_jI_input_Even_031;$prev_jI_input_Odd_1=$I1ForOddPrev3_041;$prev_jI_Even_1=$prev_jI_Even_029;$prev_jI_Odd_1=$143;$prev_Q1_input_Even_1=$prev_Q1_input_Even_027;$prev_Q1_input_Odd_1=$129;$prev_Q1_Even_1=$prev_Q1_Even_025;$prev_Q1_Odd_1=$135;$prev_detrender_input_Even_1=$prev_detrender_input_Even_023;$prev_detrender_input_Odd_1=$75;$prev_detrender_Even_1=$prev_detrender_Even_021;$prev_detrender_Odd_1=$127;$hilbertIdx_1=$hilbertIdx_019;
   }























   $163=($prevI2_037)*($I2_0);
   $164=($prevQ2_036)*($Q2_0);
   $165=($164)+($163);
   $166=($165)*((0.2));
   $167=($Re_038)+($166);
   $168=($prevQ2_036)*($I2_0);
   $169=($prevI2_037)*($Q2_0);
   $170=($168)-($169);
   $171=($170)*((0.2));
   $172=($Im_039)+($171);
   $173=$172!=(0.0);
   $174=$167!=(0.0);
   $or_cond=$173&$174;
   if ($or_cond) {
    $176=($172)/($167);
    $177=(+(Math_atan($176)));
    $178=($177)*((57.29577951308232));
    $179=((360.0))/($178);
    $period_1=$179;
   } else {
    $period_1=$period_018;
   }

   $181=($period_018)*((1.5));
   $182=$period_1>$181;
   $period_2=($182?$181:$period_1);
   $183=($period_018)*((0.67));
   $184=$period_2<$183;
   $period_3=($184?$183:$period_2);
   $185=$period_3<(6.0);
   do {
    if ($185) {
     $period_4=6.0;
    } else {
     $187=$period_3>(50.0);
     if (!($187)) {
      $period_4=$period_3;
      break;
     }
     $period_4=50.0;
    }
   } while(0);

   $190=($period_4)*((0.2));
   $191=($period_018)*((0.8));
   $192=($191)+($190);
   $193=($192)*((0.33));
   $194=($smoothPeriod_045)+($193);
   $195=($194)+((0.5));
   $196=(~~($195));
   $197=($196|0)>0;
   do {
    if ($197) {
     $tempReal_08=0.0;$i_29=0;$idx_010=$today_144;
     while(1) {



      $198=((($idx_010)-(1))|0);
      $199=(($inReal+($idx_010<<3))|0);
      $200=(+(HEAPF64[(($199)>>3)]));
      $201=($tempReal_08)+($200);
      $202=((($i_29)+(1))|0);
      $203=($202|0)<($196|0);
      if ($203) {
       $tempReal_08=$201;$i_29=$202;$idx_010=$198;
      } else {
       break;
      }
     }
     $204=($196|0)>0;
     if (!($204)) {
      $tempReal_1=$201;
      break;
     }
     $206=(+((($196|0))|0));
     $207=($201)/($206);
     $tempReal_1=$207;
    } else {
     $tempReal_1=0.0;
    }
   } while(0);

   $208=($today_144|0)<($_startIdx|0);
   if ($208) {
    $outIdx_1=$outIdx_047;
   } else {
    $210=($iTrend1_015)*((3.0));
    $211=($tempReal_1)*((4.0));
    $212=($iTrend2_016)*((2.0));
    $213=($210)+($211);
    $214=($212)+($213);
    $215=($iTrend3_017)+($214);
    $216=($215)/((10.0));
    $217=((($outIdx_047)+(1))|0);
    $218=(($outReal+($outIdx_047<<3))|0);
    HEAPF64[(($218)>>3)]=$216;
    $outIdx_1=$217;
   }

   $220=((($today_144)+(1))|0);
   $phitmp=($167)*((0.8));
   $phitmp4=($172)*((0.8));
   $phitmp5=($194)*((0.67));
   $221=($today_144|0)<($endIdx|0);
   if ($221) {
    $trailingWMAIdx_111=$72;$periodWMASum_112=$76;$periodWMASub_113=$69;$trailingWMAValue_114=$74;$iTrend3_017=$iTrend2_016;$iTrend2_016=$iTrend1_015;$iTrend1_015=$tempReal_1;$period_018=$192;$hilbertIdx_019=$hilbertIdx_1;$prev_detrender_Odd_020=$prev_detrender_Odd_1;$prev_detrender_Even_021=$prev_detrender_Even_1;$prev_detrender_input_Odd_022=$prev_detrender_input_Odd_1;$prev_detrender_input_Even_023=$prev_detrender_input_Even_1;$prev_Q1_Odd_024=$prev_Q1_Odd_1;$prev_Q1_Even_025=$prev_Q1_Even_1;$prev_Q1_input_Odd_026=$prev_Q1_input_Odd_1;$prev_Q1_input_Even_027=$prev_Q1_input_Even_1;$prev_jI_Odd_028=$prev_jI_Odd_1;$prev_jI_Even_029=$prev_jI_Even_1;$prev_jI_input_Odd_030=$prev_jI_input_Odd_1;$prev_jI_input_Even_031=$prev_jI_input_Even_1;$prev_jQ_Odd_032=$prev_jQ_Odd_1;$prev_jQ_Even_033=$prev_jQ_Even_1;$prev_jQ_input_Odd_034=$prev_jQ_input_Odd_1;$prev_jQ_input_Even_035=$prev_jQ_input_Even_1;$prevQ2_036=$Q2_0;$prevI2_037=$I2_0;$Re_038=$phitmp;$Im_039=$phitmp4;$I1ForOddPrev2_040=$I1ForOddPrev2_1;$I1ForOddPrev3_041=$I1ForOddPrev3_1;$I1ForEvenPrev2_042=$I1ForEvenPrev2_1;$I1ForEvenPrev3_043=$I1ForEvenPrev3_1;$today_144=$220;$smoothPeriod_045=$phitmp5;$outIdx_047=$outIdx_1;
   } else {
    $outIdx_0_lcssa=$outIdx_1;
    break;
   }
  }
 } else {
  $outIdx_0_lcssa=0;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_HT_TRENDMODE($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $detrender_Odd=0,$detrender_Even=0,$Q1_Odd=0,$Q1_Even=0,$jI_Odd=0,$jI_Even=0,$jQ_Odd=0,$jQ_Even=0,$local_smoothPrice=0,$local_smoothPrice77=0,$1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond13=0,$9=0,$10=0,$11=0;
 var $12=0,$13=0,$_startIdx=0,$14=0,$17=0,$18=0,$19=0,$20=.0,$21=0,$22=0,$23=.0,$24=.0,$25=.0,$26=.0,$27=0,$28=0,$29=.0,$30=.0,$31=.0,$32=.0;
 var $33=0,$34=0,$smax=0,$35=0,$36=0,$37=0,$periodWMASum_0=.0,$periodWMASub_0=.0,$trailingWMAValue_0=.0,$trailingWMAIdx_0=0,$today_0=0,$i_0=0,$39=0,$40=0,$41=.0,$42=.0,$43=.0,$44=.0,$45=.0,$46=0;
 var $47=0,$48=.0,$49=.0,$50=0,$51=0,$52=0,$53=0,$54=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$leadSine_066=.0,$sine_065=.0,$daysInTrend_064=0;
 var $DCPhase_063=.0,$outIdx_062=0,$smoothPrice_Idx_061=0,$smoothPeriod_060=.0,$today_159=0,$I1ForEvenPrev3_058=.0,$I1ForEvenPrev2_057=.0,$I1ForOddPrev3_056=.0,$I1ForOddPrev2_055=.0,$Im_054=.0,$Re_053=.0,$prevI2_052=.0,$prevQ2_051=.0,$prev_jQ_input_Even_050=.0,$prev_jQ_input_Odd_049=.0,$prev_jQ_Even_048=.0,$prev_jQ_Odd_047=.0,$prev_jI_input_Even_046=.0,$prev_jI_input_Odd_045=.0,$prev_jI_Even_044=.0;
 var $prev_jI_Odd_043=.0,$prev_Q1_input_Even_042=.0,$prev_Q1_input_Odd_041=.0,$prev_Q1_Even_040=.0,$prev_Q1_Odd_039=.0,$prev_detrender_input_Even_038=.0,$prev_detrender_input_Odd_037=.0,$prev_detrender_Even_036=.0,$prev_detrender_Odd_035=.0,$hilbertIdx_034=0,$period_033=.0,$trailingWMAIdx_132=0,$iTrend3_031=.0,$iTrend2_030=.0,$iTrend1_029=.0,$trailingWMAValue_128=.0,$periodWMASub_127=.0,$periodWMASum_126=.0,$64=.0,$65=.0;
 var $66=0,$67=.0,$68=.0,$69=.0,$70=.0,$71=.0,$72=0,$73=0,$74=.0,$75=.0,$76=.0,$77=0,$78=0,$79=0,$80=.0,$82=0,$83=.0,$84=.0,$85=.0,$86=.0;
 var $87=.0,$88=.0,$89=.0,$90=0,$91=.0,$92=.0,$93=.0,$94=.0,$95=.0,$96=.0,$97=.0,$98=0,$99=.0,$100=.0,$101=.0,$102=.0,$103=.0,$104=.0,$105=.0,$106=0;
 var $107=.0,$108=.0,$109=.0,$110=.0,$111=.0,$112=.0,$113=0,$114=0,$_=0,$115=.0,$116=.0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$122=.0,$124=0,$125=.0,$126=.0;
 var $127=.0,$128=.0,$129=.0,$130=.0,$131=.0,$132=0,$133=.0,$134=.0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=0,$141=.0,$142=.0,$143=.0,$144=.0,$145=.0,$146=.0;
 var $147=.0,$148=0,$149=.0,$150=.0,$151=.0,$152=.0,$153=.0,$154=.0,$155=.0,$156=.0,$157=.0,$158=.0,$159=.0,$160=.0,$161=.0,$162=.0,$hilbertIdx_1=0,$prev_detrender_Odd_1=.0,$prev_detrender_Even_1=.0,$prev_detrender_input_Odd_1=.0;
 var $prev_detrender_input_Even_1=.0,$prev_Q1_Odd_1=.0,$prev_Q1_Even_1=.0,$prev_Q1_input_Odd_1=.0,$prev_Q1_input_Even_1=.0,$prev_jI_Odd_1=.0,$prev_jI_Even_1=.0,$prev_jI_input_Odd_1=.0,$prev_jI_input_Even_1=.0,$prev_jQ_Odd_1=.0,$prev_jQ_Even_1=.0,$prev_jQ_input_Odd_1=.0,$prev_jQ_input_Even_1=.0,$Q2_0=.0,$I2_0=.0,$I1ForOddPrev2_1=.0,$I1ForOddPrev3_1=.0,$I1ForEvenPrev2_1=.0,$I1ForEvenPrev3_1=.0,$164=.0;
 var $165=.0,$166=.0,$167=.0,$168=.0,$169=.0,$170=.0,$171=.0,$172=.0,$173=.0,$174=0,$175=0,$or_cond=0,$177=.0,$178=.0,$179=.0,$180=.0,$period_1=.0,$182=.0,$183=0,$period_2=.0;
 var $184=.0,$185=0,$period_3=.0,$186=0,$188=0,$period_4=.0,$191=.0,$192=.0,$193=.0,$194=.0,$195=.0,$196=.0,$197=0,$198=0,$199=.0,$realPart_017=.0,$imagPart_016=.0,$idx_015=0,$i_214=0,$201=.0;
 var $202=.0,$203=.0,$204=0,$205=.0,$206=.0,$207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$212=0,$213=0,$idx_1=0,$214=0,$215=0,$216=0,$218=.0,$219=.0,$220=.0,$imagPart_0_lcssa85=.0;
 var $realPart_0_lcssa83=.0,$221=.0,$222=0,$224=0,$226=.0,$228=0,$230=.0,$imagPart_0_lcssa84=.0,$DCPhase_1=.0,$232=.0,$233=.0,$234=.0,$235=0,$237=.0,$DCPhase_2=.0,$239=0,$241=.0,$DCPhase_3=.0,$243=.0,$244=.0;
 var $245=.0,$246=.0,$247=.0,$248=0,$idx_221=0,$i_320=0,$tempReal_019=.0,$249=0,$250=0,$251=.0,$252=.0,$253=0,$254=0,$255=0,$257=.0,$258=.0,$tempReal_1=.0,$259=.0,$260=.0,$261=.0;
 var $262=.0,$263=.0,$264=.0,$265=.0,$266=0,$267=0,$or_cond7=0,$269=0,$270=0,$or_cond8=0,$daysInTrend_1=0,$trend_0=0,$273=0,$274=.0,$275=.0,$276=0,$trend_1=0,$277=.0,$278=0,$279=.0;
 var $280=0,$or_cond10=0,$281=.0,$282=0,$or_cond12=0,$trend_2=0,$283=0,$285=.0,$286=.0,$287=.0,$288=.0,$289=0,$trend_3=0,$292=0,$294=0,$295=0,$outIdx_1=0,$297=0,$298=0,$_2=0;
 var $299=0,$phitmp=.0,$phitmp4=.0,$phitmp5=.0,$300=0,$outIdx_0_lcssa=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+592)|0;
 $detrender_Odd=((sp)|0);
 $detrender_Even=(((sp)+(24))|0);
 $Q1_Odd=(((sp)+(48))|0);
 $Q1_Even=(((sp)+(72))|0);
 $jI_Odd=(((sp)+(96))|0);
 $jI_Even=(((sp)+(120))|0);
 $jQ_Odd=(((sp)+(144))|0);
 $jQ_Even=(((sp)+(168))|0);
 $local_smoothPrice=(((sp)+(192))|0);
 $local_smoothPrice77=$local_smoothPrice;
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outInteger|0)==0;
 $or_cond13=$6|$7;
 if ($or_cond13) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $9=((HEAP32[((272)>>2)])|0);
 $10=(($9+104)|0);
 $11=((HEAP32[(($10)>>2)])|0);
 $12=((($11)+(63))|0);
 $13=($12|0)>($startIdx|0);
 $_startIdx=($13?$12:$startIdx);
 $14=($_startIdx|0)>($endIdx|0);
 if ($14) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $17=((($_startIdx)-($12))|0);
 $18=((($17)+(1))|0);
 $19=(($inReal+($17<<3))|0);
 $20=(+(HEAPF64[(($19)>>3)]));
 $21=((($17)+(2))|0);
 $22=(($inReal+($18<<3))|0);
 $23=(+(HEAPF64[(($22)>>3)]));
 $24=($20)+($23);
 $25=($23)*((2.0));
 $26=($20)+($25);
 $27=((($17)+(3))|0);
 $28=(($inReal+($21<<3))|0);
 $29=(+(HEAPF64[(($28)>>3)]));
 $30=($24)+($29);
 $31=($29)*((3.0));
 $32=($26)+($31);
 $33=((($11)+(63))|0);
 $34=($33|0)<($startIdx|0);
 $smax=($34?$startIdx:$33);
 $35=((($smax)-(29))|0);
 $36=((($smax)-(26))|0);
 $37=((($smax)-(27))|0);
 $i_0=34;$today_0=$27;$trailingWMAIdx_0=$17;$trailingWMAValue_0=0.0;$periodWMASub_0=$30;$periodWMASum_0=$32;
 while(1) {






  $39=((($today_0)+(1))|0);
  $40=(($inReal+($today_0<<3))|0);
  $41=(+(HEAPF64[(($40)>>3)]));
  $42=($periodWMASub_0)+($41);
  $43=($42)-($trailingWMAValue_0);
  $44=($41)*((4.0));
  $45=($periodWMASum_0)+($44);
  $46=((($trailingWMAIdx_0)+(1))|0);
  $47=(($inReal+($trailingWMAIdx_0<<3))|0);
  $48=(+(HEAPF64[(($47)>>3)]));
  $49=($45)-($43);
  $50=((($i_0)-(1))|0);
  $51=($50|0)==0;
  if ($51) {
   break;
  } else {
   $i_0=$50;$today_0=$39;$trailingWMAIdx_0=$46;$trailingWMAValue_0=$48;$periodWMASub_0=$43;$periodWMASum_0=$49;
  }
 }
 $52=((($35)-($11))|0);
 $53=((($36)-($11))|0);
 $54=$detrender_Odd;
 _memset((((($54)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $55=$detrender_Even;
 _memset((((($55)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $56=$Q1_Odd;
 _memset((((($56)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $57=$Q1_Even;
 _memset((((($57)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $58=$jI_Odd;
 _memset((((($58)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $59=$jI_Even;
 _memset((((($59)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $60=$jQ_Odd;
 _memset((((($60)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $61=$jQ_Even;
 _memset((((($61)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 _memset((((($local_smoothPrice77)|0))|0), ((((0)|0))|0), ((((400)|0))|0))|0;
 $62=((($37)-($11))|0);
 $63=($62|0)<($endIdx|0);
 if ($63) {
  $periodWMASum_126=$49;$periodWMASub_127=$43;$trailingWMAValue_128=$48;$iTrend1_029=0.0;$iTrend2_030=0.0;$iTrend3_031=0.0;$trailingWMAIdx_132=$52;$period_033=0.0;$hilbertIdx_034=0;$prev_detrender_Odd_035=0.0;$prev_detrender_Even_036=0.0;$prev_detrender_input_Odd_037=0.0;$prev_detrender_input_Even_038=0.0;$prev_Q1_Odd_039=0.0;$prev_Q1_Even_040=0.0;$prev_Q1_input_Odd_041=0.0;$prev_Q1_input_Even_042=0.0;$prev_jI_Odd_043=0.0;$prev_jI_Even_044=0.0;$prev_jI_input_Odd_045=0.0;$prev_jI_input_Even_046=0.0;$prev_jQ_Odd_047=0.0;$prev_jQ_Even_048=0.0;$prev_jQ_input_Odd_049=0.0;$prev_jQ_input_Even_050=0.0;$prevQ2_051=0.0;$prevI2_052=0.0;$Re_053=0.0;$Im_054=0.0;$I1ForOddPrev2_055=0.0;$I1ForOddPrev3_056=0.0;$I1ForEvenPrev2_057=0.0;$I1ForEvenPrev3_058=0.0;$today_159=$53;$smoothPeriod_060=0.0;$smoothPrice_Idx_061=0;$outIdx_062=0;$DCPhase_063=0.0;$daysInTrend_064=0;$sine_065=0.0;$leadSine_066=0.0;
  while(1) {









































   $64=($period_033)*((0.075));
   $65=($64)+((0.54));
   $66=(($inReal+($today_159<<3))|0);
   $67=(+(HEAPF64[(($66)>>3)]));
   $68=($periodWMASub_127)+($67);
   $69=($68)-($trailingWMAValue_128);
   $70=($67)*((4.0));
   $71=($periodWMASum_126)+($70);
   $72=((($trailingWMAIdx_132)+(1))|0);
   $73=(($inReal+($trailingWMAIdx_132<<3))|0);
   $74=(+(HEAPF64[(($73)>>3)]));
   $75=($71)*((0.1));
   $76=($71)-($69);
   $77=(($local_smoothPrice+($smoothPrice_Idx_061<<3))|0);
   HEAPF64[(($77)>>3)]=$75;
   $78=$today_159&1;
   $79=($78|0)==0;
   $80=($75)*((0.0962));
   if ($79) {
    $82=(($detrender_Even+($hilbertIdx_034<<3))|0);
    $83=(+(HEAPF64[(($82)>>3)]));
    HEAPF64[(($82)>>3)]=$80;
    $84=($80)-($83);
    $85=($84)-($prev_detrender_Even_036);
    $86=($prev_detrender_input_Even_038)*((0.5769));
    $87=($86)+($85);
    $88=($65)*($87);
    $89=($88)*((0.0962));
    $90=(($Q1_Even+($hilbertIdx_034<<3))|0);
    $91=(+(HEAPF64[(($90)>>3)]));
    HEAPF64[(($90)>>3)]=$89;
    $92=($89)-($91);
    $93=($92)-($prev_Q1_Even_040);
    $94=($prev_Q1_input_Even_042)*((0.5769));
    $95=($94)+($93);
    $96=($65)*($95);
    $97=($I1ForEvenPrev3_058)*((0.0962));
    $98=(($jI_Even+($hilbertIdx_034<<3))|0);
    $99=(+(HEAPF64[(($98)>>3)]));
    HEAPF64[(($98)>>3)]=$97;
    $100=($97)-($99);
    $101=($100)-($prev_jI_Even_044);
    $102=($prev_jI_input_Even_046)*((0.5769));
    $103=($102)+($101);
    $104=($65)*($103);
    $105=($96)*((0.0962));
    $106=(($jQ_Even+($hilbertIdx_034<<3))|0);
    $107=(+(HEAPF64[(($106)>>3)]));
    HEAPF64[(($106)>>3)]=$105;
    $108=($105)-($107);
    $109=($108)-($prev_jQ_Even_048);
    $110=($prev_jQ_input_Even_050)*((0.5769));
    $111=($110)+($109);
    $112=($65)*($111);
    $113=((($hilbertIdx_034)+(1))|0);
    $114=($113|0)==3;
    $_=($114?0:$113);
    $115=($104)+($96);
    $116=($115)*((0.2));
    $117=($prevQ2_051)*((0.8));
    $118=($117)+($116);
    $119=($I1ForEvenPrev3_058)-($112);
    $120=($119)*((0.2));
    $121=($prevI2_052)*((0.8));
    $122=($121)+($120);
    $I1ForEvenPrev3_1=$I1ForEvenPrev3_058;$I1ForEvenPrev2_1=$I1ForEvenPrev2_057;$I1ForOddPrev3_1=$I1ForOddPrev2_055;$I1ForOddPrev2_1=$88;$I2_0=$122;$Q2_0=$118;$prev_jQ_input_Even_1=$96;$prev_jQ_input_Odd_1=$prev_jQ_input_Odd_049;$prev_jQ_Even_1=$110;$prev_jQ_Odd_1=$prev_jQ_Odd_047;$prev_jI_input_Even_1=$I1ForEvenPrev3_058;$prev_jI_input_Odd_1=$prev_jI_input_Odd_045;$prev_jI_Even_1=$102;$prev_jI_Odd_1=$prev_jI_Odd_043;$prev_Q1_input_Even_1=$88;$prev_Q1_input_Odd_1=$prev_Q1_input_Odd_041;$prev_Q1_Even_1=$94;$prev_Q1_Odd_1=$prev_Q1_Odd_039;$prev_detrender_input_Even_1=$75;$prev_detrender_input_Odd_1=$prev_detrender_input_Odd_037;$prev_detrender_Even_1=$86;$prev_detrender_Odd_1=$prev_detrender_Odd_035;$hilbertIdx_1=$_;
   } else {
    $124=(($detrender_Odd+($hilbertIdx_034<<3))|0);
    $125=(+(HEAPF64[(($124)>>3)]));
    HEAPF64[(($124)>>3)]=$80;
    $126=($80)-($125);
    $127=($126)-($prev_detrender_Odd_035);
    $128=($prev_detrender_input_Odd_037)*((0.5769));
    $129=($128)+($127);
    $130=($65)*($129);
    $131=($130)*((0.0962));
    $132=(($Q1_Odd+($hilbertIdx_034<<3))|0);
    $133=(+(HEAPF64[(($132)>>3)]));
    HEAPF64[(($132)>>3)]=$131;
    $134=($131)-($133);
    $135=($134)-($prev_Q1_Odd_039);
    $136=($prev_Q1_input_Odd_041)*((0.5769));
    $137=($136)+($135);
    $138=($65)*($137);
    $139=($I1ForOddPrev3_056)*((0.0962));
    $140=(($jI_Odd+($hilbertIdx_034<<3))|0);
    $141=(+(HEAPF64[(($140)>>3)]));
    HEAPF64[(($140)>>3)]=$139;
    $142=($139)-($141);
    $143=($142)-($prev_jI_Odd_043);
    $144=($prev_jI_input_Odd_045)*((0.5769));
    $145=($144)+($143);
    $146=($65)*($145);
    $147=($138)*((0.0962));
    $148=(($jQ_Odd+($hilbertIdx_034<<3))|0);
    $149=(+(HEAPF64[(($148)>>3)]));
    HEAPF64[(($148)>>3)]=$147;
    $150=($147)-($149);
    $151=($150)-($prev_jQ_Odd_047);
    $152=($prev_jQ_input_Odd_049)*((0.5769));
    $153=($152)+($151);
    $154=($65)*($153);
    $155=($146)+($138);
    $156=($155)*((0.2));
    $157=($prevQ2_051)*((0.8));
    $158=($157)+($156);
    $159=($I1ForOddPrev3_056)-($154);
    $160=($159)*((0.2));
    $161=($prevI2_052)*((0.8));
    $162=($161)+($160);
    $I1ForEvenPrev3_1=$I1ForEvenPrev2_057;$I1ForEvenPrev2_1=$130;$I1ForOddPrev3_1=$I1ForOddPrev3_056;$I1ForOddPrev2_1=$I1ForOddPrev2_055;$I2_0=$162;$Q2_0=$158;$prev_jQ_input_Even_1=$prev_jQ_input_Even_050;$prev_jQ_input_Odd_1=$138;$prev_jQ_Even_1=$prev_jQ_Even_048;$prev_jQ_Odd_1=$152;$prev_jI_input_Even_1=$prev_jI_input_Even_046;$prev_jI_input_Odd_1=$I1ForOddPrev3_056;$prev_jI_Even_1=$prev_jI_Even_044;$prev_jI_Odd_1=$144;$prev_Q1_input_Even_1=$prev_Q1_input_Even_042;$prev_Q1_input_Odd_1=$130;$prev_Q1_Even_1=$prev_Q1_Even_040;$prev_Q1_Odd_1=$136;$prev_detrender_input_Even_1=$prev_detrender_input_Even_038;$prev_detrender_input_Odd_1=$75;$prev_detrender_Even_1=$prev_detrender_Even_036;$prev_detrender_Odd_1=$128;$hilbertIdx_1=$hilbertIdx_034;
   }























   $164=($prevI2_052)*($I2_0);
   $165=($prevQ2_051)*($Q2_0);
   $166=($165)+($164);
   $167=($166)*((0.2));
   $168=($Re_053)+($167);
   $169=($prevQ2_051)*($I2_0);
   $170=($prevI2_052)*($Q2_0);
   $171=($169)-($170);
   $172=($171)*((0.2));
   $173=($Im_054)+($172);
   $174=$173!=(0.0);
   $175=$168!=(0.0);
   $or_cond=$174&$175;
   if ($or_cond) {
    $177=($173)/($168);
    $178=(+(Math_atan($177)));
    $179=($178)*((57.29577951308232));
    $180=((360.0))/($179);
    $period_1=$180;
   } else {
    $period_1=$period_033;
   }

   $182=($period_033)*((1.5));
   $183=$period_1>$182;
   $period_2=($183?$182:$period_1);
   $184=($period_033)*((0.67));
   $185=$period_2<$184;
   $period_3=($185?$184:$period_2);
   $186=$period_3<(6.0);
   do {
    if ($186) {
     $period_4=6.0;
    } else {
     $188=$period_3>(50.0);
     if (!($188)) {
      $period_4=$period_3;
      break;
     }
     $period_4=50.0;
    }
   } while(0);

   $191=($period_4)*((0.2));
   $192=($period_033)*((0.8));
   $193=($192)+($191);
   $194=($193)*((0.33));
   $195=($smoothPeriod_060)+($194);
   $196=($195)+((0.5));
   $197=(~~($196));
   $198=($197|0)>0;
   do {
    if ($198) {
     $199=(+((($197|0))|0));
     $i_214=0;$idx_015=$smoothPrice_Idx_061;$imagPart_016=0.0;$realPart_017=0.0;
     while(1) {




      $201=(+((($i_214|0))|0));
      $202=($201)*((6.283185307179586));
      $203=($202)/($199);
      $204=(($local_smoothPrice+($idx_015<<3))|0);
      $205=(+(HEAPF64[(($204)>>3)]));
      $206=(+(Math_sin($203)));
      $207=($205)*($206);
      $208=($realPart_017)+($207);
      $209=(+(Math_cos($203)));
      $210=($205)*($209);
      $211=($imagPart_016)+($210);
      $212=($idx_015|0)==0;
      $213=((($idx_015)-(1))|0);
      $idx_1=($212?49:$213);
      $214=((($i_214)+(1))|0);
      $215=($214|0)<($197|0);
      if ($215) {
       $i_214=$214;$idx_015=$idx_1;$imagPart_016=$211;$realPart_017=$208;
      } else {
       break;
      }
     }
     $216=$211==(0.0);
     if ($216) {
      $realPart_0_lcssa83=$208;$imagPart_0_lcssa85=$211;
      label = 22;
      break;
     }
     $218=($208)/($211);
     $219=(+(Math_atan($218)));
     $220=($219)*((57.29577951308232));
     $DCPhase_1=$220;$imagPart_0_lcssa84=$211;
    } else {
     $realPart_0_lcssa83=0.0;$imagPart_0_lcssa85=0.0;
     label = 22;
    }
   } while(0);
   do {
    if ((label|0) == 22) {
     label = 0;


     $221=(+(Math_abs((+($imagPart_0_lcssa85)))));
     $222=$221>(0.01);
     if ($222) {
      $DCPhase_1=$DCPhase_063;$imagPart_0_lcssa84=$imagPart_0_lcssa85;
      break;
     }
     $224=$realPart_0_lcssa83<(0.0);
     if ($224) {
      $226=($DCPhase_063)+((-90.0));
      $DCPhase_1=$226;$imagPart_0_lcssa84=$imagPart_0_lcssa85;
      break;
     }
     $228=$realPart_0_lcssa83>(0.0);
     if (!($228)) {
      $DCPhase_1=$DCPhase_063;$imagPart_0_lcssa84=$imagPart_0_lcssa85;
      break;
     }
     $230=($DCPhase_063)+((90.0));
     $DCPhase_1=$230;$imagPart_0_lcssa84=$imagPart_0_lcssa85;
    }
   } while(0);


   $232=($DCPhase_1)+((90.0));
   $233=((360.0))/($195);
   $234=($232)+($233);
   $235=$imagPart_0_lcssa84<(0.0);
   if ($235) {
    $237=($234)+((180.0));
    $DCPhase_2=$237;
   } else {
    $DCPhase_2=$234;
   }

   $239=$DCPhase_2>(315.0);
   if ($239) {
    $241=($DCPhase_2)+((-360.0));
    $DCPhase_3=$241;
   } else {
    $DCPhase_3=$DCPhase_2;
   }

   $243=($DCPhase_3)*((0.017453292519943295));
   $244=(+(Math_sin($243)));
   $245=($DCPhase_3)+((45.0));
   $246=($245)*((0.017453292519943295));
   $247=(+(Math_sin($246)));
   $248=($197|0)>0;
   do {
    if ($248) {
     $tempReal_019=0.0;$i_320=0;$idx_221=$today_159;
     while(1) {



      $249=((($idx_221)-(1))|0);
      $250=(($inReal+($idx_221<<3))|0);
      $251=(+(HEAPF64[(($250)>>3)]));
      $252=($tempReal_019)+($251);
      $253=((($i_320)+(1))|0);
      $254=($253|0)<($197|0);
      if ($254) {
       $tempReal_019=$252;$i_320=$253;$idx_221=$249;
      } else {
       break;
      }
     }
     $255=($197|0)>0;
     if (!($255)) {
      $tempReal_1=$252;
      break;
     }
     $257=(+((($197|0))|0));
     $258=($252)/($257);
     $tempReal_1=$258;
    } else {
     $tempReal_1=0.0;
    }
   } while(0);

   $259=($tempReal_1)*((4.0));
   $260=($iTrend1_029)*((3.0));
   $261=($260)+($259);
   $262=($iTrend2_030)*((2.0));
   $263=($262)+($261);
   $264=($iTrend3_031)+($263);
   $265=($264)/((10.0));
   $266=$244<=$247;
   $267=$sine_065>$leadSine_066;
   $or_cond7=$266|$267;
   if ($or_cond7) {
    $269=$244>=$247;
    $270=$sine_065<$leadSine_066;
    $or_cond8=$269|$270;
    if ($or_cond8) {
     $trend_0=1;$daysInTrend_1=$daysInTrend_064;
    } else {
     label = 37;
    }
   } else {
    label = 37;
   }
   if ((label|0) == 37) {
    label = 0;
    $trend_0=0;$daysInTrend_1=0;
   }


   $273=((($daysInTrend_1)+(1))|0);
   $274=(+((($273|0))|0));
   $275=($195)*((0.5));
   $276=$274<$275;
   $trend_1=($276?0:$trend_0);
   $277=($DCPhase_3)-($DCPhase_063);
   $278=$195!=(0.0);
   $279=((241.20000000000002))/($195);
   $280=$277>$279;
   $or_cond10=$278&$280;
   $281=((540.0))/($195);
   $282=$277<$281;
   $or_cond12=$or_cond10&$282;
   $trend_2=($or_cond12?0:$trend_1);
   $283=$265!=(0.0);
   do {
    if ($283) {
     $285=(+(HEAPF64[(($77)>>3)]));
     $286=($285)-($265);
     $287=($286)/($265);
     $288=(+(Math_abs((+($287)))));
     $289=$288<(0.015);
     if ($289) {
      $trend_3=$trend_2;
      break;
     }
     $trend_3=1;
    } else {
     $trend_3=$trend_2;
    }
   } while(0);

   $292=($today_159|0)<($_startIdx|0);
   if ($292) {
    $outIdx_1=$outIdx_062;
   } else {
    $294=((($outIdx_062)+(1))|0);
    $295=(($outInteger+($outIdx_062<<2))|0);
    HEAP32[(($295)>>2)]=$trend_3;
    $outIdx_1=$294;
   }

   $297=((($smoothPrice_Idx_061)+(1))|0);
   $298=($smoothPrice_Idx_061|0)>48;
   $_2=($298?0:$297);
   $299=((($today_159)+(1))|0);
   $phitmp=($168)*((0.8));
   $phitmp4=($173)*((0.8));
   $phitmp5=($195)*((0.67));
   $300=($today_159|0)<($endIdx|0);
   if ($300) {
    $periodWMASum_126=$76;$periodWMASub_127=$69;$trailingWMAValue_128=$74;$iTrend3_031=$iTrend2_030;$iTrend2_030=$iTrend1_029;$iTrend1_029=$tempReal_1;$trailingWMAIdx_132=$72;$period_033=$193;$hilbertIdx_034=$hilbertIdx_1;$prev_detrender_Odd_035=$prev_detrender_Odd_1;$prev_detrender_Even_036=$prev_detrender_Even_1;$prev_detrender_input_Odd_037=$prev_detrender_input_Odd_1;$prev_detrender_input_Even_038=$prev_detrender_input_Even_1;$prev_Q1_Odd_039=$prev_Q1_Odd_1;$prev_Q1_Even_040=$prev_Q1_Even_1;$prev_Q1_input_Odd_041=$prev_Q1_input_Odd_1;$prev_Q1_input_Even_042=$prev_Q1_input_Even_1;$prev_jI_Odd_043=$prev_jI_Odd_1;$prev_jI_Even_044=$prev_jI_Even_1;$prev_jI_input_Odd_045=$prev_jI_input_Odd_1;$prev_jI_input_Even_046=$prev_jI_input_Even_1;$prev_jQ_Odd_047=$prev_jQ_Odd_1;$prev_jQ_Even_048=$prev_jQ_Even_1;$prev_jQ_input_Odd_049=$prev_jQ_input_Odd_1;$prev_jQ_input_Even_050=$prev_jQ_input_Even_1;$prevQ2_051=$Q2_0;$prevI2_052=$I2_0;$Re_053=$phitmp;$Im_054=$phitmp4;$I1ForOddPrev2_055=$I1ForOddPrev2_1;$I1ForOddPrev3_056=$I1ForOddPrev3_1;$I1ForEvenPrev2_057=$I1ForEvenPrev2_1;$I1ForEvenPrev3_058=$I1ForEvenPrev3_1;$today_159=$299;$smoothPeriod_060=$phitmp5;$smoothPrice_Idx_061=$_2;$outIdx_062=$outIdx_1;$DCPhase_063=$DCPhase_3;$daysInTrend_064=$273;$sine_065=$244;$leadSine_066=$247;
   } else {
    $outIdx_0_lcssa=$outIdx_1;
    break;
   }
  }
 } else {
  $outIdx_0_lcssa=0;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_IMI_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$6=0,$7=0,$8=0,$9=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((HEAP32[((272)>>2)])|0);
 $6=(($5+108)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=((($_0)-(1))|0);
 $9=((($8)+($7))|0);
 $_02=$9;

 return (($_02)|0);
}


function _TA_IMI($startIdx,$endIdx,$inOpen,$inClose,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inOpen=($inOpen)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond=0,$9=0,$optInTimePeriod_off=0,$11=0,$_05=0,$13=0,$15=0,$16=0,$_startIdx=0,$17=0,$20=0,$21=0,$smax=0,$22=0;
 var $smax15=0,$23=0,$smax16=0,$_111=0,$outIdx_010=0,$25=0,$26=0,$27=0,$i_09=0,$downsum_08=.0,$upsum_07=.0,$29=0,$30=.0,$31=0,$32=.0,$33=0,$35=.0,$36=.0,$38=.0,$39=.0;
 var $upsum_1=.0,$downsum_1=.0,$41=.0,$42=.0,$43=.0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$50=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inOpen|0)!=0;
 $7=($inClose|0)!=0;
 $or_cond=$6&$7;
 if (!($or_cond)) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($optInTimePeriod|0)==-2147483648;
 do {
  if ($9) {
   $_05=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $11=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($11) {
    $_0=2;
   } else {
    $_05=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $13=($outReal|0)==0;
 if ($13) {
  $_0=2;

  return (($_0)|0);
 }
 $15=((_TA_IMI_Lookback($_05))|0);
 $16=($15|0)>($startIdx|0);
 $_startIdx=($16?$15:$startIdx);
 $17=($_startIdx|0)>($endIdx|0);
 if ($17) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  $outIdx_0_lcssa=0;
 } else {
  $21=($15|0)>($endIdx|0);
  $smax=($21?$15:$endIdx);
  $22=($smax|0)>($startIdx|0);
  $smax15=($22?$smax:$startIdx);
  $23=($15|0)>($startIdx|0);
  $smax16=($23?$15:$startIdx);
  $outIdx_010=0;$_111=$_startIdx;
  while(1) {


   $25=($15|0)<0;
   if (!($25)) {
    $26=((($_111)-($15))|0);
    $27=(($outReal+($outIdx_010<<3))|0);
    $upsum_07=0.0;$downsum_08=0.0;$i_09=$26;
    while(1) {



     $29=(($inClose+($i_09<<3))|0);
     $30=(+(HEAPF64[(($29)>>3)]));
     $31=(($inOpen+($i_09<<3))|0);
     $32=(+(HEAPF64[(($31)>>3)]));
     $33=$30>$32;
     if ($33) {
      $35=($30)-($32);
      $36=($upsum_07)+($35);
      $downsum_1=$downsum_08;$upsum_1=$36;
     } else {
      $38=($32)-($30);
      $39=($downsum_08)+($38);
      $downsum_1=$39;$upsum_1=$upsum_07;
     }


     $41=($upsum_1)+($downsum_1);
     $42=($upsum_1)/($41);
     $43=($42)*((100.0));
     HEAPF64[(($27)>>3)]=$43;
     $44=((($i_09)+(1))|0);
     $45=($i_09|0)<($_111|0);
     if ($45) {
      $upsum_07=$upsum_1;$downsum_08=$downsum_1;$i_09=$44;
     } else {
      break;
     }
    }
   }
   $46=((($_111)+(1))|0);
   $47=((($outIdx_010)+(1))|0);
   $48=($_111|0)<($endIdx|0);
   if ($48) {
    $outIdx_010=$47;$_111=$46;
   } else {
    break;
   }
  }
  $49=((($smax15)+(1))|0);
  $50=((($49)-($smax16))|0);
  $outIdx_0_lcssa=$50;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_KAMA_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$6=0,$7=0,$8=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((HEAP32[((272)>>2)])|0);
 $6=(($5+112)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=((($7)+($_0))|0);
 $_02=$8;

 return (($_02)|0);
}


function _TA_KAMA($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_09=0,$12=0,$14=0,$15=0,$16=0,$17=0,$18=0,$_startIdx=0,$19=0,$22=0,$23=0,$24=0;
 var $25=0,$smax53=0,$today_040=0,$i_039=0,$sumROC1_038=.0,$27=0,$28=0,$29=0,$30=.0,$31=0,$32=.0,$33=.0,$34=.0,$35=.0,$36=0,$37=0,$today_0_lcssa=0,$sumROC1_0_lcssa=.0,$39=0,$40=0;
 var $41=.0,$42=0,$43=.0,$44=0,$45=.0,$46=.0,$47=0,$49=0,$50=0,$or_cond3=0,$52=.0,$53=.0,$phitmp=.0,$phitmp10=.0,$tempReal_0=.0,$55=.0,$56=.0,$57=.0,$58=.0,$59=.0;
 var $trailingIdx_021=0,$today_122=0,$60=0,$61=0,$62=0,$smax50=0,$63=0,$64=0,$65=0,$today_128=0,$trailingIdx_027=0,$trailingValue_026=.0,$today_1_in25=0,$prevKAMA_024=.0,$sumROC1_123=.0,$67=0,$68=.0,$69=0,$70=.0,$71=.0;
 var $72=.0,$73=.0,$74=.0,$75=0,$76=.0,$77=.0,$78=.0,$79=.0,$80=0,$82=0,$83=0,$or_cond5=0,$85=.0,$86=.0,$phitmp13=.0,$phitmp14=.0,$tempReal_1=.0,$88=.0,$89=.0,$90=.0;
 var $91=.0,$92=.0,$trailingIdx_0=0,$today_1=0,$93=0,$94=0,$95=0,$today_1_lcssa=0,$trailingIdx_0_lcssa=0,$trailingValue_0_lcssa=.0,$today_1_in_lcssa=0,$prevKAMA_0_lcssa=.0,$sumROC1_1_lcssa=.0,$97=0,$98=0,$smax=0,$99=0,$trailingValue_120=.0,$trailingIdx_119=0,$outIdx_018=0;
 var $today_217=0,$prevKAMA_116=.0,$sumROC1_215=.0,$101=0,$102=.0,$103=0,$104=0,$105=.0,$106=.0,$107=.0,$108=.0,$109=.0,$110=0,$111=0,$112=.0,$113=.0,$114=.0,$115=.0,$116=0,$118=0;
 var $119=0,$or_cond7=0,$121=.0,$122=.0,$phitmp11=.0,$phitmp12=.0,$tempReal_2=.0,$124=.0,$125=0,$126=.0,$127=.0,$128=.0,$129=.0,$130=0,$131=0,$132=0,$133=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_09=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_09=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $14=((HEAP32[((272)>>2)])|0);
 $15=(($14+112)|0);
 $16=((HEAP32[(($15)>>2)])|0);
 $17=((($16)+($_09))|0);
 $18=($17|0)>($startIdx|0);
 $_startIdx=($18?$17:$startIdx);
 $19=($_startIdx|0)>($endIdx|0);
 if ($19) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $22=((($_startIdx)-($17))|0);
 $23=($_09|0)>0;
 if ($23) {
  $24=((($_09)+($16))|0);
  $25=($24|0)<($startIdx|0);
  $smax53=($25?$startIdx:$24);
  $sumROC1_038=0.0;$i_039=$_09;$today_040=$22;
  while(1) {



   $27=((($i_039)-(1))|0);
   $28=((($today_040)+(1))|0);
   $29=(($inReal+($today_040<<3))|0);
   $30=(+(HEAPF64[(($29)>>3)]));
   $31=(($inReal+($28<<3))|0);
   $32=(+(HEAPF64[(($31)>>3)]));
   $33=($30)-($32);
   $34=(+(Math_abs((+($33)))));
   $35=($sumROC1_038)+($34);
   $36=($27|0)>0;
   if ($36) {
    $sumROC1_038=$35;$i_039=$27;$today_040=$28;
   } else {
    break;
   }
  }
  $37=((($smax53)-($16))|0);
  $sumROC1_0_lcssa=$35;$today_0_lcssa=$37;
 } else {
  $sumROC1_0_lcssa=0.0;$today_0_lcssa=$22;
 }


 $39=((($today_0_lcssa)-(1))|0);
 $40=(($inReal+($39<<3))|0);
 $41=(+(HEAPF64[(($40)>>3)]));
 $42=(($inReal+($today_0_lcssa<<3))|0);
 $43=(+(HEAPF64[(($42)>>3)]));
 $44=(($inReal+($22<<3))|0);
 $45=(+(HEAPF64[(($44)>>3)]));
 $46=($43)-($45);
 $47=$sumROC1_0_lcssa>$46;
 do {
  if ($47) {
   $49=$sumROC1_0_lcssa>(-1.0e-14);
   $50=$sumROC1_0_lcssa<(1.0e-14);
   $or_cond3=$49&$50;
   if ($or_cond3) {
    $tempReal_0=0.6666666666666665;
    break;
   }
   $52=($46)/($sumROC1_0_lcssa);
   $53=(+(Math_abs((+($52)))));
   $phitmp=($53)*((0.6021505376344085));
   $phitmp10=($phitmp)+((0.06451612903225806));
   $tempReal_0=$phitmp10;
  } else {
   $tempReal_0=0.6666666666666665;
  }
 } while(0);

 $55=($tempReal_0)*($tempReal_0);
 $56=(+(HEAPF64[(($42)>>3)]));
 $57=($56)-($41);
 $58=($55)*($57);
 $59=($41)+($58);
 $trailingIdx_021=((($22)+(1))|0);
 $today_122=((($today_0_lcssa)+(1))|0);
 $60=($today_0_lcssa|0)<($_startIdx|0);
 if ($60) {
  $61=((($_09)+($16))|0);
  $62=($61|0)<($startIdx|0);
  $smax50=($62?$startIdx:$61);
  $63=$smax50<<1;
  $64=$63|1;
  $65=((($64)-($today_0_lcssa))|0);
  $sumROC1_123=$sumROC1_0_lcssa;$prevKAMA_024=$59;$today_1_in25=$today_0_lcssa;$trailingValue_026=$45;$trailingIdx_027=$trailingIdx_021;$today_128=$today_122;
  while(1) {






   $67=(($inReal+($today_128<<3))|0);
   $68=(+(HEAPF64[(($67)>>3)]));
   $69=(($inReal+($trailingIdx_027<<3))|0);
   $70=(+(HEAPF64[(($69)>>3)]));
   $71=($68)-($70);
   $72=($trailingValue_026)-($70);
   $73=(+(Math_abs((+($72)))));
   $74=($sumROC1_123)-($73);
   $75=(($inReal+($today_1_in25<<3))|0);
   $76=(+(HEAPF64[(($75)>>3)]));
   $77=($68)-($76);
   $78=(+(Math_abs((+($77)))));
   $79=($74)+($78);
   $80=$79>$71;
   do {
    if ($80) {
     $82=$79>(-1.0e-14);
     $83=$79<(1.0e-14);
     $or_cond5=$82&$83;
     if ($or_cond5) {
      $tempReal_1=0.6666666666666665;
      break;
     }
     $85=($71)/($79);
     $86=(+(Math_abs((+($85)))));
     $phitmp13=($86)*((0.6021505376344085));
     $phitmp14=($phitmp13)+((0.06451612903225806));
     $tempReal_1=$phitmp14;
    } else {
     $tempReal_1=0.6666666666666665;
    }
   } while(0);

   $88=($tempReal_1)*($tempReal_1);
   $89=(+(HEAPF64[(($67)>>3)]));
   $90=($89)-($prevKAMA_024);
   $91=($88)*($90);
   $92=($prevKAMA_024)+($91);
   $trailingIdx_0=((($trailingIdx_027)+(1))|0);
   $today_1=((($today_128)+(1))|0);
   $93=($today_128|0)<($_startIdx|0);
   if ($93) {
    $sumROC1_123=$79;$prevKAMA_024=$92;$today_1_in25=$today_128;$trailingValue_026=$70;$trailingIdx_027=$trailingIdx_0;$today_128=$today_1;
   } else {
    break;
   }
  }
  $94=((($smax50)+(1))|0);
  $95=((($65)-($61))|0);
  $sumROC1_1_lcssa=$79;$prevKAMA_0_lcssa=$92;$today_1_in_lcssa=$smax50;$trailingValue_0_lcssa=$70;$trailingIdx_0_lcssa=$95;$today_1_lcssa=$94;
 } else {
  $sumROC1_1_lcssa=$sumROC1_0_lcssa;$prevKAMA_0_lcssa=$59;$today_1_in_lcssa=$today_0_lcssa;$trailingValue_0_lcssa=$45;$trailingIdx_0_lcssa=$trailingIdx_021;$today_1_lcssa=$today_122;
 }






 HEAPF64[(($outReal)>>3)]=$prevKAMA_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$today_1_in_lcssa;
 $97=($today_1_lcssa|0)>($endIdx|0);
 if ($97) {
  $outIdx_0_lcssa=1;
 } else {
  $98=($today_1_lcssa|0)>($endIdx|0);
  $smax=($98?$today_1_lcssa:$endIdx);
  $99=((($smax)+(2))|0);
  $sumROC1_215=$sumROC1_1_lcssa;$prevKAMA_116=$prevKAMA_0_lcssa;$today_217=$today_1_lcssa;$outIdx_018=1;$trailingIdx_119=$trailingIdx_0_lcssa;$trailingValue_120=$trailingValue_0_lcssa;
  while(1) {






   $101=(($inReal+($today_217<<3))|0);
   $102=(+(HEAPF64[(($101)>>3)]));
   $103=((($trailingIdx_119)+(1))|0);
   $104=(($inReal+($trailingIdx_119<<3))|0);
   $105=(+(HEAPF64[(($104)>>3)]));
   $106=($102)-($105);
   $107=($trailingValue_120)-($105);
   $108=(+(Math_abs((+($107)))));
   $109=($sumROC1_215)-($108);
   $110=((($today_217)-(1))|0);
   $111=(($inReal+($110<<3))|0);
   $112=(+(HEAPF64[(($111)>>3)]));
   $113=($102)-($112);
   $114=(+(Math_abs((+($113)))));
   $115=($109)+($114);
   $116=$115>$106;
   do {
    if ($116) {
     $118=$115>(-1.0e-14);
     $119=$115<(1.0e-14);
     $or_cond7=$118&$119;
     if ($or_cond7) {
      $tempReal_2=0.6666666666666665;
      break;
     }
     $121=($106)/($115);
     $122=(+(Math_abs((+($121)))));
     $phitmp11=($122)*((0.6021505376344085));
     $phitmp12=($phitmp11)+((0.06451612903225806));
     $tempReal_2=$phitmp12;
    } else {
     $tempReal_2=0.6666666666666665;
    }
   } while(0);

   $124=($tempReal_2)*($tempReal_2);
   $125=((($today_217)+(1))|0);
   $126=(+(HEAPF64[(($101)>>3)]));
   $127=($126)-($prevKAMA_116);
   $128=($124)*($127);
   $129=($prevKAMA_116)+($128);
   $130=((($outIdx_018)+(1))|0);
   $131=(($outReal+($outIdx_018<<3))|0);
   HEAPF64[(($131)>>3)]=$129;
   $132=($today_217|0)<($endIdx|0);
   if ($132) {
    $sumROC1_215=$115;$prevKAMA_116=$129;$today_217=$125;$outIdx_018=$130;$trailingIdx_119=$103;$trailingValue_120=$105;
   } else {
    break;
   }
  }
  $133=((($99)-($today_1_lcssa))|0);
  $outIdx_0_lcssa=$133;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_LINEARREG_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((($_0)-(1))|0);
 $_02=$5;

 return (($_02)|0);
}


function _TA_LINEARREG($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=.0,$22=.0,$23=0,$24=0;
 var $25=0,$26=0,$27=.0,$28=.0,$29=.0,$30=.0,$31=.0,$32=0,$33=0,$34=.0,$35=0,$smax=0,$36=0,$smax13=0,$37=0,$smax14=0,$outIdx_08=0,$today_07=0,$_in=0,$SumY_05=.0;
 var $SumXY_04=.0,$38=0,$39=0,$40=0,$41=.0,$42=.0,$43=.0,$44=.0,$45=.0,$46=0,$SumY_0_lcssa=.0,$SumXY_0_lcssa=.0,$47=.0,$48=.0,$49=.0,$50=.0,$51=.0,$52=.0,$53=.0,$54=.0;
 var $55=.0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((_TA_LINEARREG_Lookback($_03))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=((($_03)-(1))|0);
 $20=(Math_imul($19,$_03)|0);
 $21=(+((($20|0))|0));
 $22=($21)*((0.5));
 $23=$_03<<1;
 $24=((($23)-(1))|0);
 $25=(Math_imul($20,$24)|0);
 $26=(((($25|0))/(6))&-1);
 $27=(+((($26|0))|0));
 $28=($22)*($22);
 $29=(+((($_03|0))|0));
 $30=($29)*($27);
 $31=($28)-($30);
 $32=($_startIdx|0)>($endIdx|0);
 if ($32) {
  $outIdx_0_lcssa=0;
 } else {
  $33=($_03|0)==0;
  $34=(+((($19|0))|0));
  $35=($14|0)>($endIdx|0);
  $smax=($35?$14:$endIdx);
  $36=($smax|0)>($startIdx|0);
  $smax13=($36?$smax:$startIdx);
  $37=($14|0)>($startIdx|0);
  $smax14=($37?$14:$startIdx);
  $today_07=$_startIdx;$outIdx_08=0;
  while(1) {


   if ($33) {
    $SumXY_0_lcssa=0.0;$SumY_0_lcssa=0.0;
   } else {
    $SumXY_04=0.0;$SumY_05=0.0;$_in=$_03;
    while(1) {



     $38=((($_in)-(1))|0);
     $39=((($today_07)-($38))|0);
     $40=(($inReal+($39<<3))|0);
     $41=(+(HEAPF64[(($40)>>3)]));
     $42=($SumY_05)+($41);
     $43=(+((($38|0))|0));
     $44=($43)*($41);
     $45=($SumXY_04)+($44);
     $46=($38|0)==0;
     if ($46) {
      $SumXY_0_lcssa=$45;$SumY_0_lcssa=$42;
      break;
     } else {
      $SumXY_04=$45;$SumY_05=$42;$_in=$38;
     }
    }
   }


   $47=($29)*($SumXY_0_lcssa);
   $48=($22)*($SumY_0_lcssa);
   $49=($47)-($48);
   $50=($49)/($31);
   $51=($22)*($50);
   $52=($SumY_0_lcssa)-($51);
   $53=($52)/($29);
   $54=($34)*($50);
   $55=($53)+($54);
   $56=((($outIdx_08)+(1))|0);
   $57=(($outReal+($outIdx_08<<3))|0);
   HEAPF64[(($57)>>3)]=$55;
   $58=((($today_07)+(1))|0);
   $59=($today_07|0)<($endIdx|0);
   if ($59) {
    $today_07=$58;$outIdx_08=$56;
   } else {
    break;
   }
  }
  $60=((($smax13)+(1))|0);
  $61=((($60)-($smax14))|0);
  $outIdx_0_lcssa=$61;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_LINEARREG_ANGLE_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((($_0)-(1))|0);
 $_02=$5;

 return (($_02)|0);
}


function _TA_LINEARREG_ANGLE($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=.0,$22=.0,$23=0,$24=0;
 var $25=0,$26=0,$27=.0,$28=.0,$29=.0,$30=.0,$31=.0,$32=0,$33=0,$34=0,$smax=0,$35=0,$smax13=0,$36=0,$smax14=0,$outIdx_08=0,$today_07=0,$_in=0,$SumY_05=.0,$SumXY_04=.0;
 var $37=0,$38=0,$39=0,$40=.0,$41=.0,$42=.0,$43=.0,$44=.0,$45=0,$SumY_0_lcssa=.0,$SumXY_0_lcssa=.0,$46=.0,$47=.0,$48=.0,$49=.0,$50=.0,$51=.0,$52=0,$53=0,$54=0;
 var $55=0,$56=0,$57=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((_TA_LINEARREG_ANGLE_Lookback($_03))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=((($_03)-(1))|0);
 $20=(Math_imul($19,$_03)|0);
 $21=(+((($20|0))|0));
 $22=($21)*((0.5));
 $23=$_03<<1;
 $24=((($23)-(1))|0);
 $25=(Math_imul($20,$24)|0);
 $26=(((($25|0))/(6))&-1);
 $27=(+((($26|0))|0));
 $28=($22)*($22);
 $29=(+((($_03|0))|0));
 $30=($29)*($27);
 $31=($28)-($30);
 $32=($_startIdx|0)>($endIdx|0);
 if ($32) {
  $outIdx_0_lcssa=0;
 } else {
  $33=($_03|0)==0;
  $34=($14|0)>($endIdx|0);
  $smax=($34?$14:$endIdx);
  $35=($smax|0)>($startIdx|0);
  $smax13=($35?$smax:$startIdx);
  $36=($14|0)>($startIdx|0);
  $smax14=($36?$14:$startIdx);
  $today_07=$_startIdx;$outIdx_08=0;
  while(1) {


   if ($33) {
    $SumXY_0_lcssa=0.0;$SumY_0_lcssa=0.0;
   } else {
    $SumXY_04=0.0;$SumY_05=0.0;$_in=$_03;
    while(1) {



     $37=((($_in)-(1))|0);
     $38=((($today_07)-($37))|0);
     $39=(($inReal+($38<<3))|0);
     $40=(+(HEAPF64[(($39)>>3)]));
     $41=($SumY_05)+($40);
     $42=(+((($37|0))|0));
     $43=($42)*($40);
     $44=($SumXY_04)+($43);
     $45=($37|0)==0;
     if ($45) {
      $SumXY_0_lcssa=$44;$SumY_0_lcssa=$41;
      break;
     } else {
      $SumXY_04=$44;$SumY_05=$41;$_in=$37;
     }
    }
   }


   $46=($29)*($SumXY_0_lcssa);
   $47=($22)*($SumY_0_lcssa);
   $48=($46)-($47);
   $49=($48)/($31);
   $50=(+(Math_atan($49)));
   $51=($50)*((57.29577951308232));
   $52=((($outIdx_08)+(1))|0);
   $53=(($outReal+($outIdx_08<<3))|0);
   HEAPF64[(($53)>>3)]=$51;
   $54=((($today_07)+(1))|0);
   $55=($today_07|0)<($endIdx|0);
   if ($55) {
    $today_07=$54;$outIdx_08=$52;
   } else {
    break;
   }
  }
  $56=((($smax13)+(1))|0);
  $57=((($56)-($smax14))|0);
  $outIdx_0_lcssa=$57;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_LINEARREG_INTERCEPT_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((($_0)-(1))|0);
 $_02=$5;

 return (($_02)|0);
}


function _TA_LINEARREG_INTERCEPT($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=.0,$22=.0,$23=0,$24=0;
 var $25=0,$26=0,$27=.0,$28=.0,$29=.0,$30=.0,$31=.0,$32=0,$33=0,$34=0,$smax=0,$35=0,$smax13=0,$36=0,$smax14=0,$outIdx_08=0,$today_07=0,$_in=0,$SumY_05=.0,$SumXY_04=.0;
 var $37=0,$38=0,$39=0,$40=.0,$41=.0,$42=.0,$43=.0,$44=.0,$45=0,$SumY_0_lcssa=.0,$SumXY_0_lcssa=.0,$46=.0,$47=.0,$48=.0,$49=.0,$50=.0,$51=.0,$52=.0,$53=0,$54=0;
 var $55=0,$56=0,$57=0,$58=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((_TA_LINEARREG_INTERCEPT_Lookback($_03))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=((($_03)-(1))|0);
 $20=(Math_imul($19,$_03)|0);
 $21=(+((($20|0))|0));
 $22=($21)*((0.5));
 $23=$_03<<1;
 $24=((($23)-(1))|0);
 $25=(Math_imul($20,$24)|0);
 $26=(((($25|0))/(6))&-1);
 $27=(+((($26|0))|0));
 $28=($22)*($22);
 $29=(+((($_03|0))|0));
 $30=($29)*($27);
 $31=($28)-($30);
 $32=($_startIdx|0)>($endIdx|0);
 if ($32) {
  $outIdx_0_lcssa=0;
 } else {
  $33=($_03|0)==0;
  $34=($14|0)>($endIdx|0);
  $smax=($34?$14:$endIdx);
  $35=($smax|0)>($startIdx|0);
  $smax13=($35?$smax:$startIdx);
  $36=($14|0)>($startIdx|0);
  $smax14=($36?$14:$startIdx);
  $today_07=$_startIdx;$outIdx_08=0;
  while(1) {


   if ($33) {
    $SumXY_0_lcssa=0.0;$SumY_0_lcssa=0.0;
   } else {
    $SumXY_04=0.0;$SumY_05=0.0;$_in=$_03;
    while(1) {



     $37=((($_in)-(1))|0);
     $38=((($today_07)-($37))|0);
     $39=(($inReal+($38<<3))|0);
     $40=(+(HEAPF64[(($39)>>3)]));
     $41=($SumY_05)+($40);
     $42=(+((($37|0))|0));
     $43=($42)*($40);
     $44=($SumXY_04)+($43);
     $45=($37|0)==0;
     if ($45) {
      $SumXY_0_lcssa=$44;$SumY_0_lcssa=$41;
      break;
     } else {
      $SumXY_04=$44;$SumY_05=$41;$_in=$37;
     }
    }
   }


   $46=($29)*($SumXY_0_lcssa);
   $47=($22)*($SumY_0_lcssa);
   $48=($46)-($47);
   $49=($48)/($31);
   $50=($22)*($49);
   $51=($SumY_0_lcssa)-($50);
   $52=($51)/($29);
   $53=((($outIdx_08)+(1))|0);
   $54=(($outReal+($outIdx_08<<3))|0);
   HEAPF64[(($54)>>3)]=$52;
   $55=((($today_07)+(1))|0);
   $56=($today_07|0)<($endIdx|0);
   if ($56) {
    $today_07=$55;$outIdx_08=$53;
   } else {
    break;
   }
  }
  $57=((($smax13)+(1))|0);
  $58=((($57)-($smax14))|0);
  $outIdx_0_lcssa=$58;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_LINEARREG_SLOPE_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((($_0)-(1))|0);
 $_02=$5;

 return (($_02)|0);
}


function _TA_LINEARREG_SLOPE($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=.0,$22=.0,$23=0,$24=0;
 var $25=0,$26=0,$27=.0,$28=.0,$29=.0,$30=.0,$31=.0,$32=0,$33=0,$34=0,$smax=0,$35=0,$smax13=0,$36=0,$smax14=0,$outIdx_08=0,$today_07=0,$_in=0,$SumY_05=.0,$SumXY_04=.0;
 var $37=0,$38=0,$39=0,$40=.0,$41=.0,$42=.0,$43=.0,$44=.0,$45=0,$SumY_0_lcssa=.0,$SumXY_0_lcssa=.0,$46=.0,$47=.0,$48=.0,$49=.0,$50=0,$51=0,$52=0,$53=0,$54=0;
 var $55=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((_TA_LINEARREG_SLOPE_Lookback($_03))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=((($_03)-(1))|0);
 $20=(Math_imul($19,$_03)|0);
 $21=(+((($20|0))|0));
 $22=($21)*((0.5));
 $23=$_03<<1;
 $24=((($23)-(1))|0);
 $25=(Math_imul($20,$24)|0);
 $26=(((($25|0))/(6))&-1);
 $27=(+((($26|0))|0));
 $28=($22)*($22);
 $29=(+((($_03|0))|0));
 $30=($29)*($27);
 $31=($28)-($30);
 $32=($_startIdx|0)>($endIdx|0);
 if ($32) {
  $outIdx_0_lcssa=0;
 } else {
  $33=($_03|0)==0;
  $34=($14|0)>($endIdx|0);
  $smax=($34?$14:$endIdx);
  $35=($smax|0)>($startIdx|0);
  $smax13=($35?$smax:$startIdx);
  $36=($14|0)>($startIdx|0);
  $smax14=($36?$14:$startIdx);
  $today_07=$_startIdx;$outIdx_08=0;
  while(1) {


   if ($33) {
    $SumXY_0_lcssa=0.0;$SumY_0_lcssa=0.0;
   } else {
    $SumXY_04=0.0;$SumY_05=0.0;$_in=$_03;
    while(1) {



     $37=((($_in)-(1))|0);
     $38=((($today_07)-($37))|0);
     $39=(($inReal+($38<<3))|0);
     $40=(+(HEAPF64[(($39)>>3)]));
     $41=($SumY_05)+($40);
     $42=(+((($37|0))|0));
     $43=($42)*($40);
     $44=($SumXY_04)+($43);
     $45=($37|0)==0;
     if ($45) {
      $SumXY_0_lcssa=$44;$SumY_0_lcssa=$41;
      break;
     } else {
      $SumXY_04=$44;$SumY_05=$41;$_in=$37;
     }
    }
   }


   $46=($29)*($SumXY_0_lcssa);
   $47=($22)*($SumY_0_lcssa);
   $48=($46)-($47);
   $49=($48)/($31);
   $50=((($outIdx_08)+(1))|0);
   $51=(($outReal+($outIdx_08<<3))|0);
   HEAPF64[(($51)>>3)]=$49;
   $52=((($today_07)+(1))|0);
   $53=($today_07|0)<($endIdx|0);
   if ($53) {
    $today_07=$52;$outIdx_08=$50;
   } else {
    break;
   }
  }
  $54=((($smax13)+(1))|0);
  $55=((($54)-($smax14))|0);
  $outIdx_0_lcssa=$55;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_LN($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(Math_log($13)));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_LOG10($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(_log10((+($13)))));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_MA_Lookback($optInTimePeriod,$optInMAType){
 $optInTimePeriod=($optInTimePeriod)|0;
 $optInMAType=($optInMAType)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_04=0,$5=0,$7=0,$_0=0,$9=0,$12=0,$14=0,$16=0,$18=0,$20=0,$22=0,$24=0,$26=0,$28=0,$_05=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 if ($1) {
  $_04=30;
  label = 3;
 } else {
  $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
  $3=($optInTimePeriod_off>>>0)>((99999)>>>0);
  if ($3) {
   $_05=-1;
  } else {
   $_04=$optInTimePeriod;
   label = 3;
  }
 }
 L3: do {
  if ((label|0) == 3) {

   $5=($optInMAType|0)==-2147483648;
   if ($5) {
    $_0=0;
   } else {
    $7=($optInMAType>>>0)>((8)>>>0);
    if ($7) {
     $_05=-1;
     break;
    } else {
     $_0=$optInMAType;
    }
   }

   $9=($_04|0)<2;
   if ($9) {
    $_05=0;
    break;
   }
   switch (($_0|0)) {
   case 3: {
    $18=((_TA_DEMA_Lookback($_04))|0);
    $_05=$18;
    break L3;
    break;
   }
   case 1: {
    $14=((_TA_EMA_Lookback($_04))|0);
    $_05=$14;
    break L3;
    break;
   }
   case 4: {
    $20=((_TA_TEMA_Lookback($_04))|0);
    $_05=$20;
    break L3;
    break;
   }
   case 6: {
    $24=((_TA_KAMA_Lookback($_04))|0);
    $_05=$24;
    break L3;
    break;
   }
   case 5: {
    $22=((_TA_TRIMA_Lookback($_04))|0);
    $_05=$22;
    break L3;
    break;
   }
   case 7: {
    $26=((_TA_MAMA_Lookback(0.5,0.05))|0);
    $_05=$26;
    break L3;
    break;
   }
   case 0: {
    $12=((_TA_SMA_Lookback($_04))|0);
    $_05=$12;
    break L3;
    break;
   }
   case 2: {
    $16=((_TA_WMA_Lookback($_04))|0);
    $_05=$16;
    break L3;
    break;
   }
   case 8: {
    $28=((_TA_T3_Lookback($_04,0.7))|0);
    $_05=$28;
    break L3;
    break;
   }
   default: {
    $_05=0;
    break L3;
   }
   }
  }
 } while(0);

 return (($_05)|0);
}


function _TA_MA($startIdx,$endIdx,$inReal,$optInTimePeriod,$optInMAType,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $optInMAType=($optInMAType)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_04=0,$12=0,$14=0,$_05=0,$16=0,$18=0,$20=0,$21=0,$22=0,$todayIdx_07=0,$outIdx_06=0,$23=0;
 var $24=.0,$25=0,$26=0,$27=0,$28=0,$31=0,$33=0,$35=0,$37=0,$39=0,$41=0,$43=0,$45=0,$46=0,$47=0,$48=0,$49=0,$51=0,$52=0,$54=0;
 var $_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_04=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $10=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_04=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($optInMAType|0)==-2147483648;
 do {
  if ($12) {
   $_05=0;
  } else {
   $14=($optInMAType>>>0)>((8)>>>0);
   if ($14) {
    $_0=2;
   } else {
    $_05=$optInMAType;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $16=($outReal|0)==0;
 if ($16) {
  $_0=2;

  return (($_0)|0);
 }
 $18=($_04|0)==1;
 if ($18) {
  $20=((($endIdx)-($startIdx))|0);
  $21=((($20)+(1))|0);
  HEAP32[(($outNBElement)>>2)]=$21;
  $22=($20|0)>-1;
  if ($22) {
   $outIdx_06=0;$todayIdx_07=$startIdx;
   while(1) {


    $23=(($inReal+($todayIdx_07<<3))|0);
    $24=(+(HEAPF64[(($23)>>3)]));
    $25=(($outReal+($outIdx_06<<3))|0);
    HEAPF64[(($25)>>3)]=$24;
    $26=((($outIdx_06)+(1))|0);
    $27=((($todayIdx_07)+(1))|0);
    $28=($26|0)<($21|0);
    if ($28) {
     $outIdx_06=$26;$todayIdx_07=$27;
    } else {
     break;
    }
   }
  }
  HEAP32[(($outBegIdx)>>2)]=$startIdx;
  $_0=0;

  return (($_0)|0);
 }
 switch (($_05|0)) {
 case 8: {
  $54=((_TA_T3($startIdx,$endIdx,$inReal,$_04,0.7,$outBegIdx,$outNBElement,$outReal))|0);
  $_0=$54;

  return (($_0)|0);
  break;
 }
 case 6: {
  $43=((_TA_KAMA($startIdx,$endIdx,$inReal,$_04,$outBegIdx,$outNBElement,$outReal))|0);
  $_0=$43;

  return (($_0)|0);
  break;
 }
 case 5: {
  $41=((_TA_TRIMA($startIdx,$endIdx,$inReal,$_04,$outBegIdx,$outNBElement,$outReal))|0);
  $_0=$41;

  return (($_0)|0);
  break;
 }
 case 1: {
  $33=((_TA_EMA($startIdx,$endIdx,$inReal,$_04,$outBegIdx,$outNBElement,$outReal))|0);
  $_0=$33;

  return (($_0)|0);
  break;
 }
 case 4: {
  $39=((_TA_TEMA($startIdx,$endIdx,$inReal,$_04,$outBegIdx,$outNBElement,$outReal))|0);
  $_0=$39;

  return (($_0)|0);
  break;
 }
 case 2: {
  $35=((_TA_WMA($startIdx,$endIdx,$inReal,$_04,$outBegIdx,$outNBElement,$outReal))|0);
  $_0=$35;

  return (($_0)|0);
  break;
 }
 case 3: {
  $37=((_TA_DEMA($startIdx,$endIdx,$inReal,$_04,$outBegIdx,$outNBElement,$outReal))|0);
  $_0=$37;

  return (($_0)|0);
  break;
 }
 case 0: {
  $31=((_TA_SMA($startIdx,$endIdx,$inReal,$_04,$outBegIdx,$outNBElement,$outReal))|0);
  $_0=$31;

  return (($_0)|0);
  break;
 }
 case 7: {
  $45=((($endIdx)-($startIdx))|0);
  $46=$45<<3;
  $47=((($46)+(8))|0);
  $48=((_malloc($47))|0);
  $49=($48|0)==0;
  if ($49) {
   $_0=3;

   return (($_0)|0);
  }
  $51=$48;
  $52=((_TA_MAMA($startIdx,$endIdx,$inReal,0.5,0.05,$outBegIdx,$outNBElement,$outReal,$51))|0);
  _free($48);
  $_0=$52;

  return (($_0)|0);
  break;
 }
 default: {
  $_0=2;

  return (($_0)|0);
 }
 }
  return 0;
}


function _TA_MACD($startIdx,$endIdx,$inReal,$optInFastPeriod,$optInSlowPeriod,$optInSignalPeriod,$outBegIdx,$outNBElement,$outMACD,$outMACDSignal,$outMACDHist){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInFastPeriod=($optInFastPeriod)|0;
 $optInSlowPeriod=($optInSlowPeriod)|0;
 $optInSignalPeriod=($optInSignalPeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outMACD=($outMACD)|0;
 $outMACDSignal=($outMACDSignal)|0;
 $outMACDHist=($outMACDHist)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInFastPeriod_off=0,$10=0,$_06=0,$12=0,$optInSlowPeriod_off=0,$14=0,$_07=0,$16=0,$optInSignalPeriod_off=0,$18=0,$_08=0,$20=0,$21=0,$or_cond9=0;
 var $22=0,$or_cond10=0,$24=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInFastPeriod|0)==-2147483648;
 do {
  if ($8) {
   $_06=12;
  } else {
   $optInFastPeriod_off=((($optInFastPeriod)-(2))|0);
   $10=($optInFastPeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_06=$optInFastPeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($optInSlowPeriod|0)==-2147483648;
 do {
  if ($12) {
   $_07=26;
  } else {
   $optInSlowPeriod_off=((($optInSlowPeriod)-(2))|0);
   $14=($optInSlowPeriod_off>>>0)>((99998)>>>0);
   if ($14) {
    $_0=2;
   } else {
    $_07=$optInSlowPeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $16=($optInSignalPeriod|0)==-2147483648;
 do {
  if ($16) {
   $_08=9;
  } else {
   $optInSignalPeriod_off=((($optInSignalPeriod)-(1))|0);
   $18=($optInSignalPeriod_off>>>0)>((99999)>>>0);
   if ($18) {
    $_0=2;
   } else {
    $_08=$optInSignalPeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $20=($outMACD|0)==0;
 $21=($outMACDSignal|0)==0;
 $or_cond9=$20|$21;
 $22=($outMACDHist|0)==0;
 $or_cond10=$or_cond9|$22;
 if ($or_cond10) {
  $_0=2;

  return (($_0)|0);
 }
 $24=((_TA_INT_MACD($startIdx,$endIdx,$inReal,$_06,$_07,$_08,$outBegIdx,$outNBElement,$outMACD,$outMACDSignal,$outMACDHist))|0);
 $_0=$24;

 return (($_0)|0);
}


function _TA_INT_MACD($startIdx,$endIdx,$inReal,$optInFastPeriod,$optInSlowPeriod,$optInSignalPeriod_2,$outBegIdx,$outNBElement,$outMACD,$outMACDSignal,$outMACDHist){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInFastPeriod=($optInFastPeriod)|0;
 $optInSlowPeriod=($optInSlowPeriod)|0;
 $optInSignalPeriod_2=($optInSignalPeriod_2)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outMACD=($outMACD)|0;
 $outMACDSignal=($outMACDSignal)|0;
 $outMACDHist=($outMACDHist)|0;
 var $outBegIdx1=0,$outNbElement1=0,$outBegIdx2=0,$outNbElement2=0,$1=0,$optInFastPeriod_optInSlowPeriod=0,$optInSlowPeriod_optInFastPeriod=0,$2=0,$4=0,$5=.0,$6=.0,$_14=0,$k1_0=.0,$8=0,$10=0,$11=.0,$12=.0,$_1=0,$k2_0=.0,$14=0;
 var $15=0,$16=0,$17=0,$_startIdx=0,$18=0,$21=0,$22=0,$23=0,$24=0,$25=0,$26=0,$27=0,$30=0,$31=0,$32=0,$35=0,$36=0,$37=0,$40=0,$41=0;
 var $44=0,$45=0,$46=0,$47=0,$or_cond=0,$49=0,$50=0,$51=0,$52=0,$or_cond6=0,$53=0,$54=0,$55=0,$i_09=0,$58=0,$59=.0,$60=0,$61=.0,$62=.0,$63=0;
 var $64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0,$71=0,$72=.0,$73=.0,$74=0,$75=0,$76=0,$77=0,$78=0,$i_17=0,$81=0,$82=.0,$83=0,$84=.0;
 var $85=.0,$86=0,$87=0,$88=0,$89=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $outBegIdx1=((sp)|0);
 $outNbElement1=(((sp)+(8))|0);
 $outBegIdx2=(((sp)+(16))|0);
 $outNbElement2=(((sp)+(24))|0);
 $1=($optInSlowPeriod|0)<($optInFastPeriod|0);
 $optInFastPeriod_optInSlowPeriod=($1?$optInFastPeriod:$optInSlowPeriod);
 $optInSlowPeriod_optInFastPeriod=($1?$optInSlowPeriod:$optInFastPeriod);
 $2=($optInFastPeriod_optInSlowPeriod|0)==0;
 if ($2) {
  $k1_0=0.075;$_14=26;
 } else {
  $4=((($optInFastPeriod_optInSlowPeriod)+(1))|0);
  $5=(+((($4|0))|0));
  $6=((2.0))/($5);
  $k1_0=$6;$_14=$optInFastPeriod_optInSlowPeriod;
 }


 $8=($optInSlowPeriod_optInFastPeriod|0)==0;
 if ($8) {
  $k2_0=0.15;$_1=12;
 } else {
  $10=((($optInSlowPeriod_optInFastPeriod)+(1))|0);
  $11=(+((($10|0))|0));
  $12=((2.0))/($11);
  $k2_0=$12;$_1=$optInSlowPeriod_optInFastPeriod;
 }


 $14=((_TA_EMA_Lookback($optInSignalPeriod_2))|0);
 $15=((_TA_EMA_Lookback($_14))|0);
 $16=((($15)+($14))|0);
 $17=($16|0)>($startIdx|0);
 $_startIdx=($17?$16:$startIdx);
 $18=($_startIdx|0)>($endIdx|0);
 if ($18) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $21=((($endIdx)-($_startIdx))|0);
 $22=((($21)+(1))|0);
 $23=((($22)+($14))|0);
 $24=$23<<3;
 $25=((_malloc($24))|0);
 $26=$25;
 $27=($25|0)==0;
 if ($27) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=3;

  STACKTOP=sp;return (($_0)|0);
 }
 $30=((_malloc($24))|0);
 $31=$30;
 $32=($30|0)==0;
 if ($32) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  _free($25);
  $_0=3;

  STACKTOP=sp;return (($_0)|0);
 }
 $35=((($_startIdx)-($14))|0);
 $36=((_TA_INT_EMA($35,$endIdx,$inReal,$_14,$k1_0,$outBegIdx1,$outNbElement1,$31))|0);
 $37=($36|0)==0;
 if (!($37)) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  _free($25);
  _free($30);
  $_0=$36;

  STACKTOP=sp;return (($_0)|0);
 }
 $40=((_TA_INT_EMA($35,$endIdx,$inReal,$_1,$k2_0,$outBegIdx2,$outNbElement2,$26))|0);
 $41=($40|0)==0;
 if (!($41)) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  _free($25);
  _free($30);
  $_0=$40;

  STACKTOP=sp;return (($_0)|0);
 }
 $44=((HEAP32[(($outBegIdx1)>>2)])|0);
 $45=($44|0)==($35|0);
 $46=((HEAP32[(($outBegIdx2)>>2)])|0);
 $47=($46|0)==($35|0);
 $or_cond=$45&$47;
 do {
  if ($or_cond) {
   $49=((HEAP32[(($outNbElement1)>>2)])|0);
   $50=((HEAP32[(($outNbElement2)>>2)])|0);
   $51=($49|0)==($50|0);
   $52=($49|0)==($23|0);
   $or_cond6=$51&$52;
   if (!($or_cond6)) {
    break;
   }
   $53=((HEAP32[(($outNbElement1)>>2)])|0);
   $54=($53|0)>0;
   if ($54) {
    $55=((HEAP32[(($outNbElement1)>>2)])|0);
    $i_09=0;
    while(1) {

     $58=(($26+($i_09<<3))|0);
     $59=(+(HEAPF64[(($58)>>3)]));
     $60=(($31+($i_09<<3))|0);
     $61=(+(HEAPF64[(($60)>>3)]));
     $62=($59)-($61);
     HEAPF64[(($58)>>3)]=$62;
     $63=((($i_09)+(1))|0);
     $64=($63|0)<($55|0);
     if ($64) {
      $i_09=$63;
     } else {
      break;
     }
    }
   }
   $65=$outMACD;
   $66=(($26+($14<<3))|0);
   $67=$66;
   $68=$22<<3;
   (_memcpy((($65)|0), (($67)|0), $68)|0);
   $69=((HEAP32[(($outNbElement1)>>2)])|0);
   $70=((($69)-(1))|0);
   $71=((($optInSignalPeriod_2)+(1))|0);
   $72=(+((($71|0))|0));
   $73=((2.0))/($72);
   $74=((_TA_INT_EMA(0,$70,$26,$optInSignalPeriod_2,$73,$outBegIdx2,$outNbElement2,$outMACDSignal))|0);
   _free($25);
   _free($30);
   $75=($74|0)==0;
   if (!($75)) {
    HEAP32[(($outBegIdx)>>2)]=0;
    HEAP32[(($outNBElement)>>2)]=0;
    $_0=$74;

    STACKTOP=sp;return (($_0)|0);
   }
   $76=((HEAP32[(($outNbElement2)>>2)])|0);
   $77=($76|0)>0;
   if ($77) {
    $78=((HEAP32[(($outNbElement2)>>2)])|0);
    $i_17=0;
    while(1) {

     $81=(($outMACD+($i_17<<3))|0);
     $82=(+(HEAPF64[(($81)>>3)]));
     $83=(($outMACDSignal+($i_17<<3))|0);
     $84=(+(HEAPF64[(($83)>>3)]));
     $85=($82)-($84);
     $86=(($outMACDHist+($i_17<<3))|0);
     HEAPF64[(($86)>>3)]=$85;
     $87=((($i_17)+(1))|0);
     $88=($87|0)<($78|0);
     if ($88) {
      $i_17=$87;
     } else {
      break;
     }
    }
   }
   HEAP32[(($outBegIdx)>>2)]=$_startIdx;
   $89=((HEAP32[(($outNbElement2)>>2)])|0);
   HEAP32[(($outNBElement)>>2)]=$89;
   $_0=0;

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 _free($25);
 _free($30);
 $_0=5119;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_MACDEXT($startIdx,$endIdx,$inReal,$optInFastPeriod,$optInFastMAType,$optInSlowPeriod,$optInSlowMAType,$optInSignalPeriod,$optInSignalMAType,$outBegIdx,$outNBElement,$outMACD,$outMACDSignal,$outMACDHist){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInFastPeriod=($optInFastPeriod)|0;
 $optInFastMAType=($optInFastMAType)|0;
 $optInSlowPeriod=($optInSlowPeriod)|0;
 $optInSlowMAType=($optInSlowMAType)|0;
 $optInSignalPeriod=($optInSignalPeriod)|0;
 $optInSignalMAType=($optInSignalMAType)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outMACD=($outMACD)|0;
 $outMACDSignal=($outMACDSignal)|0;
 $outMACDHist=($outMACDHist)|0;
 var $outBegIdx1=0,$outNbElement1=0,$outBegIdx2=0,$outNbElement2=0,$1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInFastPeriod_off=0,$10=0,$_013=0,$12=0,$14=0,$_014=0,$16=0,$optInSlowPeriod_off=0,$18=0,$_016=0;
 var $20=0,$22=0,$_018=0,$24=0,$optInSignalPeriod_off=0,$26=0,$_020=0,$28=0,$30=0,$_021=0,$32=0,$33=0,$or_cond25=0,$34=0,$or_cond26=0,$36=0,$_014__018=0,$_013__016=0,$_018__014=0,$_016__013=0;
 var $37=0,$38=0,$39=0,$lookbackLargest_0=0,$40=0,$41=0,$42=0,$_startIdx=0,$43=0,$46=0,$47=0,$48=0,$49=0,$50=0,$51=0,$52=0,$55=0,$56=0,$57=0,$60=0;
 var $61=0,$62=0,$65=0,$66=0,$69=0,$70=0,$71=0,$72=0,$or_cond23=0,$74=0,$75=0,$76=0,$77=0,$or_cond24=0,$78=0,$79=0,$80=0,$i_029=0,$83=0,$84=.0;
 var $85=0,$86=.0,$87=.0,$88=0,$89=0,$90=0,$91=0,$92=0,$93=0,$94=0,$95=0,$96=0,$97=0,$98=0,$99=0,$100=0,$i_127=0,$103=0,$104=.0,$105=0;
 var $106=.0,$107=.0,$108=0,$109=0,$110=0,$111=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+32)|0;
 $outBegIdx1=((sp)|0);
 $outNbElement1=(((sp)+(8))|0);
 $outBegIdx2=(((sp)+(16))|0);
 $outNbElement2=(((sp)+(24))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $8=($optInFastPeriod|0)==-2147483648;
 do {
  if ($8) {
   $_013=12;
  } else {
   $optInFastPeriod_off=((($optInFastPeriod)-(2))|0);
   $10=($optInFastPeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_013=$optInFastPeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $12=($optInFastMAType|0)==-2147483648;
 do {
  if ($12) {
   $_014=0;
  } else {
   $14=($optInFastMAType>>>0)>((8)>>>0);
   if ($14) {
    $_0=2;
   } else {
    $_014=$optInFastMAType;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $16=($optInSlowPeriod|0)==-2147483648;
 do {
  if ($16) {
   $_016=26;
  } else {
   $optInSlowPeriod_off=((($optInSlowPeriod)-(2))|0);
   $18=($optInSlowPeriod_off>>>0)>((99998)>>>0);
   if ($18) {
    $_0=2;
   } else {
    $_016=$optInSlowPeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $20=($optInSlowMAType|0)==-2147483648;
 do {
  if ($20) {
   $_018=0;
  } else {
   $22=($optInSlowMAType>>>0)>((8)>>>0);
   if ($22) {
    $_0=2;
   } else {
    $_018=$optInSlowMAType;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $24=($optInSignalPeriod|0)==-2147483648;
 do {
  if ($24) {
   $_020=9;
  } else {
   $optInSignalPeriod_off=((($optInSignalPeriod)-(1))|0);
   $26=($optInSignalPeriod_off>>>0)>((99999)>>>0);
   if ($26) {
    $_0=2;
   } else {
    $_020=$optInSignalPeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $28=($optInSignalMAType|0)==-2147483648;
 do {
  if ($28) {
   $_021=0;
  } else {
   $30=($optInSignalMAType>>>0)>((8)>>>0);
   if ($30) {
    $_0=2;
   } else {
    $_021=$optInSignalMAType;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $32=($outMACD|0)==0;
 $33=($outMACDSignal|0)==0;
 $or_cond25=$32|$33;
 $34=($outMACDHist|0)==0;
 $or_cond26=$or_cond25|$34;
 if ($or_cond26) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $36=($_016|0)<($_013|0);
 $_014__018=($36?$_014:$_018);
 $_013__016=($36?$_013:$_016);
 $_018__014=($36?$_018:$_014);
 $_016__013=($36?$_016:$_013);
 $37=((_TA_MA_Lookback($_016__013,$_018__014))|0);
 $38=((_TA_MA_Lookback($_013__016,$_014__018))|0);
 $39=($38|0)>($37|0);
 $lookbackLargest_0=($39?$38:$37);
 $40=((_TA_MA_Lookback($_020,$_021))|0);
 $41=((($lookbackLargest_0)+($40))|0);
 $42=($41|0)>($startIdx|0);
 $_startIdx=($42?$41:$startIdx);
 $43=($_startIdx|0)>($endIdx|0);
 if ($43) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $46=((($endIdx)-($_startIdx))|0);
 $47=((($46)+(1))|0);
 $48=((($47)+($40))|0);
 $49=$48<<3;
 $50=((_malloc($49))|0);
 $51=$50;
 $52=($50|0)==0;
 if ($52) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=3;

  STACKTOP=sp;return (($_0)|0);
 }
 $55=((_malloc($49))|0);
 $56=$55;
 $57=($55|0)==0;
 if ($57) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  _free($50);
  $_0=3;

  STACKTOP=sp;return (($_0)|0);
 }
 $60=((($_startIdx)-($40))|0);
 $61=((_TA_MA($60,$endIdx,$inReal,$_013__016,$_014__018,$outBegIdx1,$outNbElement1,$56))|0);
 $62=($61|0)==0;
 if (!($62)) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  _free($50);
  _free($55);
  $_0=$61;

  STACKTOP=sp;return (($_0)|0);
 }
 $65=((_TA_MA($60,$endIdx,$inReal,$_016__013,$_018__014,$outBegIdx2,$outNbElement2,$51))|0);
 $66=($65|0)==0;
 if (!($66)) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  _free($50);
  _free($55);
  $_0=$65;

  STACKTOP=sp;return (($_0)|0);
 }
 $69=((HEAP32[(($outBegIdx1)>>2)])|0);
 $70=($69|0)==($60|0);
 $71=((HEAP32[(($outBegIdx2)>>2)])|0);
 $72=($71|0)==($60|0);
 $or_cond23=$70&$72;
 do {
  if ($or_cond23) {
   $74=((HEAP32[(($outNbElement1)>>2)])|0);
   $75=((HEAP32[(($outNbElement2)>>2)])|0);
   $76=($74|0)==($75|0);
   $77=($74|0)==($48|0);
   $or_cond24=$76&$77;
   if (!($or_cond24)) {
    break;
   }
   $78=((HEAP32[(($outNbElement1)>>2)])|0);
   $79=($78|0)>0;
   if ($79) {
    $80=((HEAP32[(($outNbElement1)>>2)])|0);
    $i_029=0;
    while(1) {

     $83=(($51+($i_029<<3))|0);
     $84=(+(HEAPF64[(($83)>>3)]));
     $85=(($56+($i_029<<3))|0);
     $86=(+(HEAPF64[(($85)>>3)]));
     $87=($84)-($86);
     HEAPF64[(($83)>>3)]=$87;
     $88=((($i_029)+(1))|0);
     $89=($88|0)<($80|0);
     if ($89) {
      $i_029=$88;
     } else {
      break;
     }
    }
   }
   $90=$outMACD;
   $91=(($51+($40<<3))|0);
   $92=$91;
   $93=$47<<3;
   (_memcpy((($90)|0), (($92)|0), $93)|0);
   $94=((HEAP32[(($outNbElement1)>>2)])|0);
   $95=((($94)-(1))|0);
   $96=((_TA_MA(0,$95,$51,$_020,$_021,$outBegIdx2,$outNbElement2,$outMACDSignal))|0);
   _free($50);
   _free($55);
   $97=($96|0)==0;
   if (!($97)) {
    HEAP32[(($outBegIdx)>>2)]=0;
    HEAP32[(($outNBElement)>>2)]=0;
    $_0=$96;

    STACKTOP=sp;return (($_0)|0);
   }
   $98=((HEAP32[(($outNbElement2)>>2)])|0);
   $99=($98|0)>0;
   if ($99) {
    $100=((HEAP32[(($outNbElement2)>>2)])|0);
    $i_127=0;
    while(1) {

     $103=(($outMACD+($i_127<<3))|0);
     $104=(+(HEAPF64[(($103)>>3)]));
     $105=(($outMACDSignal+($i_127<<3))|0);
     $106=(+(HEAPF64[(($105)>>3)]));
     $107=($104)-($106);
     $108=(($outMACDHist+($i_127<<3))|0);
     HEAPF64[(($108)>>3)]=$107;
     $109=((($i_127)+(1))|0);
     $110=($109|0)<($100|0);
     if ($110) {
      $i_127=$109;
     } else {
      break;
     }
    }
   }
   HEAP32[(($outBegIdx)>>2)]=$_startIdx;
   $111=((HEAP32[(($outNbElement2)>>2)])|0);
   HEAP32[(($outNBElement)>>2)]=$111;
   $_0=0;

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 _free($50);
 _free($55);
 $_0=5119;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_MACDFIX($startIdx,$endIdx,$inReal,$optInSignalPeriod,$outBegIdx,$outNBElement,$outMACD,$outMACDSignal,$outMACDHist){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInSignalPeriod=($optInSignalPeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outMACD=($outMACD)|0;
 $outMACDSignal=($outMACDSignal)|0;
 $outMACDHist=($outMACDHist)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInSignalPeriod_off=0,$10=0,$_02=0,$12=0,$13=0,$or_cond3=0,$14=0,$or_cond4=0,$16=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInSignalPeriod|0)==-2147483648;
 do {
  if ($8) {
   $_02=9;
  } else {
   $optInSignalPeriod_off=((($optInSignalPeriod)-(1))|0);
   $10=($optInSignalPeriod_off>>>0)>((99999)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_02=$optInSignalPeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outMACD|0)==0;
 $13=($outMACDSignal|0)==0;
 $or_cond3=$12|$13;
 $14=($outMACDHist|0)==0;
 $or_cond4=$or_cond3|$14;
 if ($or_cond4) {
  $_0=2;

  return (($_0)|0);
 }
 $16=((_TA_INT_MACD($startIdx,$endIdx,$inReal,0,0,$_02,$outBegIdx,$outNBElement,$outMACD,$outMACDSignal,$outMACDHist))|0);
 $_0=$16;

 return (($_0)|0);
}


function _TA_MAMA_Lookback($optInFastLimit,$optInSlowLimit){
 $optInFastLimit=+($optInFastLimit);
 $optInSlowLimit=+($optInSlowLimit);
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$9=0,$or_cond3=0,$11=0,$12=0,$13=0,$14=0,$_05=0,label=0;

 $1=$optInFastLimit==(-4.0e+37);
 do {
  if (!($1)) {
   $3=$optInFastLimit<(0.01);
   $4=$optInFastLimit>(0.99);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_05=-1;
   } else {
    break;
   }

   return (($_05)|0);
  }
 } while(0);
 $6=$optInSlowLimit==(-4.0e+37);
 do {
  if (!($6)) {
   $8=$optInSlowLimit<(0.01);
   $9=$optInSlowLimit>(0.99);
   $or_cond3=$8|$9;
   if ($or_cond3) {
    $_05=-1;
   } else {
    break;
   }

   return (($_05)|0);
  }
 } while(0);
 $11=((HEAP32[((272)>>2)])|0);
 $12=(($11+116)|0);
 $13=((HEAP32[(($12)>>2)])|0);
 $14=((($13)+(32))|0);
 $_05=$14;

 return (($_05)|0);
}


function _TA_MAMA($startIdx,$endIdx,$inReal,$optInFastLimit,$optInSlowLimit,$outBegIdx,$outNBElement,$outMAMA,$outFAMA){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInFastLimit=+($optInFastLimit);
 $optInSlowLimit=+($optInSlowLimit);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outMAMA=($outMAMA)|0;
 $outFAMA=($outFAMA)|0;
 var $detrender_Odd=0,$detrender_Even=0,$Q1_Odd=0,$Q1_Even=0,$jI_Odd=0,$jI_Even=0,$jQ_Odd=0,$jQ_Even=0,$1=0,$3=0,$4=0,$or_cond10=0,$6=0,$8=0,$10=0,$11=0,$or_cond=0,$_07=.0,$13=0,$15=0;
 var $16=0,$or_cond3=0,$_08=.0,$18=0,$19=0,$or_cond11=0,$21=0,$22=0,$23=0,$24=0,$25=0,$_startIdx=0,$26=0,$29=0,$30=0,$31=0,$32=.0,$33=0,$34=0,$35=.0;
 var $36=0,$37=.0,$38=0,$39=0,$smax=0,$40=0,$41=.0,$42=0,$43=.0,$44=0,$45=0,$46=.0,$47=.0,$48=0,$49=0,$50=.0,$51=0,$52=0,$53=.0,$54=.0;
 var $55=.0,$56=0,$57=0,$58=.0,$59=0,$60=0,$61=.0,$62=.0,$63=.0,$64=0,$65=0,$66=.0,$67=0,$68=0,$69=.0,$70=.0,$71=.0,$72=0,$73=0,$74=.0;
 var $75=0,$76=0,$77=.0,$78=.0,$79=.0,$80=0,$81=0,$82=.0,$83=0,$84=0,$85=.0,$86=.0,$87=.0,$88=0,$89=0,$90=.0,$91=0,$92=0,$93=.0,$94=.0;
 var $95=.0,$96=0,$97=0,$98=.0,$99=0,$100=0,$101=.0,$102=.0,$103=.0,$104=0,$105=0,$106=.0,$107=0,$108=.0,$109=.0,$110=.0,$111=0,$112=.0,$113=0,$114=0;
 var $115=0,$116=0,$117=0,$118=0,$119=0,$120=0,$121=0,$122=0,$123=.0,$124=.0,$125=.0,$126=.0,$127=.0,$128=.0,$129=.0,$130=.0,$131=.0,$132=.0,$133=.0,$134=.0;
 var $135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=.0,$141=.0,$142=.0,$143=.0,$144=.0,$145=.0,$146=.0,$147=.0,$148=.0,$149=.0,$150=.0,$151=.0,$152=.0,$153=0,$154=0;
 var $155=0,$156=0,$157=.0,$prevPhase_046=.0,$fama_045=.0,$mama_044=.0,$I1ForEvenPrev3_043=.0,$I1ForEvenPrev2_042=.0,$I1ForOddPrev3_041=.0,$I1ForOddPrev2_040=.0,$Im_039=.0,$Re_038=.0,$prevI2_037=.0,$prevQ2_036=.0,$prev_jQ_input_Even_035=.0,$prev_jQ_input_Odd_034=.0,$prev_jQ_Even_033=.0,$prev_jQ_Odd_032=.0,$prev_jI_input_Even_031=.0,$prev_jI_input_Odd_030=.0;
 var $prev_jI_Even_029=.0,$prev_jI_Odd_028=.0,$prev_Q1_input_Even_027=.0,$prev_Q1_input_Odd_026=.0,$prev_Q1_Even_025=.0,$prev_Q1_Odd_024=.0,$prev_detrender_input_Even_023=.0,$prev_detrender_input_Odd_022=.0,$prev_detrender_Even_021=.0,$prev_detrender_Odd_020=.0,$hilbertIdx_019=0,$trailingWMAValue_118=.0,$periodWMASub_117=.0,$periodWMASum_116=.0,$trailingWMAIdx_115=0,$period_014=.0,$outIdx_013=0,$today_112=0,$159=.0,$160=.0;
 var $161=0,$162=.0,$163=.0,$164=.0,$165=.0,$166=.0,$167=0,$168=0,$169=.0,$170=.0,$171=.0,$172=0,$173=0,$174=.0,$176=0,$177=.0,$178=.0,$179=.0,$180=.0,$181=.0;
 var $182=.0,$183=.0,$184=0,$185=.0,$186=.0,$187=.0,$188=.0,$189=.0,$190=.0,$191=.0,$192=0,$193=.0,$194=.0,$195=.0,$196=.0,$197=.0,$198=.0,$199=.0,$200=0,$201=.0;
 var $202=.0,$203=.0,$204=.0,$205=.0,$206=.0,$207=0,$208=0,$_=0,$209=.0,$210=.0,$211=.0,$212=.0,$213=.0,$214=.0,$215=.0,$216=.0,$217=0,$219=.0,$220=.0,$221=.0;
 var $223=0,$224=.0,$225=.0,$226=.0,$227=.0,$228=.0,$229=.0,$230=.0,$231=0,$232=.0,$233=.0,$234=.0,$235=.0,$236=.0,$237=.0,$238=.0,$239=0,$240=.0,$241=.0,$242=.0;
 var $243=.0,$244=.0,$245=.0,$246=.0,$247=0,$248=.0,$249=.0,$250=.0,$251=.0,$252=.0,$253=.0,$254=.0,$255=.0,$256=.0,$257=.0,$258=.0,$259=.0,$260=.0,$261=.0,$262=0;
 var $264=.0,$265=.0,$266=.0,$tempReal2_0=.0,$hilbertIdx_1=0,$prev_detrender_Odd_1=.0,$prev_detrender_Even_1=.0,$prev_detrender_input_Odd_1=.0,$prev_detrender_input_Even_1=.0,$prev_Q1_Odd_1=.0,$prev_Q1_Even_1=.0,$prev_Q1_input_Odd_1=.0,$prev_Q1_input_Even_1=.0,$prev_jI_Odd_1=.0,$prev_jI_Even_1=.0,$prev_jI_input_Odd_1=.0,$prev_jI_input_Even_1=.0,$prev_jQ_Odd_1=.0,$prev_jQ_Even_1=.0,$prev_jQ_input_Odd_1=.0;
 var $prev_jQ_input_Even_1=.0,$Q2_0=.0,$I2_0=.0,$I1ForOddPrev2_1=.0,$I1ForOddPrev3_1=.0,$I1ForEvenPrev2_1=.0,$I1ForEvenPrev3_1=.0,$268=.0,$269=0,$tempReal_0=.0,$270=0,$272=.0,$273=0,$tempReal_1=.0,$276=.0,$277=.0,$278=.0,$279=.0,$280=.0,$281=.0;
 var $282=.0,$283=.0,$284=.0,$285=0,$287=0,$288=0,$289=0,$outIdx_1=0,$291=.0,$292=.0,$293=.0,$294=.0,$295=.0,$296=.0,$297=.0,$298=.0,$299=.0,$300=.0,$301=0,$302=0;
 var $or_cond5=0,$304=.0,$305=.0,$306=.0,$307=.0,$period_1=.0,$309=.0,$310=0,$period_2=.0,$311=.0,$312=0,$period_3=.0,$313=0,$315=0,$period_4=.0,$318=.0,$319=.0,$320=.0,$321=0,$phitmp=.0;
 var $phitmp9=.0,$322=0,$outIdx_0_lcssa=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+192)|0;
 $detrender_Odd=((sp)|0);
 $detrender_Even=(((sp)+(24))|0);
 $Q1_Odd=(((sp)+(48))|0);
 $Q1_Even=(((sp)+(72))|0);
 $jI_Odd=(((sp)+(96))|0);
 $jI_Even=(((sp)+(120))|0);
 $jQ_Odd=(((sp)+(144))|0);
 $jQ_Even=(((sp)+(168))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond10=$3|$4;
 if ($or_cond10) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $8=$optInFastLimit==(-4.0e+37);
 do {
  if ($8) {
   $_07=0.5;
  } else {
   $10=$optInFastLimit<(0.01);
   $11=$optInFastLimit>(0.99);
   $or_cond=$10|$11;
   if ($or_cond) {
    $_0=2;
   } else {
    $_07=$optInFastLimit;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $13=$optInSlowLimit==(-4.0e+37);
 do {
  if ($13) {
   $_08=0.05;
  } else {
   $15=$optInSlowLimit<(0.01);
   $16=$optInSlowLimit>(0.99);
   $or_cond3=$15|$16;
   if ($or_cond3) {
    $_0=2;
   } else {
    $_08=$optInSlowLimit;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $18=($outMAMA|0)==0;
 $19=($outFAMA|0)==0;
 $or_cond11=$18|$19;
 if ($or_cond11) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $21=((HEAP32[((272)>>2)])|0);
 $22=(($21+116)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=((($23)+(32))|0);
 $25=($24|0)>($startIdx|0);
 $_startIdx=($25?$24:$startIdx);
 $26=($_startIdx|0)>($endIdx|0);
 if ($26) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $29=((($_startIdx)-($24))|0);
 $30=((($29)+(1))|0);
 $31=(($inReal+($29<<3))|0);
 $32=(+(HEAPF64[(($31)>>3)]));
 $33=((($29)+(2))|0);
 $34=(($inReal+($30<<3))|0);
 $35=(+(HEAPF64[(($34)>>3)]));
 $36=(($inReal+($33<<3))|0);
 $37=(+(HEAPF64[(($36)>>3)]));
 $38=((($23)+(32))|0);
 $39=($38|0)<($startIdx|0);
 $smax=($39?$startIdx:$38);
 $40=((($29)+(3))|0);
 $41=($32)+($35);
 $42=((($smax)-(21))|0);
 $43=($41)+($37);
 $44=((($29)+(4))|0);
 $45=(($inReal+($40<<3))|0);
 $46=(+(HEAPF64[(($45)>>3)]));
 $47=($43)+($46);
 $48=((($29)+(1))|0);
 $49=(($inReal+($29<<3))|0);
 $50=(+(HEAPF64[(($49)>>3)]));
 $51=((($29)+(5))|0);
 $52=(($inReal+($44<<3))|0);
 $53=(+(HEAPF64[(($52)>>3)]));
 $54=($47)+($53);
 $55=($54)-($50);
 $56=((($29)+(2))|0);
 $57=(($inReal+($48<<3))|0);
 $58=(+(HEAPF64[(($57)>>3)]));
 $59=((($29)+(6))|0);
 $60=(($inReal+($51<<3))|0);
 $61=(+(HEAPF64[(($60)>>3)]));
 $62=($55)+($61);
 $63=($62)-($58);
 $64=((($29)+(3))|0);
 $65=(($inReal+($56<<3))|0);
 $66=(+(HEAPF64[(($65)>>3)]));
 $67=((($29)+(7))|0);
 $68=(($inReal+($59<<3))|0);
 $69=(+(HEAPF64[(($68)>>3)]));
 $70=($63)+($69);
 $71=($70)-($66);
 $72=((($29)+(4))|0);
 $73=(($inReal+($64<<3))|0);
 $74=(+(HEAPF64[(($73)>>3)]));
 $75=((($29)+(8))|0);
 $76=(($inReal+($67<<3))|0);
 $77=(+(HEAPF64[(($76)>>3)]));
 $78=($71)+($77);
 $79=($78)-($74);
 $80=((($29)+(5))|0);
 $81=(($inReal+($72<<3))|0);
 $82=(+(HEAPF64[(($81)>>3)]));
 $83=((($29)+(9))|0);
 $84=(($inReal+($75<<3))|0);
 $85=(+(HEAPF64[(($84)>>3)]));
 $86=($79)+($85);
 $87=($86)-($82);
 $88=((($29)+(6))|0);
 $89=(($inReal+($80<<3))|0);
 $90=(+(HEAPF64[(($89)>>3)]));
 $91=((($29)+(10))|0);
 $92=(($inReal+($83<<3))|0);
 $93=(+(HEAPF64[(($92)>>3)]));
 $94=($87)+($93);
 $95=($94)-($90);
 $96=((($29)+(7))|0);
 $97=(($inReal+($88<<3))|0);
 $98=(+(HEAPF64[(($97)>>3)]));
 $99=((($29)+(11))|0);
 $100=(($inReal+($91<<3))|0);
 $101=(+(HEAPF64[(($100)>>3)]));
 $102=($95)+($101);
 $103=($102)-($98);
 $104=((($29)+(8))|0);
 $105=(($inReal+($96<<3))|0);
 $106=(+(HEAPF64[(($105)>>3)]));
 $107=(($inReal+($99<<3))|0);
 $108=(+(HEAPF64[(($107)>>3)]));
 $109=($103)+($108);
 $110=($109)-($106);
 $111=(($inReal+($104<<3))|0);
 $112=(+(HEAPF64[(($111)>>3)]));
 $113=((($42)-($23))|0);
 $114=$detrender_Odd;
 _memset((((($114)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $115=$detrender_Even;
 _memset((((($115)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $116=$Q1_Odd;
 _memset((((($116)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $117=$Q1_Even;
 _memset((((($117)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $118=$jI_Odd;
 _memset((((($118)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $119=$jI_Even;
 _memset((((($119)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $120=$jQ_Odd;
 _memset((((($120)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 $121=($113|0)<($endIdx|0);
 $122=$jQ_Even;
 _memset((((($122)|0))|0), ((((0)|0))|0), ((((24)|0))|0))|0;
 if ($121) {
  $123=($35)*((2.0));
  $124=($32)+($123);
  $125=($37)*((3.0));
  $126=($46)*((4.0));
  $127=($124)+($125);
  $128=($127)+($126);
  $129=($53)*((4.0));
  $130=($128)-($47);
  $131=($130)+($129);
  $132=($61)*((4.0));
  $133=($131)-($55);
  $134=($133)+($132);
  $135=($69)*((4.0));
  $136=($134)-($63);
  $137=($136)+($135);
  $138=($77)*((4.0));
  $139=($137)-($71);
  $140=($139)+($138);
  $141=($85)*((4.0));
  $142=($140)-($79);
  $143=($142)+($141);
  $144=($93)*((4.0));
  $145=($143)-($87);
  $146=($145)+($144);
  $147=($101)*((4.0));
  $148=($146)-($95);
  $149=($148)+($147);
  $150=($108)*((4.0));
  $151=($149)-($103);
  $152=($151)+($150);
  $153=((($smax)-(23))|0);
  $154=((($smax)-(20))|0);
  $155=((($154)-($23))|0);
  $156=((($153)-($23))|0);
  $157=($152)-($110);
  $today_112=$155;$outIdx_013=0;$period_014=0.0;$trailingWMAIdx_115=$156;$periodWMASum_116=$157;$periodWMASub_117=$110;$trailingWMAValue_118=$112;$hilbertIdx_019=0;$prev_detrender_Odd_020=0.0;$prev_detrender_Even_021=0.0;$prev_detrender_input_Odd_022=0.0;$prev_detrender_input_Even_023=0.0;$prev_Q1_Odd_024=0.0;$prev_Q1_Even_025=0.0;$prev_Q1_input_Odd_026=0.0;$prev_Q1_input_Even_027=0.0;$prev_jI_Odd_028=0.0;$prev_jI_Even_029=0.0;$prev_jI_input_Odd_030=0.0;$prev_jI_input_Even_031=0.0;$prev_jQ_Odd_032=0.0;$prev_jQ_Even_033=0.0;$prev_jQ_input_Odd_034=0.0;$prev_jQ_input_Even_035=0.0;$prevQ2_036=0.0;$prevI2_037=0.0;$Re_038=0.0;$Im_039=0.0;$I1ForOddPrev2_040=0.0;$I1ForOddPrev3_041=0.0;$I1ForEvenPrev2_042=0.0;$I1ForEvenPrev3_043=0.0;$mama_044=0.0;$fama_045=0.0;$prevPhase_046=0.0;
  while(1) {



































   $159=($period_014)*((0.075));
   $160=($159)+((0.54));
   $161=(($inReal+($today_112<<3))|0);
   $162=(+(HEAPF64[(($161)>>3)]));
   $163=($periodWMASub_117)+($162);
   $164=($163)-($trailingWMAValue_118);
   $165=($162)*((4.0));
   $166=($periodWMASum_116)+($165);
   $167=((($trailingWMAIdx_115)+(1))|0);
   $168=(($inReal+($trailingWMAIdx_115<<3))|0);
   $169=(+(HEAPF64[(($168)>>3)]));
   $170=($166)*((0.1));
   $171=($166)-($164);
   $172=$today_112&1;
   $173=($172|0)==0;
   $174=($170)*((0.0962));
   do {
    if ($173) {
     $176=(($detrender_Even+($hilbertIdx_019<<3))|0);
     $177=(+(HEAPF64[(($176)>>3)]));
     HEAPF64[(($176)>>3)]=$174;
     $178=($174)-($177);
     $179=($178)-($prev_detrender_Even_021);
     $180=($prev_detrender_input_Even_023)*((0.5769));
     $181=($180)+($179);
     $182=($160)*($181);
     $183=($182)*((0.0962));
     $184=(($Q1_Even+($hilbertIdx_019<<3))|0);
     $185=(+(HEAPF64[(($184)>>3)]));
     HEAPF64[(($184)>>3)]=$183;
     $186=($183)-($185);
     $187=($186)-($prev_Q1_Even_025);
     $188=($prev_Q1_input_Even_027)*((0.5769));
     $189=($188)+($187);
     $190=($160)*($189);
     $191=($I1ForEvenPrev3_043)*((0.0962));
     $192=(($jI_Even+($hilbertIdx_019<<3))|0);
     $193=(+(HEAPF64[(($192)>>3)]));
     HEAPF64[(($192)>>3)]=$191;
     $194=($191)-($193);
     $195=($194)-($prev_jI_Even_029);
     $196=($prev_jI_input_Even_031)*((0.5769));
     $197=($196)+($195);
     $198=($160)*($197);
     $199=($190)*((0.0962));
     $200=(($jQ_Even+($hilbertIdx_019<<3))|0);
     $201=(+(HEAPF64[(($200)>>3)]));
     HEAPF64[(($200)>>3)]=$199;
     $202=($199)-($201);
     $203=($202)-($prev_jQ_Even_033);
     $204=($prev_jQ_input_Even_035)*((0.5769));
     $205=($204)+($203);
     $206=($160)*($205);
     $207=((($hilbertIdx_019)+(1))|0);
     $208=($207|0)==3;
     $_=($208?0:$207);
     $209=($198)+($190);
     $210=($209)*((0.2));
     $211=($prevQ2_036)*((0.8));
     $212=($211)+($210);
     $213=($I1ForEvenPrev3_043)-($206);
     $214=($213)*((0.2));
     $215=($prevI2_037)*((0.8));
     $216=($215)+($214);
     $217=$I1ForEvenPrev3_043!=(0.0);
     if (!($217)) {
      $I1ForEvenPrev3_1=$I1ForEvenPrev3_043;$I1ForEvenPrev2_1=$I1ForEvenPrev2_042;$I1ForOddPrev3_1=$I1ForOddPrev2_040;$I1ForOddPrev2_1=$182;$I2_0=$216;$Q2_0=$212;$prev_jQ_input_Even_1=$190;$prev_jQ_input_Odd_1=$prev_jQ_input_Odd_034;$prev_jQ_Even_1=$204;$prev_jQ_Odd_1=$prev_jQ_Odd_032;$prev_jI_input_Even_1=$I1ForEvenPrev3_043;$prev_jI_input_Odd_1=$prev_jI_input_Odd_030;$prev_jI_Even_1=$196;$prev_jI_Odd_1=$prev_jI_Odd_028;$prev_Q1_input_Even_1=$182;$prev_Q1_input_Odd_1=$prev_Q1_input_Odd_026;$prev_Q1_Even_1=$188;$prev_Q1_Odd_1=$prev_Q1_Odd_024;$prev_detrender_input_Even_1=$170;$prev_detrender_input_Odd_1=$prev_detrender_input_Odd_022;$prev_detrender_Even_1=$180;$prev_detrender_Odd_1=$prev_detrender_Odd_020;$hilbertIdx_1=$_;$tempReal2_0=0.0;
      break;
     }
     $219=($190)/($I1ForEvenPrev3_043);
     $220=(+(Math_atan($219)));
     $221=($220)*((57.29577951308232));
     $I1ForEvenPrev3_1=$I1ForEvenPrev3_043;$I1ForEvenPrev2_1=$I1ForEvenPrev2_042;$I1ForOddPrev3_1=$I1ForOddPrev2_040;$I1ForOddPrev2_1=$182;$I2_0=$216;$Q2_0=$212;$prev_jQ_input_Even_1=$190;$prev_jQ_input_Odd_1=$prev_jQ_input_Odd_034;$prev_jQ_Even_1=$204;$prev_jQ_Odd_1=$prev_jQ_Odd_032;$prev_jI_input_Even_1=$I1ForEvenPrev3_043;$prev_jI_input_Odd_1=$prev_jI_input_Odd_030;$prev_jI_Even_1=$196;$prev_jI_Odd_1=$prev_jI_Odd_028;$prev_Q1_input_Even_1=$182;$prev_Q1_input_Odd_1=$prev_Q1_input_Odd_026;$prev_Q1_Even_1=$188;$prev_Q1_Odd_1=$prev_Q1_Odd_024;$prev_detrender_input_Even_1=$170;$prev_detrender_input_Odd_1=$prev_detrender_input_Odd_022;$prev_detrender_Even_1=$180;$prev_detrender_Odd_1=$prev_detrender_Odd_020;$hilbertIdx_1=$_;$tempReal2_0=$221;
    } else {
     $223=(($detrender_Odd+($hilbertIdx_019<<3))|0);
     $224=(+(HEAPF64[(($223)>>3)]));
     HEAPF64[(($223)>>3)]=$174;
     $225=($174)-($224);
     $226=($225)-($prev_detrender_Odd_020);
     $227=($prev_detrender_input_Odd_022)*((0.5769));
     $228=($227)+($226);
     $229=($160)*($228);
     $230=($229)*((0.0962));
     $231=(($Q1_Odd+($hilbertIdx_019<<3))|0);
     $232=(+(HEAPF64[(($231)>>3)]));
     HEAPF64[(($231)>>3)]=$230;
     $233=($230)-($232);
     $234=($233)-($prev_Q1_Odd_024);
     $235=($prev_Q1_input_Odd_026)*((0.5769));
     $236=($235)+($234);
     $237=($160)*($236);
     $238=($I1ForOddPrev3_041)*((0.0962));
     $239=(($jI_Odd+($hilbertIdx_019<<3))|0);
     $240=(+(HEAPF64[(($239)>>3)]));
     HEAPF64[(($239)>>3)]=$238;
     $241=($238)-($240);
     $242=($241)-($prev_jI_Odd_028);
     $243=($prev_jI_input_Odd_030)*((0.5769));
     $244=($243)+($242);
     $245=($160)*($244);
     $246=($237)*((0.0962));
     $247=(($jQ_Odd+($hilbertIdx_019<<3))|0);
     $248=(+(HEAPF64[(($247)>>3)]));
     HEAPF64[(($247)>>3)]=$246;
     $249=($246)-($248);
     $250=($249)-($prev_jQ_Odd_032);
     $251=($prev_jQ_input_Odd_034)*((0.5769));
     $252=($251)+($250);
     $253=($160)*($252);
     $254=($245)+($237);
     $255=($254)*((0.2));
     $256=($prevQ2_036)*((0.8));
     $257=($256)+($255);
     $258=($I1ForOddPrev3_041)-($253);
     $259=($258)*((0.2));
     $260=($prevI2_037)*((0.8));
     $261=($260)+($259);
     $262=$I1ForOddPrev3_041!=(0.0);
     if (!($262)) {
      $I1ForEvenPrev3_1=$I1ForEvenPrev2_042;$I1ForEvenPrev2_1=$229;$I1ForOddPrev3_1=$I1ForOddPrev3_041;$I1ForOddPrev2_1=$I1ForOddPrev2_040;$I2_0=$261;$Q2_0=$257;$prev_jQ_input_Even_1=$prev_jQ_input_Even_035;$prev_jQ_input_Odd_1=$237;$prev_jQ_Even_1=$prev_jQ_Even_033;$prev_jQ_Odd_1=$251;$prev_jI_input_Even_1=$prev_jI_input_Even_031;$prev_jI_input_Odd_1=$I1ForOddPrev3_041;$prev_jI_Even_1=$prev_jI_Even_029;$prev_jI_Odd_1=$243;$prev_Q1_input_Even_1=$prev_Q1_input_Even_027;$prev_Q1_input_Odd_1=$229;$prev_Q1_Even_1=$prev_Q1_Even_025;$prev_Q1_Odd_1=$235;$prev_detrender_input_Even_1=$prev_detrender_input_Even_023;$prev_detrender_input_Odd_1=$170;$prev_detrender_Even_1=$prev_detrender_Even_021;$prev_detrender_Odd_1=$227;$hilbertIdx_1=$hilbertIdx_019;$tempReal2_0=0.0;
      break;
     }
     $264=($237)/($I1ForOddPrev3_041);
     $265=(+(Math_atan($264)));
     $266=($265)*((57.29577951308232));
     $I1ForEvenPrev3_1=$I1ForEvenPrev2_042;$I1ForEvenPrev2_1=$229;$I1ForOddPrev3_1=$I1ForOddPrev3_041;$I1ForOddPrev2_1=$I1ForOddPrev2_040;$I2_0=$261;$Q2_0=$257;$prev_jQ_input_Even_1=$prev_jQ_input_Even_035;$prev_jQ_input_Odd_1=$237;$prev_jQ_Even_1=$prev_jQ_Even_033;$prev_jQ_Odd_1=$251;$prev_jI_input_Even_1=$prev_jI_input_Even_031;$prev_jI_input_Odd_1=$I1ForOddPrev3_041;$prev_jI_Even_1=$prev_jI_Even_029;$prev_jI_Odd_1=$243;$prev_Q1_input_Even_1=$prev_Q1_input_Even_027;$prev_Q1_input_Odd_1=$229;$prev_Q1_Even_1=$prev_Q1_Even_025;$prev_Q1_Odd_1=$235;$prev_detrender_input_Even_1=$prev_detrender_input_Even_023;$prev_detrender_input_Odd_1=$170;$prev_detrender_Even_1=$prev_detrender_Even_021;$prev_detrender_Odd_1=$227;$hilbertIdx_1=$hilbertIdx_019;$tempReal2_0=$266;
    }
   } while(0);
























   $268=($prevPhase_046)-($tempReal2_0);
   $269=$268<(1.0);
   $tempReal_0=($269?(1.0):$268);
   $270=$tempReal_0>(1.0);
   do {
    if ($270) {
     $272=($_07)/($tempReal_0);
     $273=$272<$_08;
     if (!($273)) {
      $tempReal_1=$272;
      break;
     }
     $tempReal_1=$_08;
    } else {
     $tempReal_1=$_07;
    }
   } while(0);

   $276=($162)*($tempReal_1);
   $277=((1.0))-($tempReal_1);
   $278=($mama_044)*($277);
   $279=($276)+($278);
   $280=($tempReal_1)*((0.5));
   $281=($280)*($279);
   $282=((1.0))-($280);
   $283=($fama_045)*($282);
   $284=($283)+($281);
   $285=($today_112|0)<($_startIdx|0);
   if ($285) {
    $outIdx_1=$outIdx_013;
   } else {
    $287=(($outMAMA+($outIdx_013<<3))|0);
    HEAPF64[(($287)>>3)]=$279;
    $288=((($outIdx_013)+(1))|0);
    $289=(($outFAMA+($outIdx_013<<3))|0);
    HEAPF64[(($289)>>3)]=$284;
    $outIdx_1=$288;
   }

   $291=($prevI2_037)*($I2_0);
   $292=($prevQ2_036)*($Q2_0);
   $293=($292)+($291);
   $294=($293)*((0.2));
   $295=($Re_038)+($294);
   $296=($prevQ2_036)*($I2_0);
   $297=($prevI2_037)*($Q2_0);
   $298=($296)-($297);
   $299=($298)*((0.2));
   $300=($Im_039)+($299);
   $301=$300!=(0.0);
   $302=$295!=(0.0);
   $or_cond5=$301&$302;
   if ($or_cond5) {
    $304=($300)/($295);
    $305=(+(Math_atan($304)));
    $306=($305)*((57.29577951308232));
    $307=((360.0))/($306);
    $period_1=$307;
   } else {
    $period_1=$period_014;
   }

   $309=($period_014)*((1.5));
   $310=$period_1>$309;
   $period_2=($310?$309:$period_1);
   $311=($period_014)*((0.67));
   $312=$period_2<$311;
   $period_3=($312?$311:$period_2);
   $313=$period_3<(6.0);
   do {
    if ($313) {
     $period_4=6.0;
    } else {
     $315=$period_3>(50.0);
     if (!($315)) {
      $period_4=$period_3;
      break;
     }
     $period_4=50.0;
    }
   } while(0);

   $318=($period_4)*((0.2));
   $319=($period_014)*((0.8));
   $320=($319)+($318);
   $321=((($today_112)+(1))|0);
   $phitmp=($295)*((0.8));
   $phitmp9=($300)*((0.8));
   $322=($today_112|0)<($endIdx|0);
   if ($322) {
    $today_112=$321;$outIdx_013=$outIdx_1;$period_014=$320;$trailingWMAIdx_115=$167;$periodWMASum_116=$171;$periodWMASub_117=$164;$trailingWMAValue_118=$169;$hilbertIdx_019=$hilbertIdx_1;$prev_detrender_Odd_020=$prev_detrender_Odd_1;$prev_detrender_Even_021=$prev_detrender_Even_1;$prev_detrender_input_Odd_022=$prev_detrender_input_Odd_1;$prev_detrender_input_Even_023=$prev_detrender_input_Even_1;$prev_Q1_Odd_024=$prev_Q1_Odd_1;$prev_Q1_Even_025=$prev_Q1_Even_1;$prev_Q1_input_Odd_026=$prev_Q1_input_Odd_1;$prev_Q1_input_Even_027=$prev_Q1_input_Even_1;$prev_jI_Odd_028=$prev_jI_Odd_1;$prev_jI_Even_029=$prev_jI_Even_1;$prev_jI_input_Odd_030=$prev_jI_input_Odd_1;$prev_jI_input_Even_031=$prev_jI_input_Even_1;$prev_jQ_Odd_032=$prev_jQ_Odd_1;$prev_jQ_Even_033=$prev_jQ_Even_1;$prev_jQ_input_Odd_034=$prev_jQ_input_Odd_1;$prev_jQ_input_Even_035=$prev_jQ_input_Even_1;$prevQ2_036=$Q2_0;$prevI2_037=$I2_0;$Re_038=$phitmp;$Im_039=$phitmp9;$I1ForOddPrev2_040=$I1ForOddPrev2_1;$I1ForOddPrev3_041=$I1ForOddPrev3_1;$I1ForEvenPrev2_042=$I1ForEvenPrev2_1;$I1ForEvenPrev3_043=$I1ForEvenPrev3_1;$mama_044=$279;$fama_045=$284;$prevPhase_046=$tempReal2_0;
   } else {
    $outIdx_0_lcssa=$outIdx_1;
    break;
   }
  }
 } else {
  $outIdx_0_lcssa=0;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_MAVP($startIdx,$endIdx,$inReal,$inPeriods,$optInMinPeriod,$optInMaxPeriod,$optInMAType,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $inPeriods=($inPeriods)|0;
 $optInMinPeriod=($optInMinPeriod)|0;
 $optInMaxPeriod=($optInMaxPeriod)|0;
 $optInMAType=($optInMAType)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $localBegIdx=0,$localNbElement=0,$1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond10=0,$9=0,$optInMinPeriod_off=0,$11=0,$_07=0,$13=0,$optInMaxPeriod_off=0,$15=0,$_08=0,$17=0,$19=0,$_09=0;
 var $21=0,$23=0,$24=0,$_startIdx=0,$25=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$36=0,$37=0,$i_015=0,$38=0,$39=0,$40=.0,$41=0;
 var $42=0,$44=0,$_08_=0,$tempInt_1=0,$46=0,$47=0,$48=0,$i_113=0,$49=0,$50=0,$51=0,$53=0,$54=0,$57=0,$58=.0,$59=0,$j_011=0,$60=0,$j_012=0,$61=0;
 var $62=0,$63=0,$j_0=0,$64=0,$66=0,$67=.0,$68=0,$69=0,$70=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $localBegIdx=((sp)|0);
 $localNbElement=(((sp)+(8))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($inPeriods|0)==0;
 $or_cond10=$6|$7;
 if ($or_cond10) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $9=($optInMinPeriod|0)==-2147483648;
 do {
  if ($9) {
   $_07=2;
  } else {
   $optInMinPeriod_off=((($optInMinPeriod)-(2))|0);
   $11=($optInMinPeriod_off>>>0)>((99998)>>>0);
   if ($11) {
    $_0=2;
   } else {
    $_07=$optInMinPeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $13=($optInMaxPeriod|0)==-2147483648;
 do {
  if ($13) {
   $_08=30;
  } else {
   $optInMaxPeriod_off=((($optInMaxPeriod)-(2))|0);
   $15=($optInMaxPeriod_off>>>0)>((99998)>>>0);
   if ($15) {
    $_0=2;
   } else {
    $_08=$optInMaxPeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $17=($optInMAType|0)==-2147483648;
 do {
  if ($17) {
   $_09=0;
  } else {
   $19=($optInMAType>>>0)>((8)>>>0);
   if ($19) {
    $_0=2;
   } else {
    $_09=$optInMAType;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $21=($outReal|0)==0;
 if ($21) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $23=((_TA_MA_Lookback($_08,$_09))|0);
 $24=($23|0)>($startIdx|0);
 $_startIdx=($24?$23:$startIdx);
 $25=($_startIdx|0)>($endIdx|0);
 if ($25) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $28=((($endIdx)-($_startIdx))|0);
 $29=((($28)+(1))|0);
 $30=$29<<3;
 $31=((_malloc($30))|0);
 $32=$31;
 $33=$29<<2;
 $34=((_malloc($33))|0);
 $35=$34;
 $36=($28|0)>-1;
 L29: do {
  if ($36) {
   $i_015=0;
   while(1) {

    $38=((($i_015)+($_startIdx))|0);
    $39=(($inPeriods+($38<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(~~($40));
    $42=($41|0)<($_07|0);
    if ($42) {
     $tempInt_1=$_07;
    } else {
     $44=($41|0)>($_08|0);
     $_08_=($44?$_08:$41);
     $tempInt_1=$_08_;
    }

    $46=(($35+($i_015<<2))|0);
    HEAP32[(($46)>>2)]=$tempInt_1;
    $47=((($i_015)+(1))|0);
    $48=($47|0)<($29|0);
    if ($48) {
     $i_015=$47;
    } else {
     break;
    }
   }
   $37=($28|0)>-1;
   if ($37) {
    $i_113=0;
   } else {
    break;
   }
   L36: while(1) {

    $49=(($35+($i_113<<2))|0);
    $50=((HEAP32[(($49)>>2)])|0);
    $51=($50|0)==0;
    do {
     if (!($51)) {
      $53=((_TA_MA($_startIdx,$endIdx,$inReal,$50,$_09,$localBegIdx,$localNbElement,$32))|0);
      $54=($53|0)==0;
      if (!($54)) {
       break L36;
      }
      $57=(($32+($i_113<<3))|0);
      $58=(+(HEAPF64[(($57)>>3)]));
      $59=(($outReal+($i_113<<3))|0);
      HEAPF64[(($59)>>3)]=$58;
      $j_011=((($i_113)+(1))|0);
      $60=($j_011|0)<($29|0);
      if ($60) {
       $j_012=$j_011;
      } else {
       break;
      }
      while(1) {

       $61=(($35+($j_012<<2))|0);
       $62=((HEAP32[(($61)>>2)])|0);
       $63=($62|0)==($50|0);
       if ($63) {
        HEAP32[(($61)>>2)]=0;
        $66=(($32+($j_012<<3))|0);
        $67=(+(HEAPF64[(($66)>>3)]));
        $68=(($outReal+($j_012<<3))|0);
        HEAPF64[(($68)>>3)]=$67;
       }
       $j_0=((($j_012)+(1))|0);
       $64=($j_0|0)<($29|0);
       if ($64) {
        $j_012=$j_0;
       } else {
        break;
       }
      }
     }
    } while(0);
    $69=((($i_113)+(1))|0);
    $70=($69|0)<($29|0);
    if ($70) {
     $i_113=$69;
    } else {
     break L29;
    }
   }
   _free($31);
   _free($34);
   HEAP32[(($outBegIdx)>>2)]=0;
   HEAP32[(($outNBElement)>>2)]=0;
   $_0=$53;

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);
 _free($31);
 _free($34);
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$29;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_MAX($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=0,$smax=0,$22=0,$23=0;
 var $smax13=0,$24=0,$smax14=0,$highestIdx_010=0,$today_08=0,$trailingIdx_07=0,$outIdx_06=0,$highest_05=.0,$26=0,$27=.0,$28=0,$30=0,$31=.0,$highest_1_ph=.0,$i_0_ph=0,$i_0=0,$33=0,$34=0,$36=0,$37=.0;
 var $38=0,$40=0,$highest_2=.0,$highestIdx_2=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((($_03)-(1))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=($_startIdx|0)>($endIdx|0);
 if ($19) {
  $outIdx_0_lcssa=0;
 } else {
  $20=((($_startIdx)-($14))|0);
  $21=($endIdx|0)>($startIdx|0);
  $smax=($21?$endIdx:$startIdx);
  $22=((($_03)-(1))|0);
  $23=($smax|0)>($22|0);
  $smax13=($23?$smax:$22);
  $24=($22|0)<($startIdx|0);
  $smax14=($24?$startIdx:$22);
  $highest_05=0.0;$outIdx_06=0;$trailingIdx_07=$20;$today_08=$_startIdx;$highestIdx_010=-1;
  while(1) {





   $26=(($inReal+($today_08<<3))|0);
   $27=(+(HEAPF64[(($26)>>3)]));
   $28=($highestIdx_010|0)<($trailingIdx_07|0);
   L25: do {
    if ($28) {
     $30=(($inReal+($trailingIdx_07<<3))|0);
     $31=(+(HEAPF64[(($30)>>3)]));
     $i_0_ph=$trailingIdx_07;$highest_1_ph=$31;
     L27: while(1) {


      $i_0=$i_0_ph;
      while(1) {

       $33=((($i_0)+(1))|0);
       $34=($i_0|0)<($today_08|0);
       if (!($34)) {
        $highestIdx_2=$i_0_ph;$highest_2=$highest_1_ph;
        break L25;
       }
       $36=(($inReal+($33<<3))|0);
       $37=(+(HEAPF64[(($36)>>3)]));
       $38=$37>$highest_1_ph;
       if ($38) {
        $i_0_ph=$33;$highest_1_ph=$37;
        continue L27;
       } else {
        $i_0=$33;
       }
      }
     }
    } else {
     $40=$27<$highest_05;
     if ($40) {
      $highestIdx_2=$highestIdx_010;$highest_2=$highest_05;
      break;
     }
     $highestIdx_2=$today_08;$highest_2=$27;
    }
   } while(0);


   $42=((($outIdx_06)+(1))|0);
   $43=(($outReal+($outIdx_06<<3))|0);
   HEAPF64[(($43)>>3)]=$highest_2;
   $44=((($trailingIdx_07)+(1))|0);
   $45=((($today_08)+(1))|0);
   $46=($today_08|0)<($endIdx|0);
   if ($46) {
    $highest_05=$highest_2;$outIdx_06=$42;$trailingIdx_07=$44;$today_08=$45;$highestIdx_010=$highestIdx_2;
   } else {
    break;
   }
  }
  $47=((($smax13)+(1))|0);
  $48=((($47)-($smax14))|0);
  $outIdx_0_lcssa=$48;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_MAXINDEX($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=0,$smax=0,$22=0,$23=0;
 var $smax13=0,$24=0,$smax14=0,$highestIdx_010=0,$today_08=0,$trailingIdx_07=0,$outIdx_06=0,$highest_05=.0,$26=0,$27=.0,$28=0,$30=0,$31=.0,$highest_1_ph=.0,$i_0_ph=0,$i_0=0,$33=0,$34=0,$36=0,$37=.0;
 var $38=0,$40=0,$highest_2=.0,$highestIdx_2=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outInteger|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((($_03)-(1))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=($_startIdx|0)>($endIdx|0);
 if ($19) {
  $outIdx_0_lcssa=0;
 } else {
  $20=((($_startIdx)-($14))|0);
  $21=($endIdx|0)>($startIdx|0);
  $smax=($21?$endIdx:$startIdx);
  $22=((($_03)-(1))|0);
  $23=($smax|0)>($22|0);
  $smax13=($23?$smax:$22);
  $24=($22|0)<($startIdx|0);
  $smax14=($24?$startIdx:$22);
  $highest_05=0.0;$outIdx_06=0;$trailingIdx_07=$20;$today_08=$_startIdx;$highestIdx_010=-1;
  while(1) {





   $26=(($inReal+($today_08<<3))|0);
   $27=(+(HEAPF64[(($26)>>3)]));
   $28=($highestIdx_010|0)<($trailingIdx_07|0);
   L25: do {
    if ($28) {
     $30=(($inReal+($trailingIdx_07<<3))|0);
     $31=(+(HEAPF64[(($30)>>3)]));
     $i_0_ph=$trailingIdx_07;$highest_1_ph=$31;
     L27: while(1) {


      $i_0=$i_0_ph;
      while(1) {

       $33=((($i_0)+(1))|0);
       $34=($i_0|0)<($today_08|0);
       if (!($34)) {
        $highestIdx_2=$i_0_ph;$highest_2=$highest_1_ph;
        break L25;
       }
       $36=(($inReal+($33<<3))|0);
       $37=(+(HEAPF64[(($36)>>3)]));
       $38=$37>$highest_1_ph;
       if ($38) {
        $i_0_ph=$33;$highest_1_ph=$37;
        continue L27;
       } else {
        $i_0=$33;
       }
      }
     }
    } else {
     $40=$27<$highest_05;
     if ($40) {
      $highestIdx_2=$highestIdx_010;$highest_2=$highest_05;
      break;
     }
     $highestIdx_2=$today_08;$highest_2=$27;
    }
   } while(0);


   $42=((($outIdx_06)+(1))|0);
   $43=(($outInteger+($outIdx_06<<2))|0);
   HEAP32[(($43)>>2)]=$highestIdx_2;
   $44=((($trailingIdx_07)+(1))|0);
   $45=((($today_08)+(1))|0);
   $46=($today_08|0)<($endIdx|0);
   if ($46) {
    $highest_05=$highest_2;$outIdx_06=$42;$trailingIdx_07=$44;$today_08=$45;$highestIdx_010=$highestIdx_2;
   } else {
    break;
   }
  }
  $47=((($smax13)+(1))|0);
  $48=((($47)-($smax14))|0);
  $outIdx_0_lcssa=$48;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_MEDPRICE($startIdx,$endIdx,$inHigh,$inLow,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond2=0,$notlhs=0,$notrhs=0,$or_cond_not=0,$6=0,$or_cond3=0,$7=0,$8=0,$smax=0,$9=0,$i_05=0,$outIdx_04=0,$11=0,$12=.0,$13=0,$14=.0,$15=.0;
 var $16=.0,$17=0,$18=0,$19=0,$20=0,$21=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond2=$3|$4;
 if ($or_cond2) {
  $_0=13;

  return (($_0)|0);
 }
 $notlhs=($inHigh|0)==0;
 $notrhs=($inLow|0)==0;
 $or_cond_not=$notrhs|$notlhs;
 $6=($outReal|0)==0;
 $or_cond3=$or_cond_not|$6;
 if ($or_cond3) {
  $_0=2;

  return (($_0)|0);
 }
 $7=($startIdx|0)>($endIdx|0);
 if ($7) {
  $outIdx_0_lcssa=0;
 } else {
  $8=($endIdx|0)>($startIdx|0);
  $smax=($8?$endIdx:$startIdx);
  $9=((($smax)+(1))|0);
  $outIdx_04=0;$i_05=$startIdx;
  while(1) {


   $11=(($inHigh+($i_05<<3))|0);
   $12=(+(HEAPF64[(($11)>>3)]));
   $13=(($inLow+($i_05<<3))|0);
   $14=(+(HEAPF64[(($13)>>3)]));
   $15=($12)+($14);
   $16=($15)*((0.5));
   $17=((($outIdx_04)+(1))|0);
   $18=(($outReal+($outIdx_04<<3))|0);
   HEAPF64[(($18)>>3)]=$16;
   $19=((($i_05)+(1))|0);
   $20=($i_05|0)<($endIdx|0);
   if ($20) {
    $outIdx_04=$17;$i_05=$19;
   } else {
    break;
   }
  }
  $21=((($9)-($startIdx))|0);
  $outIdx_0_lcssa=$21;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_MFI($startIdx,$endIdx,$inHigh,$inLow,$inClose,$inVolume,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $inVolume=($inVolume)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $local_mflow=0,$1=0,$3=0,$4=0,$or_cond12=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$9=0,$or_cond5=0,$11=0,$optInTimePeriod_off=0,$13=0,$_011=0,$15=0,$17=0,$19=0,$21=0;
 var $22=0,$23=0,$24=0,$26=0,$mflow_0=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$_startIdx=0,$34=0,$36=0,$37=0,$39=0,$41=0,$42=0,$43=.0,$44=0;
 var $45=.0,$46=.0,$47=0,$48=.0,$49=.0,$50=.0,$today_031=0,$51=0,$52=0,$53=0,$smax51=0,$54=0,$55=0,$today_037=0,$mflow_Idx_036=0,$i_035=0,$prevValue_034=.0,$negSumMF_033=.0,$posSumMF_032=.0,$57=0;
 var $58=.0,$59=0,$60=.0,$61=.0,$62=0,$63=.0,$64=.0,$65=.0,$66=.0,$67=0,$68=.0,$69=.0,$70=0,$72=0,$73=.0,$74=0,$76=0,$77=0,$79=.0,$80=0;
 var $82=0,$posSumMF_1=.0,$negSumMF_1=.0,$84=0,$85=0,$_=0,$86=0,$today_0=0,$87=0,$88=0,$today_0_lcssa=0,$mflow_Idx_0_lcssa=0,$today_0_in_lcssa=0,$prevValue_0_lcssa=.0,$negSumMF_0_lcssa=.0,$posSumMF_0_lcssa=.0,$90=0,$91=0,$92=0,$93=0;
 var $95=.0,$96=0,$99=.0,$100=.0,$smax48=0,$posSumMF_4_ph=.0,$negSumMF_4_ph=.0,$prevValue_2_ph=.0,$outIdx_0_ph=0,$today_2_ph=0,$mflow_Idx_2_ph=0,$101=0,$102=0,$smax=0,$103=0,$104=0,$mflow_Idx_124=0,$today_123=0,$prevValue_122=.0,$negSumMF_221=.0;
 var $posSumMF_220=.0,$106=0,$107=.0,$108=.0,$109=0,$110=.0,$111=.0,$112=0,$113=.0,$114=0,$115=.0,$116=.0,$117=0,$118=.0,$119=.0,$120=.0,$121=.0,$122=0,$123=0,$124=.0;
 var $125=.0,$126=0,$128=.0,$130=0,$132=.0,$134=0,$posSumMF_3=.0,$negSumMF_3=.0,$136=0,$137=0,$_8=0,$138=0,$mflow_Idx_218=0,$today_217=0,$outIdx_016=0,$prevValue_215=.0,$negSumMF_414=.0,$posSumMF_413=.0,$140=0,$141=.0;
 var $142=.0,$143=0,$144=.0,$145=.0,$146=0,$147=.0,$148=0,$149=.0,$150=.0,$151=0,$152=.0,$153=.0,$154=.0,$155=.0,$156=0,$157=0,$158=.0,$159=.0,$160=0,$162=.0;
 var $164=0,$166=.0,$168=0,$posSumMF_5=.0,$negSumMF_5=.0,$170=.0,$171=0,$173=0,$175=.0,$176=.0,$177=0,$outIdx_1=0,$179=0,$180=0,$_9=0,$181=0,$182=0,$outIdx_0_lcssa=0,$184=0,$185=0;
 var $187=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+800)|0;
 $local_mflow=((sp)|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond12=$3|$4;
 if ($or_cond12) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 $9=($inVolume|0)!=0;
 $or_cond5=$or_cond3&$9;
 if (!($or_cond5)) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $11=($optInTimePeriod|0)==-2147483648;
 do {
  if ($11) {
   $_011=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $13=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($13) {
    $_0=2;
   } else {
    $_011=$optInTimePeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $15=($outReal|0)==0;
 if ($15) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $17=($_011|0)<1;
 if ($17) {
  $_0=5137;

  STACKTOP=sp;return (($_0)|0);
 }
 $19=($_011|0)>50;
 do {
  if ($19) {
   $21=$_011<<4;
   $22=((_malloc($21))|0);
   $23=$22;
   $24=($22|0)==0;
   if ($24) {
    $_0=3;
   } else {
    $mflow_0=$23;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  } else {
   $26=(($local_mflow)|0);
   $mflow_0=$26;
  }
 } while(0);

 $28=((($_011)-(1))|0);
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $29=((HEAP32[((272)>>2)])|0);
 $30=(($29+120)|0);
 $31=((HEAP32[(($30)>>2)])|0);
 $32=((($31)+($_011))|0);
 $33=($32|0)>($startIdx|0);
 $_startIdx=($33?$32:$startIdx);
 $34=($_startIdx|0)>($endIdx|0);
 if ($34) {
  $36=(($local_mflow)|0);
  $37=($mflow_0|0)==($36|0);
  if ($37) {
   $_0=0;

   STACKTOP=sp;return (($_0)|0);
  }
  $39=$mflow_0;
  _free($39);
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $41=((($_startIdx)-($32))|0);
 $42=(($inHigh+($41<<3))|0);
 $43=(+(HEAPF64[(($42)>>3)]));
 $44=(($inLow+($41<<3))|0);
 $45=(+(HEAPF64[(($44)>>3)]));
 $46=($43)+($45);
 $47=(($inClose+($41<<3))|0);
 $48=(+(HEAPF64[(($47)>>3)]));
 $49=($46)+($48);
 $50=($49)/((3.0));
 $today_031=((($41)+(1))|0);
 $51=($_011|0)>0;
 if ($51) {
  $52=((($_011)+($31))|0);
  $53=($52|0)<($startIdx|0);
  $smax51=($53?$startIdx:$52);
  $54=((($smax51)+(1))|0);
  $55=((($54)-($31))|0);
  $posSumMF_032=0.0;$negSumMF_033=0.0;$prevValue_034=$50;$i_035=$_011;$mflow_Idx_036=0;$today_037=$today_031;
  while(1) {






   $57=(($inHigh+($today_037<<3))|0);
   $58=(+(HEAPF64[(($57)>>3)]));
   $59=(($inLow+($today_037<<3))|0);
   $60=(+(HEAPF64[(($59)>>3)]));
   $61=($58)+($60);
   $62=(($inClose+($today_037<<3))|0);
   $63=(+(HEAPF64[(($62)>>3)]));
   $64=($61)+($63);
   $65=($64)/((3.0));
   $66=($65)-($prevValue_034);
   $67=(($inVolume+($today_037<<3))|0);
   $68=(+(HEAPF64[(($67)>>3)]));
   $69=($65)*($68);
   $70=$66<(0.0);
   do {
    if ($70) {
     $72=(($mflow_0+($mflow_Idx_036<<4)+8)|0);
     HEAPF64[(($72)>>3)]=$69;
     $73=($negSumMF_033)+($69);
     $74=(($mflow_0+($mflow_Idx_036<<4))|0);
     HEAPF64[(($74)>>3)]=0.0;
     $negSumMF_1=$73;$posSumMF_1=$posSumMF_032;
    } else {
     $76=$66>(0.0);
     $77=(($mflow_0+($mflow_Idx_036<<4))|0);
     if ($76) {
      HEAPF64[(($77)>>3)]=$69;
      $79=($posSumMF_032)+($69);
      $80=(($mflow_0+($mflow_Idx_036<<4)+8)|0);
      HEAPF64[(($80)>>3)]=0.0;
      $negSumMF_1=$negSumMF_033;$posSumMF_1=$79;
      break;
     } else {
      $82=$77;
      _memset((((($82)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
      $negSumMF_1=$negSumMF_033;$posSumMF_1=$posSumMF_032;
      break;
     }
    }
   } while(0);


   $84=((($mflow_Idx_036)+(1))|0);
   $85=($mflow_Idx_036|0)>=($28|0);
   $_=($85?0:$84);
   $86=((($i_035)-(1))|0);
   $today_0=((($today_037)+(1))|0);
   $87=($86|0)>0;
   if ($87) {
    $posSumMF_032=$posSumMF_1;$negSumMF_033=$negSumMF_1;$prevValue_034=$65;$i_035=$86;$mflow_Idx_036=$_;$today_037=$today_0;
   } else {
    break;
   }
  }
  $88=((($smax51)-($31))|0);
  $posSumMF_0_lcssa=$posSumMF_1;$negSumMF_0_lcssa=$negSumMF_1;$prevValue_0_lcssa=$65;$today_0_in_lcssa=$88;$mflow_Idx_0_lcssa=$_;$today_0_lcssa=$55;
 } else {
  $posSumMF_0_lcssa=0.0;$negSumMF_0_lcssa=0.0;$prevValue_0_lcssa=$50;$today_0_in_lcssa=$41;$mflow_Idx_0_lcssa=0;$today_0_lcssa=$today_031;
 }






 $90=($today_0_in_lcssa|0)<($_startIdx|0);
 do {
  if ($90) {
   $91=($today_0_lcssa|0)<($_startIdx|0);
   if (!($91)) {
    $mflow_Idx_2_ph=$mflow_Idx_0_lcssa;$today_2_ph=$today_0_lcssa;$outIdx_0_ph=0;$prevValue_2_ph=$prevValue_0_lcssa;$negSumMF_4_ph=$negSumMF_0_lcssa;$posSumMF_4_ph=$posSumMF_0_lcssa;
    break;
   }
   $92=((($_011)+($31))|0);
   $93=($92|0)<($startIdx|0);
   $posSumMF_220=$posSumMF_0_lcssa;$negSumMF_221=$negSumMF_0_lcssa;$prevValue_122=$prevValue_0_lcssa;$today_123=$today_0_lcssa;$mflow_Idx_124=$mflow_Idx_0_lcssa;
   while(1) {





    $106=(($mflow_0+($mflow_Idx_124<<4))|0);
    $107=(+(HEAPF64[(($106)>>3)]));
    $108=($posSumMF_220)-($107);
    $109=(($mflow_0+($mflow_Idx_124<<4)+8)|0);
    $110=(+(HEAPF64[(($109)>>3)]));
    $111=($negSumMF_221)-($110);
    $112=(($inHigh+($today_123<<3))|0);
    $113=(+(HEAPF64[(($112)>>3)]));
    $114=(($inLow+($today_123<<3))|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $116=($113)+($115);
    $117=(($inClose+($today_123<<3))|0);
    $118=(+(HEAPF64[(($117)>>3)]));
    $119=($116)+($118);
    $120=($119)/((3.0));
    $121=($120)-($prevValue_122);
    $122=((($today_123)+(1))|0);
    $123=(($inVolume+($today_123<<3))|0);
    $124=(+(HEAPF64[(($123)>>3)]));
    $125=($120)*($124);
    $126=$121<(0.0);
    do {
     if ($126) {
      HEAPF64[(($109)>>3)]=$125;
      $128=($111)+($125);
      HEAPF64[(($106)>>3)]=0.0;
      $negSumMF_3=$128;$posSumMF_3=$108;
     } else {
      $130=$121>(0.0);
      if ($130) {
       HEAPF64[(($106)>>3)]=$125;
       $132=($108)+($125);
       HEAPF64[(($109)>>3)]=0.0;
       $negSumMF_3=$111;$posSumMF_3=$132;
       break;
      } else {
       $134=$106;
       _memset((((($134)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
       $negSumMF_3=$111;$posSumMF_3=$108;
       break;
      }
     }
    } while(0);


    $136=((($mflow_Idx_124)+(1))|0);
    $137=($mflow_Idx_124|0)>=($28|0);
    $_8=($137?0:$136);
    $138=($122|0)<($_startIdx|0);
    if ($138) {
     $posSumMF_220=$posSumMF_3;$negSumMF_221=$negSumMF_3;$prevValue_122=$120;$today_123=$122;$mflow_Idx_124=$_8;
    } else {
     break;
    }
   }
   $smax48=($93?$startIdx:$92);
   $mflow_Idx_2_ph=$_8;$today_2_ph=$smax48;$outIdx_0_ph=0;$prevValue_2_ph=$120;$negSumMF_4_ph=$negSumMF_3;$posSumMF_4_ph=$posSumMF_3;
  } else {
   $95=($posSumMF_0_lcssa)+($negSumMF_0_lcssa);
   $96=$95<(1.0);
   if ($96) {
    HEAPF64[(($outReal)>>3)]=0.0;
    $mflow_Idx_2_ph=$mflow_Idx_0_lcssa;$today_2_ph=$today_0_lcssa;$outIdx_0_ph=1;$prevValue_2_ph=$prevValue_0_lcssa;$negSumMF_4_ph=$negSumMF_0_lcssa;$posSumMF_4_ph=$posSumMF_0_lcssa;
    break;
   } else {
    $99=($posSumMF_0_lcssa)/($95);
    $100=($99)*((100.0));
    HEAPF64[(($outReal)>>3)]=$100;
    $mflow_Idx_2_ph=$mflow_Idx_0_lcssa;$today_2_ph=$today_0_lcssa;$outIdx_0_ph=1;$prevValue_2_ph=$prevValue_0_lcssa;$negSumMF_4_ph=$negSumMF_0_lcssa;$posSumMF_4_ph=$posSumMF_0_lcssa;
    break;
   }
  }
 } while(0);






 $101=($today_2_ph|0)>($endIdx|0);
 if ($101) {
  $outIdx_0_lcssa=$outIdx_0_ph;
 } else {
  $102=($today_2_ph|0)>($endIdx|0);
  $smax=($102?$today_2_ph:$endIdx);
  $103=((($outIdx_0_ph)+($smax))|0);
  $104=((($103)+(1))|0);
  $posSumMF_413=$posSumMF_4_ph;$negSumMF_414=$negSumMF_4_ph;$prevValue_215=$prevValue_2_ph;$outIdx_016=$outIdx_0_ph;$today_217=$today_2_ph;$mflow_Idx_218=$mflow_Idx_2_ph;
  while(1) {






   $140=(($mflow_0+($mflow_Idx_218<<4))|0);
   $141=(+(HEAPF64[(($140)>>3)]));
   $142=($posSumMF_413)-($141);
   $143=(($mflow_0+($mflow_Idx_218<<4)+8)|0);
   $144=(+(HEAPF64[(($143)>>3)]));
   $145=($negSumMF_414)-($144);
   $146=(($inHigh+($today_217<<3))|0);
   $147=(+(HEAPF64[(($146)>>3)]));
   $148=(($inLow+($today_217<<3))|0);
   $149=(+(HEAPF64[(($148)>>3)]));
   $150=($147)+($149);
   $151=(($inClose+($today_217<<3))|0);
   $152=(+(HEAPF64[(($151)>>3)]));
   $153=($150)+($152);
   $154=($153)/((3.0));
   $155=($154)-($prevValue_215);
   $156=((($today_217)+(1))|0);
   $157=(($inVolume+($today_217<<3))|0);
   $158=(+(HEAPF64[(($157)>>3)]));
   $159=($154)*($158);
   $160=$155<(0.0);
   do {
    if ($160) {
     HEAPF64[(($143)>>3)]=$159;
     $162=($145)+($159);
     HEAPF64[(($140)>>3)]=0.0;
     $negSumMF_5=$162;$posSumMF_5=$142;
    } else {
     $164=$155>(0.0);
     if ($164) {
      HEAPF64[(($140)>>3)]=$159;
      $166=($142)+($159);
      HEAPF64[(($143)>>3)]=0.0;
      $negSumMF_5=$145;$posSumMF_5=$166;
      break;
     } else {
      $168=$140;
      _memset((((($168)|0))|0), ((((0)|0))|0), ((((16)|0))|0))|0;
      $negSumMF_5=$145;$posSumMF_5=$142;
      break;
     }
    }
   } while(0);


   $170=($posSumMF_5)+($negSumMF_5);
   $171=$170<(1.0);
   if ($171) {
    $173=(($outReal+($outIdx_016<<3))|0);
    HEAPF64[(($173)>>3)]=0.0;
   } else {
    $175=($posSumMF_5)/($170);
    $176=($175)*((100.0));
    $177=(($outReal+($outIdx_016<<3))|0);
    HEAPF64[(($177)>>3)]=$176;
   }
   $outIdx_1=((($outIdx_016)+(1))|0);
   $179=((($mflow_Idx_218)+(1))|0);
   $180=($mflow_Idx_218|0)>=($28|0);
   $_9=($180?0:$179);
   $181=($today_217|0)<($endIdx|0);
   if ($181) {
    $posSumMF_413=$posSumMF_5;$negSumMF_414=$negSumMF_5;$prevValue_215=$154;$outIdx_016=$outIdx_1;$today_217=$156;$mflow_Idx_218=$_9;
   } else {
    break;
   }
  }
  $182=((($104)-($today_2_ph))|0);
  $outIdx_0_lcssa=$182;
 }

 $184=(($local_mflow)|0);
 $185=($mflow_0|0)==($184|0);
 if (!($185)) {
  $187=$mflow_0;
  _free($187);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_MIDPOINT($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=0,$smax=0,$22=0,$23=0;
 var $smax15=0,$24=0,$smax16=0,$today_010=0,$trailingIdx_09=0,$outIdx_08=0,$26=0,$27=0,$28=.0,$29=0,$i_06=0,$highest_05=.0,$lowest_04=.0,$30=0,$31=.0,$32=0,$34=0,$lowest_1=.0,$highest_1=.0,$37=0;
 var $38=0,$highest_0_lcssa=.0,$lowest_0_lcssa=.0,$39=.0,$40=.0,$41=0,$42=0,$43=0,$44=0,$45=0,$46=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((($_03)-(1))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=($_startIdx|0)>($endIdx|0);
 if ($19) {
  $outIdx_0_lcssa=0;
 } else {
  $20=((($_startIdx)-($14))|0);
  $21=($endIdx|0)>($startIdx|0);
  $smax=($21?$endIdx:$startIdx);
  $22=((($_03)-(1))|0);
  $23=($smax|0)>($22|0);
  $smax15=($23?$smax:$22);
  $24=($22|0)<($startIdx|0);
  $smax16=($24?$startIdx:$22);
  $outIdx_08=0;$trailingIdx_09=$20;$today_010=$_startIdx;
  while(1) {



   $26=((($trailingIdx_09)+(1))|0);
   $27=(($inReal+($trailingIdx_09<<3))|0);
   $28=(+(HEAPF64[(($27)>>3)]));
   $29=($trailingIdx_09|0)<($today_010|0);
   if ($29) {
    $lowest_04=$28;$highest_05=$28;$i_06=$26;
    while(1) {



     $30=(($inReal+($i_06<<3))|0);
     $31=(+(HEAPF64[(($30)>>3)]));
     $32=$31<$lowest_04;
     do {
      if ($32) {
       $highest_1=$highest_05;$lowest_1=$31;
      } else {
       $34=$31>$highest_05;
       if (!($34)) {
        $highest_1=$highest_05;$lowest_1=$lowest_04;
        break;
       }
       $highest_1=$31;$lowest_1=$lowest_04;
      }
     } while(0);


     $37=((($i_06)+(1))|0);
     $38=($i_06|0)<($today_010|0);
     if ($38) {
      $lowest_04=$lowest_1;$highest_05=$highest_1;$i_06=$37;
     } else {
      $lowest_0_lcssa=$lowest_1;$highest_0_lcssa=$highest_1;
      break;
     }
    }
   } else {
    $lowest_0_lcssa=$28;$highest_0_lcssa=$28;
   }


   $39=($lowest_0_lcssa)+($highest_0_lcssa);
   $40=($39)*((0.5));
   $41=((($outIdx_08)+(1))|0);
   $42=(($outReal+($outIdx_08<<3))|0);
   HEAPF64[(($42)>>3)]=$40;
   $43=((($today_010)+(1))|0);
   $44=($today_010|0)<($endIdx|0);
   if ($44) {
    $outIdx_08=$41;$trailingIdx_09=$26;$today_010=$43;
   } else {
    break;
   }
  }
  $45=((($smax15)+(1))|0);
  $46=((($45)-($smax16))|0);
  $outIdx_0_lcssa=$46;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_MIDPRICE($startIdx,$endIdx,$inHigh,$inLow,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond=0,$9=0,$optInTimePeriod_off=0,$11=0,$_05=0,$13=0,$15=0,$16=0,$_startIdx=0,$17=0,$20=0,$21=0,$22=0,$smax=0;
 var $23=0,$24=0,$smax18=0,$25=0,$smax19=0,$today_013=0,$trailingIdx_012=0,$outIdx_011=0,$27=0,$28=.0,$29=0,$30=.0,$31=0,$32=0,$i_09=0,$highest_08=.0,$lowest_07=.0,$33=0,$34=.0,$35=0;
 var $lowest_1=.0,$36=0,$37=.0,$38=0,$highest_1=.0,$39=0,$40=0,$highest_0_lcssa=.0,$lowest_0_lcssa=.0,$41=.0,$42=.0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 if (!($or_cond)) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($optInTimePeriod|0)==-2147483648;
 do {
  if ($9) {
   $_05=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $11=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($11) {
    $_0=2;
   } else {
    $_05=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $13=($outReal|0)==0;
 if ($13) {
  $_0=2;

  return (($_0)|0);
 }
 $15=((($_05)-(1))|0);
 $16=($15|0)>($startIdx|0);
 $_startIdx=($16?$15:$startIdx);
 $17=($_startIdx|0)>($endIdx|0);
 if ($17) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  $outIdx_0_lcssa=0;
 } else {
  $21=((($_startIdx)-($15))|0);
  $22=($endIdx|0)>($startIdx|0);
  $smax=($22?$endIdx:$startIdx);
  $23=((($_05)-(1))|0);
  $24=($smax|0)>($23|0);
  $smax18=($24?$smax:$23);
  $25=($23|0)<($startIdx|0);
  $smax19=($25?$startIdx:$23);
  $outIdx_011=0;$trailingIdx_012=$21;$today_013=$_startIdx;
  while(1) {



   $27=(($inLow+($trailingIdx_012<<3))|0);
   $28=(+(HEAPF64[(($27)>>3)]));
   $29=(($inHigh+($trailingIdx_012<<3))|0);
   $30=(+(HEAPF64[(($29)>>3)]));
   $31=((($trailingIdx_012)+(1))|0);
   $32=($trailingIdx_012|0)<($today_013|0);
   if ($32) {
    $lowest_07=$28;$highest_08=$30;$i_09=$31;
    while(1) {



     $33=(($inLow+($i_09<<3))|0);
     $34=(+(HEAPF64[(($33)>>3)]));
     $35=$34<$lowest_07;
     $lowest_1=($35?$34:$lowest_07);
     $36=(($inHigh+($i_09<<3))|0);
     $37=(+(HEAPF64[(($36)>>3)]));
     $38=$37>$highest_08;
     $highest_1=($38?$37:$highest_08);
     $39=((($i_09)+(1))|0);
     $40=($i_09|0)<($today_013|0);
     if ($40) {
      $lowest_07=$lowest_1;$highest_08=$highest_1;$i_09=$39;
     } else {
      $lowest_0_lcssa=$lowest_1;$highest_0_lcssa=$highest_1;
      break;
     }
    }
   } else {
    $lowest_0_lcssa=$28;$highest_0_lcssa=$30;
   }


   $41=($lowest_0_lcssa)+($highest_0_lcssa);
   $42=($41)*((0.5));
   $43=((($outIdx_011)+(1))|0);
   $44=(($outReal+($outIdx_011<<3))|0);
   HEAPF64[(($44)>>3)]=$42;
   $45=((($today_013)+(1))|0);
   $46=($today_013|0)<($endIdx|0);
   if ($46) {
    $outIdx_011=$43;$trailingIdx_012=$31;$today_013=$45;
   } else {
    break;
   }
  }
  $47=((($smax18)+(1))|0);
  $48=((($47)-($smax19))|0);
  $outIdx_0_lcssa=$48;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_MIN($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=0,$smax=0,$22=0,$23=0;
 var $smax13=0,$24=0,$smax14=0,$today_09=0,$lowestIdx_08=0,$trailingIdx_07=0,$outIdx_06=0,$lowest_05=.0,$26=0,$27=.0,$28=0,$30=0,$31=.0,$lowest_1_ph=.0,$lowestIdx_1_ph=0,$i_0=0,$33=0,$34=0,$36=0,$37=.0;
 var $38=0,$40=0,$lowest_2=.0,$lowestIdx_2=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((($_03)-(1))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=($_startIdx|0)>($endIdx|0);
 if ($19) {
  $outIdx_0_lcssa=0;
 } else {
  $20=((($_startIdx)-($14))|0);
  $21=($endIdx|0)>($startIdx|0);
  $smax=($21?$endIdx:$startIdx);
  $22=((($_03)-(1))|0);
  $23=($smax|0)>($22|0);
  $smax13=($23?$smax:$22);
  $24=($22|0)<($startIdx|0);
  $smax14=($24?$startIdx:$22);
  $lowest_05=0.0;$outIdx_06=0;$trailingIdx_07=$20;$lowestIdx_08=-1;$today_09=$_startIdx;
  while(1) {





   $26=(($inReal+($today_09<<3))|0);
   $27=(+(HEAPF64[(($26)>>3)]));
   $28=($lowestIdx_08|0)<($trailingIdx_07|0);
   L25: do {
    if ($28) {
     $30=(($inReal+($trailingIdx_07<<3))|0);
     $31=(+(HEAPF64[(($30)>>3)]));
     $lowestIdx_1_ph=$trailingIdx_07;$lowest_1_ph=$31;
     L29: while(1) {


      $i_0=$lowestIdx_1_ph;
      while(1) {

       $33=((($i_0)+(1))|0);
       $34=($i_0|0)<($today_09|0);
       if (!($34)) {
        $lowestIdx_2=$lowestIdx_1_ph;$lowest_2=$lowest_1_ph;
        break L25;
       }
       $36=(($inReal+($33<<3))|0);
       $37=(+(HEAPF64[(($36)>>3)]));
       $38=$37<$lowest_1_ph;
       if ($38) {
        $lowestIdx_1_ph=$33;$lowest_1_ph=$37;
        continue L29;
       } else {
        $i_0=$33;
       }
      }
     }
    } else {
     $40=$27>$lowest_05;
     if ($40) {
      $lowestIdx_2=$lowestIdx_08;$lowest_2=$lowest_05;
      break;
     }
     $lowestIdx_2=$today_09;$lowest_2=$27;
    }
   } while(0);


   $42=((($outIdx_06)+(1))|0);
   $43=(($outReal+($outIdx_06<<3))|0);
   HEAPF64[(($43)>>3)]=$lowest_2;
   $44=((($trailingIdx_07)+(1))|0);
   $45=((($today_09)+(1))|0);
   $46=($today_09|0)<($endIdx|0);
   if ($46) {
    $lowest_05=$lowest_2;$outIdx_06=$42;$trailingIdx_07=$44;$lowestIdx_08=$lowestIdx_2;$today_09=$45;
   } else {
    break;
   }
  }
  $47=((($smax13)+(1))|0);
  $48=((($47)-($smax14))|0);
  $outIdx_0_lcssa=$48;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_MININDEX($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outInteger){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outInteger=($outInteger)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=0,$smax=0,$22=0,$23=0;
 var $smax13=0,$24=0,$smax14=0,$today_09=0,$lowestIdx_08=0,$trailingIdx_07=0,$outIdx_06=0,$lowest_05=.0,$26=0,$27=.0,$28=0,$30=0,$31=.0,$lowest_1_ph=.0,$lowestIdx_1_ph=0,$i_0=0,$33=0,$34=0,$36=0,$37=.0;
 var $38=0,$40=0,$lowest_2=.0,$lowestIdx_2=0,$42=0,$43=0,$44=0,$45=0,$46=0,$47=0,$48=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outInteger|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((($_03)-(1))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=($_startIdx|0)>($endIdx|0);
 if ($19) {
  $outIdx_0_lcssa=0;
 } else {
  $20=((($_startIdx)-($14))|0);
  $21=($endIdx|0)>($startIdx|0);
  $smax=($21?$endIdx:$startIdx);
  $22=((($_03)-(1))|0);
  $23=($smax|0)>($22|0);
  $smax13=($23?$smax:$22);
  $24=($22|0)<($startIdx|0);
  $smax14=($24?$startIdx:$22);
  $lowest_05=0.0;$outIdx_06=0;$trailingIdx_07=$20;$lowestIdx_08=-1;$today_09=$_startIdx;
  while(1) {





   $26=(($inReal+($today_09<<3))|0);
   $27=(+(HEAPF64[(($26)>>3)]));
   $28=($lowestIdx_08|0)<($trailingIdx_07|0);
   L25: do {
    if ($28) {
     $30=(($inReal+($trailingIdx_07<<3))|0);
     $31=(+(HEAPF64[(($30)>>3)]));
     $lowestIdx_1_ph=$trailingIdx_07;$lowest_1_ph=$31;
     L27: while(1) {


      $i_0=$lowestIdx_1_ph;
      while(1) {

       $33=((($i_0)+(1))|0);
       $34=($i_0|0)<($today_09|0);
       if (!($34)) {
        $lowestIdx_2=$lowestIdx_1_ph;$lowest_2=$lowest_1_ph;
        break L25;
       }
       $36=(($inReal+($33<<3))|0);
       $37=(+(HEAPF64[(($36)>>3)]));
       $38=$37<$lowest_1_ph;
       if ($38) {
        $lowestIdx_1_ph=$33;$lowest_1_ph=$37;
        continue L27;
       } else {
        $i_0=$33;
       }
      }
     }
    } else {
     $40=$27>$lowest_05;
     if ($40) {
      $lowestIdx_2=$lowestIdx_08;$lowest_2=$lowest_05;
      break;
     }
     $lowestIdx_2=$today_09;$lowest_2=$27;
    }
   } while(0);


   $42=((($outIdx_06)+(1))|0);
   $43=(($outInteger+($outIdx_06<<2))|0);
   HEAP32[(($43)>>2)]=$lowestIdx_2;
   $44=((($trailingIdx_07)+(1))|0);
   $45=((($today_09)+(1))|0);
   $46=($today_09|0)<($endIdx|0);
   if ($46) {
    $lowest_05=$lowest_2;$outIdx_06=$42;$trailingIdx_07=$44;$lowestIdx_08=$lowestIdx_2;$today_09=$45;
   } else {
    break;
   }
  }
  $47=((($smax13)+(1))|0);
  $48=((($47)-($smax14))|0);
  $outIdx_0_lcssa=$48;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_MINMAX($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outMin,$outMax){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outMin=($outMin)|0;
 $outMax=($outMax)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$13=0,$or_cond4=0,$15=0,$16=0,$_startIdx=0,$17=0,$20=0,$21=0,$22=0,$smax=0;
 var $23=0,$24=0,$smax24=0,$25=0,$smax25=0,$lowestIdx_018=0,$highestIdx_017=0,$today_015=0,$trailingIdx_014=0,$outIdx_013=0,$lowest_012=.0,$highest_011=.0,$27=0,$28=.0,$29=0,$31=0,$32=.0,$highest_1_ph=.0,$i_0_ph=0,$i_0=0;
 var $34=0,$35=0,$37=0,$38=.0,$39=0,$41=0,$highest_2=.0,$highestIdx_2=0,$43=0,$45=0,$46=.0,$lowest_1_ph=.0,$i_1_ph=0,$i_1=0,$48=0,$49=0,$51=0,$52=.0,$53=0,$55=0;
 var $lowest_2=.0,$lowestIdx_2=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outMin|0)==0;
 $13=($outMax|0)==0;
 $or_cond4=$12|$13;
 if ($or_cond4) {
  $_0=2;

  return (($_0)|0);
 }
 $15=((($_03)-(1))|0);
 $16=($15|0)>($startIdx|0);
 $_startIdx=($16?$15:$startIdx);
 $17=($_startIdx|0)>($endIdx|0);
 if ($17) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  $outIdx_0_lcssa=0;
 } else {
  $21=((($_startIdx)-($15))|0);
  $22=($endIdx|0)>($startIdx|0);
  $smax=($22?$endIdx:$startIdx);
  $23=((($_03)-(1))|0);
  $24=($smax|0)>($23|0);
  $smax24=($24?$smax:$23);
  $25=($23|0)<($startIdx|0);
  $smax25=($25?$startIdx:$23);
  $highest_011=0.0;$lowest_012=0.0;$outIdx_013=0;$trailingIdx_014=$21;$today_015=$_startIdx;$highestIdx_017=-1;$lowestIdx_018=-1;
  while(1) {







   $27=(($inReal+($today_015<<3))|0);
   $28=(+(HEAPF64[(($27)>>3)]));
   $29=($highestIdx_017|0)<($trailingIdx_014|0);
   L25: do {
    if ($29) {
     $31=(($inReal+($trailingIdx_014<<3))|0);
     $32=(+(HEAPF64[(($31)>>3)]));
     $i_0_ph=$trailingIdx_014;$highest_1_ph=$32;
     L27: while(1) {


      $i_0=$i_0_ph;
      while(1) {

       $34=((($i_0)+(1))|0);
       $35=($i_0|0)<($today_015|0);
       if (!($35)) {
        $highestIdx_2=$i_0_ph;$highest_2=$highest_1_ph;
        break L25;
       }
       $37=(($inReal+($34<<3))|0);
       $38=(+(HEAPF64[(($37)>>3)]));
       $39=$38>$highest_1_ph;
       if ($39) {
        $i_0_ph=$34;$highest_1_ph=$38;
        continue L27;
       } else {
        $i_0=$34;
       }
      }
     }
    } else {
     $41=$28<$highest_011;
     if ($41) {
      $highestIdx_2=$highestIdx_017;$highest_2=$highest_011;
      break;
     }
     $highestIdx_2=$today_015;$highest_2=$28;
    }
   } while(0);


   $43=($lowestIdx_018|0)<($trailingIdx_014|0);
   L35: do {
    if ($43) {
     $45=(($inReal+($trailingIdx_014<<3))|0);
     $46=(+(HEAPF64[(($45)>>3)]));
     $i_1_ph=$trailingIdx_014;$lowest_1_ph=$46;
     L37: while(1) {


      $i_1=$i_1_ph;
      while(1) {

       $48=((($i_1)+(1))|0);
       $49=($i_1|0)<($today_015|0);
       if (!($49)) {
        $lowestIdx_2=$i_1_ph;$lowest_2=$lowest_1_ph;
        break L35;
       }
       $51=(($inReal+($48<<3))|0);
       $52=(+(HEAPF64[(($51)>>3)]));
       $53=$52<$lowest_1_ph;
       if ($53) {
        $i_1_ph=$48;$lowest_1_ph=$52;
        continue L37;
       } else {
        $i_1=$48;
       }
      }
     }
    } else {
     $55=$28>$lowest_012;
     if ($55) {
      $lowestIdx_2=$lowestIdx_018;$lowest_2=$lowest_012;
      break;
     }
     $lowestIdx_2=$today_015;$lowest_2=$28;
    }
   } while(0);


   $57=(($outMax+($outIdx_013<<3))|0);
   HEAPF64[(($57)>>3)]=$highest_2;
   $58=(($outMin+($outIdx_013<<3))|0);
   HEAPF64[(($58)>>3)]=$lowest_2;
   $59=((($outIdx_013)+(1))|0);
   $60=((($trailingIdx_014)+(1))|0);
   $61=((($today_015)+(1))|0);
   $62=($today_015|0)<($endIdx|0);
   if ($62) {
    $highest_011=$highest_2;$lowest_012=$lowest_2;$outIdx_013=$59;$trailingIdx_014=$60;$today_015=$61;$highestIdx_017=$highestIdx_2;$lowestIdx_018=$lowestIdx_2;
   } else {
    break;
   }
  }
  $63=((($smax24)+(1))|0);
  $64=((($63)-($smax25))|0);
  $outIdx_0_lcssa=$64;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_MINMAXINDEX($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outMinIdx,$outMaxIdx){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outMinIdx=($outMinIdx)|0;
 $outMaxIdx=($outMaxIdx)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$13=0,$or_cond4=0,$15=0,$16=0,$_startIdx=0,$17=0,$20=0,$21=0,$22=0,$smax=0;
 var $23=0,$24=0,$smax24=0,$25=0,$smax25=0,$lowestIdx_018=0,$highestIdx_017=0,$today_015=0,$trailingIdx_014=0,$outIdx_013=0,$lowest_012=.0,$highest_011=.0,$27=0,$28=.0,$29=0,$31=0,$32=.0,$highest_1_ph=.0,$i_0_ph=0,$i_0=0;
 var $34=0,$35=0,$37=0,$38=.0,$39=0,$41=0,$highest_2=.0,$highestIdx_2=0,$43=0,$45=0,$46=.0,$lowest_1_ph=.0,$i_1_ph=0,$i_1=0,$48=0,$49=0,$51=0,$52=.0,$53=0,$55=0;
 var $lowest_2=.0,$lowestIdx_2=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outMinIdx|0)==0;
 $13=($outMaxIdx|0)==0;
 $or_cond4=$12|$13;
 if ($or_cond4) {
  $_0=2;

  return (($_0)|0);
 }
 $15=((($_03)-(1))|0);
 $16=($15|0)>($startIdx|0);
 $_startIdx=($16?$15:$startIdx);
 $17=($_startIdx|0)>($endIdx|0);
 if ($17) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $20=($_startIdx|0)>($endIdx|0);
 if ($20) {
  $outIdx_0_lcssa=0;
 } else {
  $21=((($_startIdx)-($15))|0);
  $22=($endIdx|0)>($startIdx|0);
  $smax=($22?$endIdx:$startIdx);
  $23=((($_03)-(1))|0);
  $24=($smax|0)>($23|0);
  $smax24=($24?$smax:$23);
  $25=($23|0)<($startIdx|0);
  $smax25=($25?$startIdx:$23);
  $highest_011=0.0;$lowest_012=0.0;$outIdx_013=0;$trailingIdx_014=$21;$today_015=$_startIdx;$highestIdx_017=-1;$lowestIdx_018=-1;
  while(1) {







   $27=(($inReal+($today_015<<3))|0);
   $28=(+(HEAPF64[(($27)>>3)]));
   $29=($highestIdx_017|0)<($trailingIdx_014|0);
   L25: do {
    if ($29) {
     $31=(($inReal+($trailingIdx_014<<3))|0);
     $32=(+(HEAPF64[(($31)>>3)]));
     $i_0_ph=$trailingIdx_014;$highest_1_ph=$32;
     L27: while(1) {


      $i_0=$i_0_ph;
      while(1) {

       $34=((($i_0)+(1))|0);
       $35=($i_0|0)<($today_015|0);
       if (!($35)) {
        $highestIdx_2=$i_0_ph;$highest_2=$highest_1_ph;
        break L25;
       }
       $37=(($inReal+($34<<3))|0);
       $38=(+(HEAPF64[(($37)>>3)]));
       $39=$38>$highest_1_ph;
       if ($39) {
        $i_0_ph=$34;$highest_1_ph=$38;
        continue L27;
       } else {
        $i_0=$34;
       }
      }
     }
    } else {
     $41=$28<$highest_011;
     if ($41) {
      $highestIdx_2=$highestIdx_017;$highest_2=$highest_011;
      break;
     }
     $highestIdx_2=$today_015;$highest_2=$28;
    }
   } while(0);


   $43=($lowestIdx_018|0)<($trailingIdx_014|0);
   L35: do {
    if ($43) {
     $45=(($inReal+($trailingIdx_014<<3))|0);
     $46=(+(HEAPF64[(($45)>>3)]));
     $i_1_ph=$trailingIdx_014;$lowest_1_ph=$46;
     L39: while(1) {


      $i_1=$i_1_ph;
      while(1) {

       $48=((($i_1)+(1))|0);
       $49=($i_1|0)<($today_015|0);
       if (!($49)) {
        $lowestIdx_2=$i_1_ph;$lowest_2=$lowest_1_ph;
        break L35;
       }
       $51=(($inReal+($48<<3))|0);
       $52=(+(HEAPF64[(($51)>>3)]));
       $53=$52<$lowest_1_ph;
       if ($53) {
        $i_1_ph=$48;$lowest_1_ph=$52;
        continue L39;
       } else {
        $i_1=$48;
       }
      }
     }
    } else {
     $55=$28>$lowest_012;
     if ($55) {
      $lowestIdx_2=$lowestIdx_018;$lowest_2=$lowest_012;
      break;
     }
     $lowestIdx_2=$today_015;$lowest_2=$28;
    }
   } while(0);


   $57=(($outMaxIdx+($outIdx_013<<2))|0);
   HEAP32[(($57)>>2)]=$highestIdx_2;
   $58=(($outMinIdx+($outIdx_013<<2))|0);
   HEAP32[(($58)>>2)]=$lowestIdx_2;
   $59=((($outIdx_013)+(1))|0);
   $60=((($trailingIdx_014)+(1))|0);
   $61=((($today_015)+(1))|0);
   $62=($today_015|0)<($endIdx|0);
   if ($62) {
    $highest_011=$highest_2;$lowest_012=$lowest_2;$outIdx_013=$59;$trailingIdx_014=$60;$today_015=$61;$highestIdx_017=$highestIdx_2;$lowestIdx_018=$lowestIdx_2;
   } else {
    break;
   }
  }
  $63=((($smax24)+(1))|0);
  $64=((($63)-($smax25))|0);
  $outIdx_0_lcssa=$64;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_MINUS_DI($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond15=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInTimePeriod_off=0,$12=0,$_013=0,$14=0,$16=0,$18=0,$19=0,$20=0,$21=0,$lookbackTotal_0=0;
 var $23=0,$lookbackTotal_0_startIdx=0,$24=0,$27=0,$29=0,$30=0,$31=0,$32=0,$33=.0,$34=.0,$35=0,$smax=0,$36=0,$smax76=0,$37=0,$smax77=0,$prevLow_029=.0,$prevHigh_028=.0,$outIdx_027=0,$today_026=0;
 var $prevClose_030_in=0,$prevClose_030=.0,$39=0,$40=0,$41=.0,$42=0,$43=.0,$44=.0,$45=0,$46=.0,$47=0,$or_cond17=0,$49=.0,$50=.0,$51=.0,$52=0,$tempReal_0=.0,$53=.0,$54=.0,$55=0;
 var $tempReal_1=.0,$56=0,$57=0,$or_cond7=0,$59=0,$61=.0,$62=0,$64=0,$outIdx_1=0,$66=0,$67=0,$68=0,$outIdx_0_lcssa=0,$71=0,$72=0,$73=.0,$74=0,$75=.0,$prevClose_1_in57=0,$i_058=0;
 var $prevClose_159=.0,$76=0,$77=0,$smax86=0,$78=0,$79=0,$prevClose_166=.0,$i_065=0,$prevTR_064=.0,$prevMinusDM_063=.0,$prevLow_162=.0,$prevHigh_161=.0,$today_160=0,$81=0,$82=0,$83=.0,$84=0,$85=.0,$86=.0,$87=0;
 var $88=.0,$89=0,$or_cond19=0,$91=.0,$prevMinusDM_1=.0,$93=.0,$94=.0,$95=.0,$96=0,$tempReal_2=.0,$97=.0,$98=.0,$99=0,$tempReal_3=.0,$100=.0,$prevClose_1_in=0,$i_0=0,$prevClose_1=.0,$101=0,$102=0;
 var $prevClose_1_lcssa=.0,$prevTR_0_lcssa=.0,$prevMinusDM_0_lcssa=.0,$prevLow_1_lcssa=.0,$prevHigh_1_lcssa=.0,$today_1_lcssa=0,$104=0,$105=0,$106=0,$107=0,$108=.0,$109=0,$111=0,$prevTR_147=.0,$prevMinusDM_246=.0,$prevClose_245=.0,$prevLow_244=.0,$prevHigh_243=.0,$today_242=0,$112=0;
 var $113=0,$114=.0,$115=0,$116=.0,$117=.0,$118=0,$119=.0,$120=0,$or_cond21=0,$121=.0,$122=.0,$124=.0,$prevMinusDM_3=.0,$126=.0,$127=.0,$128=.0,$129=0,$tempReal_4=.0,$130=.0,$131=.0;
 var $132=0,$tempReal_5=.0,$133=.0,$134=.0,$135=.0,$136=0,$137=.0,$138=0,$139=0,$140=0,$prevTR_1_lcssa=.0,$prevMinusDM_2_lcssa=.0,$prevClose_2_lcssa=.0,$prevLow_2_lcssa=.0,$prevHigh_2_lcssa=.0,$today_2_lcssa=0,$142=0,$143=0,$or_cond9=0,$145=.0;
 var $146=.0,$storemerge=.0,$148=0,$149=.0,$150=0,$prevTR_237=.0,$prevMinusDM_436=.0,$prevClose_335=.0,$prevLow_334=.0,$prevHigh_333=.0,$outIdx_232=0,$today_331=0,$152=0,$153=0,$154=.0,$155=0,$156=.0,$157=.0,$158=0,$159=.0;
 var $160=0,$or_cond23=0,$161=.0,$162=.0,$164=.0,$prevMinusDM_5=.0,$166=.0,$167=.0,$168=.0,$169=0,$tempReal_6=.0,$170=.0,$171=.0,$172=0,$tempReal_7=.0,$173=.0,$174=.0,$175=.0,$176=0,$177=.0;
 var $178=0,$179=0,$or_cond11=0,$181=.0,$182=.0,$183=0,$185=0,$outIdx_2_be=0,$186=0,$187=0,$outIdx_2_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond15=$3|$4;
 if ($or_cond15) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  return (($_0)|0);
 }
 $10=($optInTimePeriod|0)==-2147483648;
 do {
  if ($10) {
   $_013=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $12=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_013=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $14=($outReal|0)==0;
 if ($14) {
  $_0=2;

  return (($_0)|0);
 }
 $16=($_013|0)>1;
 if ($16) {
  $18=((HEAP32[((272)>>2)])|0);
  $19=(($18+124)|0);
  $20=((HEAP32[(($19)>>2)])|0);
  $21=((($20)+($_013))|0);
  $lookbackTotal_0=$21;
 } else {
  $lookbackTotal_0=1;
 }

 $23=($lookbackTotal_0|0)>($startIdx|0);
 $lookbackTotal_0_startIdx=($23?$lookbackTotal_0:$startIdx);
 $24=($lookbackTotal_0_startIdx|0)>($endIdx|0);
 if ($24) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $27=($_013|0)<2;
 HEAP32[(($outBegIdx)>>2)]=$lookbackTotal_0_startIdx;
 if ($27) {
  $29=((($lookbackTotal_0_startIdx)-(1))|0);
  $30=($lookbackTotal_0_startIdx|0)>($endIdx|0);
  if ($30) {
   $outIdx_0_lcssa=0;
  } else {
   $31=(($inLow+($29<<3))|0);
   $32=(($inHigh+($29<<3))|0);
   $33=(+(HEAPF64[(($31)>>3)]));
   $34=(+(HEAPF64[(($32)>>3)]));
   $35=($lookbackTotal_0|0)>($endIdx|0);
   $smax=($35?$lookbackTotal_0:$endIdx);
   $36=($smax|0)>($startIdx|0);
   $smax76=($36?$smax:$startIdx);
   $37=($lookbackTotal_0|0)>($startIdx|0);
   $smax77=($37?$lookbackTotal_0:$startIdx);
   $today_026=$29;$outIdx_027=0;$prevHigh_028=$34;$prevLow_029=$33;
   while(1) {




    $prevClose_030_in=(($inClose+($today_026<<3))|0);
    $prevClose_030=(+(HEAPF64[(($prevClose_030_in)>>3)]));
    $39=((($today_026)+(1))|0);
    $40=(($inHigh+($39<<3))|0);
    $41=(+(HEAPF64[(($40)>>3)]));
    $42=(($inLow+($39<<3))|0);
    $43=(+(HEAPF64[(($42)>>3)]));
    $44=($prevLow_029)-($43);
    $45=$44>(0.0);
    $46=($41)-($prevHigh_028);
    $47=$46<$44;
    $or_cond17=$45&$47;
    do {
     if ($or_cond17) {
      $49=($41)-($43);
      $50=($41)-($prevClose_030);
      $51=(+(Math_abs((+($50)))));
      $52=$51>$49;
      $tempReal_0=($52?$51:$49);
      $53=($43)-($prevClose_030);
      $54=(+(Math_abs((+($53)))));
      $55=$54>$tempReal_0;
      $tempReal_1=($55?$54:$tempReal_0);
      $56=$tempReal_1>(-1.0e-14);
      $57=$tempReal_1<(1.0e-14);
      $or_cond7=$56&$57;
      if ($or_cond7) {
       $59=(($outReal+($outIdx_027<<3))|0);
       HEAPF64[(($59)>>3)]=0.0;
       break;
      } else {
       $61=($44)/($tempReal_1);
       $62=(($outReal+($outIdx_027<<3))|0);
       HEAPF64[(($62)>>3)]=$61;
       break;
      }
     } else {
      $64=(($outReal+($outIdx_027<<3))|0);
      HEAPF64[(($64)>>3)]=0.0;
     }
    } while(0);
    $outIdx_1=((($outIdx_027)+(1))|0);
    $66=($39|0)<($endIdx|0);
    if ($66) {
     $today_026=$39;$outIdx_027=$outIdx_1;$prevHigh_028=$41;$prevLow_029=$43;
    } else {
     break;
    }
   }
   $67=((($smax76)+(1))|0);
   $68=((($67)-($smax77))|0);
   $outIdx_0_lcssa=$68;
  }

  HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
  $_0=0;

  return (($_0)|0);
 }
 $71=((($lookbackTotal_0_startIdx)-($lookbackTotal_0))|0);
 $72=(($inHigh+($71<<3))|0);
 $73=(+(HEAPF64[(($72)>>3)]));
 $74=(($inLow+($71<<3))|0);
 $75=(+(HEAPF64[(($74)>>3)]));
 $prevClose_1_in57=(($inClose+($71<<3))|0);
 $i_058=((($_013)-(1))|0);
 $prevClose_159=(+(HEAPF64[(($prevClose_1_in57)>>3)]));
 $76=($i_058|0)>0;
 if ($76) {
  $77=($lookbackTotal_0|0)>($startIdx|0);
  $smax86=($77?$lookbackTotal_0:$startIdx);
  $78=((($_013)+($smax86))|0);
  $79=((($78)-(1))|0);
  $today_160=$71;$prevHigh_161=$73;$prevLow_162=$75;$prevMinusDM_063=0.0;$prevTR_064=0.0;$i_065=$i_058;$prevClose_166=$prevClose_159;
  while(1) {







   $81=((($today_160)+(1))|0);
   $82=(($inHigh+($81<<3))|0);
   $83=(+(HEAPF64[(($82)>>3)]));
   $84=(($inLow+($81<<3))|0);
   $85=(+(HEAPF64[(($84)>>3)]));
   $86=($prevLow_162)-($85);
   $87=$86>(0.0);
   $88=($83)-($prevHigh_161);
   $89=$88<$86;
   $or_cond19=$87&$89;
   if ($or_cond19) {
    $91=($prevMinusDM_063)+($86);
    $prevMinusDM_1=$91;
   } else {
    $prevMinusDM_1=$prevMinusDM_063;
   }

   $93=($83)-($85);
   $94=($83)-($prevClose_166);
   $95=(+(Math_abs((+($94)))));
   $96=$95>$93;
   $tempReal_2=($96?$95:$93);
   $97=($85)-($prevClose_166);
   $98=(+(Math_abs((+($97)))));
   $99=$98>$tempReal_2;
   $tempReal_3=($99?$98:$tempReal_2);
   $100=($prevTR_064)+($tempReal_3);
   $prevClose_1_in=(($inClose+($81<<3))|0);
   $i_0=((($i_065)-(1))|0);
   $prevClose_1=(+(HEAPF64[(($prevClose_1_in)>>3)]));
   $101=($i_0|0)>0;
   if ($101) {
    $today_160=$81;$prevHigh_161=$83;$prevLow_162=$85;$prevMinusDM_063=$prevMinusDM_1;$prevTR_064=$100;$i_065=$i_0;$prevClose_166=$prevClose_1;
   } else {
    break;
   }
  }
  $102=((($79)-($lookbackTotal_0))|0);
  $today_1_lcssa=$102;$prevHigh_1_lcssa=$83;$prevLow_1_lcssa=$85;$prevMinusDM_0_lcssa=$prevMinusDM_1;$prevTR_0_lcssa=$100;$prevClose_1_lcssa=$prevClose_1;
 } else {
  $today_1_lcssa=$71;$prevHigh_1_lcssa=$73;$prevLow_1_lcssa=$75;$prevMinusDM_0_lcssa=0.0;$prevTR_0_lcssa=0.0;$prevClose_1_lcssa=$prevClose_159;
 }






 $104=((HEAP32[((272)>>2)])|0);
 $105=(($104+124)|0);
 $106=((HEAP32[(($105)>>2)])|0);
 $107=($106|0)==-1;
 if ($107) {
  $today_2_lcssa=$today_1_lcssa;$prevHigh_2_lcssa=$prevHigh_1_lcssa;$prevLow_2_lcssa=$prevLow_1_lcssa;$prevClose_2_lcssa=$prevClose_1_lcssa;$prevMinusDM_2_lcssa=$prevMinusDM_0_lcssa;$prevTR_1_lcssa=$prevTR_0_lcssa;
 } else {
  $108=(+((($_013|0))|0));
  $109=((($today_1_lcssa)+($106))|0);
  $today_242=$today_1_lcssa;$prevHigh_243=$prevHigh_1_lcssa;$prevLow_244=$prevLow_1_lcssa;$prevClose_245=$prevClose_1_lcssa;$prevMinusDM_246=$prevMinusDM_0_lcssa;$prevTR_147=$prevTR_0_lcssa;$111=$106;
  while(1) {







   $112=((($today_242)+(1))|0);
   $113=(($inHigh+($112<<3))|0);
   $114=(+(HEAPF64[(($113)>>3)]));
   $115=(($inLow+($112<<3))|0);
   $116=(+(HEAPF64[(($115)>>3)]));
   $117=($prevLow_244)-($116);
   $118=$117>(0.0);
   $119=($114)-($prevHigh_243);
   $120=$119<$117;
   $or_cond21=$118&$120;
   $121=($prevMinusDM_246)/($108);
   $122=($prevMinusDM_246)-($121);
   if ($or_cond21) {
    $124=($117)+($122);
    $prevMinusDM_3=$124;
   } else {
    $prevMinusDM_3=$122;
   }

   $126=($114)-($116);
   $127=($114)-($prevClose_245);
   $128=(+(Math_abs((+($127)))));
   $129=$128>$126;
   $tempReal_4=($129?$128:$126);
   $130=($116)-($prevClose_245);
   $131=(+(Math_abs((+($130)))));
   $132=$131>$tempReal_4;
   $tempReal_5=($132?$131:$tempReal_4);
   $133=($prevTR_147)/($108);
   $134=($prevTR_147)-($133);
   $135=($134)+($tempReal_5);
   $136=(($inClose+($112<<3))|0);
   $137=(+(HEAPF64[(($136)>>3)]));
   $138=((($111)-(1))|0);
   $139=($111|0)==0;
   if ($139) {
    break;
   } else {
    $today_242=$112;$prevHigh_243=$114;$prevLow_244=$116;$prevClose_245=$137;$prevMinusDM_246=$prevMinusDM_3;$prevTR_147=$135;$111=$138;
   }
  }
  $140=((($109)+(1))|0);
  $today_2_lcssa=$140;$prevHigh_2_lcssa=$114;$prevLow_2_lcssa=$116;$prevClose_2_lcssa=$137;$prevMinusDM_2_lcssa=$prevMinusDM_3;$prevTR_1_lcssa=$135;
 }






 $142=$prevTR_1_lcssa>(-1.0e-14);
 $143=$prevTR_1_lcssa<(1.0e-14);
 $or_cond9=$142&$143;
 if ($or_cond9) {
  $storemerge=0.0;
 } else {
  $145=($prevMinusDM_2_lcssa)/($prevTR_1_lcssa);
  $146=($145)*((100.0));
  $storemerge=$146;
 }

 HEAPF64[(($outReal)>>3)]=$storemerge;
 $148=($today_2_lcssa|0)<($endIdx|0);
 if ($148) {
  $149=(+((($_013|0))|0));
  $150=((($endIdx)+(1))|0);
  $today_331=$today_2_lcssa;$outIdx_232=1;$prevHigh_333=$prevHigh_2_lcssa;$prevLow_334=$prevLow_2_lcssa;$prevClose_335=$prevClose_2_lcssa;$prevMinusDM_436=$prevMinusDM_2_lcssa;$prevTR_237=$prevTR_1_lcssa;
  while(1) {







   $152=((($today_331)+(1))|0);
   $153=(($inHigh+($152<<3))|0);
   $154=(+(HEAPF64[(($153)>>3)]));
   $155=(($inLow+($152<<3))|0);
   $156=(+(HEAPF64[(($155)>>3)]));
   $157=($prevLow_334)-($156);
   $158=$157>(0.0);
   $159=($154)-($prevHigh_333);
   $160=$159<$157;
   $or_cond23=$158&$160;
   $161=($prevMinusDM_436)/($149);
   $162=($prevMinusDM_436)-($161);
   if ($or_cond23) {
    $164=($157)+($162);
    $prevMinusDM_5=$164;
   } else {
    $prevMinusDM_5=$162;
   }

   $166=($154)-($156);
   $167=($154)-($prevClose_335);
   $168=(+(Math_abs((+($167)))));
   $169=$168>$166;
   $tempReal_6=($169?$168:$166);
   $170=($156)-($prevClose_335);
   $171=(+(Math_abs((+($170)))));
   $172=$171>$tempReal_6;
   $tempReal_7=($172?$171:$tempReal_6);
   $173=($prevTR_237)/($149);
   $174=($prevTR_237)-($173);
   $175=($174)+($tempReal_7);
   $176=(($inClose+($152<<3))|0);
   $177=(+(HEAPF64[(($176)>>3)]));
   $178=$175>(-1.0e-14);
   $179=$175<(1.0e-14);
   $or_cond11=$178&$179;
   if ($or_cond11) {
    $185=(($outReal+($outIdx_232<<3))|0);
    HEAPF64[(($185)>>3)]=0.0;
   } else {
    $181=($prevMinusDM_5)/($175);
    $182=($181)*((100.0));
    $183=(($outReal+($outIdx_232<<3))|0);
    HEAPF64[(($183)>>3)]=$182;
   }
   $outIdx_2_be=((($outIdx_232)+(1))|0);
   $186=($152|0)<($endIdx|0);
   if ($186) {
    $today_331=$152;$outIdx_232=$outIdx_2_be;$prevHigh_333=$154;$prevLow_334=$156;$prevClose_335=$177;$prevMinusDM_436=$prevMinusDM_5;$prevTR_237=$175;
   } else {
    break;
   }
  }
  $187=((($150)-($today_2_lcssa))|0);
  $outIdx_2_lcssa=$187;
 } else {
  $outIdx_2_lcssa=1;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_2_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_MINUS_DM($startIdx,$endIdx,$inHigh,$inLow,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond=0,$9=0,$optInTimePeriod_off=0,$11=0,$_05=0,$13=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0,$lookbackTotal_0=0,$23=0;
 var $lookbackTotal_0_startIdx=0,$24=0,$27=0,$29=0,$30=0,$31=0,$32=0,$33=.0,$34=.0,$35=0,$smax=0,$36=0,$smax47=0,$37=0,$smax48=0,$prevLow_018=.0,$prevHigh_017=.0,$outIdx_016=0,$today_015=0,$38=0;
 var $39=0,$40=.0,$41=0,$42=.0,$43=.0,$44=0,$45=.0,$46=0,$or_cond8=0,$47=0,$48=0,$_=.0,$49=0,$50=0,$51=0,$outIdx_0_lcssa=0,$54=0,$55=0,$56=.0,$57=0;
 var $58=.0,$59=0,$today_1_ph=0,$prevHigh_1_ph=.0,$prevLow_1_ph=.0,$prevMinusDM_0_ph=.0,$i_0_ph=0,$indvars_iv=0,$today_1=0,$prevHigh_1=.0,$prevLow_1=.0,$i_0=0,$61=0,$62=0,$64=0,$65=0,$66=.0,$67=0,$68=.0,$69=.0;
 var $70=0,$71=.0,$72=0,$or_cond10=0,$indvars_iv_next=0,$74=.0,$76=0,$77=0,$78=0,$79=0,$80=.0,$81=0,$_in=0,$prevMinusDM_132=.0,$prevLow_231=.0,$prevHigh_230=.0,$today_229=0,$83=0,$84=0,$85=0;
 var $86=.0,$87=0,$88=.0,$89=.0,$90=0,$91=.0,$92=0,$or_cond12=0,$93=.0,$94=.0,$96=.0,$prevMinusDM_1_be=.0,$97=0,$98=0,$prevMinusDM_1_lcssa=.0,$prevLow_2_lcssa=.0,$prevHigh_2_lcssa=.0,$today_2_lcssa=0,$100=0,$101=.0;
 var $102=0,$prevMinusDM_223=.0,$prevLow_322=.0,$prevHigh_321=.0,$outIdx_120=0,$today_319=0,$104=0,$105=0,$106=.0,$107=0,$108=.0,$109=.0,$110=0,$111=.0,$112=0,$or_cond14=0,$113=.0,$114=.0,$116=.0,$prevMinusDM_3=.0;
 var $118=0,$119=0,$120=0,$121=0,$outIdx_1_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 if (!($or_cond)) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($optInTimePeriod|0)==-2147483648;
 do {
  if ($9) {
   $_05=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $11=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($11) {
    $_0=2;
   } else {
    $_05=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $13=($outReal|0)==0;
 if ($13) {
  $_0=2;

  return (($_0)|0);
 }
 $15=($_05|0)>1;
 if ($15) {
  $17=((HEAP32[((272)>>2)])|0);
  $18=(($17+128)|0);
  $19=((HEAP32[(($18)>>2)])|0);
  $20=((($_05)-(1))|0);
  $21=((($20)+($19))|0);
  $lookbackTotal_0=$21;
 } else {
  $lookbackTotal_0=1;
 }

 $23=($lookbackTotal_0|0)>($startIdx|0);
 $lookbackTotal_0_startIdx=($23?$lookbackTotal_0:$startIdx);
 $24=($lookbackTotal_0_startIdx|0)>($endIdx|0);
 if ($24) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $27=($_05|0)<2;
 HEAP32[(($outBegIdx)>>2)]=$lookbackTotal_0_startIdx;
 if ($27) {
  $29=((($lookbackTotal_0_startIdx)-(1))|0);
  $30=($lookbackTotal_0_startIdx|0)>($endIdx|0);
  if ($30) {
   $outIdx_0_lcssa=0;
  } else {
   $31=(($inLow+($29<<3))|0);
   $32=(($inHigh+($29<<3))|0);
   $33=(+(HEAPF64[(($31)>>3)]));
   $34=(+(HEAPF64[(($32)>>3)]));
   $35=($lookbackTotal_0|0)>($endIdx|0);
   $smax=($35?$lookbackTotal_0:$endIdx);
   $36=($smax|0)>($startIdx|0);
   $smax47=($36?$smax:$startIdx);
   $37=($lookbackTotal_0|0)>($startIdx|0);
   $smax48=($37?$lookbackTotal_0:$startIdx);
   $today_015=$29;$outIdx_016=0;$prevHigh_017=$34;$prevLow_018=$33;
   while(1) {




    $38=((($today_015)+(1))|0);
    $39=(($inHigh+($38<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=(($inLow+($38<<3))|0);
    $42=(+(HEAPF64[(($41)>>3)]));
    $43=($prevLow_018)-($42);
    $44=$43>(0.0);
    $45=($40)-($prevHigh_017);
    $46=$45<$43;
    $or_cond8=$44&$46;
    $47=((($outIdx_016)+(1))|0);
    $48=(($outReal+($outIdx_016<<3))|0);
    $_=($or_cond8?$43:(0.0));
    HEAPF64[(($48)>>3)]=$_;
    $49=($38|0)<($endIdx|0);
    if ($49) {
     $today_015=$38;$outIdx_016=$47;$prevHigh_017=$40;$prevLow_018=$42;
    } else {
     break;
    }
   }
   $50=((($smax47)+(1))|0);
   $51=((($50)-($smax48))|0);
   $outIdx_0_lcssa=$51;
  }

  HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
  $_0=0;

  return (($_0)|0);
 }
 $54=((($lookbackTotal_0_startIdx)-($lookbackTotal_0))|0);
 $55=(($inHigh+($54<<3))|0);
 $56=(+(HEAPF64[(($55)>>3)]));
 $57=(($inLow+($54<<3))|0);
 $58=(+(HEAPF64[(($57)>>3)]));
 $59=((($_05)-(1))|0);
 $i_0_ph=$59;$prevMinusDM_0_ph=0.0;$prevLow_1_ph=$58;$prevHigh_1_ph=$56;$today_1_ph=$54;
 L34: while(1) {





  $i_0=$i_0_ph;$prevLow_1=$prevLow_1_ph;$prevHigh_1=$prevHigh_1_ph;$today_1=$today_1_ph;$indvars_iv=0;
  while(1) {





   $61=((($i_0)-(1))|0);
   $62=($i_0|0)>0;
   if (!($62)) {
    break L34;
   }
   $64=((($today_1)+(1))|0);
   $65=(($inHigh+($64<<3))|0);
   $66=(+(HEAPF64[(($65)>>3)]));
   $67=(($inLow+($64<<3))|0);
   $68=(+(HEAPF64[(($67)>>3)]));
   $69=($prevLow_1)-($68);
   $70=$69>(0.0);
   $71=($66)-($prevHigh_1);
   $72=$71<$69;
   $or_cond10=$70&$72;
   $indvars_iv_next=((($indvars_iv)+(1))|0);
   if ($or_cond10) {
    break;
   } else {
    $i_0=$61;$prevLow_1=$68;$prevHigh_1=$66;$today_1=$64;$indvars_iv=$indvars_iv_next;
   }
  }
  $74=($prevMinusDM_0_ph)+($69);
  $i_0_ph=$61;$prevMinusDM_0_ph=$74;$prevLow_1_ph=$68;$prevHigh_1_ph=$66;$today_1_ph=$64;
 }
 $76=((HEAP32[((272)>>2)])|0);
 $77=(($76+128)|0);
 $78=((HEAP32[(($77)>>2)])|0);
 $79=($78|0)==0;
 if ($79) {
  $today_2_lcssa=$today_1;$prevHigh_2_lcssa=$prevHigh_1;$prevLow_2_lcssa=$prevLow_1;$prevMinusDM_1_lcssa=$prevMinusDM_0_ph;
 } else {
  $80=(+((($_05|0))|0));
  $81=((($78)+($today_1_ph))|0);
  $today_229=$today_1;$prevHigh_230=$prevHigh_1;$prevLow_231=$prevLow_1;$prevMinusDM_132=$prevMinusDM_0_ph;$_in=$78;
  while(1) {





   $83=((($_in)-(1))|0);
   $84=((($today_229)+(1))|0);
   $85=(($inHigh+($84<<3))|0);
   $86=(+(HEAPF64[(($85)>>3)]));
   $87=(($inLow+($84<<3))|0);
   $88=(+(HEAPF64[(($87)>>3)]));
   $89=($prevLow_231)-($88);
   $90=$89>(0.0);
   $91=($86)-($prevHigh_230);
   $92=$91<$89;
   $or_cond12=$90&$92;
   $93=($prevMinusDM_132)/($80);
   $94=($prevMinusDM_132)-($93);
   if ($or_cond12) {
    $96=($89)+($94);
    $prevMinusDM_1_be=$96;
   } else {
    $prevMinusDM_1_be=$94;
   }

   $97=($83|0)==0;
   if ($97) {
    break;
   } else {
    $today_229=$84;$prevHigh_230=$86;$prevLow_231=$88;$prevMinusDM_132=$prevMinusDM_1_be;$_in=$83;
   }
  }
  $98=((($indvars_iv)+($81))|0);
  $today_2_lcssa=$98;$prevHigh_2_lcssa=$86;$prevLow_2_lcssa=$88;$prevMinusDM_1_lcssa=$prevMinusDM_1_be;
 }




 HEAPF64[(($outReal)>>3)]=$prevMinusDM_1_lcssa;
 $100=($today_2_lcssa|0)<($endIdx|0);
 if ($100) {
  $101=(+((($_05|0))|0));
  $102=((($endIdx)+(1))|0);
  $today_319=$today_2_lcssa;$outIdx_120=1;$prevHigh_321=$prevHigh_2_lcssa;$prevLow_322=$prevLow_2_lcssa;$prevMinusDM_223=$prevMinusDM_1_lcssa;
  while(1) {





   $104=((($today_319)+(1))|0);
   $105=(($inHigh+($104<<3))|0);
   $106=(+(HEAPF64[(($105)>>3)]));
   $107=(($inLow+($104<<3))|0);
   $108=(+(HEAPF64[(($107)>>3)]));
   $109=($prevLow_322)-($108);
   $110=$109>(0.0);
   $111=($106)-($prevHigh_321);
   $112=$111<$109;
   $or_cond14=$110&$112;
   $113=($prevMinusDM_223)/($101);
   $114=($prevMinusDM_223)-($113);
   if ($or_cond14) {
    $116=($109)+($114);
    $prevMinusDM_3=$116;
   } else {
    $prevMinusDM_3=$114;
   }

   $118=((($outIdx_120)+(1))|0);
   $119=(($outReal+($outIdx_120<<3))|0);
   HEAPF64[(($119)>>3)]=$prevMinusDM_3;
   $120=($104|0)<($endIdx|0);
   if ($120) {
    $today_319=$104;$outIdx_120=$118;$prevHigh_321=$106;$prevLow_322=$108;$prevMinusDM_223=$prevMinusDM_3;
   } else {
    break;
   }
  }
  $121=((($102)-($today_2_lcssa))|0);
  $outIdx_1_lcssa=$121;
 } else {
  $outIdx_1_lcssa=1;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_1_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_MOM($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$_03_startIdx=0,$15=0,$18=0,$19=0,$20=0,$smax=0,$21=0,$smax7=0,$22=0;
 var $smax8=0,$trailingIdx_06=0,$outIdx_05=0,$inIdx_04=0,$24=0,$25=0,$26=.0,$27=0,$28=0,$29=.0,$30=.0,$31=0,$32=0,$33=0,$34=0,$35=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=10;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $10=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=($_03|0)>($startIdx|0);
 $_03_startIdx=($14?$_03:$startIdx);
 $15=($_03_startIdx|0)>($endIdx|0);
 if ($15) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $18=($_03_startIdx|0)>($endIdx|0);
 if ($18) {
  $outIdx_0_lcssa=0;
 } else {
  $19=((($_03_startIdx)-($_03))|0);
  $20=($_03|0)>($endIdx|0);
  $smax=($20?$_03:$endIdx);
  $21=($smax|0)>($startIdx|0);
  $smax7=($21?$smax:$startIdx);
  $22=($_03|0)>($startIdx|0);
  $smax8=($22?$_03:$startIdx);
  $inIdx_04=$_03_startIdx;$outIdx_05=0;$trailingIdx_06=$19;
  while(1) {



   $24=((($inIdx_04)+(1))|0);
   $25=(($inReal+($inIdx_04<<3))|0);
   $26=(+(HEAPF64[(($25)>>3)]));
   $27=((($trailingIdx_06)+(1))|0);
   $28=(($inReal+($trailingIdx_06<<3))|0);
   $29=(+(HEAPF64[(($28)>>3)]));
   $30=($26)-($29);
   $31=((($outIdx_05)+(1))|0);
   $32=(($outReal+($outIdx_05<<3))|0);
   HEAPF64[(($32)>>3)]=$30;
   $33=($inIdx_04|0)<($endIdx|0);
   if ($33) {
    $inIdx_04=$24;$outIdx_05=$31;$trailingIdx_06=$27;
   } else {
    break;
   }
  }
  $34=((($smax7)+(1))|0);
  $35=((($34)-($smax8))|0);
  $outIdx_0_lcssa=$35;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$_03_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_MULT($startIdx,$endIdx,$inReal0,$inReal1,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal0=($inReal0)|0;
 $inReal1=($inReal1)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$or_cond2=0,$9=0,$10=0,$smax=0,$11=0,$i_04=0,$outIdx_03=0,$13=0,$14=.0,$15=0,$16=.0,$17=.0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal0|0)==0;
 $7=($inReal1|0)==0;
 $or_cond1=$6|$7;
 $8=($outReal|0)==0;
 $or_cond2=$or_cond1|$8;
 if ($or_cond2) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($startIdx|0)>($endIdx|0);
 if ($9) {
  $outIdx_0_lcssa=0;
 } else {
  $10=($endIdx|0)>($startIdx|0);
  $smax=($10?$endIdx:$startIdx);
  $11=((($smax)+(1))|0);
  $outIdx_03=0;$i_04=$startIdx;
  while(1) {


   $13=(($inReal0+($i_04<<3))|0);
   $14=(+(HEAPF64[(($13)>>3)]));
   $15=(($inReal1+($i_04<<3))|0);
   $16=(+(HEAPF64[(($15)>>3)]));
   $17=($14)*($16);
   $18=(($outReal+($outIdx_03<<3))|0);
   HEAPF64[(($18)>>3)]=$17;
   $19=((($i_04)+(1))|0);
   $20=((($outIdx_03)+(1))|0);
   $21=($i_04|0)<($endIdx|0);
   if ($21) {
    $outIdx_03=$20;$i_04=$19;
   } else {
    break;
   }
  }
  $22=((($11)-($startIdx))|0);
  $outIdx_0_lcssa=$22;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_NATR_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$6=0,$7=0,$8=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $3=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((HEAP32[((272)>>2)])|0);
 $6=(($5+132)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=((($7)+($_0))|0);
 $_02=$8;

 return (($_02)|0);
}


function _TA_NATR($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $outBegIdx1=0,$outNbElement1=0,$prevATRTemp=0,$1=0,$3=0,$4=0,$or_cond12=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInTimePeriod_off=0,$12=0,$_011=0,$14=0,$16=0,$17=0,$_startIdx=0;
 var $18=0,$20=0,$22=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$36=0,$37=0,$38=0,$39=0,$42=.0,$43=0,$44=0;
 var $45=0,$46=0,$47=.0,$48=.0,$prevATR_018=.0,$today_017=0,$outIdx_016=0,$50=.0,$51=0,$52=0,$53=.0,$54=.0,$55=.0,$56=0,$57=0,$58=0,$prevATR_0_lcssa=.0,$today_0_lcssa=0,$60=0,$61=.0;
 var $62=0,$63=0,$or_cond7=0,$65=.0,$66=.0,$storemerge=.0,$68=0,$69=.0,$70=.0,$71=0,$smax=0,$73=0,$prevATR_115=.0,$today_114=0,$outIdx_113=0,$74=.0,$75=0,$76=0,$77=.0,$78=.0;
 var $79=.0,$80=0,$81=.0,$82=0,$83=0,$or_cond9=0,$85=.0,$86=.0,$87=0,$90=0,$91=0,$92=0,$93=0,$94=0,$outIdx_1_lcssa=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $outBegIdx1=((sp)|0);
 $outNbElement1=(((sp)+(8))|0);
 $prevATRTemp=(((sp)+(16))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond12=$3|$4;
 if ($or_cond12) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $10=($optInTimePeriod|0)==-2147483648;
 do {
  if ($10) {
   $_011=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $12=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_011=$optInTimePeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $14=($outReal|0)==0;
 if ($14) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $16=((_TA_NATR_Lookback($_011))|0);
 $17=($16|0)>($startIdx|0);
 $_startIdx=($17?$16:$startIdx);
 $18=($_startIdx|0)>($endIdx|0);
 if ($18) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $20=($_011|0)<2;
 if ($20) {
  $22=((_TA_TRANGE($_startIdx,$endIdx,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outReal))|0);
  $_0=$22;

  STACKTOP=sp;return (($_0)|0);
 }
 $24=((($endIdx)-($_startIdx))|0);
 $25=((($24)+($16))|0);
 $26=$25<<3;
 $27=((($26)+(8))|0);
 $28=((_malloc($27))|0);
 $29=$28;
 $30=(((1)-($16))|0);
 $31=((($30)+($_startIdx))|0);
 $32=((_TA_TRANGE($31,$endIdx,$inHigh,$inLow,$inClose,$outBegIdx1,$outNbElement1,$29))|0);
 $33=($32|0)==0;
 if (!($33)) {
  _free($28);
  $_0=$32;

  STACKTOP=sp;return (($_0)|0);
 }
 $36=((($_011)-(1))|0);
 $37=(($prevATRTemp)|0);
 $38=((_TA_INT_SMA($36,$36,$29,$_011,$outBegIdx1,$outNbElement1,$37))|0);
 $39=($38|0)==0;
 if (!($39)) {
  _free($28);
  $_0=$38;

  STACKTOP=sp;return (($_0)|0);
 }
 $42=(+(HEAPF64[(($37)>>3)]));
 $43=((HEAP32[((272)>>2)])|0);
 $44=(($43+132)|0);
 $45=((HEAP32[(($44)>>2)])|0);
 $46=($45|0)==0;
 if ($46) {
  $today_0_lcssa=$_011;$prevATR_0_lcssa=$42;
 } else {
  $47=(+((($36|0))|0));
  $48=(+((($_011|0))|0));
  $outIdx_016=$45;$today_017=$_011;$prevATR_018=$42;
  while(1) {



   $50=($47)*($prevATR_018);
   $51=((($today_017)+(1))|0);
   $52=(($29+($today_017<<3))|0);
   $53=(+(HEAPF64[(($52)>>3)]));
   $54=($50)+($53);
   $55=($54)/($48);
   $56=((($outIdx_016)-(1))|0);
   $57=($56|0)==0;
   if ($57) {
    break;
   } else {
    $outIdx_016=$56;$today_017=$51;$prevATR_018=$55;
   }
  }
  $58=((($_011)+($45))|0);
  $today_0_lcssa=$58;$prevATR_0_lcssa=$55;
 }


 $60=(($inClose+($today_0_lcssa<<3))|0);
 $61=(+(HEAPF64[(($60)>>3)]));
 $62=$61>(-1.0e-14);
 $63=$61<(1.0e-14);
 $or_cond7=$62&$63;
 if ($or_cond7) {
  $storemerge=0.0;
 } else {
  $65=($prevATR_0_lcssa)/($61);
  $66=($65)*((100.0));
  $storemerge=$66;
 }

 HEAPF64[(($outReal)>>3)]=$storemerge;
 $68=($_startIdx|0)==($endIdx|0);
 if ($68) {
  $outIdx_1_lcssa=1;
 } else {
  $69=(+((($36|0))|0));
  $70=(+((($_011|0))|0));
  $71=($16|0)>($startIdx|0);
  $smax=($71?$16:$startIdx);
  $outIdx_113=1;$today_114=$today_0_lcssa;$prevATR_115=$prevATR_0_lcssa;$73=$24;
  while(1) {




   $74=($69)*($prevATR_115);
   $75=((($today_114)+(1))|0);
   $76=(($29+($today_114<<3))|0);
   $77=(+(HEAPF64[(($76)>>3)]));
   $78=($74)+($77);
   $79=($78)/($70);
   $80=(($inClose+($75<<3))|0);
   $81=(+(HEAPF64[(($80)>>3)]));
   $82=$81>(-1.0e-14);
   $83=$81<(1.0e-14);
   $or_cond9=$82&$83;
   if ($or_cond9) {
    HEAPF64[(($outReal)>>3)]=0.0;
   } else {
    $85=($79)/($81);
    $86=($85)*((100.0));
    $87=(($outReal+($outIdx_113<<3))|0);
    HEAPF64[(($87)>>3)]=$86;
   }
   $90=((($outIdx_113)+(1))|0);
   $91=((($73)-(1))|0);
   $92=($91|0)==0;
   if ($92) {
    break;
   } else {
    $outIdx_113=$90;$today_114=$75;$prevATR_115=$79;$73=$91;
   }
  }
  $93=((($endIdx)+(1))|0);
  $94=((($93)-($smax))|0);
  $outIdx_1_lcssa=$94;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_1_lcssa;
 _free($28);
 $_0=$38;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_NVI($startIdx,$endIdx,$inClose,$inVolume,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inClose=($inClose)|0;
 $inVolume=($inVolume)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond2=0,$notlhs=0,$notrhs=0,$or_cond_not=0,$6=0,$or_cond3=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond2=$3|$4;
 if ($or_cond2) {
  $_0=13;

  return (($_0)|0);
 }
 $notlhs=($inClose|0)==0;
 $notrhs=($inVolume|0)==0;
 $or_cond_not=$notrhs|$notlhs;
 $6=($outReal|0)==0;
 $or_cond3=$or_cond_not|$6;
 if ($or_cond3) {
  $_0=2;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $_0=0;

 return (($_0)|0);
}


function _TA_OBV($startIdx,$endIdx,$inReal,$inVolume,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $inVolume=($inVolume)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$or_cond2=0,$10=0,$11=0,$12=0,$13=.0,$14=.0,$15=0,$smax=0,$16=0,$prevOBV_06=.0,$prevReal_05=.0,$outIdx_04=0;
 var $i_03=0,$18=0,$19=.0,$20=0,$22=0,$23=.0,$24=.0,$26=0,$28=0,$29=.0,$30=.0,$prevOBV_1=.0,$32=0,$33=0,$34=0,$35=0,$36=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($inVolume|0)==0;
 $or_cond1=$6|$7;
 $8=($outReal|0)==0;
 $or_cond2=$or_cond1|$8;
 if ($or_cond2) {
  $_0=2;

  return (($_0)|0);
 }
 $10=($startIdx|0)>($endIdx|0);
 if ($10) {
  $outIdx_0_lcssa=0;
 } else {
  $11=(($inReal+($startIdx<<3))|0);
  $12=(($inVolume+($startIdx<<3))|0);
  $13=(+(HEAPF64[(($11)>>3)]));
  $14=(+(HEAPF64[(($12)>>3)]));
  $15=($endIdx|0)>($startIdx|0);
  $smax=($15?$endIdx:$startIdx);
  $16=((($smax)+(1))|0);
  $i_03=$startIdx;$outIdx_04=0;$prevReal_05=$13;$prevOBV_06=$14;
  while(1) {




   $18=(($inReal+($i_03<<3))|0);
   $19=(+(HEAPF64[(($18)>>3)]));
   $20=$19>$prevReal_05;
   do {
    if ($20) {
     $22=(($inVolume+($i_03<<3))|0);
     $23=(+(HEAPF64[(($22)>>3)]));
     $24=($prevOBV_06)+($23);
     $prevOBV_1=$24;
    } else {
     $26=$19<$prevReal_05;
     if (!($26)) {
      $prevOBV_1=$prevOBV_06;
      break;
     }
     $28=(($inVolume+($i_03<<3))|0);
     $29=(+(HEAPF64[(($28)>>3)]));
     $30=($prevOBV_06)-($29);
     $prevOBV_1=$30;
    }
   } while(0);

   $32=((($outIdx_04)+(1))|0);
   $33=(($outReal+($outIdx_04<<3))|0);
   HEAPF64[(($33)>>3)]=$prevOBV_1;
   $34=((($i_03)+(1))|0);
   $35=($i_03|0)<($endIdx|0);
   if ($35) {
    $i_03=$34;$outIdx_04=$32;$prevReal_05=$19;$prevOBV_06=$prevOBV_1;
   } else {
    break;
   }
  }
  $36=((($16)-($startIdx))|0);
  $outIdx_0_lcssa=$36;
 }

 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_PLUS_DI($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond15=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInTimePeriod_off=0,$12=0,$_013=0,$14=0,$16=0,$18=0,$19=0,$20=0,$21=0,$lookbackTotal_0=0;
 var $23=0,$lookbackTotal_0_startIdx=0,$24=0,$27=0,$29=0,$30=0,$31=0,$32=0,$33=.0,$34=.0,$35=0,$smax=0,$36=0,$smax76=0,$37=0,$smax77=0,$prevLow_029=.0,$prevHigh_028=.0,$outIdx_027=0,$today_026=0;
 var $prevClose_030_in=0,$prevClose_030=.0,$39=0,$40=0,$41=.0,$42=.0,$43=0,$44=.0,$45=0,$46=.0,$47=0,$or_cond17=0,$49=.0,$50=.0,$51=.0,$52=0,$tempReal_0=.0,$53=.0,$54=.0,$55=0;
 var $tempReal_1=.0,$56=0,$57=0,$or_cond7=0,$59=0,$61=.0,$62=0,$64=0,$outIdx_1=0,$66=0,$67=0,$68=0,$outIdx_0_lcssa=0,$71=0,$72=0,$73=.0,$74=0,$75=.0,$prevClose_1_in57=0,$i_058=0;
 var $prevClose_159=.0,$76=0,$77=0,$smax86=0,$78=0,$79=0,$prevClose_166=.0,$i_065=0,$prevTR_064=.0,$prevPlusDM_063=.0,$prevLow_162=.0,$prevHigh_161=.0,$today_160=0,$81=0,$82=0,$83=.0,$84=.0,$85=0,$86=.0,$87=0;
 var $88=.0,$89=0,$or_cond19=0,$91=.0,$prevPlusDM_1=.0,$93=.0,$94=.0,$95=.0,$96=0,$tempReal_2=.0,$97=.0,$98=.0,$99=0,$tempReal_3=.0,$100=.0,$prevClose_1_in=0,$i_0=0,$prevClose_1=.0,$101=0,$102=0;
 var $prevClose_1_lcssa=.0,$prevTR_0_lcssa=.0,$prevPlusDM_0_lcssa=.0,$prevLow_1_lcssa=.0,$prevHigh_1_lcssa=.0,$today_1_lcssa=0,$104=0,$105=0,$106=0,$107=0,$108=.0,$109=0,$111=0,$prevTR_147=.0,$prevPlusDM_246=.0,$prevClose_245=.0,$prevLow_244=.0,$prevHigh_243=.0,$today_242=0,$112=0;
 var $113=0,$114=.0,$115=.0,$116=0,$117=.0,$118=0,$119=.0,$120=0,$or_cond21=0,$121=.0,$122=.0,$124=.0,$prevPlusDM_3=.0,$126=.0,$127=.0,$128=.0,$129=0,$tempReal_4=.0,$130=.0,$131=.0;
 var $132=0,$tempReal_5=.0,$133=.0,$134=.0,$135=.0,$136=0,$137=.0,$138=0,$139=0,$140=0,$prevTR_1_lcssa=.0,$prevPlusDM_2_lcssa=.0,$prevClose_2_lcssa=.0,$prevLow_2_lcssa=.0,$prevHigh_2_lcssa=.0,$today_2_lcssa=0,$142=0,$143=0,$or_cond9=0,$145=.0;
 var $146=.0,$storemerge=.0,$148=0,$149=.0,$150=0,$prevTR_237=.0,$prevPlusDM_436=.0,$prevClose_335=.0,$prevLow_334=.0,$prevHigh_333=.0,$outIdx_232=0,$today_331=0,$152=0,$153=0,$154=.0,$155=.0,$156=0,$157=.0,$158=0,$159=.0;
 var $160=0,$or_cond23=0,$161=.0,$162=.0,$164=.0,$prevPlusDM_5=.0,$166=.0,$167=.0,$168=.0,$169=0,$tempReal_6=.0,$170=.0,$171=.0,$172=0,$tempReal_7=.0,$173=.0,$174=.0,$175=.0,$176=0,$177=.0;
 var $178=0,$179=0,$or_cond11=0,$181=.0,$182=.0,$183=0,$185=0,$outIdx_2_be=0,$186=0,$187=0,$outIdx_2_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond15=$3|$4;
 if ($or_cond15) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  return (($_0)|0);
 }
 $10=($optInTimePeriod|0)==-2147483648;
 do {
  if ($10) {
   $_013=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $12=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_013=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $14=($outReal|0)==0;
 if ($14) {
  $_0=2;

  return (($_0)|0);
 }
 $16=($_013|0)>1;
 if ($16) {
  $18=((HEAP32[((272)>>2)])|0);
  $19=(($18+136)|0);
  $20=((HEAP32[(($19)>>2)])|0);
  $21=((($20)+($_013))|0);
  $lookbackTotal_0=$21;
 } else {
  $lookbackTotal_0=1;
 }

 $23=($lookbackTotal_0|0)>($startIdx|0);
 $lookbackTotal_0_startIdx=($23?$lookbackTotal_0:$startIdx);
 $24=($lookbackTotal_0_startIdx|0)>($endIdx|0);
 if ($24) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $27=($_013|0)<2;
 HEAP32[(($outBegIdx)>>2)]=$lookbackTotal_0_startIdx;
 if ($27) {
  $29=((($lookbackTotal_0_startIdx)-(1))|0);
  $30=($lookbackTotal_0_startIdx|0)>($endIdx|0);
  if ($30) {
   $outIdx_0_lcssa=0;
  } else {
   $31=(($inLow+($29<<3))|0);
   $32=(($inHigh+($29<<3))|0);
   $33=(+(HEAPF64[(($31)>>3)]));
   $34=(+(HEAPF64[(($32)>>3)]));
   $35=($lookbackTotal_0|0)>($endIdx|0);
   $smax=($35?$lookbackTotal_0:$endIdx);
   $36=($smax|0)>($startIdx|0);
   $smax76=($36?$smax:$startIdx);
   $37=($lookbackTotal_0|0)>($startIdx|0);
   $smax77=($37?$lookbackTotal_0:$startIdx);
   $today_026=$29;$outIdx_027=0;$prevHigh_028=$34;$prevLow_029=$33;
   while(1) {




    $prevClose_030_in=(($inClose+($today_026<<3))|0);
    $prevClose_030=(+(HEAPF64[(($prevClose_030_in)>>3)]));
    $39=((($today_026)+(1))|0);
    $40=(($inHigh+($39<<3))|0);
    $41=(+(HEAPF64[(($40)>>3)]));
    $42=($41)-($prevHigh_028);
    $43=(($inLow+($39<<3))|0);
    $44=(+(HEAPF64[(($43)>>3)]));
    $45=$42>(0.0);
    $46=($prevLow_029)-($44);
    $47=$42>$46;
    $or_cond17=$45&$47;
    do {
     if ($or_cond17) {
      $49=($41)-($44);
      $50=($41)-($prevClose_030);
      $51=(+(Math_abs((+($50)))));
      $52=$51>$49;
      $tempReal_0=($52?$51:$49);
      $53=($44)-($prevClose_030);
      $54=(+(Math_abs((+($53)))));
      $55=$54>$tempReal_0;
      $tempReal_1=($55?$54:$tempReal_0);
      $56=$tempReal_1>(-1.0e-14);
      $57=$tempReal_1<(1.0e-14);
      $or_cond7=$56&$57;
      if ($or_cond7) {
       $59=(($outReal+($outIdx_027<<3))|0);
       HEAPF64[(($59)>>3)]=0.0;
       break;
      } else {
       $61=($42)/($tempReal_1);
       $62=(($outReal+($outIdx_027<<3))|0);
       HEAPF64[(($62)>>3)]=$61;
       break;
      }
     } else {
      $64=(($outReal+($outIdx_027<<3))|0);
      HEAPF64[(($64)>>3)]=0.0;
     }
    } while(0);
    $outIdx_1=((($outIdx_027)+(1))|0);
    $66=($39|0)<($endIdx|0);
    if ($66) {
     $today_026=$39;$outIdx_027=$outIdx_1;$prevHigh_028=$41;$prevLow_029=$44;
    } else {
     break;
    }
   }
   $67=((($smax76)+(1))|0);
   $68=((($67)-($smax77))|0);
   $outIdx_0_lcssa=$68;
  }

  HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
  $_0=0;

  return (($_0)|0);
 }
 $71=((($lookbackTotal_0_startIdx)-($lookbackTotal_0))|0);
 $72=(($inHigh+($71<<3))|0);
 $73=(+(HEAPF64[(($72)>>3)]));
 $74=(($inLow+($71<<3))|0);
 $75=(+(HEAPF64[(($74)>>3)]));
 $prevClose_1_in57=(($inClose+($71<<3))|0);
 $i_058=((($_013)-(1))|0);
 $prevClose_159=(+(HEAPF64[(($prevClose_1_in57)>>3)]));
 $76=($i_058|0)>0;
 if ($76) {
  $77=($lookbackTotal_0|0)>($startIdx|0);
  $smax86=($77?$lookbackTotal_0:$startIdx);
  $78=((($_013)+($smax86))|0);
  $79=((($78)-(1))|0);
  $today_160=$71;$prevHigh_161=$73;$prevLow_162=$75;$prevPlusDM_063=0.0;$prevTR_064=0.0;$i_065=$i_058;$prevClose_166=$prevClose_159;
  while(1) {







   $81=((($today_160)+(1))|0);
   $82=(($inHigh+($81<<3))|0);
   $83=(+(HEAPF64[(($82)>>3)]));
   $84=($83)-($prevHigh_161);
   $85=(($inLow+($81<<3))|0);
   $86=(+(HEAPF64[(($85)>>3)]));
   $87=$84>(0.0);
   $88=($prevLow_162)-($86);
   $89=$84>$88;
   $or_cond19=$87&$89;
   if ($or_cond19) {
    $91=($prevPlusDM_063)+($84);
    $prevPlusDM_1=$91;
   } else {
    $prevPlusDM_1=$prevPlusDM_063;
   }

   $93=($83)-($86);
   $94=($83)-($prevClose_166);
   $95=(+(Math_abs((+($94)))));
   $96=$95>$93;
   $tempReal_2=($96?$95:$93);
   $97=($86)-($prevClose_166);
   $98=(+(Math_abs((+($97)))));
   $99=$98>$tempReal_2;
   $tempReal_3=($99?$98:$tempReal_2);
   $100=($prevTR_064)+($tempReal_3);
   $prevClose_1_in=(($inClose+($81<<3))|0);
   $i_0=((($i_065)-(1))|0);
   $prevClose_1=(+(HEAPF64[(($prevClose_1_in)>>3)]));
   $101=($i_0|0)>0;
   if ($101) {
    $today_160=$81;$prevHigh_161=$83;$prevLow_162=$86;$prevPlusDM_063=$prevPlusDM_1;$prevTR_064=$100;$i_065=$i_0;$prevClose_166=$prevClose_1;
   } else {
    break;
   }
  }
  $102=((($79)-($lookbackTotal_0))|0);
  $today_1_lcssa=$102;$prevHigh_1_lcssa=$83;$prevLow_1_lcssa=$86;$prevPlusDM_0_lcssa=$prevPlusDM_1;$prevTR_0_lcssa=$100;$prevClose_1_lcssa=$prevClose_1;
 } else {
  $today_1_lcssa=$71;$prevHigh_1_lcssa=$73;$prevLow_1_lcssa=$75;$prevPlusDM_0_lcssa=0.0;$prevTR_0_lcssa=0.0;$prevClose_1_lcssa=$prevClose_159;
 }






 $104=((HEAP32[((272)>>2)])|0);
 $105=(($104+136)|0);
 $106=((HEAP32[(($105)>>2)])|0);
 $107=($106|0)==-1;
 if ($107) {
  $today_2_lcssa=$today_1_lcssa;$prevHigh_2_lcssa=$prevHigh_1_lcssa;$prevLow_2_lcssa=$prevLow_1_lcssa;$prevClose_2_lcssa=$prevClose_1_lcssa;$prevPlusDM_2_lcssa=$prevPlusDM_0_lcssa;$prevTR_1_lcssa=$prevTR_0_lcssa;
 } else {
  $108=(+((($_013|0))|0));
  $109=((($today_1_lcssa)+($106))|0);
  $today_242=$today_1_lcssa;$prevHigh_243=$prevHigh_1_lcssa;$prevLow_244=$prevLow_1_lcssa;$prevClose_245=$prevClose_1_lcssa;$prevPlusDM_246=$prevPlusDM_0_lcssa;$prevTR_147=$prevTR_0_lcssa;$111=$106;
  while(1) {







   $112=((($today_242)+(1))|0);
   $113=(($inHigh+($112<<3))|0);
   $114=(+(HEAPF64[(($113)>>3)]));
   $115=($114)-($prevHigh_243);
   $116=(($inLow+($112<<3))|0);
   $117=(+(HEAPF64[(($116)>>3)]));
   $118=$115>(0.0);
   $119=($prevLow_244)-($117);
   $120=$115>$119;
   $or_cond21=$118&$120;
   $121=($prevPlusDM_246)/($108);
   $122=($prevPlusDM_246)-($121);
   if ($or_cond21) {
    $124=($115)+($122);
    $prevPlusDM_3=$124;
   } else {
    $prevPlusDM_3=$122;
   }

   $126=($114)-($117);
   $127=($114)-($prevClose_245);
   $128=(+(Math_abs((+($127)))));
   $129=$128>$126;
   $tempReal_4=($129?$128:$126);
   $130=($117)-($prevClose_245);
   $131=(+(Math_abs((+($130)))));
   $132=$131>$tempReal_4;
   $tempReal_5=($132?$131:$tempReal_4);
   $133=($prevTR_147)/($108);
   $134=($prevTR_147)-($133);
   $135=($134)+($tempReal_5);
   $136=(($inClose+($112<<3))|0);
   $137=(+(HEAPF64[(($136)>>3)]));
   $138=((($111)-(1))|0);
   $139=($111|0)==0;
   if ($139) {
    break;
   } else {
    $today_242=$112;$prevHigh_243=$114;$prevLow_244=$117;$prevClose_245=$137;$prevPlusDM_246=$prevPlusDM_3;$prevTR_147=$135;$111=$138;
   }
  }
  $140=((($109)+(1))|0);
  $today_2_lcssa=$140;$prevHigh_2_lcssa=$114;$prevLow_2_lcssa=$117;$prevClose_2_lcssa=$137;$prevPlusDM_2_lcssa=$prevPlusDM_3;$prevTR_1_lcssa=$135;
 }






 $142=$prevTR_1_lcssa>(-1.0e-14);
 $143=$prevTR_1_lcssa<(1.0e-14);
 $or_cond9=$142&$143;
 if ($or_cond9) {
  $storemerge=0.0;
 } else {
  $145=($prevPlusDM_2_lcssa)/($prevTR_1_lcssa);
  $146=($145)*((100.0));
  $storemerge=$146;
 }

 HEAPF64[(($outReal)>>3)]=$storemerge;
 $148=($today_2_lcssa|0)<($endIdx|0);
 if ($148) {
  $149=(+((($_013|0))|0));
  $150=((($endIdx)+(1))|0);
  $today_331=$today_2_lcssa;$outIdx_232=1;$prevHigh_333=$prevHigh_2_lcssa;$prevLow_334=$prevLow_2_lcssa;$prevClose_335=$prevClose_2_lcssa;$prevPlusDM_436=$prevPlusDM_2_lcssa;$prevTR_237=$prevTR_1_lcssa;
  while(1) {







   $152=((($today_331)+(1))|0);
   $153=(($inHigh+($152<<3))|0);
   $154=(+(HEAPF64[(($153)>>3)]));
   $155=($154)-($prevHigh_333);
   $156=(($inLow+($152<<3))|0);
   $157=(+(HEAPF64[(($156)>>3)]));
   $158=$155>(0.0);
   $159=($prevLow_334)-($157);
   $160=$155>$159;
   $or_cond23=$158&$160;
   $161=($prevPlusDM_436)/($149);
   $162=($prevPlusDM_436)-($161);
   if ($or_cond23) {
    $164=($155)+($162);
    $prevPlusDM_5=$164;
   } else {
    $prevPlusDM_5=$162;
   }

   $166=($154)-($157);
   $167=($154)-($prevClose_335);
   $168=(+(Math_abs((+($167)))));
   $169=$168>$166;
   $tempReal_6=($169?$168:$166);
   $170=($157)-($prevClose_335);
   $171=(+(Math_abs((+($170)))));
   $172=$171>$tempReal_6;
   $tempReal_7=($172?$171:$tempReal_6);
   $173=($prevTR_237)/($149);
   $174=($prevTR_237)-($173);
   $175=($174)+($tempReal_7);
   $176=(($inClose+($152<<3))|0);
   $177=(+(HEAPF64[(($176)>>3)]));
   $178=$175>(-1.0e-14);
   $179=$175<(1.0e-14);
   $or_cond11=$178&$179;
   if ($or_cond11) {
    $185=(($outReal+($outIdx_232<<3))|0);
    HEAPF64[(($185)>>3)]=0.0;
   } else {
    $181=($prevPlusDM_5)/($175);
    $182=($181)*((100.0));
    $183=(($outReal+($outIdx_232<<3))|0);
    HEAPF64[(($183)>>3)]=$182;
   }
   $outIdx_2_be=((($outIdx_232)+(1))|0);
   $186=($152|0)<($endIdx|0);
   if ($186) {
    $today_331=$152;$outIdx_232=$outIdx_2_be;$prevHigh_333=$154;$prevLow_334=$157;$prevClose_335=$177;$prevPlusDM_436=$prevPlusDM_5;$prevTR_237=$175;
   } else {
    break;
   }
  }
  $187=((($150)-($today_2_lcssa))|0);
  $outIdx_2_lcssa=$187;
 } else {
  $outIdx_2_lcssa=1;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_2_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_PLUS_DM($startIdx,$endIdx,$inHigh,$inLow,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond6=0,$6=0,$7=0,$or_cond=0,$9=0,$optInTimePeriod_off=0,$11=0,$_05=0,$13=0,$15=0,$17=0,$18=0,$19=0,$20=0,$21=0,$lookbackTotal_0=0,$23=0;
 var $lookbackTotal_0_startIdx=0,$24=0,$27=0,$29=0,$30=0,$31=0,$32=0,$33=.0,$34=.0,$35=0,$smax=0,$36=0,$smax47=0,$37=0,$smax48=0,$prevLow_018=.0,$prevHigh_017=.0,$outIdx_016=0,$today_015=0,$38=0;
 var $39=0,$40=.0,$41=.0,$42=0,$43=.0,$44=0,$45=.0,$46=0,$or_cond8=0,$47=0,$48=0,$_=.0,$49=0,$50=0,$51=0,$outIdx_0_lcssa=0,$54=0,$55=0,$56=.0,$57=0;
 var $58=.0,$59=0,$today_1_ph=0,$prevHigh_1_ph=.0,$prevLow_1_ph=.0,$prevPlusDM_0_ph=.0,$i_0_ph=0,$indvars_iv=0,$today_1=0,$prevHigh_1=.0,$prevLow_1=.0,$i_0=0,$61=0,$62=0,$64=0,$65=0,$66=.0,$67=.0,$68=0,$69=.0;
 var $70=0,$71=.0,$72=0,$or_cond10=0,$indvars_iv_next=0,$74=.0,$76=0,$77=0,$78=0,$79=0,$80=.0,$81=0,$_in=0,$prevPlusDM_132=.0,$prevLow_231=.0,$prevHigh_230=.0,$today_229=0,$83=0,$84=0,$85=0;
 var $86=.0,$87=.0,$88=0,$89=.0,$90=0,$91=.0,$92=0,$or_cond12=0,$93=.0,$94=.0,$96=.0,$prevPlusDM_1_be=.0,$97=0,$98=0,$prevPlusDM_1_lcssa=.0,$prevLow_2_lcssa=.0,$prevHigh_2_lcssa=.0,$today_2_lcssa=0,$100=0,$101=.0;
 var $102=0,$prevPlusDM_223=.0,$prevLow_322=.0,$prevHigh_321=.0,$outIdx_120=0,$today_319=0,$104=0,$105=0,$106=.0,$107=.0,$108=0,$109=.0,$110=0,$111=.0,$112=0,$or_cond14=0,$113=.0,$114=.0,$116=.0,$prevPlusDM_3=.0;
 var $118=0,$119=0,$120=0,$121=0,$outIdx_1_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond6=$3|$4;
 if ($or_cond6) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 if (!($or_cond)) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($optInTimePeriod|0)==-2147483648;
 do {
  if ($9) {
   $_05=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $11=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($11) {
    $_0=2;
   } else {
    $_05=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $13=($outReal|0)==0;
 if ($13) {
  $_0=2;

  return (($_0)|0);
 }
 $15=($_05|0)>1;
 if ($15) {
  $17=((HEAP32[((272)>>2)])|0);
  $18=(($17+140)|0);
  $19=((HEAP32[(($18)>>2)])|0);
  $20=((($_05)-(1))|0);
  $21=((($20)+($19))|0);
  $lookbackTotal_0=$21;
 } else {
  $lookbackTotal_0=1;
 }

 $23=($lookbackTotal_0|0)>($startIdx|0);
 $lookbackTotal_0_startIdx=($23?$lookbackTotal_0:$startIdx);
 $24=($lookbackTotal_0_startIdx|0)>($endIdx|0);
 if ($24) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $27=($_05|0)<2;
 HEAP32[(($outBegIdx)>>2)]=$lookbackTotal_0_startIdx;
 if ($27) {
  $29=((($lookbackTotal_0_startIdx)-(1))|0);
  $30=($lookbackTotal_0_startIdx|0)>($endIdx|0);
  if ($30) {
   $outIdx_0_lcssa=0;
  } else {
   $31=(($inLow+($29<<3))|0);
   $32=(($inHigh+($29<<3))|0);
   $33=(+(HEAPF64[(($31)>>3)]));
   $34=(+(HEAPF64[(($32)>>3)]));
   $35=($lookbackTotal_0|0)>($endIdx|0);
   $smax=($35?$lookbackTotal_0:$endIdx);
   $36=($smax|0)>($startIdx|0);
   $smax47=($36?$smax:$startIdx);
   $37=($lookbackTotal_0|0)>($startIdx|0);
   $smax48=($37?$lookbackTotal_0:$startIdx);
   $today_015=$29;$outIdx_016=0;$prevHigh_017=$34;$prevLow_018=$33;
   while(1) {




    $38=((($today_015)+(1))|0);
    $39=(($inHigh+($38<<3))|0);
    $40=(+(HEAPF64[(($39)>>3)]));
    $41=($40)-($prevHigh_017);
    $42=(($inLow+($38<<3))|0);
    $43=(+(HEAPF64[(($42)>>3)]));
    $44=$41>(0.0);
    $45=($prevLow_018)-($43);
    $46=$41>$45;
    $or_cond8=$44&$46;
    $47=((($outIdx_016)+(1))|0);
    $48=(($outReal+($outIdx_016<<3))|0);
    $_=($or_cond8?$41:(0.0));
    HEAPF64[(($48)>>3)]=$_;
    $49=($38|0)<($endIdx|0);
    if ($49) {
     $today_015=$38;$outIdx_016=$47;$prevHigh_017=$40;$prevLow_018=$43;
    } else {
     break;
    }
   }
   $50=((($smax47)+(1))|0);
   $51=((($50)-($smax48))|0);
   $outIdx_0_lcssa=$51;
  }

  HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
  $_0=0;

  return (($_0)|0);
 }
 $54=((($lookbackTotal_0_startIdx)-($lookbackTotal_0))|0);
 $55=(($inHigh+($54<<3))|0);
 $56=(+(HEAPF64[(($55)>>3)]));
 $57=(($inLow+($54<<3))|0);
 $58=(+(HEAPF64[(($57)>>3)]));
 $59=((($_05)-(1))|0);
 $i_0_ph=$59;$prevPlusDM_0_ph=0.0;$prevLow_1_ph=$58;$prevHigh_1_ph=$56;$today_1_ph=$54;
 L34: while(1) {





  $i_0=$i_0_ph;$prevLow_1=$prevLow_1_ph;$prevHigh_1=$prevHigh_1_ph;$today_1=$today_1_ph;$indvars_iv=0;
  while(1) {





   $61=((($i_0)-(1))|0);
   $62=($i_0|0)>0;
   if (!($62)) {
    break L34;
   }
   $64=((($today_1)+(1))|0);
   $65=(($inHigh+($64<<3))|0);
   $66=(+(HEAPF64[(($65)>>3)]));
   $67=($66)-($prevHigh_1);
   $68=(($inLow+($64<<3))|0);
   $69=(+(HEAPF64[(($68)>>3)]));
   $70=$67>(0.0);
   $71=($prevLow_1)-($69);
   $72=$67>$71;
   $or_cond10=$70&$72;
   $indvars_iv_next=((($indvars_iv)+(1))|0);
   if ($or_cond10) {
    break;
   } else {
    $i_0=$61;$prevLow_1=$69;$prevHigh_1=$66;$today_1=$64;$indvars_iv=$indvars_iv_next;
   }
  }
  $74=($prevPlusDM_0_ph)+($67);
  $i_0_ph=$61;$prevPlusDM_0_ph=$74;$prevLow_1_ph=$69;$prevHigh_1_ph=$66;$today_1_ph=$64;
 }
 $76=((HEAP32[((272)>>2)])|0);
 $77=(($76+140)|0);
 $78=((HEAP32[(($77)>>2)])|0);
 $79=($78|0)==0;
 if ($79) {
  $today_2_lcssa=$today_1;$prevHigh_2_lcssa=$prevHigh_1;$prevLow_2_lcssa=$prevLow_1;$prevPlusDM_1_lcssa=$prevPlusDM_0_ph;
 } else {
  $80=(+((($_05|0))|0));
  $81=((($78)+($today_1_ph))|0);
  $today_229=$today_1;$prevHigh_230=$prevHigh_1;$prevLow_231=$prevLow_1;$prevPlusDM_132=$prevPlusDM_0_ph;$_in=$78;
  while(1) {





   $83=((($_in)-(1))|0);
   $84=((($today_229)+(1))|0);
   $85=(($inHigh+($84<<3))|0);
   $86=(+(HEAPF64[(($85)>>3)]));
   $87=($86)-($prevHigh_230);
   $88=(($inLow+($84<<3))|0);
   $89=(+(HEAPF64[(($88)>>3)]));
   $90=$87>(0.0);
   $91=($prevLow_231)-($89);
   $92=$87>$91;
   $or_cond12=$90&$92;
   $93=($prevPlusDM_132)/($80);
   $94=($prevPlusDM_132)-($93);
   if ($or_cond12) {
    $96=($87)+($94);
    $prevPlusDM_1_be=$96;
   } else {
    $prevPlusDM_1_be=$94;
   }

   $97=($83|0)==0;
   if ($97) {
    break;
   } else {
    $today_229=$84;$prevHigh_230=$86;$prevLow_231=$89;$prevPlusDM_132=$prevPlusDM_1_be;$_in=$83;
   }
  }
  $98=((($indvars_iv)+($81))|0);
  $today_2_lcssa=$98;$prevHigh_2_lcssa=$86;$prevLow_2_lcssa=$89;$prevPlusDM_1_lcssa=$prevPlusDM_1_be;
 }




 HEAPF64[(($outReal)>>3)]=$prevPlusDM_1_lcssa;
 $100=($today_2_lcssa|0)<($endIdx|0);
 if ($100) {
  $101=(+((($_05|0))|0));
  $102=((($endIdx)+(1))|0);
  $today_319=$today_2_lcssa;$outIdx_120=1;$prevHigh_321=$prevHigh_2_lcssa;$prevLow_322=$prevLow_2_lcssa;$prevPlusDM_223=$prevPlusDM_1_lcssa;
  while(1) {





   $104=((($today_319)+(1))|0);
   $105=(($inHigh+($104<<3))|0);
   $106=(+(HEAPF64[(($105)>>3)]));
   $107=($106)-($prevHigh_321);
   $108=(($inLow+($104<<3))|0);
   $109=(+(HEAPF64[(($108)>>3)]));
   $110=$107>(0.0);
   $111=($prevLow_322)-($109);
   $112=$107>$111;
   $or_cond14=$110&$112;
   $113=($prevPlusDM_223)/($101);
   $114=($prevPlusDM_223)-($113);
   if ($or_cond14) {
    $116=($107)+($114);
    $prevPlusDM_3=$116;
   } else {
    $prevPlusDM_3=$114;
   }

   $118=((($outIdx_120)+(1))|0);
   $119=(($outReal+($outIdx_120<<3))|0);
   HEAPF64[(($119)>>3)]=$prevPlusDM_3;
   $120=($104|0)<($endIdx|0);
   if ($120) {
    $today_319=$104;$outIdx_120=$118;$prevHigh_321=$106;$prevLow_322=$109;$prevPlusDM_223=$prevPlusDM_3;
   } else {
    break;
   }
  }
  $121=((($102)-($today_2_lcssa))|0);
  $outIdx_1_lcssa=$121;
 } else {
  $outIdx_1_lcssa=1;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_1_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_PPO($startIdx,$endIdx,$inReal,$optInFastPeriod,$optInSlowPeriod,$optInMAType,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInFastPeriod=($optInFastPeriod)|0;
 $optInSlowPeriod=($optInSlowPeriod)|0;
 $optInMAType=($optInMAType)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInFastPeriod_off=0,$10=0,$_06=0,$12=0,$optInSlowPeriod_off=0,$14=0,$_07=0,$16=0,$18=0,$_08=0,$20=0,$22=0,$23=0,$24=0;
 var $25=0,$26=0,$28=0,$29=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 do {
  if ($1) {
   $_0=12;
  } else {
   $3=($endIdx|0)<0;
   $4=($endIdx|0)<($startIdx|0);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_0=13;
    break;
   }
   $6=($inReal|0)==0;
   if ($6) {
    $_0=2;
    break;
   }
   $8=($optInFastPeriod|0)==-2147483648;
   if ($8) {
    $_06=12;
   } else {
    $optInFastPeriod_off=((($optInFastPeriod)-(2))|0);
    $10=($optInFastPeriod_off>>>0)>((99998)>>>0);
    if ($10) {
     $_0=2;
     break;
    } else {
     $_06=$optInFastPeriod;
    }
   }

   $12=($optInSlowPeriod|0)==-2147483648;
   if ($12) {
    $_07=26;
   } else {
    $optInSlowPeriod_off=((($optInSlowPeriod)-(2))|0);
    $14=($optInSlowPeriod_off>>>0)>((99998)>>>0);
    if ($14) {
     $_0=2;
     break;
    } else {
     $_07=$optInSlowPeriod;
    }
   }

   $16=($optInMAType|0)==-2147483648;
   if ($16) {
    $_08=0;
   } else {
    $18=($optInMAType>>>0)>((8)>>>0);
    if ($18) {
     $_0=2;
     break;
    } else {
     $_08=$optInMAType;
    }
   }

   $20=($outReal|0)==0;
   if ($20) {
    $_0=2;
    break;
   }
   $22=((($endIdx)-($startIdx))|0);
   $23=$22<<3;
   $24=((($23)+(8))|0);
   $25=((_malloc($24))|0);
   $26=($25|0)==0;
   if ($26) {
    $_0=3;
    break;
   }
   $28=$25;
   $29=((_TA_INT_PO($startIdx,$endIdx,$inReal,$_06,$_07,$_08,$outBegIdx,$outNBElement,$outReal,$28,1))|0);
   _free($25);
   $_0=$29;
  }
 } while(0);

 return (($_0)|0);
}


function _TA_PVI($startIdx,$endIdx,$inClose,$inVolume,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inClose=($inClose)|0;
 $inVolume=($inVolume)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond2=0,$notlhs=0,$notrhs=0,$or_cond_not=0,$6=0,$or_cond3=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond2=$3|$4;
 if ($or_cond2) {
  $_0=13;

  return (($_0)|0);
 }
 $notlhs=($inClose|0)==0;
 $notrhs=($inVolume|0)==0;
 $or_cond_not=$notrhs|$notlhs;
 $6=($outReal|0)==0;
 $or_cond3=$or_cond_not|$6;
 if ($or_cond3) {
  $_0=2;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $_0=0;

 return (($_0)|0);
}


function _TA_ROC($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$_03_startIdx=0,$15=0,$18=0,$19=0,$20=0,$smax=0,$21=0,$smax7=0,$22=0;
 var $smax8=0,$trailingIdx_06=0,$outIdx_05=0,$inIdx_04=0,$24=0,$25=0,$26=.0,$27=0,$29=0,$30=.0,$31=.0,$32=.0,$33=.0,$34=0,$36=0,$outIdx_1=0,$38=0,$39=0,$40=0,$41=0;
 var $outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=10;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $10=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=($_03|0)>($startIdx|0);
 $_03_startIdx=($14?$_03:$startIdx);
 $15=($_03_startIdx|0)>($endIdx|0);
 if ($15) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $18=($_03_startIdx|0)>($endIdx|0);
 if ($18) {
  $outIdx_0_lcssa=0;
 } else {
  $19=((($_03_startIdx)-($_03))|0);
  $20=($_03|0)>($endIdx|0);
  $smax=($20?$_03:$endIdx);
  $21=($smax|0)>($startIdx|0);
  $smax7=($21?$smax:$startIdx);
  $22=($_03|0)>($startIdx|0);
  $smax8=($22?$_03:$startIdx);
  $inIdx_04=$_03_startIdx;$outIdx_05=0;$trailingIdx_06=$19;
  while(1) {



   $24=((($trailingIdx_06)+(1))|0);
   $25=(($inReal+($trailingIdx_06<<3))|0);
   $26=(+(HEAPF64[(($25)>>3)]));
   $27=$26!=(0.0);
   if ($27) {
    $29=(($inReal+($inIdx_04<<3))|0);
    $30=(+(HEAPF64[(($29)>>3)]));
    $31=($30)/($26);
    $32=($31)+((-1.0));
    $33=($32)*((100.0));
    $34=(($outReal+($outIdx_05<<3))|0);
    HEAPF64[(($34)>>3)]=$33;
   } else {
    $36=(($outReal+($outIdx_05<<3))|0);
    HEAPF64[(($36)>>3)]=0.0;
   }
   $outIdx_1=((($outIdx_05)+(1))|0);
   $38=((($inIdx_04)+(1))|0);
   $39=($inIdx_04|0)<($endIdx|0);
   if ($39) {
    $inIdx_04=$38;$outIdx_05=$outIdx_1;$trailingIdx_06=$24;
   } else {
    break;
   }
  }
  $40=((($smax7)+(1))|0);
  $41=((($40)-($smax8))|0);
  $outIdx_0_lcssa=$41;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$_03_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_ROCP($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$_03_startIdx=0,$15=0,$18=0,$19=0,$20=0,$smax=0,$21=0,$smax7=0,$22=0;
 var $smax8=0,$trailingIdx_06=0,$outIdx_05=0,$inIdx_04=0,$24=0,$25=0,$26=.0,$27=0,$29=0,$30=.0,$31=.0,$32=.0,$33=0,$35=0,$outIdx_1=0,$37=0,$38=0,$39=0,$40=0,$outIdx_0_lcssa=0;
 var $_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=10;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $10=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=($_03|0)>($startIdx|0);
 $_03_startIdx=($14?$_03:$startIdx);
 $15=($_03_startIdx|0)>($endIdx|0);
 if ($15) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $18=($_03_startIdx|0)>($endIdx|0);
 if ($18) {
  $outIdx_0_lcssa=0;
 } else {
  $19=((($_03_startIdx)-($_03))|0);
  $20=($_03|0)>($endIdx|0);
  $smax=($20?$_03:$endIdx);
  $21=($smax|0)>($startIdx|0);
  $smax7=($21?$smax:$startIdx);
  $22=($_03|0)>($startIdx|0);
  $smax8=($22?$_03:$startIdx);
  $inIdx_04=$_03_startIdx;$outIdx_05=0;$trailingIdx_06=$19;
  while(1) {



   $24=((($trailingIdx_06)+(1))|0);
   $25=(($inReal+($trailingIdx_06<<3))|0);
   $26=(+(HEAPF64[(($25)>>3)]));
   $27=$26!=(0.0);
   if ($27) {
    $29=(($inReal+($inIdx_04<<3))|0);
    $30=(+(HEAPF64[(($29)>>3)]));
    $31=($30)-($26);
    $32=($31)/($26);
    $33=(($outReal+($outIdx_05<<3))|0);
    HEAPF64[(($33)>>3)]=$32;
   } else {
    $35=(($outReal+($outIdx_05<<3))|0);
    HEAPF64[(($35)>>3)]=0.0;
   }
   $outIdx_1=((($outIdx_05)+(1))|0);
   $37=((($inIdx_04)+(1))|0);
   $38=($inIdx_04|0)<($endIdx|0);
   if ($38) {
    $inIdx_04=$37;$outIdx_05=$outIdx_1;$trailingIdx_06=$24;
   } else {
    break;
   }
  }
  $39=((($smax7)+(1))|0);
  $40=((($39)-($smax8))|0);
  $outIdx_0_lcssa=$40;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$_03_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_ROCR_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=10;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $3=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $_02=$_0;

 return (($_02)|0);
}


function _TA_ROCR($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$_03_startIdx=0,$15=0,$18=0,$19=0,$20=0,$smax=0,$21=0,$smax7=0,$22=0;
 var $smax8=0,$trailingIdx_06=0,$outIdx_05=0,$inIdx_04=0,$24=0,$25=0,$26=.0,$27=0,$29=0,$30=.0,$31=.0,$32=0,$34=0,$outIdx_1=0,$36=0,$37=0,$38=0,$39=0,$outIdx_0_lcssa=0,$_0=0;
 var label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=10;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $10=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=($_03|0)>($startIdx|0);
 $_03_startIdx=($14?$_03:$startIdx);
 $15=($_03_startIdx|0)>($endIdx|0);
 if ($15) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $18=($_03_startIdx|0)>($endIdx|0);
 if ($18) {
  $outIdx_0_lcssa=0;
 } else {
  $19=((($_03_startIdx)-($_03))|0);
  $20=($_03|0)>($endIdx|0);
  $smax=($20?$_03:$endIdx);
  $21=($smax|0)>($startIdx|0);
  $smax7=($21?$smax:$startIdx);
  $22=($_03|0)>($startIdx|0);
  $smax8=($22?$_03:$startIdx);
  $inIdx_04=$_03_startIdx;$outIdx_05=0;$trailingIdx_06=$19;
  while(1) {



   $24=((($trailingIdx_06)+(1))|0);
   $25=(($inReal+($trailingIdx_06<<3))|0);
   $26=(+(HEAPF64[(($25)>>3)]));
   $27=$26!=(0.0);
   if ($27) {
    $29=(($inReal+($inIdx_04<<3))|0);
    $30=(+(HEAPF64[(($29)>>3)]));
    $31=($30)/($26);
    $32=(($outReal+($outIdx_05<<3))|0);
    HEAPF64[(($32)>>3)]=$31;
   } else {
    $34=(($outReal+($outIdx_05<<3))|0);
    HEAPF64[(($34)>>3)]=0.0;
   }
   $outIdx_1=((($outIdx_05)+(1))|0);
   $36=((($inIdx_04)+(1))|0);
   $37=($inIdx_04|0)<($endIdx|0);
   if ($37) {
    $inIdx_04=$36;$outIdx_05=$outIdx_1;$trailingIdx_06=$24;
   } else {
    break;
   }
  }
  $38=((($smax7)+(1))|0);
  $39=((($38)-($smax8))|0);
  $outIdx_0_lcssa=$39;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$_03_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_ROCR100($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$_03_startIdx=0,$15=0,$18=0,$19=0,$20=0,$smax=0,$21=0,$smax7=0,$22=0;
 var $smax8=0,$trailingIdx_06=0,$outIdx_05=0,$inIdx_04=0,$24=0,$25=0,$26=.0,$27=0,$29=0,$30=.0,$31=.0,$32=.0,$33=0,$35=0,$outIdx_1=0,$37=0,$38=0,$39=0,$40=0,$outIdx_0_lcssa=0;
 var $_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=10;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $10=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=($_03|0)>($startIdx|0);
 $_03_startIdx=($14?$_03:$startIdx);
 $15=($_03_startIdx|0)>($endIdx|0);
 if ($15) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $18=($_03_startIdx|0)>($endIdx|0);
 if ($18) {
  $outIdx_0_lcssa=0;
 } else {
  $19=((($_03_startIdx)-($_03))|0);
  $20=($_03|0)>($endIdx|0);
  $smax=($20?$_03:$endIdx);
  $21=($smax|0)>($startIdx|0);
  $smax7=($21?$smax:$startIdx);
  $22=($_03|0)>($startIdx|0);
  $smax8=($22?$_03:$startIdx);
  $inIdx_04=$_03_startIdx;$outIdx_05=0;$trailingIdx_06=$19;
  while(1) {



   $24=((($trailingIdx_06)+(1))|0);
   $25=(($inReal+($trailingIdx_06<<3))|0);
   $26=(+(HEAPF64[(($25)>>3)]));
   $27=$26!=(0.0);
   if ($27) {
    $29=(($inReal+($inIdx_04<<3))|0);
    $30=(+(HEAPF64[(($29)>>3)]));
    $31=($30)/($26);
    $32=($31)*((100.0));
    $33=(($outReal+($outIdx_05<<3))|0);
    HEAPF64[(($33)>>3)]=$32;
   } else {
    $35=(($outReal+($outIdx_05<<3))|0);
    HEAPF64[(($35)>>3)]=0.0;
   }
   $outIdx_1=((($outIdx_05)+(1))|0);
   $37=((($inIdx_04)+(1))|0);
   $38=($inIdx_04|0)<($endIdx|0);
   if ($38) {
    $inIdx_04=$37;$outIdx_05=$outIdx_1;$trailingIdx_06=$24;
   } else {
    break;
   }
  }
  $39=((($smax7)+(1))|0);
  $40=((($39)-($smax8))|0);
  $outIdx_0_lcssa=$40;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$_03_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_RSI_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$_=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((HEAP32[((272)>>2)])|0);
 $6=(($5+144)|0);
 $7=((HEAP32[(($6)>>2)])|0);
 $8=((($7)+($_0))|0);
 $9=(($5+56)|0);
 $10=((HEAP32[(($9)>>2)])|0);
 $11=($10|0)==1;
 $12=(($11<<31)>>31);
 $_=((($8)+($12))|0);
 $_02=$_;

 return (($_02)|0);
}


function _TA_RSI($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_09=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$18=0,$20=0,$21=0,$22=0,$23=0,$24=0;
 var $25=0,$27=0,$28=0,$29=.0,$30=0,$31=0,$32=0,$33=0,$35=0,$36=0,$37=0,$38=0,$39=0,$smax57=0,$40=0,$prevValue_044=.0,$prevLoss_043=.0,$prevGain_042=.0,$i_041=0,$today_040=0;
 var $42=0,$43=0,$44=.0,$45=.0,$46=0,$48=.0,$50=.0,$prevGain_1=.0,$prevLoss_1=.0,$52=0,$53=0,$54=0,$prevLoss_0_lcssa=.0,$prevGain_0_lcssa=.0,$today_0_lcssa=0,$56=.0,$57=.0,$58=.0,$59=.0,$60=0;
 var $61=0,$or_cond3=0,$63=.0,$64=.0,$storemerge=.0,$66=0,$69=0,$outIdx_1=0,$today_1=0,$today_225=0,$71=0,$72=0,$today_230=0,$prevValue_229=.0,$prevLoss_228=.0,$prevGain_227=.0,$i_126=0,$74=0,$75=.0,$76=.0;
 var $77=0,$79=.0,$81=.0,$prevGain_3=.0,$prevLoss_3=.0,$83=0,$today_2=0,$84=0,$85=0,$today_2_lcssa=0,$prevValue_2_lcssa=.0,$prevLoss_2_lcssa=.0,$prevGain_2_lcssa=.0,$today_2_in_lcssa=0,$87=.0,$88=.0,$89=.0,$90=0,$91=0,$92=0;
 var $93=.0,$94=0,$96=.0,$97=0,$98=0,$or_cond5=0,$100=.0,$101=.0,$102=0,$103=0,$105=0,$106=0,$smax53=0,$outIdx_2_ph=0,$today_4_ph=0,$prevGain_6_ph=.0,$prevLoss_6_ph=.0,$prevValue_4_ph=.0,$107=0,$108=0;
 var $109=.0,$110=0,$smax=0,$111=0,$112=0,$prevValue_319=.0,$prevLoss_418=.0,$prevGain_417=.0,$today_316=0,$114=0,$115=.0,$116=.0,$117=.0,$118=.0,$119=0,$121=.0,$123=.0,$prevGain_5=.0,$prevLoss_5=.0,$125=.0;
 var $126=.0,$127=0,$128=0,$prevValue_414=.0,$prevLoss_613=.0,$prevGain_612=.0,$today_411=0,$outIdx_210=0,$130=0,$131=0,$132=.0,$133=.0,$134=.0,$135=.0,$136=0,$138=.0,$140=.0,$prevGain_7=.0,$prevLoss_7=.0,$142=.0;
 var $143=.0,$144=.0,$145=0,$146=0,$or_cond7=0,$148=.0,$149=.0,$150=0,$152=0,$outIdx_2_be=0,$153=0,$154=0,$outIdx_2_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_09=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_09=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $14=((_TA_RSI_Lookback($_09))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  $_0=0;

  return (($_0)|0);
 }
 $18=($_09|0)==1;
 if ($18) {
  HEAP32[(($outBegIdx)>>2)]=$_startIdx;
  $20=((($endIdx)-($_startIdx))|0);
  $21=((($20)+(1))|0);
  HEAP32[(($outNBElement)>>2)]=$21;
  $22=$outReal;
  $23=(($inReal+($_startIdx<<3))|0);
  $24=$23;
  $25=$21<<3;
  ((_memmove((($22)|0),(($24)|0),(($25)|0)))|0);
  $_0=0;

  return (($_0)|0);
 }
 $27=((($_startIdx)-($14))|0);
 $28=(($inReal+($27<<3))|0);
 $29=(+(HEAPF64[(($28)>>3)]));
 $30=((HEAP32[((272)>>2)])|0);
 $31=(($30+144)|0);
 $32=((HEAP32[(($31)>>2)])|0);
 $33=($32|0)==0;
 do {
  if ($33) {
   $35=(($30+56)|0);
   $36=((HEAP32[(($35)>>2)])|0);
   $37=($36|0)==1;
   if (!($37)) {
    $today_1=$27;$outIdx_1=0;
    break;
   }
   $38=($_09|0)>0;
   if ($38) {
    $39=($14|0)>($startIdx|0);
    $smax57=($39?$14:$startIdx);
    $40=((($_09)+($smax57))|0);
    $today_040=$27;$i_041=$_09;$prevGain_042=0.0;$prevLoss_043=0.0;$prevValue_044=$29;
    while(1) {





     $42=((($today_040)+(1))|0);
     $43=(($inReal+($today_040<<3))|0);
     $44=(+(HEAPF64[(($43)>>3)]));
     $45=($44)-($prevValue_044);
     $46=$45<(0.0);
     if ($46) {
      $48=($prevLoss_043)-($45);
      $prevLoss_1=$48;$prevGain_1=$prevGain_042;
     } else {
      $50=($prevGain_042)+($45);
      $prevLoss_1=$prevLoss_043;$prevGain_1=$50;
     }


     $52=((($i_041)-(1))|0);
     $53=($52|0)>0;
     if ($53) {
      $today_040=$42;$i_041=$52;$prevGain_042=$prevGain_1;$prevLoss_043=$prevLoss_1;$prevValue_044=$44;
     } else {
      break;
     }
    }
    $54=((($40)-($14))|0);
    $today_0_lcssa=$54;$prevGain_0_lcssa=$prevGain_1;$prevLoss_0_lcssa=$prevLoss_1;
   } else {
    $today_0_lcssa=$27;$prevGain_0_lcssa=0.0;$prevLoss_0_lcssa=0.0;
   }



   $56=(+((($_09|0))|0));
   $57=($prevLoss_0_lcssa)/($56);
   $58=($prevGain_0_lcssa)/($56);
   $59=($57)+($58);
   $60=$59>(-1.0e-14);
   $61=$59<(1.0e-14);
   $or_cond3=$60&$61;
   if ($or_cond3) {
    $storemerge=0.0;
   } else {
    $63=($58)/($59);
    $64=($63)*((100.0));
    $storemerge=$64;
   }

   HEAPF64[(($outReal)>>3)]=$storemerge;
   $66=($today_0_lcssa|0)>($endIdx|0);
   if (!($66)) {
    $69=((($today_0_lcssa)-($_09))|0);
    $today_1=$69;$outIdx_1=1;
    break;
   }
   HEAP32[(($outBegIdx)>>2)]=$_startIdx;
   HEAP32[(($outNBElement)>>2)]=1;
   $_0=0;

   return (($_0)|0);
  } else {
   $today_1=$27;$outIdx_1=0;
  }
 } while(0);


 $today_225=((($today_1)+(1))|0);
 $71=($_09|0)>0;
 if ($71) {
  $72=((($today_1)+($_09))|0);
  $i_126=$_09;$prevGain_227=0.0;$prevLoss_228=0.0;$prevValue_229=$29;$today_230=$today_225;
  while(1) {





   $74=(($inReal+($today_230<<3))|0);
   $75=(+(HEAPF64[(($74)>>3)]));
   $76=($75)-($prevValue_229);
   $77=$76<(0.0);
   if ($77) {
    $79=($prevLoss_228)-($76);
    $prevLoss_3=$79;$prevGain_3=$prevGain_227;
   } else {
    $81=($prevGain_227)+($76);
    $prevLoss_3=$prevLoss_228;$prevGain_3=$81;
   }


   $83=((($i_126)-(1))|0);
   $today_2=((($today_230)+(1))|0);
   $84=($83|0)>0;
   if ($84) {
    $i_126=$83;$prevGain_227=$prevGain_3;$prevLoss_228=$prevLoss_3;$prevValue_229=$75;$today_230=$today_2;
   } else {
    break;
   }
  }
  $85=((($72)+(1))|0);
  $today_2_in_lcssa=$72;$prevGain_2_lcssa=$prevGain_3;$prevLoss_2_lcssa=$prevLoss_3;$prevValue_2_lcssa=$75;$today_2_lcssa=$85;
 } else {
  $today_2_in_lcssa=$today_1;$prevGain_2_lcssa=0.0;$prevLoss_2_lcssa=0.0;$prevValue_2_lcssa=$29;$today_2_lcssa=$today_225;
 }





 $87=(+((($_09|0))|0));
 $88=($prevLoss_2_lcssa)/($87);
 $89=($prevGain_2_lcssa)/($87);
 $90=($today_2_in_lcssa|0)<($_startIdx|0);
 do {
  if ($90) {
   $91=($today_2_lcssa|0)<($_startIdx|0);
   if (!($91)) {
    $prevValue_4_ph=$prevValue_2_lcssa;$prevLoss_6_ph=$88;$prevGain_6_ph=$89;$today_4_ph=$today_2_lcssa;$outIdx_2_ph=$outIdx_1;
    break;
   }
   $92=((($_09)-(1))|0);
   $93=(+((($92|0))|0));
   $94=($14|0)>($startIdx|0);
   $today_316=$today_2_lcssa;$prevGain_417=$89;$prevLoss_418=$88;$prevValue_319=$prevValue_2_lcssa;
   while(1) {




    $114=(($inReal+($today_316<<3))|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $116=($115)-($prevValue_319);
    $117=($93)*($prevLoss_418);
    $118=($93)*($prevGain_417);
    $119=$116<(0.0);
    if ($119) {
     $121=($117)-($116);
     $prevLoss_5=$121;$prevGain_5=$118;
    } else {
     $123=($118)+($116);
     $prevLoss_5=$117;$prevGain_5=$123;
    }


    $125=($prevLoss_5)/($87);
    $126=($prevGain_5)/($87);
    $127=((($today_316)+(1))|0);
    $128=($127|0)<($_startIdx|0);
    if ($128) {
     $today_316=$127;$prevGain_417=$126;$prevLoss_418=$125;$prevValue_319=$115;
    } else {
     break;
    }
   }
   $smax53=($94?$14:$startIdx);
   $prevValue_4_ph=$115;$prevLoss_6_ph=$125;$prevGain_6_ph=$126;$today_4_ph=$smax53;$outIdx_2_ph=$outIdx_1;
  } else {
   $96=($88)+($89);
   $97=$96>(-1.0e-14);
   $98=$96<(1.0e-14);
   $or_cond5=$97&$98;
   if ($or_cond5) {
    $105=((($outIdx_1)+(1))|0);
    $106=(($outReal+($outIdx_1<<3))|0);
    HEAPF64[(($106)>>3)]=0.0;
    $prevValue_4_ph=$prevValue_2_lcssa;$prevLoss_6_ph=$88;$prevGain_6_ph=$89;$today_4_ph=$today_2_lcssa;$outIdx_2_ph=$105;
    break;
   } else {
    $100=($89)/($96);
    $101=($100)*((100.0));
    $102=((($outIdx_1)+(1))|0);
    $103=(($outReal+($outIdx_1<<3))|0);
    HEAPF64[(($103)>>3)]=$101;
    $prevValue_4_ph=$prevValue_2_lcssa;$prevLoss_6_ph=$88;$prevGain_6_ph=$89;$today_4_ph=$today_2_lcssa;$outIdx_2_ph=$102;
    break;
   }
  }
 } while(0);





 $107=($today_4_ph|0)>($endIdx|0);
 if ($107) {
  $outIdx_2_lcssa=$outIdx_2_ph;
 } else {
  $108=((($_09)-(1))|0);
  $109=(+((($108|0))|0));
  $110=($today_4_ph|0)>($endIdx|0);
  $smax=($110?$today_4_ph:$endIdx);
  $111=((($outIdx_2_ph)+($smax))|0);
  $112=((($111)+(1))|0);
  $outIdx_210=$outIdx_2_ph;$today_411=$today_4_ph;$prevGain_612=$prevGain_6_ph;$prevLoss_613=$prevLoss_6_ph;$prevValue_414=$prevValue_4_ph;
  while(1) {





   $130=((($today_411)+(1))|0);
   $131=(($inReal+($today_411<<3))|0);
   $132=(+(HEAPF64[(($131)>>3)]));
   $133=($132)-($prevValue_414);
   $134=($109)*($prevLoss_613);
   $135=($109)*($prevGain_612);
   $136=$133<(0.0);
   if ($136) {
    $138=($134)-($133);
    $prevLoss_7=$138;$prevGain_7=$135;
   } else {
    $140=($135)+($133);
    $prevLoss_7=$134;$prevGain_7=$140;
   }


   $142=($prevLoss_7)/($87);
   $143=($prevGain_7)/($87);
   $144=($142)+($143);
   $145=$144>(-1.0e-14);
   $146=$144<(1.0e-14);
   $or_cond7=$145&$146;
   if ($or_cond7) {
    $152=(($outReal+($outIdx_210<<3))|0);
    HEAPF64[(($152)>>3)]=0.0;
   } else {
    $148=($143)/($144);
    $149=($148)*((100.0));
    $150=(($outReal+($outIdx_210<<3))|0);
    HEAPF64[(($150)>>3)]=$149;
   }
   $outIdx_2_be=((($outIdx_210)+(1))|0);
   $153=($today_411|0)<($endIdx|0);
   if ($153) {
    $outIdx_210=$outIdx_2_be;$today_411=$130;$prevGain_612=$143;$prevLoss_613=$142;$prevValue_414=$132;
   } else {
    break;
   }
  }
  $154=((($112)-($today_4_ph))|0);
  $outIdx_2_lcssa=$154;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_2_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_SAR($startIdx,$endIdx,$inHigh,$inLow,$optInAcceleration,$optInMaximum,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $optInAcceleration=+($optInAcceleration);
 $optInMaximum=+($optInMaximum);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $tempInt=0,$ep_temp=0,$1=0,$3=0,$4=0,$or_cond9=0,$6=0,$7=0,$or_cond=0,$9=0,$11=0,$12=0,$or_cond3=0,$_07=.0,$14=0,$16=0,$17=0,$or_cond5=0,$_08=.0,$19=0;
 var $21=0,$_startIdx=0,$22=0,$25=0,$_1=.0,$26=0,$27=0,$28=.0,$not_=0,$29=0,$32=0,$inLow_inHigh=0,$inHigh_inLow=0,$33=0,$34=0,$35=0,$sar_0_in=0,$ep_0_in=0,$36=.0,$37=.0;
 var $ep_0=.0,$sar_0=.0,$_=0,$sar_117=.0,$ep_116=.0,$af_115=.0,$newLow_014=.0,$newHigh_013=.0,$outIdx_012=0,$todayIdx_011=0,$isLong_110=0,$39=0,$40=.0,$41=0,$42=.0,$43=0,$44=0,$46=0,$48=0,$sar_2=.0;
 var $49=0,$sar_3=.0,$50=0,$51=0,$52=.0,$53=.0,$54=.0,$55=0,$sar_4=.0,$56=0,$59=0,$60=0,$61=0,$63=.0,$64=0,$af_2=.0,$ep_2=.0,$67=.0,$68=.0,$69=.0;
 var $70=0,$sar_5=.0,$71=0,$74=0,$76=0,$sar_6=.0,$77=0,$sar_7=.0,$78=0,$79=0,$80=.0,$81=.0,$82=.0,$83=0,$sar_8=.0,$84=0,$isLong_1_be=0,$outIdx_0_be=0,$af_1_be=.0,$ep_1_be=.0;
 var $sar_1_be=.0,$86=0,$88=0,$89=0,$90=0,$92=.0,$93=0,$af_3=.0,$ep_3=.0,$96=.0,$97=.0,$98=.0,$99=0,$sar_9=.0,$100=0,$outIdx_0_lcssa=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $tempInt=((sp)|0);
 $ep_temp=(((sp)+(8))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond9=$3|$4;
 if ($or_cond9) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 if (!($or_cond)) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $9=$optInAcceleration==(-4.0e+37);
 do {
  if ($9) {
   $_07=0.02;
  } else {
   $11=$optInAcceleration<(0.0);
   $12=$optInAcceleration>(3.0e+37);
   $or_cond3=$11|$12;
   if ($or_cond3) {
    $_0=2;
   } else {
    $_07=$optInAcceleration;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $14=$optInMaximum==(-4.0e+37);
 do {
  if ($14) {
   $_08=0.2;
  } else {
   $16=$optInMaximum<(0.0);
   $17=$optInMaximum>(3.0e+37);
   $or_cond5=$16|$17;
   if ($or_cond5) {
    $_0=2;
   } else {
    $_08=$optInMaximum;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $19=($outReal|0)==0;
 if ($19) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $21=($startIdx|0)<1;
 $_startIdx=($21?1:$startIdx);
 $22=($_startIdx|0)>($endIdx|0);
 if ($22) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $25=$_07>$_08;
 $_1=($25?$_08:$_07);
 $26=(($ep_temp)|0);
 $27=((_TA_MINUS_DM($_startIdx,$_startIdx,$inHigh,$inLow,1,$tempInt,$tempInt,$26))|0);
 $28=(+(HEAPF64[(($26)>>3)]));
 $not_=$28<=(0.0);
 $29=($27|0)==0;
 if (!($29)) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=$27;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $32=($_startIdx|0)>($endIdx|0);
 if ($32) {
  $outIdx_0_lcssa=0;
 } else {
  $inLow_inHigh=($not_?$inLow:$inHigh);
  $inHigh_inLow=($not_?$inHigh:$inLow);
  $33=((($_startIdx)-(1))|0);
  $34=(($inHigh+($_startIdx<<3))|0);
  $35=(($inLow+($_startIdx<<3))|0);
  $sar_0_in=(($inLow_inHigh+($33<<3))|0);
  $ep_0_in=(($inHigh_inLow+($_startIdx<<3))|0);
  $36=(+(HEAPF64[(($34)>>3)]));
  $37=(+(HEAPF64[(($35)>>3)]));
  $ep_0=(+(HEAPF64[(($ep_0_in)>>3)]));
  $sar_0=(+(HEAPF64[(($sar_0_in)>>3)]));
  $_=($not_&1);
  $isLong_110=$_;$todayIdx_011=$_startIdx;$outIdx_012=0;$newHigh_013=$36;$newLow_014=$37;$af_115=$_1;$ep_116=$ep_0;$sar_117=$sar_0;
  while(1) {








   $39=(($inLow+($todayIdx_011<<3))|0);
   $40=(+(HEAPF64[(($39)>>3)]));
   $41=(($inHigh+($todayIdx_011<<3))|0);
   $42=(+(HEAPF64[(($41)>>3)]));
   $43=((($todayIdx_011)+(1))|0);
   $44=($isLong_110|0)==1;
   do {
    if ($44) {
     $46=$40>$sar_117;
     if (!($46)) {
      $48=$ep_116<$newHigh_013;
      $sar_2=($48?$newHigh_013:$ep_116);
      $49=$sar_2<$42;
      $sar_3=($49?$42:$sar_2);
      $50=((($outIdx_012)+(1))|0);
      $51=(($outReal+($outIdx_012<<3))|0);
      HEAPF64[(($51)>>3)]=$sar_3;
      $52=($40)-($sar_3);
      $53=($_1)*($52);
      $54=($sar_3)+($53);
      $55=$54<$newHigh_013;
      $sar_4=($55?$newHigh_013:$54);
      $56=$sar_4<$42;
      if (!($56)) {
       $sar_1_be=$sar_4;$ep_1_be=$40;$af_1_be=$_1;$outIdx_0_be=$50;$isLong_1_be=0;
       break;
      }
      $sar_1_be=$42;$ep_1_be=$40;$af_1_be=$_1;$outIdx_0_be=$50;$isLong_1_be=0;
      break;
     }
     $59=((($outIdx_012)+(1))|0);
     $60=(($outReal+($outIdx_012<<3))|0);
     HEAPF64[(($60)>>3)]=$sar_117;
     $61=$42>$ep_116;
     do {
      if ($61) {
       $63=($_1)+($af_115);
       $64=$63>$_08;
       if (!($64)) {
        $ep_2=$42;$af_2=$63;
        break;
       }
       $ep_2=$42;$af_2=$_08;
      } else {
       $ep_2=$ep_116;$af_2=$af_115;
      }
     } while(0);


     $67=($ep_2)-($sar_117);
     $68=($af_2)*($67);
     $69=($sar_117)+($68);
     $70=$69>$newLow_014;
     $sar_5=($70?$newLow_014:$69);
     $71=$sar_5>$40;
     if (!($71)) {
      $sar_1_be=$sar_5;$ep_1_be=$ep_2;$af_1_be=$af_2;$outIdx_0_be=$59;$isLong_1_be=$isLong_110;
      break;
     }
     $sar_1_be=$40;$ep_1_be=$ep_2;$af_1_be=$af_2;$outIdx_0_be=$59;$isLong_1_be=$isLong_110;
    } else {
     $74=$42<$sar_117;
     if (!($74)) {
      $76=$ep_116>$newLow_014;
      $sar_6=($76?$newLow_014:$ep_116);
      $77=$sar_6>$40;
      $sar_7=($77?$40:$sar_6);
      $78=((($outIdx_012)+(1))|0);
      $79=(($outReal+($outIdx_012<<3))|0);
      HEAPF64[(($79)>>3)]=$sar_7;
      $80=($42)-($sar_7);
      $81=($_1)*($80);
      $82=($sar_7)+($81);
      $83=$82>$newLow_014;
      $sar_8=($83?$newLow_014:$82);
      $84=$sar_8>$40;
      if (!($84)) {
       $sar_1_be=$sar_8;$ep_1_be=$42;$af_1_be=$_1;$outIdx_0_be=$78;$isLong_1_be=1;
       break;
      }
      $sar_1_be=$40;$ep_1_be=$42;$af_1_be=$_1;$outIdx_0_be=$78;$isLong_1_be=1;
      break;
     }
     $88=((($outIdx_012)+(1))|0);
     $89=(($outReal+($outIdx_012<<3))|0);
     HEAPF64[(($89)>>3)]=$sar_117;
     $90=$40<$ep_116;
     do {
      if ($90) {
       $92=($_1)+($af_115);
       $93=$92>$_08;
       if (!($93)) {
        $ep_3=$40;$af_3=$92;
        break;
       }
       $ep_3=$40;$af_3=$_08;
      } else {
       $ep_3=$ep_116;$af_3=$af_115;
      }
     } while(0);


     $96=($ep_3)-($sar_117);
     $97=($af_3)*($96);
     $98=($sar_117)+($97);
     $99=$98<$newHigh_013;
     $sar_9=($99?$newHigh_013:$98);
     $100=$sar_9<$42;
     if (!($100)) {
      $sar_1_be=$sar_9;$ep_1_be=$ep_3;$af_1_be=$af_3;$outIdx_0_be=$88;$isLong_1_be=$isLong_110;
      break;
     }
     $sar_1_be=$42;$ep_1_be=$ep_3;$af_1_be=$af_3;$outIdx_0_be=$88;$isLong_1_be=$isLong_110;
    }
   } while(0);





   $86=($todayIdx_011|0)<($endIdx|0);
   if ($86) {
    $isLong_110=$isLong_1_be;$todayIdx_011=$43;$outIdx_012=$outIdx_0_be;$newHigh_013=$42;$newLow_014=$40;$af_115=$af_1_be;$ep_116=$ep_1_be;$sar_117=$sar_1_be;
   } else {
    $outIdx_0_lcssa=$outIdx_0_be;
    break;
   }
  }
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_SAREXT($startIdx,$endIdx,$inHigh,$inLow,$optInStartValue,$optInOffsetOnReverse,$optInAccelerationInitLong,$optInAccelerationLong,$optInAccelerationMaxLong,$optInAccelerationInitShort,$optInAccelerationShort,$optInAccelerationMaxShort,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $optInStartValue=+($optInStartValue);
 $optInOffsetOnReverse=+($optInOffsetOnReverse);
 $optInAccelerationInitLong=+($optInAccelerationInitLong);
 $optInAccelerationLong=+($optInAccelerationLong);
 $optInAccelerationMaxLong=+($optInAccelerationMaxLong);
 $optInAccelerationInitShort=+($optInAccelerationInitShort);
 $optInAccelerationShort=+($optInAccelerationShort);
 $optInAccelerationMaxShort=+($optInAccelerationMaxShort);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $tempInt=0,$ep_temp=0,$1=0,$3=0,$4=0,$or_cond30=0,$6=0,$7=0,$or_cond=0,$9=0,$11=0,$12=0,$or_cond3=0,$_019=.0,$14=0,$16=0,$17=0,$or_cond5=0,$_020=.0,$19=0;
 var $21=0,$22=0,$or_cond7=0,$_021=.0,$24=0,$26=0,$27=0,$or_cond9=0,$_022=.0,$29=0,$31=0,$32=0,$or_cond11=0,$_029=.0,$34=0,$36=0,$37=0,$or_cond13=0,$_027=.0,$39=0;
 var $41=0,$42=0,$or_cond15=0,$_025=.0,$44=0,$46=0,$47=0,$or_cond17=0,$_024=.0,$49=0,$51=0,$_startIdx=0,$52=0,$55=0,$_1=.0,$56=0,$_123=.0,$57=0,$_128=.0,$58=0;
 var $_126=.0,$59=0,$61=0,$62=0,$63=.0,$not_=0,$_=0,$64=0,$65=0,$68=0,$_31=0,$69=0,$71=0,$72=.0,$73=0,$75=0,$76=.0,$77=0,$79=0,$81=0;
 var $82=.0,$isLong_133=0,$ep_0_in=0,$sar_0=.0,$84=0,$85=0,$86=0,$87=.0,$88=.0,$ep_0=.0,$89=0,$90=0,$sar_142=.0,$ep_141=.0,$afShort_140=.0,$afLong_139=.0,$newLow_038=.0,$newHigh_037=.0,$outIdx_036=0,$todayIdx_035=0;
 var $isLong_234=0,$92=0,$93=.0,$94=0,$95=.0,$96=0,$97=0,$99=0,$101=0,$sar_2=.0,$102=0,$sar_3=.0,$104=.0,$105=.0,$sar_4=.0,$107=.0,$108=0,$109=0,$110=.0,$111=.0;
 var $112=.0,$113=0,$sar_5=.0,$114=0,$117=0,$118=0,$119=0,$121=.0,$122=0,$afLong_2=.0,$ep_2=.0,$125=.0,$126=.0,$127=.0,$128=0,$sar_6=.0,$129=0,$132=0,$134=0,$sar_7=.0;
 var $135=0,$sar_8=.0,$137=.0,$138=.0,$sar_9=.0,$140=0,$141=0,$142=.0,$143=.0,$144=.0,$145=0,$sar_10=.0,$146=0,$isLong_2_be=0,$outIdx_0_be=0,$afLong_1_be=.0,$afShort_1_be=.0,$ep_1_be=.0,$sar_1_be=.0,$148=0;
 var $150=.0,$151=0,$152=0,$153=0,$155=.0,$156=0,$afShort_2=.0,$ep_3=.0,$159=.0,$160=.0,$161=.0,$162=0,$sar_11=.0,$163=0,$outIdx_0_lcssa=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $tempInt=((sp)|0);
 $ep_temp=(((sp)+(8))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond30=$3|$4;
 if ($or_cond30) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 if (!($or_cond)) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $9=$optInStartValue==(-4.0e+37);
 do {
  if ($9) {
   $_019=0.0;
  } else {
   $11=$optInStartValue<(-3.0e+37);
   $12=$optInStartValue>(3.0e+37);
   $or_cond3=$11|$12;
   if ($or_cond3) {
    $_0=2;
   } else {
    $_019=$optInStartValue;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $14=$optInOffsetOnReverse==(-4.0e+37);
 do {
  if ($14) {
   $_020=0.0;
  } else {
   $16=$optInOffsetOnReverse<(0.0);
   $17=$optInOffsetOnReverse>(3.0e+37);
   $or_cond5=$16|$17;
   if ($or_cond5) {
    $_0=2;
   } else {
    $_020=$optInOffsetOnReverse;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $19=$optInAccelerationInitLong==(-4.0e+37);
 do {
  if ($19) {
   $_021=0.02;
  } else {
   $21=$optInAccelerationInitLong<(0.0);
   $22=$optInAccelerationInitLong>(3.0e+37);
   $or_cond7=$21|$22;
   if ($or_cond7) {
    $_0=2;
   } else {
    $_021=$optInAccelerationInitLong;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $24=$optInAccelerationLong==(-4.0e+37);
 do {
  if ($24) {
   $_022=0.02;
  } else {
   $26=$optInAccelerationLong<(0.0);
   $27=$optInAccelerationLong>(3.0e+37);
   $or_cond9=$26|$27;
   if ($or_cond9) {
    $_0=2;
   } else {
    $_022=$optInAccelerationLong;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $29=$optInAccelerationMaxLong==(-4.0e+37);
 do {
  if ($29) {
   $_029=0.2;
  } else {
   $31=$optInAccelerationMaxLong<(0.0);
   $32=$optInAccelerationMaxLong>(3.0e+37);
   $or_cond11=$31|$32;
   if ($or_cond11) {
    $_0=2;
   } else {
    $_029=$optInAccelerationMaxLong;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $34=$optInAccelerationInitShort==(-4.0e+37);
 do {
  if ($34) {
   $_027=0.02;
  } else {
   $36=$optInAccelerationInitShort<(0.0);
   $37=$optInAccelerationInitShort>(3.0e+37);
   $or_cond13=$36|$37;
   if ($or_cond13) {
    $_0=2;
   } else {
    $_027=$optInAccelerationInitShort;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $39=$optInAccelerationShort==(-4.0e+37);
 do {
  if ($39) {
   $_025=0.02;
  } else {
   $41=$optInAccelerationShort<(0.0);
   $42=$optInAccelerationShort>(3.0e+37);
   $or_cond15=$41|$42;
   if ($or_cond15) {
    $_0=2;
   } else {
    $_025=$optInAccelerationShort;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $44=$optInAccelerationMaxShort==(-4.0e+37);
 do {
  if ($44) {
   $_024=0.2;
  } else {
   $46=$optInAccelerationMaxShort<(0.0);
   $47=$optInAccelerationMaxShort>(3.0e+37);
   $or_cond17=$46|$47;
   if ($or_cond17) {
    $_0=2;
   } else {
    $_024=$optInAccelerationMaxShort;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $49=($outReal|0)==0;
 if ($49) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $51=($startIdx|0)<1;
 $_startIdx=($51?1:$startIdx);
 $52=($_startIdx|0)>($endIdx|0);
 if ($52) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $55=$_021>$_029;
 $_1=($55?$_029:$_021);
 $56=$_022>$_029;
 $_123=($56?$_029:$_022);
 $57=$_027>$_024;
 $_128=($57?$_024:$_027);
 $58=$_025>$_024;
 $_126=($58?$_024:$_025);
 $59=$_019==(0.0);
 do {
  if ($59) {
   $61=(($ep_temp)|0);
   $62=((_TA_MINUS_DM($_startIdx,$_startIdx,$inHigh,$inLow,1,$tempInt,$tempInt,$61))|0);
   $63=(+(HEAPF64[(($61)>>3)]));
   $not_=$63<=(0.0);
   $_=($not_&1);
   $64=($62|0)==0;
   if (!($64)) {
    HEAP32[(($outBegIdx)>>2)]=0;
    HEAP32[(($outNBElement)>>2)]=0;
    $_0=$62;

    STACKTOP=sp;return (($_0)|0);
   }
   HEAP32[(($outBegIdx)>>2)]=$_startIdx;
   $65=((($_startIdx)-(1))|0);
   if ($not_) {
    $71=(($inLow+($65<<3))|0);
    $72=(+(HEAPF64[(($71)>>3)]));
    $73=(($inHigh+($_startIdx<<3))|0);
    $sar_0=$72;$ep_0_in=$73;$isLong_133=1;
    break;
   } else {
    $75=(($inHigh+($65<<3))|0);
    $76=(+(HEAPF64[(($75)>>3)]));
    $77=(($inLow+($_startIdx<<3))|0);
    $sar_0=$76;$ep_0_in=$77;$isLong_133=$_;
    break;
   }
  } else {
   $68=$_019>(0.0);
   $_31=($68&1);
   HEAP32[(($outBegIdx)>>2)]=$_startIdx;
   $69=$_019>(0.0);
   if ($69) {
    $79=(($inHigh+($_startIdx<<3))|0);
    $sar_0=$_019;$ep_0_in=$79;$isLong_133=$_31;
    break;
   } else {
    $81=(($inLow+($_startIdx<<3))|0);
    $82=(+(Math_abs((+($_019)))));
    $sar_0=$82;$ep_0_in=$81;$isLong_133=$_31;
    break;
   }
  }
 } while(0);



 $84=($_startIdx|0)>($endIdx|0);
 if ($84) {
  $outIdx_0_lcssa=0;
 } else {
  $85=(($inHigh+($_startIdx<<3))|0);
  $86=(($inLow+($_startIdx<<3))|0);
  $87=(+(HEAPF64[(($85)>>3)]));
  $88=(+(HEAPF64[(($86)>>3)]));
  $ep_0=(+(HEAPF64[(($ep_0_in)>>3)]));
  $89=$_020!=(0.0);
  $90=$_020!=(0.0);
  $isLong_234=$isLong_133;$todayIdx_035=$_startIdx;$outIdx_036=0;$newHigh_037=$87;$newLow_038=$88;$afLong_139=$_1;$afShort_140=$_128;$ep_141=$ep_0;$sar_142=$sar_0;
  while(1) {









   $92=(($inLow+($todayIdx_035<<3))|0);
   $93=(+(HEAPF64[(($92)>>3)]));
   $94=(($inHigh+($todayIdx_035<<3))|0);
   $95=(+(HEAPF64[(($94)>>3)]));
   $96=((($todayIdx_035)+(1))|0);
   $97=($isLong_234|0)==1;
   do {
    if ($97) {
     $99=$93>$sar_142;
     if (!($99)) {
      $101=$ep_141<$newHigh_037;
      $sar_2=($101?$newHigh_037:$ep_141);
      $102=$sar_2<$95;
      $sar_3=($102?$95:$sar_2);
      if ($89) {
       $104=($_020)*($sar_3);
       $105=($sar_3)+($104);
       $sar_4=$105;
      } else {
       $sar_4=$sar_3;
      }

      $107=((-.0))-($sar_4);
      $108=((($outIdx_036)+(1))|0);
      $109=(($outReal+($outIdx_036<<3))|0);
      HEAPF64[(($109)>>3)]=$107;
      $110=($93)-($sar_4);
      $111=($_128)*($110);
      $112=($sar_4)+($111);
      $113=$112<$newHigh_037;
      $sar_5=($113?$newHigh_037:$112);
      $114=$sar_5<$95;
      if (!($114)) {
       $sar_1_be=$sar_5;$ep_1_be=$93;$afShort_1_be=$_128;$afLong_1_be=$afLong_139;$outIdx_0_be=$108;$isLong_2_be=0;
       break;
      }
      $sar_1_be=$95;$ep_1_be=$93;$afShort_1_be=$_128;$afLong_1_be=$afLong_139;$outIdx_0_be=$108;$isLong_2_be=0;
      break;
     }
     $117=((($outIdx_036)+(1))|0);
     $118=(($outReal+($outIdx_036<<3))|0);
     HEAPF64[(($118)>>3)]=$sar_142;
     $119=$95>$ep_141;
     do {
      if ($119) {
       $121=($_123)+($afLong_139);
       $122=$121>$_029;
       if (!($122)) {
        $ep_2=$95;$afLong_2=$121;
        break;
       }
       $ep_2=$95;$afLong_2=$_029;
      } else {
       $ep_2=$ep_141;$afLong_2=$afLong_139;
      }
     } while(0);


     $125=($ep_2)-($sar_142);
     $126=($afLong_2)*($125);
     $127=($sar_142)+($126);
     $128=$127>$newLow_038;
     $sar_6=($128?$newLow_038:$127);
     $129=$sar_6>$93;
     if (!($129)) {
      $sar_1_be=$sar_6;$ep_1_be=$ep_2;$afShort_1_be=$afShort_140;$afLong_1_be=$afLong_2;$outIdx_0_be=$117;$isLong_2_be=$isLong_234;
      break;
     }
     $sar_1_be=$93;$ep_1_be=$ep_2;$afShort_1_be=$afShort_140;$afLong_1_be=$afLong_2;$outIdx_0_be=$117;$isLong_2_be=$isLong_234;
    } else {
     $132=$95<$sar_142;
     if (!($132)) {
      $134=$ep_141>$newLow_038;
      $sar_7=($134?$newLow_038:$ep_141);
      $135=$sar_7>$93;
      $sar_8=($135?$93:$sar_7);
      if ($90) {
       $137=($_020)*($sar_8);
       $138=($sar_8)-($137);
       $sar_9=$138;
      } else {
       $sar_9=$sar_8;
      }

      $140=((($outIdx_036)+(1))|0);
      $141=(($outReal+($outIdx_036<<3))|0);
      HEAPF64[(($141)>>3)]=$sar_9;
      $142=($95)-($sar_9);
      $143=($_1)*($142);
      $144=($sar_9)+($143);
      $145=$144>$newLow_038;
      $sar_10=($145?$newLow_038:$144);
      $146=$sar_10>$93;
      if (!($146)) {
       $sar_1_be=$sar_10;$ep_1_be=$95;$afShort_1_be=$afShort_140;$afLong_1_be=$_1;$outIdx_0_be=$140;$isLong_2_be=1;
       break;
      }
      $sar_1_be=$93;$ep_1_be=$95;$afShort_1_be=$afShort_140;$afLong_1_be=$_1;$outIdx_0_be=$140;$isLong_2_be=1;
      break;
     }
     $150=((-.0))-($sar_142);
     $151=((($outIdx_036)+(1))|0);
     $152=(($outReal+($outIdx_036<<3))|0);
     HEAPF64[(($152)>>3)]=$150;
     $153=$93<$ep_141;
     do {
      if ($153) {
       $155=($_126)+($afShort_140);
       $156=$155>$_024;
       if (!($156)) {
        $ep_3=$93;$afShort_2=$155;
        break;
       }
       $ep_3=$93;$afShort_2=$_024;
      } else {
       $ep_3=$ep_141;$afShort_2=$afShort_140;
      }
     } while(0);


     $159=($ep_3)-($sar_142);
     $160=($afShort_2)*($159);
     $161=($sar_142)+($160);
     $162=$161<$newHigh_037;
     $sar_11=($162?$newHigh_037:$161);
     $163=$sar_11<$95;
     if (!($163)) {
      $sar_1_be=$sar_11;$ep_1_be=$ep_3;$afShort_1_be=$afShort_2;$afLong_1_be=$afLong_139;$outIdx_0_be=$151;$isLong_2_be=$isLong_234;
      break;
     }
     $sar_1_be=$95;$ep_1_be=$ep_3;$afShort_1_be=$afShort_2;$afLong_1_be=$afLong_139;$outIdx_0_be=$151;$isLong_2_be=$isLong_234;
    }
   } while(0);






   $148=($todayIdx_035|0)<($endIdx|0);
   if ($148) {
    $isLong_234=$isLong_2_be;$todayIdx_035=$96;$outIdx_036=$outIdx_0_be;$newHigh_037=$95;$newLow_038=$93;$afLong_139=$afLong_1_be;$afShort_140=$afShort_1_be;$ep_141=$ep_1_be;$sar_142=$sar_1_be;
   } else {
    $outIdx_0_lcssa=$outIdx_0_be;
    break;
   }
  }
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_SIN($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(Math_sin($13)));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_SINH($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(_sinh((+($13)))));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_SMA_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((($_0)-(1))|0);
 $_02=$5;

 return (($_02)|0);
}


function _TA_SMA($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_02=0,$12=0,$14=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 do {
  if ($1) {
   $_0=12;
  } else {
   $3=($endIdx|0)<0;
   $4=($endIdx|0)<($startIdx|0);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_0=13;
    break;
   }
   $6=($inReal|0)==0;
   if ($6) {
    $_0=2;
    break;
   }
   $8=($optInTimePeriod|0)==-2147483648;
   if ($8) {
    $_02=30;
   } else {
    $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
    $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
    if ($10) {
     $_0=2;
     break;
    } else {
     $_02=$optInTimePeriod;
    }
   }

   $12=($outReal|0)==0;
   if ($12) {
    $_0=2;
    break;
   }
   $14=((_TA_INT_SMA($startIdx,$endIdx,$inReal,$_02,$outBegIdx,$outNBElement,$outReal))|0);
   $_0=0;
  }
 } while(0);

 return (($_0)|0);
}


function _TA_INT_SMA($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$2=0,$_startIdx=0,$3=0,$6=0,$7=0,$8=0,$or_cond=0,$9=0,$10=0,$smax7=0,$11=0,$12=0,$13=0,$smax8=0,$14=0,$smax9=0,$periodTotal_2_ph=.0,$i_2_ph=0,$15=.0;
 var $16=0,$smax=0,$17=0,$i_04=0,$periodTotal_03=.0,$19=0,$20=0,$21=.0,$22=.0,$23=0,$periodTotal_2=.0,$i_2=0,$outIdx_0=0,$trailingIdx_0=0,$25=0,$26=0,$27=.0,$28=.0,$29=0,$30=0;
 var $31=.0,$32=.0,$33=.0,$34=0,$35=0,$36=0,$38=0,label=0;

 $1=((($optInTimePeriod)-(1))|0);
 $2=($1|0)>($startIdx|0);
 $_startIdx=($2?$1:$startIdx);
 $3=($_startIdx|0)>($endIdx|0);
 if ($3) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  return ((0)|0);
 }
 $6=((($_startIdx)-($1))|0);
 $7=($optInTimePeriod|0)>1;
 $8=($1|0)>0;
 $or_cond=$7&$8;
 if ($or_cond) {
  $9=((($optInTimePeriod)-(1))|0);
  $10=($9|0)<($startIdx|0);
  $smax7=($10?$startIdx:$9);
  $11=((($smax7)+(2))|0);
  $12=((($11)-($optInTimePeriod))|0);
  $13=($12|0)<($startIdx|0);
  $smax8=($13?$startIdx:$12);
  $14=($smax8|0)>($9|0);
  $periodTotal_03=0.0;$i_04=$6;
  while(1) {


   $19=((($i_04)+(1))|0);
   $20=(($inReal+($i_04<<3))|0);
   $21=(+(HEAPF64[(($20)>>3)]));
   $22=($periodTotal_03)+($21);
   $23=($19|0)<($_startIdx|0);
   if ($23) {
    $periodTotal_03=$22;$i_04=$19;
   } else {
    break;
   }
  }
  $smax9=($14?$smax8:$9);
  $i_2_ph=$smax9;$periodTotal_2_ph=$22;
 } else {
  $i_2_ph=$6;$periodTotal_2_ph=0.0;
 }


 $15=(+((($optInTimePeriod|0))|0));
 $16=($i_2_ph|0)>($endIdx|0);
 $smax=($16?$i_2_ph:$endIdx);
 $17=((($smax)+(1))|0);
 $trailingIdx_0=$6;$outIdx_0=0;$i_2=$i_2_ph;$periodTotal_2=$periodTotal_2_ph;
 while(1) {




  $25=((($i_2)+(1))|0);
  $26=(($inReal+($i_2<<3))|0);
  $27=(+(HEAPF64[(($26)>>3)]));
  $28=($periodTotal_2)+($27);
  $29=((($trailingIdx_0)+(1))|0);
  $30=(($inReal+($trailingIdx_0<<3))|0);
  $31=(+(HEAPF64[(($30)>>3)]));
  $32=($28)-($31);
  $33=($28)/($15);
  $34=((($outIdx_0)+(1))|0);
  $35=(($outReal+($outIdx_0<<3))|0);
  HEAPF64[(($35)>>3)]=$33;
  $36=($i_2|0)<($endIdx|0);
  if ($36) {
   $trailingIdx_0=$29;$outIdx_0=$34;$i_2=$25;$periodTotal_2=$32;
  } else {
   break;
  }
 }
 $38=((($17)-($i_2_ph))|0);
 HEAP32[(($outNBElement)>>2)]=$38;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 return ((0)|0);
}


function _TA_SQRT($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(Math_sqrt($13)));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_STDDEV($startIdx,$endIdx,$inReal,$optInTimePeriod,$optInNbDev,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $optInNbDev=+($optInNbDev);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_04=0,$12=0,$14=0,$15=0,$or_cond3=0,$_05=.0,$17=0,$19=0,$20=0,$22=0,$23=0,$24=0;
 var $i_07=0,$25=0,$26=.0,$27=0,$29=.0,$30=.0,$storemerge6=.0,$32=0,$33=0,$34=0,$i_110=0,$35=0,$36=.0,$37=0,$39=.0,$storemerge=.0,$41=0,$42=0,$43=0,$_0=0;
 var label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_04=5;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_04=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=$optInNbDev==(-4.0e+37);
 do {
  if ($12) {
   $_05=1.0;
  } else {
   $14=$optInNbDev<(-3.0e+37);
   $15=$optInNbDev>(3.0e+37);
   $or_cond3=$14|$15;
   if ($or_cond3) {
    $_0=2;
   } else {
    $_05=$optInNbDev;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $17=($outReal|0)==0;
 if ($17) {
  $_0=2;

  return (($_0)|0);
 }
 $19=((_TA_INT_VAR($startIdx,$endIdx,$inReal,$_04,$outBegIdx,$outNBElement,$outReal))|0);
 $20=($19|0)==0;
 if (!($20)) {
  $_0=$19;

  return (($_0)|0);
 }
 $22=$_05!=(1.0);
 $23=((HEAP32[(($outNBElement)>>2)])|0);
 $24=($23|0)>0;
 if ($22) {
  if ($24) {
   $i_07=0;
  } else {
   $_0=0;

   return (($_0)|0);
  }
  while(1) {

   $25=(($outReal+($i_07<<3))|0);
   $26=(+(HEAPF64[(($25)>>3)]));
   $27=$26<(1.0e-14);
   if ($27) {
    $storemerge6=0.0;
   } else {
    $29=(+(Math_sqrt($26)));
    $30=($_05)*($29);
    $storemerge6=$30;
   }

   HEAPF64[(($25)>>3)]=$storemerge6;
   $32=((($i_07)+(1))|0);
   $33=((HEAP32[(($outNBElement)>>2)])|0);
   $34=($32|0)<($33|0);
   if ($34) {
    $i_07=$32;
   } else {
    $_0=0;
    break;
   }
  }

  return (($_0)|0);
 } else {
  if ($24) {
   $i_110=0;
  } else {
   $_0=0;

   return (($_0)|0);
  }
  while(1) {

   $35=(($outReal+($i_110<<3))|0);
   $36=(+(HEAPF64[(($35)>>3)]));
   $37=$36<(1.0e-14);
   if ($37) {
    $storemerge=0.0;
   } else {
    $39=(+(Math_sqrt($36)));
    $storemerge=$39;
   }

   HEAPF64[(($35)>>3)]=$storemerge;
   $41=((($i_110)+(1))|0);
   $42=((HEAP32[(($outNBElement)>>2)])|0);
   $43=($41|0)<($42|0);
   if ($43) {
    $i_110=$41;
   } else {
    $_0=0;
    break;
   }
  }

  return (($_0)|0);
 }
  return 0;
}


function _TA_INT_stddev_using_precalc_ma($inReal,$inMovAvg,$inMovAvgBegIdx,$inMovAvgNbElement,$timePeriod,$output){
 $inReal=($inReal)|0;
 $inMovAvg=($inMovAvg)|0;
 $inMovAvgBegIdx=($inMovAvgBegIdx)|0;
 $inMovAvgNbElement=($inMovAvgNbElement)|0;
 $timePeriod=($timePeriod)|0;
 $output=($output)|0;
 var $1=0,$2=0,$3=0,$periodTotal2_0_lcssa=.0,$4=0,$5=.0,$outIdx_06=0,$periodTotal2_05=.0,$6=0,$7=.0,$8=.0,$9=.0,$10=0,$11=0,$endSum_04=0,$startSum_03=0,$outIdx_12=0,$periodTotal2_11=.0,$13=0,$14=.0;
 var $15=.0,$16=.0,$17=.0,$18=0,$19=.0,$20=.0,$21=.0,$22=0,$23=.0,$24=.0,$25=.0,$26=0,$28=.0,$29=0,$31=0,$33=0,$34=0,$35=0,$36=0,label=0;

 $1=((($inMovAvgBegIdx)+(1))|0);
 $2=((($1)-($timePeriod))|0);
 $3=($2|0)<($inMovAvgBegIdx|0);
 if ($3) {
  $periodTotal2_05=0.0;$outIdx_06=$2;
  while(1) {


   $6=(($inReal+($outIdx_06<<3))|0);
   $7=(+(HEAPF64[(($6)>>3)]));
   $8=($7)*($7);
   $9=($periodTotal2_05)+($8);
   $10=((($outIdx_06)+(1))|0);
   $11=($10|0)<($inMovAvgBegIdx|0);
   if ($11) {
    $periodTotal2_05=$9;$outIdx_06=$10;
   } else {
    $periodTotal2_0_lcssa=$9;
    break;
   }
  }
 } else {
  $periodTotal2_0_lcssa=0.0;
 }

 $4=($inMovAvgNbElement|0)>0;
 if (!($4)) {
  return;
 }
 $5=(+((($timePeriod|0))|0));
 $periodTotal2_11=$periodTotal2_0_lcssa;$outIdx_12=0;$startSum_03=$2;$endSum_04=$inMovAvgBegIdx;
 while(1) {




  $13=(($inReal+($endSum_04<<3))|0);
  $14=(+(HEAPF64[(($13)>>3)]));
  $15=($14)*($14);
  $16=($periodTotal2_11)+($15);
  $17=($16)/($5);
  $18=(($inReal+($startSum_03<<3))|0);
  $19=(+(HEAPF64[(($18)>>3)]));
  $20=($19)*($19);
  $21=($16)-($20);
  $22=(($inMovAvg+($outIdx_12<<3))|0);
  $23=(+(HEAPF64[(($22)>>3)]));
  $24=($23)*($23);
  $25=($17)-($24);
  $26=$25<(1.0e-14);
  if ($26) {
   $31=(($output+($outIdx_12<<3))|0);
   HEAPF64[(($31)>>3)]=0.0;
  } else {
   $28=(+(Math_sqrt($25)));
   $29=(($output+($outIdx_12<<3))|0);
   HEAPF64[(($29)>>3)]=$28;
  }
  $33=((($outIdx_12)+(1))|0);
  $34=((($startSum_03)+(1))|0);
  $35=((($endSum_04)+(1))|0);
  $36=($33|0)<($inMovAvgNbElement|0);
  if ($36) {
   $periodTotal2_11=$21;$outIdx_12=$33;$startSum_03=$34;$endSum_04=$35;
  } else {
   break;
  }
 }
 return;
}


function _TA_STOCH($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInFastK_Period,$optInSlowK_Period,$optInSlowK_MAType,$optInSlowD_Period,$optInSlowD_MAType,$outBegIdx,$outNBElement,$outSlowK,$outSlowD){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInFastK_Period=($optInFastK_Period)|0;
 $optInSlowK_Period=($optInSlowK_Period)|0;
 $optInSlowK_MAType=($optInSlowK_MAType)|0;
 $optInSlowD_Period=($optInSlowD_Period)|0;
 $optInSlowD_MAType=($optInSlowD_MAType)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outSlowK=($outSlowK)|0;
 $outSlowD=($outSlowD)|0;
 var $1=0,$3=0,$4=0,$or_cond20=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInFastK_Period_off=0,$12=0,$_015=0,$14=0,$optInSlowK_Period_off=0,$16=0,$_016=0,$18=0,$20=0,$_017=0;
 var $22=0,$optInSlowD_Period_off=0,$24=0,$_018=0,$26=0,$28=0,$_019=0,$30=0,$31=0,$or_cond25=0,$33=0,$34=0,$35=0,$36=0,$37=0,$38=0,$_startIdx=0,$39=0,$42=0,$43=0;
 var $44=0,$45=0,$or_cond21=0,$46=0,$or_cond22=0,$48=0,$49=0,$or_cond23=0,$50=0,$or_cond24=0,$52=0,$53=0,$54=0,$55=0,$56=0,$tempBuffer_0_ph=0,$bufferIsAllocated_0_ph=0,$57=0,$58=0,$59=0;
 var $60=0,$61=0,$smax=0,$62=0,$63=0,$smax45=0,$64=0,$today_038=0,$trailingIdx_037=0,$highestIdx_036=0,$lowestIdx_035=0,$outIdx_034=0,$diff_033=.0,$highest_032=.0,$lowest_031=.0,$66=0,$67=.0,$68=0,$70=0,$71=.0;
 var $lowest_1_ph=.0,$lowestIdx_1_ph=0,$i_0=0,$73=0,$74=0,$76=0,$77=.0,$78=0,$80=.0,$81=.0,$83=0,$85=.0,$86=.0,$lowest_2=.0,$diff_1=.0,$lowestIdx_2=0,$88=0,$89=.0,$90=0,$92=0;
 var $93=.0,$highest_1_ph=.0,$highestIdx_1_ph=0,$i_1=0,$95=0,$96=0,$98=0,$99=.0,$100=0,$102=.0,$103=.0,$105=0,$107=.0,$108=.0,$highest_2=.0,$diff_2=.0,$highestIdx_2=0,$110=0,$112=0,$113=.0;
 var $114=.0,$115=.0,$116=0,$118=0,$outIdx_1=0,$120=0,$121=0,$122=0,$123=0,$outIdx_0_lcssa=0,$125=0,$126=0,$128=0,$129=0,$131=0,$133=0,$136=0,$137=0,$138=0,$139=0;
 var $140=0,$141=0,$142=0,$143=0,$145=0,$147=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond20=$3|$4;
 if ($or_cond20) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  return (($_0)|0);
 }
 $10=($optInFastK_Period|0)==-2147483648;
 do {
  if ($10) {
   $_015=5;
  } else {
   $optInFastK_Period_off=((($optInFastK_Period)-(1))|0);
   $12=($optInFastK_Period_off>>>0)>((99999)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_015=$optInFastK_Period;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $14=($optInSlowK_Period|0)==-2147483648;
 do {
  if ($14) {
   $_016=3;
  } else {
   $optInSlowK_Period_off=((($optInSlowK_Period)-(1))|0);
   $16=($optInSlowK_Period_off>>>0)>((99999)>>>0);
   if ($16) {
    $_0=2;
   } else {
    $_016=$optInSlowK_Period;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $18=($optInSlowK_MAType|0)==-2147483648;
 do {
  if ($18) {
   $_017=0;
  } else {
   $20=($optInSlowK_MAType>>>0)>((8)>>>0);
   if ($20) {
    $_0=2;
   } else {
    $_017=$optInSlowK_MAType;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $22=($optInSlowD_Period|0)==-2147483648;
 do {
  if ($22) {
   $_018=3;
  } else {
   $optInSlowD_Period_off=((($optInSlowD_Period)-(1))|0);
   $24=($optInSlowD_Period_off>>>0)>((99999)>>>0);
   if ($24) {
    $_0=2;
   } else {
    $_018=$optInSlowD_Period;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $26=($optInSlowD_MAType|0)==-2147483648;
 do {
  if ($26) {
   $_019=0;
  } else {
   $28=($optInSlowD_MAType>>>0)>((8)>>>0);
   if ($28) {
    $_0=2;
   } else {
    $_019=$optInSlowD_MAType;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $30=($outSlowK|0)==0;
 $31=($outSlowD|0)==0;
 $or_cond25=$30|$31;
 if ($or_cond25) {
  $_0=2;

  return (($_0)|0);
 }
 $33=((($_015)-(1))|0);
 $34=((_TA_MA_Lookback($_016,$_017))|0);
 $35=((_TA_MA_Lookback($_018,$_019))|0);
 $36=((($34)+($33))|0);
 $37=((($36)+($35))|0);
 $38=($37|0)>($startIdx|0);
 $_startIdx=($38?$37:$startIdx);
 $39=($_startIdx|0)>($endIdx|0);
 if ($39) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $42=((($_startIdx)-($37))|0);
 $43=((($42)+($33))|0);
 $44=($outSlowK|0)==($inHigh|0);
 $45=($outSlowK|0)==($inLow|0);
 $or_cond21=$44|$45;
 $46=($outSlowK|0)==($inClose|0);
 $or_cond22=$or_cond21|$46;
 do {
  if ($or_cond22) {
   $bufferIsAllocated_0_ph=0;$tempBuffer_0_ph=$outSlowK;
  } else {
   $48=($outSlowD|0)==($inHigh|0);
   $49=($outSlowD|0)==($inLow|0);
   $or_cond23=$48|$49;
   $50=($outSlowD|0)==($inClose|0);
   $or_cond24=$or_cond23|$50;
   if ($or_cond24) {
    $bufferIsAllocated_0_ph=0;$tempBuffer_0_ph=$outSlowD;
    break;
   }
   $52=((($endIdx)-($43))|0);
   $53=$52<<3;
   $54=((($53)+(8))|0);
   $55=((_malloc($54))|0);
   $56=$55;
   $bufferIsAllocated_0_ph=1;$tempBuffer_0_ph=$56;
  }
 } while(0);


 $57=($43|0)>($endIdx|0);
 if ($57) {
  $outIdx_0_lcssa=-1;
 } else {
  $58=((($34)+($35))|0);
  $59=((($58)+($_015))|0);
  $60=((($59)-(1))|0);
  $61=($60|0)<($startIdx|0);
  $smax=($61?$startIdx:$60);
  $62=((($smax)-($58))|0);
  $63=($62|0)<($endIdx|0);
  $smax45=($63?$endIdx:$62);
  $64=((($58)+($smax45))|0);
  $lowest_031=0.0;$highest_032=0.0;$diff_033=0.0;$outIdx_034=0;$lowestIdx_035=-1;$highestIdx_036=-1;$trailingIdx_037=$42;$today_038=$43;
  while(1) {








   $66=(($inLow+($today_038<<3))|0);
   $67=(+(HEAPF64[(($66)>>3)]));
   $68=($lowestIdx_035|0)<($trailingIdx_037|0);
   do {
    if ($68) {
     $70=(($inLow+($trailingIdx_037<<3))|0);
     $71=(+(HEAPF64[(($70)>>3)]));
     $lowestIdx_1_ph=$trailingIdx_037;$lowest_1_ph=$71;
     L49: while(1) {


      $i_0=$lowestIdx_1_ph;
      while(1) {

       $73=((($i_0)+(1))|0);
       $74=($i_0|0)<($today_038|0);
       if (!($74)) {
        break L49;
       }
       $76=(($inLow+($73<<3))|0);
       $77=(+(HEAPF64[(($76)>>3)]));
       $78=$77<$lowest_1_ph;
       if ($78) {
        $lowestIdx_1_ph=$73;$lowest_1_ph=$77;
        continue L49;
       } else {
        $i_0=$73;
       }
      }
     }
     $80=($highest_032)-($lowest_1_ph);
     $81=($80)/((100.0));
     $lowestIdx_2=$lowestIdx_1_ph;$diff_1=$81;$lowest_2=$lowest_1_ph;
    } else {
     $83=$67>$lowest_031;
     if ($83) {
      $lowestIdx_2=$lowestIdx_035;$diff_1=$diff_033;$lowest_2=$lowest_031;
      break;
     }
     $85=($highest_032)-($67);
     $86=($85)/((100.0));
     $lowestIdx_2=$today_038;$diff_1=$86;$lowest_2=$67;
    }
   } while(0);



   $88=(($inHigh+($today_038<<3))|0);
   $89=(+(HEAPF64[(($88)>>3)]));
   $90=($highestIdx_036|0)<($trailingIdx_037|0);
   do {
    if ($90) {
     $92=(($inHigh+($trailingIdx_037<<3))|0);
     $93=(+(HEAPF64[(($92)>>3)]));
     $highestIdx_1_ph=$trailingIdx_037;$highest_1_ph=$93;
     L58: while(1) {


      $i_1=$highestIdx_1_ph;
      while(1) {

       $95=((($i_1)+(1))|0);
       $96=($i_1|0)<($today_038|0);
       if (!($96)) {
        break L58;
       }
       $98=(($inHigh+($95<<3))|0);
       $99=(+(HEAPF64[(($98)>>3)]));
       $100=$99>$highest_1_ph;
       if ($100) {
        $highestIdx_1_ph=$95;$highest_1_ph=$99;
        continue L58;
       } else {
        $i_1=$95;
       }
      }
     }
     $102=($highest_1_ph)-($lowest_2);
     $103=($102)/((100.0));
     $highestIdx_2=$highestIdx_1_ph;$diff_2=$103;$highest_2=$highest_1_ph;
    } else {
     $105=$89<$highest_032;
     if ($105) {
      $highestIdx_2=$highestIdx_036;$diff_2=$diff_1;$highest_2=$highest_032;
      break;
     }
     $107=($89)-($lowest_2);
     $108=($107)/((100.0));
     $highestIdx_2=$today_038;$diff_2=$108;$highest_2=$89;
    }
   } while(0);



   $110=$diff_2!=(0.0);
   if ($110) {
    $112=(($inClose+($today_038<<3))|0);
    $113=(+(HEAPF64[(($112)>>3)]));
    $114=($113)-($lowest_2);
    $115=($114)/($diff_2);
    $116=(($tempBuffer_0_ph+($outIdx_034<<3))|0);
    HEAPF64[(($116)>>3)]=$115;
   } else {
    $118=(($tempBuffer_0_ph+($outIdx_034<<3))|0);
    HEAPF64[(($118)>>3)]=0.0;
   }
   $outIdx_1=((($outIdx_034)+(1))|0);
   $120=((($trailingIdx_037)+(1))|0);
   $121=((($today_038)+(1))|0);
   $122=($today_038|0)<($endIdx|0);
   if ($122) {
    $lowest_031=$lowest_2;$highest_032=$highest_2;$diff_033=$diff_2;$outIdx_034=$outIdx_1;$lowestIdx_035=$lowestIdx_2;$highestIdx_036=$highestIdx_2;$trailingIdx_037=$120;$today_038=$121;
   } else {
    break;
   }
  }
  $123=((($64)-($smax))|0);
  $outIdx_0_lcssa=$123;
 }

 $125=((_TA_MA(0,$outIdx_0_lcssa,$tempBuffer_0_ph,$_016,$_017,$outBegIdx,$outNBElement,$tempBuffer_0_ph))|0);
 $126=($125|0)==0;
 do {
  if ($126) {
   $128=((HEAP32[(($outNBElement)>>2)])|0);
   $129=($128|0)==0;
   if ($129) {
    break;
   }
   $136=((($128)-(1))|0);
   $137=((_TA_MA(0,$136,$tempBuffer_0_ph,$_018,$_019,$outBegIdx,$outNBElement,$outSlowD))|0);
   $138=$outSlowK;
   $139=(($tempBuffer_0_ph+($35<<3))|0);
   $140=$139;
   $141=((HEAP32[(($outNBElement)>>2)])|0);
   $142=$141<<3;
   ((_memmove((($138)|0),(($140)|0),(($142)|0)))|0);
   $143=($bufferIsAllocated_0_ph|0)==0;
   if (!($143)) {
    $145=$tempBuffer_0_ph;
    _free($145);
   }
   $147=($137|0)==0;
   if ($147) {
    HEAP32[(($outBegIdx)>>2)]=$_startIdx;
    $_0=0;

    return (($_0)|0);
   } else {
    HEAP32[(($outBegIdx)>>2)]=0;
    HEAP32[(($outNBElement)>>2)]=0;
    $_0=$137;

    return (($_0)|0);
   }
  }
 } while(0);
 $131=($bufferIsAllocated_0_ph|0)==0;
 if (!($131)) {
  $133=$tempBuffer_0_ph;
  _free($133);
 }
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $_0=$125;

 return (($_0)|0);
}


function _TA_STOCHF_Lookback($optInFastK_Period,$optInFastD_Period,$optInFastD_MAType){
 $optInFastK_Period=($optInFastK_Period)|0;
 $optInFastD_Period=($optInFastD_Period)|0;
 $optInFastD_MAType=($optInFastD_MAType)|0;
 var $1=0,$optInFastK_Period_off=0,$3=0,$_08=0,$5=0,$optInFastD_Period_off=0,$7=0,$_07=0,$9=0,$11=0,$_06=0,$13=0,$14=0,$15=0,$_0=0,label=0;

 $1=($optInFastK_Period|0)==-2147483648;
 do {
  if ($1) {
   $_08=5;
  } else {
   $optInFastK_Period_off=((($optInFastK_Period)-(1))|0);
   $3=($optInFastK_Period_off>>>0)>((99999)>>>0);
   if ($3) {
    $_0=-1;
   } else {
    $_08=$optInFastK_Period;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $5=($optInFastD_Period|0)==-2147483648;
 do {
  if ($5) {
   $_07=3;
  } else {
   $optInFastD_Period_off=((($optInFastD_Period)-(1))|0);
   $7=($optInFastD_Period_off>>>0)>((99999)>>>0);
   if ($7) {
    $_0=-1;
   } else {
    $_07=$optInFastD_Period;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $9=($optInFastD_MAType|0)==-2147483648;
 do {
  if ($9) {
   $_06=0;
  } else {
   $11=($optInFastD_MAType>>>0)>((8)>>>0);
   if ($11) {
    $_0=-1;
   } else {
    $_06=$optInFastD_MAType;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $13=((($_08)-(1))|0);
 $14=((_TA_MA_Lookback($_07,$_06))|0);
 $15=((($13)+($14))|0);
 $_0=$15;

 return (($_0)|0);
}


function _TA_STOCHF($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInFastK_Period,$optInFastD_Period,$optInFastD_MAType,$outBegIdx,$outNBElement,$outFastK,$outFastD){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInFastK_Period=($optInFastK_Period)|0;
 $optInFastD_Period=($optInFastD_Period)|0;
 $optInFastD_MAType=($optInFastD_MAType)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outFastK=($outFastK)|0;
 $outFastD=($outFastD)|0;
 var $1=0,$3=0,$4=0,$or_cond14=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInFastK_Period_off=0,$12=0,$_011=0,$14=0,$optInFastD_Period_off=0,$16=0,$_012=0,$18=0,$20=0,$_013=0;
 var $22=0,$23=0,$or_cond19=0,$25=0,$26=0,$27=0,$28=0,$_startIdx=0,$29=0,$32=0,$33=0,$34=0,$35=0,$or_cond15=0,$36=0,$or_cond16=0,$38=0,$39=0,$or_cond17=0,$40=0;
 var $or_cond18=0,$42=0,$43=0,$44=0,$45=0,$46=0,$tempBuffer_0_ph=0,$bufferIsAllocated_0_ph=0,$47=0,$48=0,$49=0,$50=0,$smax=0,$51=0,$52=0,$smax39=0,$53=0,$today_032=0,$trailingIdx_031=0,$highestIdx_030=0;
 var $lowestIdx_029=0,$outIdx_028=0,$diff_027=.0,$highest_026=.0,$lowest_025=.0,$55=0,$56=.0,$57=0,$59=0,$60=.0,$lowest_1_ph=.0,$lowestIdx_1_ph=0,$i_0=0,$62=0,$63=0,$65=0,$66=.0,$67=0,$69=.0,$70=.0;
 var $72=0,$74=.0,$75=.0,$lowest_2=.0,$diff_1=.0,$lowestIdx_2=0,$77=0,$78=.0,$79=0,$81=0,$82=.0,$highest_1_ph=.0,$highestIdx_1_ph=0,$i_1=0,$84=0,$85=0,$87=0,$88=.0,$89=0,$91=.0;
 var $92=.0,$94=0,$96=.0,$97=.0,$highest_2=.0,$diff_2=.0,$highestIdx_2=0,$99=0,$101=0,$102=.0,$103=.0,$104=.0,$105=0,$107=0,$outIdx_1=0,$109=0,$110=0,$111=0,$112=0,$outIdx_0_lcssa=0;
 var $114=0,$115=0,$117=0,$118=0,$120=0,$122=0,$125=0,$126=0,$127=0,$128=0,$129=0,$131=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond14=$3|$4;
 if ($or_cond14) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  return (($_0)|0);
 }
 $10=($optInFastK_Period|0)==-2147483648;
 do {
  if ($10) {
   $_011=5;
  } else {
   $optInFastK_Period_off=((($optInFastK_Period)-(1))|0);
   $12=($optInFastK_Period_off>>>0)>((99999)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_011=$optInFastK_Period;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $14=($optInFastD_Period|0)==-2147483648;
 do {
  if ($14) {
   $_012=3;
  } else {
   $optInFastD_Period_off=((($optInFastD_Period)-(1))|0);
   $16=($optInFastD_Period_off>>>0)>((99999)>>>0);
   if ($16) {
    $_0=2;
   } else {
    $_012=$optInFastD_Period;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $18=($optInFastD_MAType|0)==-2147483648;
 do {
  if ($18) {
   $_013=0;
  } else {
   $20=($optInFastD_MAType>>>0)>((8)>>>0);
   if ($20) {
    $_0=2;
   } else {
    $_013=$optInFastD_MAType;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $22=($outFastK|0)==0;
 $23=($outFastD|0)==0;
 $or_cond19=$22|$23;
 if ($or_cond19) {
  $_0=2;

  return (($_0)|0);
 }
 $25=((($_011)-(1))|0);
 $26=((_TA_MA_Lookback($_012,$_013))|0);
 $27=((($26)+($25))|0);
 $28=($27|0)>($startIdx|0);
 $_startIdx=($28?$27:$startIdx);
 $29=($_startIdx|0)>($endIdx|0);
 if ($29) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $32=((($_startIdx)-($27))|0);
 $33=((($32)+($25))|0);
 $34=($outFastK|0)==($inHigh|0);
 $35=($outFastK|0)==($inLow|0);
 $or_cond15=$34|$35;
 $36=($outFastK|0)==($inClose|0);
 $or_cond16=$or_cond15|$36;
 do {
  if ($or_cond16) {
   $bufferIsAllocated_0_ph=0;$tempBuffer_0_ph=$outFastK;
  } else {
   $38=($outFastD|0)==($inHigh|0);
   $39=($outFastD|0)==($inLow|0);
   $or_cond17=$38|$39;
   $40=($outFastD|0)==($inClose|0);
   $or_cond18=$or_cond17|$40;
   if ($or_cond18) {
    $bufferIsAllocated_0_ph=0;$tempBuffer_0_ph=$outFastD;
    break;
   }
   $42=((($endIdx)-($33))|0);
   $43=$42<<3;
   $44=((($43)+(8))|0);
   $45=((_malloc($44))|0);
   $46=$45;
   $bufferIsAllocated_0_ph=1;$tempBuffer_0_ph=$46;
  }
 } while(0);


 $47=($33|0)>($endIdx|0);
 if ($47) {
  $outIdx_0_lcssa=-1;
 } else {
  $48=((($26)+($_011))|0);
  $49=((($48)-(1))|0);
  $50=($49|0)<($startIdx|0);
  $smax=($50?$startIdx:$49);
  $51=((($smax)-($26))|0);
  $52=($51|0)<($endIdx|0);
  $smax39=($52?$endIdx:$51);
  $53=((($26)+($smax39))|0);
  $lowest_025=0.0;$highest_026=0.0;$diff_027=0.0;$outIdx_028=0;$lowestIdx_029=-1;$highestIdx_030=-1;$trailingIdx_031=$32;$today_032=$33;
  while(1) {








   $55=(($inLow+($today_032<<3))|0);
   $56=(+(HEAPF64[(($55)>>3)]));
   $57=($lowestIdx_029|0)<($trailingIdx_031|0);
   do {
    if ($57) {
     $59=(($inLow+($trailingIdx_031<<3))|0);
     $60=(+(HEAPF64[(($59)>>3)]));
     $lowestIdx_1_ph=$trailingIdx_031;$lowest_1_ph=$60;
     L39: while(1) {


      $i_0=$lowestIdx_1_ph;
      while(1) {

       $62=((($i_0)+(1))|0);
       $63=($i_0|0)<($today_032|0);
       if (!($63)) {
        break L39;
       }
       $65=(($inLow+($62<<3))|0);
       $66=(+(HEAPF64[(($65)>>3)]));
       $67=$66<$lowest_1_ph;
       if ($67) {
        $lowestIdx_1_ph=$62;$lowest_1_ph=$66;
        continue L39;
       } else {
        $i_0=$62;
       }
      }
     }
     $69=($highest_026)-($lowest_1_ph);
     $70=($69)/((100.0));
     $lowestIdx_2=$lowestIdx_1_ph;$diff_1=$70;$lowest_2=$lowest_1_ph;
    } else {
     $72=$56>$lowest_025;
     if ($72) {
      $lowestIdx_2=$lowestIdx_029;$diff_1=$diff_027;$lowest_2=$lowest_025;
      break;
     }
     $74=($highest_026)-($56);
     $75=($74)/((100.0));
     $lowestIdx_2=$today_032;$diff_1=$75;$lowest_2=$56;
    }
   } while(0);



   $77=(($inHigh+($today_032<<3))|0);
   $78=(+(HEAPF64[(($77)>>3)]));
   $79=($highestIdx_030|0)<($trailingIdx_031|0);
   do {
    if ($79) {
     $81=(($inHigh+($trailingIdx_031<<3))|0);
     $82=(+(HEAPF64[(($81)>>3)]));
     $highestIdx_1_ph=$trailingIdx_031;$highest_1_ph=$82;
     L52: while(1) {


      $i_1=$highestIdx_1_ph;
      while(1) {

       $84=((($i_1)+(1))|0);
       $85=($i_1|0)<($today_032|0);
       if (!($85)) {
        break L52;
       }
       $87=(($inHigh+($84<<3))|0);
       $88=(+(HEAPF64[(($87)>>3)]));
       $89=$88>$highest_1_ph;
       if ($89) {
        $highestIdx_1_ph=$84;$highest_1_ph=$88;
        continue L52;
       } else {
        $i_1=$84;
       }
      }
     }
     $91=($highest_1_ph)-($lowest_2);
     $92=($91)/((100.0));
     $highestIdx_2=$highestIdx_1_ph;$diff_2=$92;$highest_2=$highest_1_ph;
    } else {
     $94=$78<$highest_026;
     if ($94) {
      $highestIdx_2=$highestIdx_030;$diff_2=$diff_1;$highest_2=$highest_026;
      break;
     }
     $96=($78)-($lowest_2);
     $97=($96)/((100.0));
     $highestIdx_2=$today_032;$diff_2=$97;$highest_2=$78;
    }
   } while(0);



   $99=$diff_2!=(0.0);
   if ($99) {
    $101=(($inClose+($today_032<<3))|0);
    $102=(+(HEAPF64[(($101)>>3)]));
    $103=($102)-($lowest_2);
    $104=($103)/($diff_2);
    $105=(($tempBuffer_0_ph+($outIdx_028<<3))|0);
    HEAPF64[(($105)>>3)]=$104;
   } else {
    $107=(($tempBuffer_0_ph+($outIdx_028<<3))|0);
    HEAPF64[(($107)>>3)]=0.0;
   }
   $outIdx_1=((($outIdx_028)+(1))|0);
   $109=((($trailingIdx_031)+(1))|0);
   $110=((($today_032)+(1))|0);
   $111=($today_032|0)<($endIdx|0);
   if ($111) {
    $lowest_025=$lowest_2;$highest_026=$highest_2;$diff_027=$diff_2;$outIdx_028=$outIdx_1;$lowestIdx_029=$lowestIdx_2;$highestIdx_030=$highestIdx_2;$trailingIdx_031=$109;$today_032=$110;
   } else {
    break;
   }
  }
  $112=((($53)-($smax))|0);
  $outIdx_0_lcssa=$112;
 }

 $114=((_TA_MA(0,$outIdx_0_lcssa,$tempBuffer_0_ph,$_012,$_013,$outBegIdx,$outNBElement,$outFastD))|0);
 $115=($114|0)!=0;
 do {
  if (!($115)) {
   $117=((HEAP32[(($outNBElement)>>2)])|0);
   $118=($117|0)==0;
   if ($118) {
    break;
   }
   $125=$outFastK;
   $126=(($tempBuffer_0_ph+($26<<3))|0);
   $127=$126;
   $128=$117<<3;
   ((_memmove((($125)|0),(($127)|0),(($128)|0)))|0);
   $129=($bufferIsAllocated_0_ph|0)==0;
   if (!($129)) {
    $131=$tempBuffer_0_ph;
    _free($131);
   }
   if ($115) {
    HEAP32[(($outBegIdx)>>2)]=0;
    HEAP32[(($outNBElement)>>2)]=0;
    $_0=$114;

    return (($_0)|0);
   } else {
    HEAP32[(($outBegIdx)>>2)]=$_startIdx;
    $_0=0;

    return (($_0)|0);
   }
  }
 } while(0);
 $120=($bufferIsAllocated_0_ph|0)==0;
 if (!($120)) {
  $122=$tempBuffer_0_ph;
  _free($122);
 }
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $_0=$114;

 return (($_0)|0);
}


function _TA_STOCHRSI($startIdx,$endIdx,$inReal,$optInTimePeriod,$optInFastK_Period,$optInFastD_Period,$optInFastD_MAType,$outBegIdx,$outNBElement,$outFastK,$outFastD){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $optInFastK_Period=($optInFastK_Period)|0;
 $optInFastD_Period=($optInFastD_Period)|0;
 $optInFastD_MAType=($optInFastD_MAType)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outFastK=($outFastK)|0;
 $outFastD=($outFastD)|0;
 var $outBegIdx1=0,$outBegIdx2=0,$outNbElement1=0,$1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_011=0,$12=0,$optInFastK_Period_off=0,$14=0,$_012=0,$16=0,$optInFastD_Period_off=0,$18=0,$_013=0;
 var $20=0,$22=0,$_014=0,$24=0,$25=0,$or_cond15=0,$27=0,$28=0,$29=0,$30=0,$_startIdx=0,$31=0,$34=0,$35=0,$36=0,$37=0,$38=0,$39=0,$40=0,$41=0;
 var $42=0,$43=0,$44=0,$or_cond9=0,$47=0,$48=0,$49=0,$51=0,$52=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+24)|0;
 $outBegIdx1=((sp)|0);
 $outBegIdx2=(((sp)+(8))|0);
 $outNbElement1=(((sp)+(16))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_011=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_011=$optInTimePeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $12=($optInFastK_Period|0)==-2147483648;
 do {
  if ($12) {
   $_012=5;
  } else {
   $optInFastK_Period_off=((($optInFastK_Period)-(1))|0);
   $14=($optInFastK_Period_off>>>0)>((99999)>>>0);
   if ($14) {
    $_0=2;
   } else {
    $_012=$optInFastK_Period;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $16=($optInFastD_Period|0)==-2147483648;
 do {
  if ($16) {
   $_013=3;
  } else {
   $optInFastD_Period_off=((($optInFastD_Period)-(1))|0);
   $18=($optInFastD_Period_off>>>0)>((99999)>>>0);
   if ($18) {
    $_0=2;
   } else {
    $_013=$optInFastD_Period;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $20=($optInFastD_MAType|0)==-2147483648;
 do {
  if ($20) {
   $_014=0;
  } else {
   $22=($optInFastD_MAType>>>0)>((8)>>>0);
   if ($22) {
    $_0=2;
   } else {
    $_014=$optInFastD_MAType;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $24=($outFastK|0)==0;
 $25=($outFastD|0)==0;
 $or_cond15=$24|$25;
 if ($or_cond15) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $27=((_TA_STOCHF_Lookback($_012,$_013,$_014))|0);
 $28=((_TA_RSI_Lookback($_011))|0);
 $29=((($28)+($27))|0);
 $30=($29|0)>($startIdx|0);
 $_startIdx=($30?$29:$startIdx);
 $31=($_startIdx|0)>($endIdx|0);
 if ($31) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $34=((($endIdx)-($_startIdx))|0);
 $35=((($27)+(1))|0);
 $36=((($35)+($34))|0);
 $37=$36<<3;
 $38=((_malloc($37))|0);
 $39=$38;
 $40=((($_startIdx)-($27))|0);
 $41=((_TA_RSI($40,$endIdx,$inReal,$_011,$outBegIdx1,$outNbElement1,$39))|0);
 $42=($41|0)!=0;
 $43=((HEAP32[(($outNbElement1)>>2)])|0);
 $44=($43|0)==0;
 $or_cond9=$42|$44;
 if ($or_cond9) {
  _free($38);
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=$41;

  STACKTOP=sp;return (($_0)|0);
 }
 $47=((($34)+($27))|0);
 $48=((_TA_STOCHF(0,$47,$39,$39,$39,$_012,$_013,$_014,$outBegIdx2,$outNBElement,$outFastK,$outFastD))|0);
 _free($38);
 $49=($48|0)==0;
 do {
  if ($49) {
   $51=((HEAP32[(($outNBElement)>>2)])|0);
   $52=($51|0)==0;
   if ($52) {
    break;
   } else {
    $_0=0;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $_0=$48;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_SUB($startIdx,$endIdx,$inReal0,$inReal1,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal0=($inReal0)|0;
 $inReal1=($inReal1)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$or_cond2=0,$9=0,$10=0,$smax=0,$11=0,$i_04=0,$outIdx_03=0,$13=0,$14=.0,$15=0,$16=.0,$17=.0;
 var $18=0,$19=0,$20=0,$21=0,$22=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal0|0)==0;
 $7=($inReal1|0)==0;
 $or_cond1=$6|$7;
 $8=($outReal|0)==0;
 $or_cond2=$or_cond1|$8;
 if ($or_cond2) {
  $_0=2;

  return (($_0)|0);
 }
 $9=($startIdx|0)>($endIdx|0);
 if ($9) {
  $outIdx_0_lcssa=0;
 } else {
  $10=($endIdx|0)>($startIdx|0);
  $smax=($10?$endIdx:$startIdx);
  $11=((($smax)+(1))|0);
  $outIdx_03=0;$i_04=$startIdx;
  while(1) {


   $13=(($inReal0+($i_04<<3))|0);
   $14=(+(HEAPF64[(($13)>>3)]));
   $15=(($inReal1+($i_04<<3))|0);
   $16=(+(HEAPF64[(($15)>>3)]));
   $17=($14)-($16);
   $18=(($outReal+($outIdx_03<<3))|0);
   HEAPF64[(($18)>>3)]=$17;
   $19=((($i_04)+(1))|0);
   $20=((($outIdx_03)+(1))|0);
   $21=($i_04|0)<($endIdx|0);
   if ($21) {
    $outIdx_03=$20;$i_04=$19;
   } else {
    break;
   }
  }
  $22=((($11)-($startIdx))|0);
  $outIdx_0_lcssa=$22;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_SUM($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=0,$or_cond12=0,$22=0,$23=0;
 var $smax9=0,$24=0,$25=0,$26=0,$smax10=0,$27=0,$smax11=0,$periodTotal_2_ph=.0,$i_2_ph=0,$28=0,$smax=0,$29=0,$i_06=0,$periodTotal_05=.0,$31=0,$32=0,$33=.0,$34=.0,$35=0,$periodTotal_2=.0;
 var $i_2=0,$outIdx_0=0,$trailingIdx_0=0,$37=0,$38=0,$39=.0,$40=.0,$41=0,$42=0,$43=.0,$44=.0,$45=0,$46=0,$47=0,$49=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((($_03)-(1))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=((($_startIdx)-($14))|0);
 $20=($_03|0)>1;
 $21=($14|0)>0;
 $or_cond12=$20&$21;
 if ($or_cond12) {
  $22=((($_03)-(1))|0);
  $23=($22|0)<($startIdx|0);
  $smax9=($23?$startIdx:$22);
  $24=((($smax9)+(2))|0);
  $25=((($24)-($_03))|0);
  $26=($25|0)<($startIdx|0);
  $smax10=($26?$startIdx:$25);
  $27=($smax10|0)>($22|0);
  $periodTotal_05=0.0;$i_06=$19;
  while(1) {


   $31=((($i_06)+(1))|0);
   $32=(($inReal+($i_06<<3))|0);
   $33=(+(HEAPF64[(($32)>>3)]));
   $34=($periodTotal_05)+($33);
   $35=($31|0)<($_startIdx|0);
   if ($35) {
    $periodTotal_05=$34;$i_06=$31;
   } else {
    break;
   }
  }
  $smax11=($27?$smax10:$22);
  $i_2_ph=$smax11;$periodTotal_2_ph=$34;
 } else {
  $i_2_ph=$19;$periodTotal_2_ph=0.0;
 }


 $28=($i_2_ph|0)>($endIdx|0);
 $smax=($28?$i_2_ph:$endIdx);
 $29=((($smax)+(1))|0);
 $trailingIdx_0=$19;$outIdx_0=0;$i_2=$i_2_ph;$periodTotal_2=$periodTotal_2_ph;
 while(1) {




  $37=((($i_2)+(1))|0);
  $38=(($inReal+($i_2<<3))|0);
  $39=(+(HEAPF64[(($38)>>3)]));
  $40=($periodTotal_2)+($39);
  $41=((($trailingIdx_0)+(1))|0);
  $42=(($inReal+($trailingIdx_0<<3))|0);
  $43=(+(HEAPF64[(($42)>>3)]));
  $44=($40)-($43);
  $45=((($outIdx_0)+(1))|0);
  $46=(($outReal+($outIdx_0<<3))|0);
  HEAPF64[(($46)>>3)]=$40;
  $47=($i_2|0)<($endIdx|0);
  if ($47) {
   $trailingIdx_0=$41;$outIdx_0=$45;$i_2=$37;$periodTotal_2=$44;
  } else {
   break;
  }
 }
 $49=((($29)-($i_2_ph))|0);
 HEAP32[(($outNBElement)>>2)]=$49;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_T3_Lookback($optInTimePeriod,$optInVFactor){
 $optInTimePeriod=($optInTimePeriod)|0;
 $optInVFactor=+($optInVFactor);
 var $1=0,$optInTimePeriod_off=0,$3=0,$_04=0,$5=0,$7=0,$8=0,$or_cond3=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$_05=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_04=5;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_05=-1;
   } else {
    $_04=$optInTimePeriod;
    break;
   }

   return (($_05)|0);
  }
 } while(0);

 $5=$optInVFactor==(-4.0e+37);
 do {
  if (!($5)) {
   $7=$optInVFactor<(0.0);
   $8=$optInVFactor>(1.0);
   $or_cond3=$7|$8;
   if ($or_cond3) {
    $_05=-1;
   } else {
    break;
   }

   return (($_05)|0);
  }
 } while(0);
 $10=((($_04)*(6))&-1);
 $11=((($10)-(6))|0);
 $12=((HEAP32[((272)>>2)])|0);
 $13=(($12+152)|0);
 $14=((HEAP32[(($13)>>2)])|0);
 $15=((($11)+($14))|0);
 $_05=$15;

 return (($_05)|0);
}


function _TA_T3($startIdx,$endIdx,$inReal,$optInTimePeriod,$optInVFactor,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $optInVFactor=+($optInVFactor);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_05=0,$12=0,$14=0,$15=0,$or_cond3=0,$_06=.0,$17=0,$19=0,$20=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$startIdx_=0,$26=0,$29=0,$30=.0,$31=.0,$32=.0,$33=.0,$34=0,$35=.0,$today_0102=0,$36=0,$37=.0,$38=0,$39=0,$40=0,$41=0,$smax140=0,$42=0;
 var $today_0105=0,$tempReal_0104=.0,$i_0103=0,$44=0,$45=.0,$46=.0,$47=0,$today_0=0,$48=0,$50=0,$51=0,$52=0,$53=.0,$54=0,$55=0,$tempReal_195=.0,$e1_094=.0,$today_193=0,$i_192=0,$57=0;
 var $58=0,$59=.0,$60=.0,$61=.0,$62=.0,$63=.0,$64=0,$65=0,$tempReal_1_lcssa_ph=.0,$today_1_lcssa_ph=0,$66=.0,$68=0,$69=.0,$70=0,$71=.0,$72=0,$tempReal_284=.0,$e2_083=.0,$e1_182=.0,$today_281=0;
 var $i_280=0,$74=0,$75=0,$76=.0,$77=.0,$78=.0,$79=.0,$80=.0,$81=.0,$82=.0,$83=.0,$84=0,$85=0,$86=0,$tempReal_2_lcssa=.0,$e2_0_lcssa=.0,$e1_1_lcssa=.0,$today_2_lcssa=0,$88=.0,$89=0;
 var $90=0,$tempReal_371=.0,$e3_070=.0,$e2_169=.0,$e1_268=.0,$today_367=0,$i_366=0,$92=0,$93=0,$94=.0,$95=.0,$96=.0,$97=.0,$98=.0,$99=.0,$100=.0,$101=.0,$102=.0,$103=.0,$104=.0;
 var $105=0,$106=0,$tempReal_3_lcssa_ph=.0,$e2_1_lcssa_ph=.0,$e1_2_lcssa_ph=.0,$today_3_lcssa_ph=0,$107=.0,$109=0,$110=.0,$111=0,$112=.0,$113=0,$tempReal_456=.0,$e4_055=.0,$e3_154=.0,$e2_253=.0,$e1_352=.0,$today_451=0,$i_450=0,$115=0;
 var $116=0,$117=.0,$118=.0,$119=.0,$120=.0,$121=.0,$122=.0,$123=.0,$124=.0,$125=.0,$126=.0,$127=.0,$128=.0,$129=.0,$130=.0,$131=0,$132=0,$133=0,$tempReal_4_lcssa=.0,$e4_0_lcssa=.0;
 var $e3_1_lcssa=.0,$e2_2_lcssa=.0,$e1_3_lcssa=.0,$today_4_lcssa=0,$135=.0,$136=0,$137=0,$tempReal_539=.0,$e5_038=.0,$e4_137=.0,$e3_236=.0,$e2_335=.0,$e1_434=.0,$today_533=0,$i_532=0,$139=0,$140=0,$141=.0,$142=.0,$143=.0;
 var $144=.0,$145=.0,$146=.0,$147=.0,$148=.0,$149=.0,$150=.0,$151=.0,$152=.0,$153=.0,$154=.0,$155=.0,$156=.0,$157=.0,$158=0,$159=0,$160=0,$tempReal_5_lcssa=.0,$e5_0_lcssa=.0,$e4_1_lcssa=.0;
 var $e3_2_lcssa=.0,$e2_3_lcssa=.0,$e1_4_lcssa=.0,$today_5_lcssa=0,$162=.0,$163=0,$164=0,$smax117=0,$165=0,$166=0,$167=0,$168=0,$smax118=0,$e6_021=.0,$e5_120=.0,$e4_219=.0,$e3_318=.0,$e2_417=.0,$e1_516=.0,$today_615=0;
 var $170=0,$171=0,$172=.0,$173=.0,$174=.0,$175=.0,$176=.0,$177=.0,$178=.0,$179=.0,$180=.0,$181=.0,$182=.0,$183=.0,$184=.0,$185=.0,$186=.0,$187=.0,$188=.0,$189=.0;
 var $190=.0,$191=0,$192=0,$e6_0_lcssa=.0,$e5_1_lcssa=.0,$e4_2_lcssa=.0,$e3_3_lcssa=.0,$e2_4_lcssa=.0,$e1_5_lcssa=.0,$today_6_lcssa=0,$194=.0,$195=.0,$196=.0,$197=.0,$198=.0,$199=.0,$200=.0,$201=.0,$202=.0,$203=.0;
 var $204=.0,$205=.0,$206=.0,$207=.0,$208=.0,$209=.0,$210=.0,$211=.0,$212=.0,$213=.0,$214=.0,$215=0,$216=0,$smax=0,$217=0,$e6_114=.0,$e5_213=.0,$e4_312=.0,$e3_411=.0,$e2_510=.0;
 var $e1_69=.0,$outIdx_08=0,$today_77=0,$219=0,$220=0,$221=.0,$222=.0,$223=.0,$224=.0,$225=.0,$226=.0,$227=.0,$228=.0,$229=.0,$230=.0,$231=.0,$232=.0,$233=.0,$234=.0,$235=.0;
 var $236=.0,$237=.0,$238=.0,$239=.0,$240=.0,$241=.0,$242=.0,$243=.0,$244=.0,$245=.0,$246=.0,$247=0,$248=0,$249=0,$250=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_05=5;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_05=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=$optInVFactor==(-4.0e+37);
 do {
  if ($12) {
   $_06=0.7;
  } else {
   $14=$optInVFactor<(0.0);
   $15=$optInVFactor>(1.0);
   $or_cond3=$14|$15;
   if ($or_cond3) {
    $_0=2;
   } else {
    $_06=$optInVFactor;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $17=($outReal|0)==0;
 if ($17) {
  $_0=2;

  return (($_0)|0);
 }
 $19=((($_05)-(1))|0);
 $20=((($19)*(6))&-1);
 $21=((HEAP32[((272)>>2)])|0);
 $22=(($21+152)|0);
 $23=((HEAP32[(($22)>>2)])|0);
 $24=((($23)+($20))|0);
 $25=($24|0)<($startIdx|0);
 $startIdx_=($25?$startIdx:$24);
 $26=($startIdx_|0)>($endIdx|0);
 if ($26) {
  HEAP32[(($outNBElement)>>2)]=0;
  HEAP32[(($outBegIdx)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$startIdx_;
 $29=((($startIdx_)-($24))|0);
 $30=(+((($_05|0))|0));
 $31=($30)+((1.0));
 $32=((2.0))/($31);
 $33=((1.0))-($32);
 $34=(($inReal+($29<<3))|0);
 $35=(+(HEAPF64[(($34)>>3)]));
 $today_0102=((($29)+(1))|0);
 $36=($19|0)>0;
 do {
  if ($36) {
   $38=((($_05)*(6))&-1);
   $39=((($23)+($38))|0);
   $40=((($39)-(6))|0);
   $41=($40|0)<($startIdx|0);
   $smax140=($41?$startIdx:$40);
   $42=((($smax140)+(6))|0);
   $i_0103=$19;$tempReal_0104=$35;$today_0105=$today_0102;
   while(1) {



    $44=(($inReal+($today_0105<<3))|0);
    $45=(+(HEAPF64[(($44)>>3)]));
    $46=($tempReal_0104)+($45);
    $47=((($i_0103)-(1))|0);
    $today_0=((($today_0105)+(1))|0);
    $48=($47|0)>0;
    if ($48) {
     $i_0103=$47;$tempReal_0104=$46;$today_0105=$today_0;
    } else {
     break;
    }
   }
   $50=((($42)-($23))|0);
   $51=((($_05)*(-5))&-1);
   $52=((($50)+($51))|0);
   $53=($46)/($30);
   $54=($19|0)>0;
   if (!($54)) {
    $today_1_lcssa_ph=$52;$tempReal_1_lcssa_ph=$53;
    label = 18;
    break;
   }
   $55=((($_05)+($52))|0);
   $i_192=$19;$today_193=$52;$e1_094=$53;$tempReal_195=$53;
   while(1) {




    $57=((($today_193)+(1))|0);
    $58=(($inReal+($today_193<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=($32)*($59);
    $61=($33)*($e1_094);
    $62=($61)+($60);
    $63=($tempReal_195)+($62);
    $64=((($i_192)-(1))|0);
    $65=($64|0)>0;
    if ($65) {
     $i_192=$64;$today_193=$57;$e1_094=$62;$tempReal_195=$63;
    } else {
     break;
    }
   }
   $68=((($55)-(1))|0);
   $69=($63)/($30);
   $70=($19|0)>0;
   if (!($70)) {
    $71=($69)/($30);
    $today_3_lcssa_ph=$68;$e1_2_lcssa_ph=$62;$e2_1_lcssa_ph=$69;$tempReal_3_lcssa_ph=$71;
    label = 27;
    break;
   }
   $72=((($_05)+($68))|0);
   $i_280=$19;$today_281=$68;$e1_182=$62;$e2_083=$69;$tempReal_284=$69;
   while(1) {





    $74=((($today_281)+(1))|0);
    $75=(($inReal+($today_281<<3))|0);
    $76=(+(HEAPF64[(($75)>>3)]));
    $77=($32)*($76);
    $78=($33)*($e1_182);
    $79=($78)+($77);
    $80=($32)*($79);
    $81=($33)*($e2_083);
    $82=($81)+($80);
    $83=($tempReal_284)+($82);
    $84=((($i_280)-(1))|0);
    $85=($84|0)>0;
    if ($85) {
     $i_280=$84;$today_281=$74;$e1_182=$79;$e2_083=$82;$tempReal_284=$83;
    } else {
     break;
    }
   }
   $86=((($72)-(1))|0);
   $today_2_lcssa=$86;$e1_1_lcssa=$79;$e2_0_lcssa=$82;$tempReal_2_lcssa=$83;
   label = 24;
  } else {
   $37=($35)/($30);
   $today_1_lcssa_ph=$today_0102;$tempReal_1_lcssa_ph=$37;
   label = 18;
  }
 } while(0);
 if ((label|0) == 18) {


  $66=($tempReal_1_lcssa_ph)/($30);
  $today_2_lcssa=$today_1_lcssa_ph;$e1_1_lcssa=$tempReal_1_lcssa_ph;$e2_0_lcssa=$66;$tempReal_2_lcssa=$66;
  label = 24;
 }
 do {
  if ((label|0) == 24) {




   $88=($tempReal_2_lcssa)/($30);
   $89=($19|0)>0;
   if (!($89)) {
    $today_3_lcssa_ph=$today_2_lcssa;$e1_2_lcssa_ph=$e1_1_lcssa;$e2_1_lcssa_ph=$e2_0_lcssa;$tempReal_3_lcssa_ph=$88;
    label = 27;
    break;
   }
   $90=((($_05)+($today_2_lcssa))|0);
   $i_366=$19;$today_367=$today_2_lcssa;$e1_268=$e1_1_lcssa;$e2_169=$e2_0_lcssa;$e3_070=$88;$tempReal_371=$88;
   while(1) {






    $92=((($today_367)+(1))|0);
    $93=(($inReal+($today_367<<3))|0);
    $94=(+(HEAPF64[(($93)>>3)]));
    $95=($32)*($94);
    $96=($33)*($e1_268);
    $97=($96)+($95);
    $98=($32)*($97);
    $99=($33)*($e2_169);
    $100=($99)+($98);
    $101=($32)*($100);
    $102=($33)*($e3_070);
    $103=($102)+($101);
    $104=($tempReal_371)+($103);
    $105=((($i_366)-(1))|0);
    $106=($105|0)>0;
    if ($106) {
     $i_366=$105;$today_367=$92;$e1_268=$97;$e2_169=$100;$e3_070=$103;$tempReal_371=$104;
    } else {
     break;
    }
   }
   $109=((($90)-(1))|0);
   $110=($104)/($30);
   $111=($19|0)>0;
   if (!($111)) {
    $112=($110)/($30);
    $today_5_lcssa=$109;$e1_4_lcssa=$97;$e2_3_lcssa=$100;$e3_2_lcssa=$103;$e4_1_lcssa=$110;$e5_0_lcssa=$112;$tempReal_5_lcssa=$112;
    break;
   }
   $113=((($_05)+($109))|0);
   $i_450=$19;$today_451=$109;$e1_352=$97;$e2_253=$100;$e3_154=$103;$e4_055=$110;$tempReal_456=$110;
   while(1) {







    $115=((($today_451)+(1))|0);
    $116=(($inReal+($today_451<<3))|0);
    $117=(+(HEAPF64[(($116)>>3)]));
    $118=($32)*($117);
    $119=($33)*($e1_352);
    $120=($119)+($118);
    $121=($32)*($120);
    $122=($33)*($e2_253);
    $123=($122)+($121);
    $124=($32)*($123);
    $125=($33)*($e3_154);
    $126=($125)+($124);
    $127=($32)*($126);
    $128=($33)*($e4_055);
    $129=($128)+($127);
    $130=($tempReal_456)+($129);
    $131=((($i_450)-(1))|0);
    $132=($131|0)>0;
    if ($132) {
     $i_450=$131;$today_451=$115;$e1_352=$120;$e2_253=$123;$e3_154=$126;$e4_055=$129;$tempReal_456=$130;
    } else {
     break;
    }
   }
   $133=((($113)-(1))|0);
   $today_4_lcssa=$133;$e1_3_lcssa=$120;$e2_2_lcssa=$123;$e3_1_lcssa=$126;$e4_0_lcssa=$129;$tempReal_4_lcssa=$130;
   label = 33;
  }
 } while(0);
 if ((label|0) == 27) {




  $107=($tempReal_3_lcssa_ph)/($30);
  $today_4_lcssa=$today_3_lcssa_ph;$e1_3_lcssa=$e1_2_lcssa_ph;$e2_2_lcssa=$e2_1_lcssa_ph;$e3_1_lcssa=$tempReal_3_lcssa_ph;$e4_0_lcssa=$107;$tempReal_4_lcssa=$107;
  label = 33;
 }
 do {
  if ((label|0) == 33) {






   $135=($tempReal_4_lcssa)/($30);
   $136=($19|0)>0;
   if (!($136)) {
    $today_5_lcssa=$today_4_lcssa;$e1_4_lcssa=$e1_3_lcssa;$e2_3_lcssa=$e2_2_lcssa;$e3_2_lcssa=$e3_1_lcssa;$e4_1_lcssa=$e4_0_lcssa;$e5_0_lcssa=$135;$tempReal_5_lcssa=$135;
    break;
   }
   $137=((($_05)+($today_4_lcssa))|0);
   $i_532=$19;$today_533=$today_4_lcssa;$e1_434=$e1_3_lcssa;$e2_335=$e2_2_lcssa;$e3_236=$e3_1_lcssa;$e4_137=$e4_0_lcssa;$e5_038=$135;$tempReal_539=$135;
   while(1) {








    $139=((($today_533)+(1))|0);
    $140=(($inReal+($today_533<<3))|0);
    $141=(+(HEAPF64[(($140)>>3)]));
    $142=($32)*($141);
    $143=($33)*($e1_434);
    $144=($143)+($142);
    $145=($32)*($144);
    $146=($33)*($e2_335);
    $147=($146)+($145);
    $148=($32)*($147);
    $149=($33)*($e3_236);
    $150=($149)+($148);
    $151=($32)*($150);
    $152=($33)*($e4_137);
    $153=($152)+($151);
    $154=($32)*($153);
    $155=($33)*($e5_038);
    $156=($155)+($154);
    $157=($tempReal_539)+($156);
    $158=((($i_532)-(1))|0);
    $159=($158|0)>0;
    if ($159) {
     $i_532=$158;$today_533=$139;$e1_434=$144;$e2_335=$147;$e3_236=$150;$e4_137=$153;$e5_038=$156;$tempReal_539=$157;
    } else {
     break;
    }
   }
   $160=((($137)-(1))|0);
   $today_5_lcssa=$160;$e1_4_lcssa=$144;$e2_3_lcssa=$147;$e3_2_lcssa=$150;$e4_1_lcssa=$153;$e5_0_lcssa=$156;$tempReal_5_lcssa=$157;
  }
 } while(0);







 $162=($tempReal_5_lcssa)/($30);
 $163=($today_5_lcssa|0)>($startIdx_|0);
 if ($163) {
  $today_6_lcssa=$today_5_lcssa;$e1_5_lcssa=$e1_4_lcssa;$e2_4_lcssa=$e2_3_lcssa;$e3_3_lcssa=$e3_2_lcssa;$e4_2_lcssa=$e4_1_lcssa;$e5_1_lcssa=$e5_0_lcssa;$e6_0_lcssa=$162;
 } else {
  $164=($today_5_lcssa|0)>($startIdx|0);
  $smax117=($164?$today_5_lcssa:$startIdx);
  $165=((($_05)*(6))&-1);
  $166=((($23)+($165))|0);
  $167=((($166)-(6))|0);
  $168=($smax117|0)>($167|0);
  $smax118=($168?$smax117:$167);
  $today_615=$today_5_lcssa;$e1_516=$e1_4_lcssa;$e2_417=$e2_3_lcssa;$e3_318=$e3_2_lcssa;$e4_219=$e4_1_lcssa;$e5_120=$e5_0_lcssa;$e6_021=$162;
  while(1) {







   $170=((($today_615)+(1))|0);
   $171=(($inReal+($today_615<<3))|0);
   $172=(+(HEAPF64[(($171)>>3)]));
   $173=($32)*($172);
   $174=($33)*($e1_516);
   $175=($174)+($173);
   $176=($32)*($175);
   $177=($33)*($e2_417);
   $178=($177)+($176);
   $179=($32)*($178);
   $180=($33)*($e3_318);
   $181=($180)+($179);
   $182=($32)*($181);
   $183=($33)*($e4_219);
   $184=($183)+($182);
   $185=($32)*($184);
   $186=($33)*($e5_120);
   $187=($186)+($185);
   $188=($32)*($187);
   $189=($33)*($e6_021);
   $190=($189)+($188);
   $191=($today_615|0)<($startIdx_|0);
   if ($191) {
    $today_615=$170;$e1_516=$175;$e2_417=$178;$e3_318=$181;$e4_219=$184;$e5_120=$187;$e6_021=$190;
   } else {
    break;
   }
  }
  $192=((($smax118)+(1))|0);
  $today_6_lcssa=$192;$e1_5_lcssa=$175;$e2_4_lcssa=$178;$e3_3_lcssa=$181;$e4_2_lcssa=$184;$e5_1_lcssa=$187;$e6_0_lcssa=$190;
 }







 $194=($_06)*($_06);
 $195=($_06)*($194);
 $196=((-.0))-($195);
 $197=($194)+($195);
 $198=($197)*((3.0));
 $199=($194)*((-6.0));
 $200=($_06)+($195);
 $201=($200)*((3.0));
 $202=($199)-($201);
 $203=($_06)*((3.0));
 $204=($203)+((1.0));
 $205=($204)+($195);
 $206=($194)*((3.0));
 $207=($206)+($205);
 $208=($e6_0_lcssa)*($196);
 $209=($198)*($e5_1_lcssa);
 $210=($209)+($208);
 $211=($202)*($e4_2_lcssa);
 $212=($211)+($210);
 $213=($207)*($e3_3_lcssa);
 $214=($213)+($212);
 HEAPF64[(($outReal)>>3)]=$214;
 $215=($today_6_lcssa|0)>($endIdx|0);
 if ($215) {
  $outIdx_0_lcssa=1;
 } else {
  $216=($today_6_lcssa|0)>($endIdx|0);
  $smax=($216?$today_6_lcssa:$endIdx);
  $217=((($smax)+(2))|0);
  $today_77=$today_6_lcssa;$outIdx_08=1;$e1_69=$e1_5_lcssa;$e2_510=$e2_4_lcssa;$e3_411=$e3_3_lcssa;$e4_312=$e4_2_lcssa;$e5_213=$e5_1_lcssa;$e6_114=$e6_0_lcssa;
  while(1) {








   $219=((($today_77)+(1))|0);
   $220=(($inReal+($today_77<<3))|0);
   $221=(+(HEAPF64[(($220)>>3)]));
   $222=($32)*($221);
   $223=($33)*($e1_69);
   $224=($223)+($222);
   $225=($32)*($224);
   $226=($33)*($e2_510);
   $227=($226)+($225);
   $228=($32)*($227);
   $229=($33)*($e3_411);
   $230=($229)+($228);
   $231=($32)*($230);
   $232=($33)*($e4_312);
   $233=($232)+($231);
   $234=($32)*($233);
   $235=($33)*($e5_213);
   $236=($235)+($234);
   $237=($32)*($236);
   $238=($33)*($e6_114);
   $239=($238)+($237);
   $240=($239)*($196);
   $241=($198)*($236);
   $242=($241)+($240);
   $243=($202)*($233);
   $244=($243)+($242);
   $245=($207)*($230);
   $246=($245)+($244);
   $247=((($outIdx_08)+(1))|0);
   $248=(($outReal+($outIdx_08<<3))|0);
   HEAPF64[(($248)>>3)]=$246;
   $249=($today_77|0)<($endIdx|0);
   if ($249) {
    $today_77=$219;$outIdx_08=$247;$e1_69=$224;$e2_510=$227;$e3_411=$230;$e4_312=$233;$e5_213=$236;$e6_114=$239;
   } else {
    break;
   }
  }
  $250=((($217)-($today_6_lcssa))|0);
  $outIdx_0_lcssa=$250;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_TAN($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(Math_tan($13)));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_TANH($startIdx,$endIdx,$inReal,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$7=0,$or_cond1=0,$8=0,$9=0,$smax=0,$10=0,$i_03=0,$outIdx_02=0,$12=0,$13=.0,$14=.0,$15=0,$16=0,$17=0,$18=0;
 var $19=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 $7=($outReal|0)==0;
 $or_cond1=$6|$7;
 if ($or_cond1) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($startIdx|0)>($endIdx|0);
 if ($8) {
  $outIdx_0_lcssa=0;
 } else {
  $9=($endIdx|0)>($startIdx|0);
  $smax=($9?$endIdx:$startIdx);
  $10=((($smax)+(1))|0);
  $outIdx_02=0;$i_03=$startIdx;
  while(1) {


   $12=(($inReal+($i_03<<3))|0);
   $13=(+(HEAPF64[(($12)>>3)]));
   $14=(+(_tanh((+($13)))));
   $15=(($outReal+($outIdx_02<<3))|0);
   HEAPF64[(($15)>>3)]=$14;
   $16=((($i_03)+(1))|0);
   $17=((($outIdx_02)+(1))|0);
   $18=($i_03|0)<($endIdx|0);
   if ($18) {
    $outIdx_02=$17;$i_03=$16;
   } else {
    break;
   }
  }
  $19=((($10)-($startIdx))|0);
  $outIdx_0_lcssa=$19;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_TEMA_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_02=0,$5=0,$6=0,$_0=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_02=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_0=-1;
   } else {
    $_02=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $5=((_TA_EMA_Lookback($_02))|0);
 $6=((($5)*(3))&-1);
 $_0=$6;

 return (($_0)|0);
}


function _TA_TEMA($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $firstEMABegIdx=0,$firstEMANbElement=0,$secondEMABegIdx=0,$secondEMANbElement=0,$thirdEMABegIdx=0,$thirdEMANbElement=0,$1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_09=0,$12=0,$14=0,$15=0,$16=0,$_startIdx=0;
 var $17=0,$19=0,$20=0,$21=0,$22=0,$23=0,$24=0,$25=0,$27=0,$28=.0,$29=.0,$30=0,$31=0,$32=0,$33=0,$34=0,$35=0,$or_cond3=0,$38=0,$39=0;
 var $40=0,$41=0,$44=0,$45=0,$46=0,$47=0,$48=0,$49=0,$or_cond5=0,$52=0,$53=0,$54=0,$55=0,$56=0,$or_cond7=0,$59=0,$60=0,$61=0,$62=0,$63=0;
 var $64=0,$65=0,$66=0,$67=0,$secondEMAIdx_012=0,$firstEMAIdx_011=0,$outIdx_010=0,$69=0,$70=0,$71=.0,$72=.0,$73=0,$74=0,$75=.0,$76=.0,$77=.0,$78=0,$79=.0,$80=.0,$81=0;
 var $82=0,$smax=0,$outIdx_0_lcssa=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $firstEMABegIdx=((sp)|0);
 $firstEMANbElement=(((sp)+(8))|0);
 $secondEMABegIdx=(((sp)+(16))|0);
 $secondEMANbElement=(((sp)+(24))|0);
 $thirdEMABegIdx=(((sp)+(32))|0);
 $thirdEMANbElement=(((sp)+(40))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_09=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_09=$optInTimePeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outNBElement)>>2)]=0;
 HEAP32[(($outBegIdx)>>2)]=0;
 $14=((_TA_EMA_Lookback($_09))|0);
 $15=((($14)*(3))&-1);
 $16=($15|0)>($startIdx|0);
 $_startIdx=($16?$15:$startIdx);
 $17=($_startIdx|0)>($endIdx|0);
 if ($17) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $19=((($15)+($endIdx))|0);
 $20=((($19)-($_startIdx))|0);
 $21=$20<<3;
 $22=((($21)+(8))|0);
 $23=((_malloc($22))|0);
 $24=$23;
 $25=($23|0)==0;
 if ($25) {
  $_0=3;

  STACKTOP=sp;return (($_0)|0);
 }
 $27=((($_09)+(1))|0);
 $28=(+((($27|0))|0));
 $29=((2.0))/($28);
 $30=$14<<1;
 $31=((($_startIdx)-($30))|0);
 $32=((_TA_INT_EMA($31,$endIdx,$inReal,$_09,$29,$firstEMABegIdx,$firstEMANbElement,$24))|0);
 $33=($32|0)!=0;
 $34=((HEAP32[(($firstEMANbElement)>>2)])|0);
 $35=($34|0)==0;
 $or_cond3=$33|$35;
 if ($or_cond3) {
  _free($23);
  $_0=$32;

  STACKTOP=sp;return (($_0)|0);
 }
 $38=$34<<3;
 $39=((_malloc($38))|0);
 $40=$39;
 $41=($39|0)==0;
 if ($41) {
  _free($23);
  $_0=3;

  STACKTOP=sp;return (($_0)|0);
 }
 $44=((HEAP32[(($firstEMANbElement)>>2)])|0);
 $45=((($44)-(1))|0);
 $46=((_TA_INT_EMA(0,$45,$24,$_09,$29,$secondEMABegIdx,$secondEMANbElement,$40))|0);
 $47=($46|0)!=0;
 $48=((HEAP32[(($secondEMANbElement)>>2)])|0);
 $49=($48|0)==0;
 $or_cond5=$47|$49;
 if ($or_cond5) {
  _free($23);
  _free($39);
  $_0=$46;

  STACKTOP=sp;return (($_0)|0);
 }
 $52=((($48)-(1))|0);
 $53=((_TA_INT_EMA(0,$52,$40,$_09,$29,$thirdEMABegIdx,$thirdEMANbElement,$outReal))|0);
 $54=($53|0)!=0;
 $55=((HEAP32[(($thirdEMANbElement)>>2)])|0);
 $56=($55|0)==0;
 $or_cond7=$54|$56;
 if ($or_cond7) {
  _free($23);
  _free($39);
  $_0=$53;

  STACKTOP=sp;return (($_0)|0);
 }
 $59=((HEAP32[(($thirdEMABegIdx)>>2)])|0);
 $60=((HEAP32[(($secondEMABegIdx)>>2)])|0);
 $61=((($60)+($59))|0);
 $62=((HEAP32[(($firstEMABegIdx)>>2)])|0);
 $63=((($61)+($62))|0);
 HEAP32[(($outBegIdx)>>2)]=$63;
 $64=((HEAP32[(($thirdEMANbElement)>>2)])|0);
 $65=($64|0)>0;
 if ($65) {
  $66=((HEAP32[(($thirdEMANbElement)>>2)])|0);
  $67=($66|0)>1;
  $outIdx_010=0;$firstEMAIdx_011=$61;$secondEMAIdx_012=$59;
  while(1) {



   $69=((($firstEMAIdx_011)+(1))|0);
   $70=(($24+($firstEMAIdx_011<<3))|0);
   $71=(+(HEAPF64[(($70)>>3)]));
   $72=($71)*((3.0));
   $73=((($secondEMAIdx_012)+(1))|0);
   $74=(($40+($secondEMAIdx_012<<3))|0);
   $75=(+(HEAPF64[(($74)>>3)]));
   $76=($75)*((3.0));
   $77=($72)-($76);
   $78=(($outReal+($outIdx_010<<3))|0);
   $79=(+(HEAPF64[(($78)>>3)]));
   $80=($79)+($77);
   HEAPF64[(($78)>>3)]=$80;
   $81=((($outIdx_010)+(1))|0);
   $82=($81|0)<($66|0);
   if ($82) {
    $outIdx_010=$81;$firstEMAIdx_011=$69;$secondEMAIdx_012=$73;
   } else {
    break;
   }
  }
  $smax=($67?$66:1);
  $outIdx_0_lcssa=$smax;
 } else {
  $outIdx_0_lcssa=0;
 }

 _free($23);
 _free($39);
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_TRANGE($startIdx,$endIdx,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond5=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$or_cond3_not=0,$9=0,$or_cond6=0,$11=0,$_startIdx=0,$12=0,$13=0,$14=0,$smax=0,$today_08=0,$outIdx_07=0;
 var $17=0,$18=.0,$19=0,$20=.0,$21=0,$22=0,$23=.0,$24=.0,$25=.0,$26=.0,$27=0,$greatest_0=.0,$28=.0,$29=.0,$30=0,$greatest_1=.0,$31=0,$32=0,$33=0,$34=0;
 var $35=0,$36=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond5=$3|$4;
 if ($or_cond5) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 $or_cond3_not=$or_cond3^1;
 $9=($outReal|0)==0;
 $or_cond6=$9|$or_cond3_not;
 if ($or_cond6) {
  $_0=2;

  return (($_0)|0);
 }
 $11=($startIdx|0)<1;
 $_startIdx=($11?1:$startIdx);
 $12=($_startIdx|0)>($endIdx|0);
 if ($12) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $13=($_startIdx|0)>($endIdx|0);
 if ($13) {
  $outIdx_0_lcssa=0;
 } else {
  $14=($startIdx|0)>1;
  $smax=($14?$startIdx:1);
  $outIdx_07=0;$today_08=$_startIdx;
  while(1) {


   $17=(($inLow+($today_08<<3))|0);
   $18=(+(HEAPF64[(($17)>>3)]));
   $19=(($inHigh+($today_08<<3))|0);
   $20=(+(HEAPF64[(($19)>>3)]));
   $21=((($today_08)-(1))|0);
   $22=(($inClose+($21<<3))|0);
   $23=(+(HEAPF64[(($22)>>3)]));
   $24=($20)-($18);
   $25=($23)-($20);
   $26=(+(Math_abs((+($25)))));
   $27=$26>$24;
   $greatest_0=($27?$26:$24);
   $28=($23)-($18);
   $29=(+(Math_abs((+($28)))));
   $30=$29>$greatest_0;
   $greatest_1=($30?$29:$greatest_0);
   $31=((($outIdx_07)+(1))|0);
   $32=(($outReal+($outIdx_07<<3))|0);
   HEAPF64[(($32)>>3)]=$greatest_1;
   $33=((($today_08)+(1))|0);
   $34=($today_08|0)<($endIdx|0);
   if ($34) {
    $outIdx_07=$31;$today_08=$33;
   } else {
    break;
   }
  }
  $35=((($endIdx)+(1))|0);
  $36=((($35)-($smax))|0);
  $outIdx_0_lcssa=$36;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_TRIMA_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((($_0)-(1))|0);
 $_02=$5;

 return (($_02)|0);
}


function _TA_TRIMA($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=0,$22=0,$24=0,$25=.0;
 var $26=.0,$27=0,$28=0,$29=0,$30=0,$31=0,$i_022=0,$numeratorSub_021=.0,$numerator_020=.0,$32=0,$33=.0,$34=.0,$35=.0,$36=0,$37=0,$38=0,$39=0,$i_116=0,$numeratorAdd_015=.0,$numerator_114=.0;
 var $40=0,$41=.0,$42=.0,$43=.0,$44=0,$45=0,$46=0,$numeratorSub_0_lcssa65=.0,$numeratorAdd_0_lcssa=.0,$numerator_1_lcssa=.0,$47=0,$48=.0,$49=.0,$50=0,$51=0,$52=0,$smax=0,$53=0,$todayIdx_013_in=0,$trailingIdx_012_in=0;
 var $tempReal_011=.0,$middleIdx_010=0,$outIdx_09=0,$numeratorAdd_18=.0,$numeratorSub_17=.0,$numerator_26=.0,$trailingIdx_012=0,$todayIdx_013=0,$55=.0,$56=.0,$57=0,$58=0,$59=.0,$60=.0,$61=.0,$62=.0,$63=0,$64=.0,$65=.0,$66=.0;
 var $67=0,$68=.0,$69=.0,$70=0,$71=0,$72=0,$74=0,$75=.0,$76=.0,$77=0,$78=0,$79=0,$80=0,$81=0,$numeratorSub_2_lcssa=.0,$numerator_3_lcssa=.0,$82=0,$i_250=0,$numeratorSub_249=.0,$numerator_348=.0;
 var $83=0,$84=.0,$85=.0,$86=.0,$87=0,$88=0,$i_343=0,$numeratorAdd_242=.0,$numerator_441=.0,$89=0,$90=.0,$91=.0,$92=.0,$93=0,$94=0,$numeratorAdd_2_lcssa=.0,$numerator_4_lcssa=.0,$95=0,$96=.0,$97=.0;
 var $98=0,$99=0,$100=0,$101=0,$smax59=0,$102=0,$103=0,$104=0,$105=0,$106=0,$smax60=0,$107=0,$108=0,$109=0,$trailingIdx_137_in=0,$tempReal_136=.0,$middleIdx_135=0,$todayIdx_134=0,$outIdx_133=0,$numeratorAdd_332=.0;
 var $numeratorSub_331=.0,$numerator_530=.0,$trailingIdx_137=0,$111=.0,$112=.0,$113=0,$114=0,$115=.0,$116=.0,$117=.0,$118=.0,$119=0,$120=0,$121=.0,$122=.0,$123=.0,$124=0,$125=.0,$126=.0,$127=0;
 var $128=0,$129=0,$130=0,$131=0,$132=0,$133=0,$outIdx_2=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((($_03)-(1))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=(((($_03|0))%(2))&-1);
 $20=($19|0)==1;
 $21=$_03>>1;
 $22=((($21)+(1))|0);
 do {
  if ($20) {
   $24=(Math_imul($22,$22)|0);
   $25=(+((($24|0))|0));
   $26=((1.0))/($25);
   $27=((($_startIdx)-($14))|0);
   $28=((($27)+($21))|0);
   $29=((($28)+($21))|0);
   $30=($21|0)<0;
   do {
    if ($30) {
     $31=((($28)+(1))|0);
     $numerator_1_lcssa=0.0;$numeratorAdd_0_lcssa=0.0;$numeratorSub_0_lcssa65=0.0;$46=$31;
    } else {
     $numerator_020=0.0;$numeratorSub_021=0.0;$i_022=$28;
     while(1) {



      $32=(($inReal+($i_022<<3))|0);
      $33=(+(HEAPF64[(($32)>>3)]));
      $34=($numeratorSub_021)+($33);
      $35=($numerator_020)+($34);
      $36=((($i_022)-(1))|0);
      $37=($i_022|0)>($27|0);
      if ($37) {
       $numerator_020=$35;$numeratorSub_021=$34;$i_022=$36;
      } else {
       break;
      }
     }
     $38=((($28)+(1))|0);
     $39=($21|0)<1;
     if ($39) {
      $numerator_1_lcssa=$35;$numeratorAdd_0_lcssa=0.0;$numeratorSub_0_lcssa65=$34;$46=$38;
      break;
     } else {
      $numerator_114=$35;$numeratorAdd_015=0.0;$i_116=$38;
     }
     while(1) {



      $40=(($inReal+($i_116<<3))|0);
      $41=(+(HEAPF64[(($40)>>3)]));
      $42=($numeratorAdd_015)+($41);
      $43=($numerator_114)+($42);
      $44=((($i_116)+(1))|0);
      $45=($i_116|0)<($29|0);
      if ($45) {
       $numerator_114=$43;$numeratorAdd_015=$42;$i_116=$44;
      } else {
       $numerator_1_lcssa=$43;$numeratorAdd_0_lcssa=$42;$numeratorSub_0_lcssa65=$34;$46=$38;
       break;
      }
     }
    }
   } while(0);




   $47=(($inReal+($27<<3))|0);
   $48=(+(HEAPF64[(($47)>>3)]));
   $49=($26)*($numerator_1_lcssa);
   HEAPF64[(($outReal)>>3)]=$49;
   $50=($29|0)<($endIdx|0);
   if (!($50)) {
    $outIdx_2=1;
    break;
   }
   $51=((($_03)-(1))|0);
   $52=($51|0)<($startIdx|0);
   $smax=($52?$startIdx:$51);
   $53=$21<<1;
   $numerator_26=$numerator_1_lcssa;$numeratorSub_17=$numeratorSub_0_lcssa65;$numeratorAdd_18=$numeratorAdd_0_lcssa;$outIdx_09=1;$middleIdx_010=$46;$tempReal_011=$48;$trailingIdx_012_in=$27;$todayIdx_013_in=$29;
   while(1) {








    $trailingIdx_012=((($trailingIdx_012_in)+(1))|0);
    $todayIdx_013=((($todayIdx_013_in)+(1))|0);
    $55=($numerator_26)-($numeratorSub_17);
    $56=($numeratorSub_17)-($tempReal_011);
    $57=((($middleIdx_010)+(1))|0);
    $58=(($inReal+($middleIdx_010<<3))|0);
    $59=(+(HEAPF64[(($58)>>3)]));
    $60=($56)+($59);
    $61=($55)+($numeratorAdd_18);
    $62=($numeratorAdd_18)-($59);
    $63=(($inReal+($todayIdx_013<<3))|0);
    $64=(+(HEAPF64[(($63)>>3)]));
    $65=($62)+($64);
    $66=($61)+($64);
    $67=(($inReal+($trailingIdx_012<<3))|0);
    $68=(+(HEAPF64[(($67)>>3)]));
    $69=($26)*($66);
    $70=((($outIdx_09)+(1))|0);
    $71=(($outReal+($outIdx_09<<3))|0);
    HEAPF64[(($71)>>3)]=$69;
    $72=($todayIdx_013|0)<($endIdx|0);
    if ($72) {
     $numerator_26=$66;$numeratorSub_17=$60;$numeratorAdd_18=$65;$outIdx_09=$70;$middleIdx_010=$57;$tempReal_011=$68;$trailingIdx_012_in=$trailingIdx_012;$todayIdx_013_in=$todayIdx_013;
    } else {
     break;
    }
   }
   $130=((($_03)+($endIdx))|0);
   $131=((($130)-($smax))|0);
   $132=((($131)-($53))|0);
   $outIdx_2=$132;
  } else {
   $74=(Math_imul($22,$21)|0);
   $75=(+((($74|0))|0));
   $76=((1.0))/($75);
   $77=((($_startIdx)-($14))|0);
   $78=((($77)+($21))|0);
   $79=((($78)-(1))|0);
   $80=((($79)+($21))|0);
   $81=($21|0)<1;
   if ($81) {
    $numerator_3_lcssa=0.0;$numeratorSub_2_lcssa=0.0;
   } else {
    $numerator_348=0.0;$numeratorSub_249=0.0;$i_250=$79;
    while(1) {



     $83=(($inReal+($i_250<<3))|0);
     $84=(+(HEAPF64[(($83)>>3)]));
     $85=($numeratorSub_249)+($84);
     $86=($numerator_348)+($85);
     $87=((($i_250)-(1))|0);
     $88=($i_250|0)>($77|0);
     if ($88) {
      $numerator_348=$86;$numeratorSub_249=$85;$i_250=$87;
     } else {
      $numerator_3_lcssa=$86;$numeratorSub_2_lcssa=$85;
      break;
     }
    }
   }


   $82=($78|0)>($80|0);
   if ($82) {
    $numerator_4_lcssa=$numerator_3_lcssa;$numeratorAdd_2_lcssa=0.0;
   } else {
    $numerator_441=$numerator_3_lcssa;$numeratorAdd_242=0.0;$i_343=$78;
    while(1) {



     $89=(($inReal+($i_343<<3))|0);
     $90=(+(HEAPF64[(($89)>>3)]));
     $91=($numeratorAdd_242)+($90);
     $92=($numerator_441)+($91);
     $93=((($i_343)+(1))|0);
     $94=($i_343|0)<($80|0);
     if ($94) {
      $numerator_441=$92;$numeratorAdd_242=$91;$i_343=$93;
     } else {
      $numerator_4_lcssa=$92;$numeratorAdd_2_lcssa=$91;
      break;
     }
    }
   }


   $95=(($inReal+($77<<3))|0);
   $96=(+(HEAPF64[(($95)>>3)]));
   $97=($76)*($numerator_4_lcssa);
   HEAPF64[(($outReal)>>3)]=$97;
   $98=((($78)+($21))|0);
   $99=($98|0)>($endIdx|0);
   if ($99) {
    $outIdx_2=1;
    break;
   }
   $100=((($_03)-(1))|0);
   $101=($100|0)<($startIdx|0);
   $smax59=($101?$startIdx:$100);
   $102=$21<<1;
   $103=((($smax59)+($102))|0);
   $104=((($103)+(1))|0);
   $105=((($104)-($_03))|0);
   $106=($105|0)<($endIdx|0);
   $smax60=($106?$endIdx:$105);
   $107=((($_03)+($smax60))|0);
   $108=((($107)+(1))|0);
   $109=((($108)-($smax59))|0);
   $numerator_530=$numerator_4_lcssa;$numeratorSub_331=$numeratorSub_2_lcssa;$numeratorAdd_332=$numeratorAdd_2_lcssa;$outIdx_133=1;$todayIdx_134=$98;$middleIdx_135=$78;$tempReal_136=$96;$trailingIdx_137_in=$77;
   while(1) {








    $trailingIdx_137=((($trailingIdx_137_in)+(1))|0);
    $111=($numerator_530)-($numeratorSub_331);
    $112=($numeratorSub_331)-($tempReal_136);
    $113=((($middleIdx_135)+(1))|0);
    $114=(($inReal+($middleIdx_135<<3))|0);
    $115=(+(HEAPF64[(($114)>>3)]));
    $116=($112)+($115);
    $117=($numeratorAdd_332)-($115);
    $118=($111)+($117);
    $119=((($todayIdx_134)+(1))|0);
    $120=(($inReal+($todayIdx_134<<3))|0);
    $121=(+(HEAPF64[(($120)>>3)]));
    $122=($117)+($121);
    $123=($121)+($118);
    $124=(($inReal+($trailingIdx_137<<3))|0);
    $125=(+(HEAPF64[(($124)>>3)]));
    $126=($76)*($123);
    $127=((($outIdx_133)+(1))|0);
    $128=(($outReal+($outIdx_133<<3))|0);
    HEAPF64[(($128)>>3)]=$126;
    $129=($todayIdx_134|0)<($endIdx|0);
    if ($129) {
     $numerator_530=$123;$numeratorSub_331=$116;$numeratorAdd_332=$122;$outIdx_133=$127;$todayIdx_134=$119;$middleIdx_135=$113;$tempReal_136=$125;$trailingIdx_137_in=$trailingIdx_137;
    } else {
     break;
    }
   }
   $133=((($109)-($102))|0);
   $outIdx_2=$133;
  }
 } while(0);

 HEAP32[(($outNBElement)>>2)]=$outIdx_2;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_TRIX($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $nbElement=0,$begIdx=0,$1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_09=0,$12=0,$14=0,$15=0,$16=0,$17=0,$18=0,$_startIdx=0,$19=0,$22=0;
 var $23=0,$24=0,$25=0,$26=0,$27=0,$28=0,$31=0,$32=.0,$33=.0,$34=0,$35=0,$36=0,$37=0,$38=0,$or_cond3=0,$41=0,$42=0,$43=0,$44=0,$45=0;
 var $46=0,$or_cond5=0,$49=0,$50=0,$51=0,$52=0,$53=0,$or_cond7=0,$56=0,$57=0,$58=0,$60=0,$61=0,$_0=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+16)|0;
 $nbElement=((sp)|0);
 $begIdx=(((sp)+(8))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_09=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
   $10=($optInTimePeriod_off>>>0)>((99999)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_09=$optInTimePeriod;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $14=((_TA_EMA_Lookback($_09))|0);
 $15=((_TA_ROCR_Lookback(1))|0);
 $16=((($14)*(3))&-1);
 $17=((($16)+($15))|0);
 $18=($17|0)>($startIdx|0);
 $_startIdx=($18?$17:$startIdx);
 $19=($_startIdx|0)>($endIdx|0);
 if ($19) {
  HEAP32[(($outNBElement)>>2)]=0;
  HEAP32[(($outBegIdx)>>2)]=0;
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $22=((($endIdx)-($_startIdx))|0);
 $23=((($17)+(1))|0);
 $24=((($23)+($22))|0);
 $25=$24<<3;
 $26=((_malloc($25))|0);
 $27=$26;
 $28=($26|0)==0;
 if ($28) {
  HEAP32[(($outNBElement)>>2)]=0;
  HEAP32[(($outBegIdx)>>2)]=0;
  $_0=3;

  STACKTOP=sp;return (($_0)|0);
 }
 $31=((($_09)+(1))|0);
 $32=(+((($31|0))|0));
 $33=((2.0))/($32);
 $34=((($_startIdx)-($17))|0);
 $35=((_TA_INT_EMA($34,$endIdx,$inReal,$_09,$33,$begIdx,$nbElement,$27))|0);
 $36=($35|0)!=0;
 $37=((HEAP32[(($nbElement)>>2)])|0);
 $38=($37|0)==0;
 $or_cond3=$36|$38;
 if ($or_cond3) {
  HEAP32[(($outNBElement)>>2)]=0;
  HEAP32[(($outBegIdx)>>2)]=0;
  _free($26);
  $_0=$35;

  STACKTOP=sp;return (($_0)|0);
 }
 $41=((($17)-($14))|0);
 $42=((($41)+($22))|0);
 $43=((_TA_INT_EMA(0,$42,$27,$_09,$33,$begIdx,$nbElement,$27))|0);
 $44=($43|0)!=0;
 $45=((HEAP32[(($nbElement)>>2)])|0);
 $46=($45|0)==0;
 $or_cond5=$44|$46;
 if ($or_cond5) {
  HEAP32[(($outNBElement)>>2)]=0;
  HEAP32[(($outBegIdx)>>2)]=0;
  _free($26);
  $_0=$43;

  STACKTOP=sp;return (($_0)|0);
 }
 $49=((($42)-($14))|0);
 $50=((_TA_INT_EMA(0,$49,$27,$_09,$33,$begIdx,$nbElement,$27))|0);
 $51=($50|0)!=0;
 $52=((HEAP32[(($nbElement)>>2)])|0);
 $53=($52|0)==0;
 $or_cond7=$51|$53;
 if ($or_cond7) {
  HEAP32[(($outNBElement)>>2)]=0;
  HEAP32[(($outBegIdx)>>2)]=0;
  _free($26);
  $_0=$50;

  STACKTOP=sp;return (($_0)|0);
 }
 $56=((($49)-($14))|0);
 $57=((_TA_ROC(0,$56,$27,1,$begIdx,$outNBElement,$outReal))|0);
 _free($26);
 $58=($57|0)==0;
 do {
  if ($58) {
   $60=((HEAP32[(($outNBElement)>>2)])|0);
   $61=($60|0)==0;
   if ($61) {
    break;
   } else {
    $_0=0;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);
 HEAP32[(($outNBElement)>>2)]=0;
 HEAP32[(($outBegIdx)>>2)]=0;
 $_0=$57;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_TSF_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((($_0)-(1))|0);
 $_02=$5;

 return (($_02)|0);
}


function _TA_TSF($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$20=0,$21=.0,$22=.0,$23=0,$24=0;
 var $25=0,$26=0,$27=.0,$28=.0,$29=.0,$30=.0,$31=.0,$32=0,$33=0,$34=0,$smax=0,$35=0,$smax13=0,$36=0,$smax14=0,$outIdx_08=0,$today_07=0,$_in=0,$SumY_05=.0,$SumXY_04=.0;
 var $37=0,$38=0,$39=0,$40=.0,$41=.0,$42=.0,$43=.0,$44=.0,$45=0,$SumY_0_lcssa=.0,$SumXY_0_lcssa=.0,$46=.0,$47=.0,$48=.0,$49=.0,$50=.0,$51=.0,$52=.0,$53=.0,$54=.0;
 var $55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((_TA_TSF_Lookback($_03))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=((($_03)-(1))|0);
 $20=(Math_imul($19,$_03)|0);
 $21=(+((($20|0))|0));
 $22=($21)*((0.5));
 $23=$_03<<1;
 $24=((($23)-(1))|0);
 $25=(Math_imul($20,$24)|0);
 $26=(((($25|0))/(6))&-1);
 $27=(+((($26|0))|0));
 $28=($22)*($22);
 $29=(+((($_03|0))|0));
 $30=($29)*($27);
 $31=($28)-($30);
 $32=($_startIdx|0)>($endIdx|0);
 if ($32) {
  $outIdx_0_lcssa=0;
 } else {
  $33=($_03|0)==0;
  $34=($14|0)>($endIdx|0);
  $smax=($34?$14:$endIdx);
  $35=($smax|0)>($startIdx|0);
  $smax13=($35?$smax:$startIdx);
  $36=($14|0)>($startIdx|0);
  $smax14=($36?$14:$startIdx);
  $today_07=$_startIdx;$outIdx_08=0;
  while(1) {


   if ($33) {
    $SumXY_0_lcssa=0.0;$SumY_0_lcssa=0.0;
   } else {
    $SumXY_04=0.0;$SumY_05=0.0;$_in=$_03;
    while(1) {



     $37=((($_in)-(1))|0);
     $38=((($today_07)-($37))|0);
     $39=(($inReal+($38<<3))|0);
     $40=(+(HEAPF64[(($39)>>3)]));
     $41=($SumY_05)+($40);
     $42=(+((($37|0))|0));
     $43=($42)*($40);
     $44=($SumXY_04)+($43);
     $45=($37|0)==0;
     if ($45) {
      $SumXY_0_lcssa=$44;$SumY_0_lcssa=$41;
      break;
     } else {
      $SumXY_04=$44;$SumY_05=$41;$_in=$37;
     }
    }
   }


   $46=($29)*($SumXY_0_lcssa);
   $47=($22)*($SumY_0_lcssa);
   $48=($46)-($47);
   $49=($48)/($31);
   $50=($22)*($49);
   $51=($SumY_0_lcssa)-($50);
   $52=($51)/($29);
   $53=($29)*($49);
   $54=($52)+($53);
   $55=((($outIdx_08)+(1))|0);
   $56=(($outReal+($outIdx_08<<3))|0);
   HEAPF64[(($56)>>3)]=$54;
   $57=((($today_07)+(1))|0);
   $58=($today_07|0)<($endIdx|0);
   if ($58) {
    $today_07=$57;$outIdx_08=$55;
   } else {
    break;
   }
  }
  $59=((($smax13)+(1))|0);
  $60=((($59)-($smax14))|0);
  $outIdx_0_lcssa=$60;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_TYPPRICE($startIdx,$endIdx,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond4=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$or_cond3_not=0,$9=0,$or_cond5=0,$10=0,$11=0,$smax=0,$12=0,$i_07=0,$outIdx_06=0,$14=0,$15=.0;
 var $16=0,$17=.0,$18=.0,$19=0,$20=.0,$21=.0,$22=.0,$23=0,$24=0,$25=0,$26=0,$27=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond4=$3|$4;
 if ($or_cond4) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 $or_cond3_not=$or_cond3^1;
 $9=($outReal|0)==0;
 $or_cond5=$9|$or_cond3_not;
 if ($or_cond5) {
  $_0=2;

  return (($_0)|0);
 }
 $10=($startIdx|0)>($endIdx|0);
 if ($10) {
  $outIdx_0_lcssa=0;
 } else {
  $11=($endIdx|0)>($startIdx|0);
  $smax=($11?$endIdx:$startIdx);
  $12=((($smax)+(1))|0);
  $outIdx_06=0;$i_07=$startIdx;
  while(1) {


   $14=(($inHigh+($i_07<<3))|0);
   $15=(+(HEAPF64[(($14)>>3)]));
   $16=(($inLow+($i_07<<3))|0);
   $17=(+(HEAPF64[(($16)>>3)]));
   $18=($15)+($17);
   $19=(($inClose+($i_07<<3))|0);
   $20=(+(HEAPF64[(($19)>>3)]));
   $21=($18)+($20);
   $22=($21)/((3.0));
   $23=((($outIdx_06)+(1))|0);
   $24=(($outReal+($outIdx_06<<3))|0);
   HEAPF64[(($24)>>3)]=$22;
   $25=((($i_07)+(1))|0);
   $26=($i_07|0)<($endIdx|0);
   if ($26) {
    $outIdx_06=$23;$i_07=$25;
   } else {
    break;
   }
  }
  $27=((($12)-($startIdx))|0);
  $outIdx_0_lcssa=$27;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_ULTOSC_Lookback($optInTimePeriod1,$optInTimePeriod2,$optInTimePeriod3){
 $optInTimePeriod1=($optInTimePeriod1)|0;
 $optInTimePeriod2=($optInTimePeriod2)|0;
 $optInTimePeriod3=($optInTimePeriod3)|0;
 var $1=0,$optInTimePeriod1_off=0,$3=0,$_08=0,$5=0,$optInTimePeriod2_off=0,$7=0,$_07=0,$9=0,$optInTimePeriod3_off=0,$11=0,$_06=0,$13=0,$14=0,$15=0,$__06=0,$16=0,$17=0,$_0=0,label=0;

 $1=($optInTimePeriod1|0)==-2147483648;
 do {
  if ($1) {
   $_08=7;
  } else {
   $optInTimePeriod1_off=((($optInTimePeriod1)-(1))|0);
   $3=($optInTimePeriod1_off>>>0)>((99999)>>>0);
   if ($3) {
    $_0=-1;
   } else {
    $_08=$optInTimePeriod1;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $5=($optInTimePeriod2|0)==-2147483648;
 do {
  if ($5) {
   $_07=14;
  } else {
   $optInTimePeriod2_off=((($optInTimePeriod2)-(1))|0);
   $7=($optInTimePeriod2_off>>>0)>((99999)>>>0);
   if ($7) {
    $_0=-1;
   } else {
    $_07=$optInTimePeriod2;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $9=($optInTimePeriod3|0)==-2147483648;
 do {
  if ($9) {
   $_06=28;
  } else {
   $optInTimePeriod3_off=((($optInTimePeriod3)-(1))|0);
   $11=($optInTimePeriod3_off>>>0)>((99999)>>>0);
   if ($11) {
    $_0=-1;
   } else {
    $_06=$optInTimePeriod3;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $13=($_08|0)>($_07|0);
 $14=($13?$_08:$_07);
 $15=($14|0)>($_06|0);
 $__06=($15?$14:$_06);
 $16=((_TA_SMA_Lookback($__06))|0);
 $17=((($16)+(1))|0);
 $_0=$17;

 return (($_0)|0);
}


function _TA_ULTOSC($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInTimePeriod1,$optInTimePeriod2,$optInTimePeriod3,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod1=($optInTimePeriod1)|0;
 $optInTimePeriod2=($optInTimePeriod2)|0;
 $optInTimePeriod3=($optInTimePeriod3)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $usedFlag=0,$periods=0,$sortedPeriods=0,$1=0,$3=0,$4=0,$or_cond20=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInTimePeriod1_off=0,$12=0,$_017=0,$14=0,$optInTimePeriod2_off=0,$16=0,$_018=0;
 var $18=0,$optInTimePeriod3_off=0,$20=0,$_019=0,$22=0,$24=0,$25=0,$26=0,$27=0,$28=0,$29=0,$30=0,$31=0,$32=0,$34=0,$35=0,$36=0,$_longestPeriod_0=0,$longestPeriod_1=0,$38=0;
 var $39=0,$40=0,$42=0,$43=0,$44=0,$i_149=0,$b1Total_048=.0,$a1Total_047=.0,$45=0,$46=.0,$47=0,$48=.0,$49=0,$50=0,$51=.0,$52=0,$53=.0,$54=0,$55=.0,$56=.0;
 var $57=.0,$58=.0,$59=.0,$60=0,$trueRange_0=.0,$61=.0,$62=.0,$63=0,$trueRange_1=.0,$64=.0,$65=.0,$66=0,$67=0,$b1Total_0_lcssa=.0,$a1Total_0_lcssa=.0,$68=0,$69=0,$70=0,$i_241=0,$b2Total_040=.0;
 var $a2Total_039=.0,$71=0,$72=.0,$73=0,$74=.0,$75=0,$76=0,$77=.0,$78=0,$79=.0,$80=0,$81=.0,$82=.0,$83=.0,$84=.0,$85=.0,$86=0,$trueRange_2=.0,$87=.0,$88=.0;
 var $89=0,$trueRange_3=.0,$90=.0,$91=.0,$92=0,$93=0,$b2Total_0_lcssa=.0,$a2Total_0_lcssa=.0,$94=0,$95=0,$96=0,$b3Total_0_lcssa=.0,$a3Total_0_lcssa=.0,$97=0,$98=0,$smax=0,$99=0,$smax60=0,$100=0,$smax61=0;
 var $i_334=0,$b3Total_033=.0,$a3Total_032=.0,$101=0,$102=.0,$103=0,$104=.0,$105=0,$106=0,$107=.0,$108=0,$109=.0,$110=0,$111=.0,$112=.0,$113=.0,$114=.0,$115=.0,$116=0,$trueRange_4=.0;
 var $117=.0,$118=.0,$119=0,$trueRange_5=.0,$120=.0,$121=.0,$122=0,$123=0,$trailingIdx3_031=0,$trailingIdx2_030=0,$trailingIdx1_029=0,$outIdx_028=0,$today_027=0,$b3Total_126=.0,$b2Total_125=.0,$b1Total_124=.0,$a3Total_123=.0,$a2Total_122=.0,$a1Total_121=.0,$125=0;
 var $126=.0,$127=0,$128=.0,$129=0,$130=0,$131=.0,$132=0,$133=.0,$134=0,$135=.0,$136=.0,$137=.0,$138=.0,$139=.0,$140=0,$trueRange_6=.0,$141=.0,$142=.0,$143=0,$trueRange_7=.0;
 var $144=.0,$145=.0,$146=.0,$147=.0,$148=.0,$149=.0,$150=0,$151=0,$or_cond11=0,$153=.0,$154=.0,$155=.0,$output_0=.0,$157=0,$158=0,$or_cond13=0,$160=.0,$161=.0,$162=.0,$output_1=.0;
 var $164=0,$165=0,$or_cond15=0,$167=.0,$168=.0,$output_2=.0,$170=0,$171=.0,$172=0,$173=.0,$174=0,$175=0,$176=.0,$177=0,$178=.0,$179=0,$180=.0,$181=.0,$182=.0,$183=.0;
 var $184=.0,$185=0,$trueRange_8=.0,$186=.0,$187=.0,$188=0,$trueRange_9=.0,$189=.0,$190=.0,$191=0,$192=.0,$193=0,$194=.0,$195=0,$196=0,$197=.0,$198=0,$199=.0,$200=0,$201=.0;
 var $202=.0,$203=.0,$204=.0,$205=.0,$206=0,$trueRange_10=.0,$207=.0,$208=.0,$209=0,$trueRange_11=.0,$210=.0,$211=.0,$212=0,$213=.0,$214=0,$215=.0,$216=0,$217=0,$218=.0,$219=0;
 var $220=.0,$221=0,$222=.0,$223=.0,$224=.0,$225=.0,$226=.0,$227=0,$trueRange_12=.0,$228=.0,$229=.0,$230=0,$trueRange_13=.0,$231=.0,$232=.0,$233=.0,$234=.0,$235=0,$236=0,$237=0;
 var $238=0,$239=0,$240=0,$241=0,$242=0,$243=0,$outIdx_0_lcssa=0,$_0=0,$247=0,$248=0,$249=0,$_longestPeriod_0_1=0,$j_0_longestIndex_0_1=0,$longestPeriod_1_1=0,$longestIndex_1_1=0,$251=0,$252=0,$253=0,$255=0,$256=0;
 var $257=0,$_longestPeriod_0_2=0,$j_0_longestIndex_0_2=0,$longestPeriod_1_2=0,$longestIndex_1_2=0,$259=0,$260=0,$261=0,$262=0,$263=0,$265=0,$266=0,$267=0,$_longestPeriod_0_167=0,$longestPeriod_1_168=0,$269=0,$270=0,$271=0,$273=0,$274=0;
 var $275=0,$_longestPeriod_0_1_1=0,$j_0_longestIndex_0_1_1=0,$longestPeriod_1_1_1=0,$longestIndex_1_1_1=0,$277=0,$278=0,$279=0,$281=0,$282=0,$283=0,$_longestPeriod_0_2_1=0,$j_0_longestIndex_0_2_1=0,$longestPeriod_1_2_1=0,$longestIndex_1_2_1=0,$285=0,$286=0,$287=0,$288=0,$289=0;
 var $291=0,$292=0,$293=0,$_longestPeriod_0_269=0,$longestPeriod_1_270=0,$295=0,$296=0,$297=0,$299=0,$300=0,$301=0,$_longestPeriod_0_1_2=0,$j_0_longestIndex_0_1_2=0,$longestPeriod_1_1_2=0,$longestIndex_1_1_2=0,$303=0,$304=0,$305=0,$307=0,$308=0;
 var $309=0,$_longestPeriod_0_2_2=0,$j_0_longestIndex_0_2_2=0,$longestPeriod_1_2_2=0,$longestIndex_1_2_2=0,$311=0,$312=0,$313=0,$314=0,$315=0,$316=0,$317=0,$318=0,$_startIdx=0,$319=0,label=0;
 var sp=0;sp=STACKTOP;STACKTOP=(STACKTOP+48)|0;
 $usedFlag=((sp)|0);
 $periods=(((sp)+(16))|0);
 $sortedPeriods=(((sp)+(32))|0);
 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  STACKTOP=sp;return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond20=$3|$4;
 if ($or_cond20) {
  $_0=13;

  STACKTOP=sp;return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 $10=($optInTimePeriod1|0)==-2147483648;
 do {
  if ($10) {
   $_017=7;
  } else {
   $optInTimePeriod1_off=((($optInTimePeriod1)-(1))|0);
   $12=($optInTimePeriod1_off>>>0)>((99999)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_017=$optInTimePeriod1;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $14=($optInTimePeriod2|0)==-2147483648;
 do {
  if ($14) {
   $_018=14;
  } else {
   $optInTimePeriod2_off=((($optInTimePeriod2)-(1))|0);
   $16=($optInTimePeriod2_off>>>0)>((99999)>>>0);
   if ($16) {
    $_0=2;
   } else {
    $_018=$optInTimePeriod2;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $18=($optInTimePeriod3|0)==-2147483648;
 do {
  if ($18) {
   $_019=28;
  } else {
   $optInTimePeriod3_off=((($optInTimePeriod3)-(1))|0);
   $20=($optInTimePeriod3_off>>>0)>((99999)>>>0);
   if ($20) {
    $_0=2;
   } else {
    $_019=$optInTimePeriod3;
    break;
   }

   STACKTOP=sp;return (($_0)|0);
  }
 } while(0);

 $22=($outReal|0)==0;
 if ($22) {
  $_0=2;

  STACKTOP=sp;return (($_0)|0);
 }
 HEAP32[(($outBegIdx)>>2)]=0;
 HEAP32[(($outNBElement)>>2)]=0;
 $24=(($periods)|0);
 HEAP32[(($24)>>2)]=$_017;
 $25=(($periods+4)|0);
 HEAP32[(($25)>>2)]=$_018;
 $26=(($periods+8)|0);
 HEAP32[(($26)>>2)]=$_019;
 $27=(($usedFlag)|0);
 HEAP32[(($27)>>2)]=0;
 $28=(($usedFlag+4)|0);
 HEAP32[(($28)>>2)]=0;
 $29=(($usedFlag+8)|0);
 HEAP32[(($29)>>2)]=0;
 $30=(($usedFlag)|0);
 $31=((HEAP32[(($30)>>2)])|0);
 $32=($31|0)==0;
 if ($32) {
  $34=(($periods)|0);
  $35=((HEAP32[(($34)>>2)])|0);
  $36=($35|0)>0;
  $_longestPeriod_0=($36?$35:0);
  $longestPeriod_1=$_longestPeriod_0;
 } else {
  $longestPeriod_1=0;
 }

 $38=(($usedFlag+4)|0);
 $39=((HEAP32[(($38)>>2)])|0);
 $40=($39|0)==0;
 if ($40) {
  $247=(($periods+4)|0);
  $248=((HEAP32[(($247)>>2)])|0);
  $249=($248|0)>($longestPeriod_1|0);
  $_longestPeriod_0_1=($249?$248:$longestPeriod_1);
  $j_0_longestIndex_0_1=($249&1);
  $longestIndex_1_1=$j_0_longestIndex_0_1;$longestPeriod_1_1=$_longestPeriod_0_1;
 } else {
  $longestIndex_1_1=0;$longestPeriod_1_1=$longestPeriod_1;
 }


 $251=(($usedFlag+8)|0);
 $252=((HEAP32[(($251)>>2)])|0);
 $253=($252|0)==0;
 if ($253) {
  $255=(($periods+8)|0);
  $256=((HEAP32[(($255)>>2)])|0);
  $257=($256|0)>($longestPeriod_1_1|0);
  $_longestPeriod_0_2=($257?$256:$longestPeriod_1_1);
  $j_0_longestIndex_0_2=($257?2:$longestIndex_1_1);
  $longestIndex_1_2=$j_0_longestIndex_0_2;$longestPeriod_1_2=$_longestPeriod_0_2;
 } else {
  $longestIndex_1_2=$longestIndex_1_1;$longestPeriod_1_2=$longestPeriod_1_1;
 }


 $259=(($usedFlag+($longestIndex_1_2<<2))|0);
 HEAP32[(($259)>>2)]=1;
 $260=(($sortedPeriods)|0);
 HEAP32[(($260)>>2)]=$longestPeriod_1_2;
 $261=(($usedFlag)|0);
 $262=((HEAP32[(($261)>>2)])|0);
 $263=($262|0)==0;
 if ($263) {
  $265=(($periods)|0);
  $266=((HEAP32[(($265)>>2)])|0);
  $267=($266|0)>0;
  $_longestPeriod_0_167=($267?$266:0);
  $longestPeriod_1_168=$_longestPeriod_0_167;
 } else {
  $longestPeriod_1_168=0;
 }

 $269=(($usedFlag+4)|0);
 $270=((HEAP32[(($269)>>2)])|0);
 $271=($270|0)==0;
 if ($271) {
  $273=(($periods+4)|0);
  $274=((HEAP32[(($273)>>2)])|0);
  $275=($274|0)>($longestPeriod_1_168|0);
  $_longestPeriod_0_1_1=($275?$274:$longestPeriod_1_168);
  $j_0_longestIndex_0_1_1=($275&1);
  $longestIndex_1_1_1=$j_0_longestIndex_0_1_1;$longestPeriod_1_1_1=$_longestPeriod_0_1_1;
 } else {
  $longestIndex_1_1_1=0;$longestPeriod_1_1_1=$longestPeriod_1_168;
 }


 $277=(($usedFlag+8)|0);
 $278=((HEAP32[(($277)>>2)])|0);
 $279=($278|0)==0;
 if ($279) {
  $281=(($periods+8)|0);
  $282=((HEAP32[(($281)>>2)])|0);
  $283=($282|0)>($longestPeriod_1_1_1|0);
  $_longestPeriod_0_2_1=($283?$282:$longestPeriod_1_1_1);
  $j_0_longestIndex_0_2_1=($283?2:$longestIndex_1_1_1);
  $longestIndex_1_2_1=$j_0_longestIndex_0_2_1;$longestPeriod_1_2_1=$_longestPeriod_0_2_1;
 } else {
  $longestIndex_1_2_1=$longestIndex_1_1_1;$longestPeriod_1_2_1=$longestPeriod_1_1_1;
 }


 $285=(($usedFlag+($longestIndex_1_2_1<<2))|0);
 HEAP32[(($285)>>2)]=1;
 $286=(($sortedPeriods+4)|0);
 HEAP32[(($286)>>2)]=$longestPeriod_1_2_1;
 $287=(($usedFlag)|0);
 $288=((HEAP32[(($287)>>2)])|0);
 $289=($288|0)==0;
 if ($289) {
  $291=(($periods)|0);
  $292=((HEAP32[(($291)>>2)])|0);
  $293=($292|0)>0;
  $_longestPeriod_0_269=($293?$292:0);
  $longestPeriod_1_270=$_longestPeriod_0_269;
 } else {
  $longestPeriod_1_270=0;
 }

 $295=(($usedFlag+4)|0);
 $296=((HEAP32[(($295)>>2)])|0);
 $297=($296|0)==0;
 if ($297) {
  $299=(($periods+4)|0);
  $300=((HEAP32[(($299)>>2)])|0);
  $301=($300|0)>($longestPeriod_1_270|0);
  $_longestPeriod_0_1_2=($301?$300:$longestPeriod_1_270);
  $j_0_longestIndex_0_1_2=($301&1);
  $longestIndex_1_1_2=$j_0_longestIndex_0_1_2;$longestPeriod_1_1_2=$_longestPeriod_0_1_2;
 } else {
  $longestIndex_1_1_2=0;$longestPeriod_1_1_2=$longestPeriod_1_270;
 }


 $303=(($usedFlag+8)|0);
 $304=((HEAP32[(($303)>>2)])|0);
 $305=($304|0)==0;
 if ($305) {
  $307=(($periods+8)|0);
  $308=((HEAP32[(($307)>>2)])|0);
  $309=($308|0)>($longestPeriod_1_1_2|0);
  $_longestPeriod_0_2_2=($309?$308:$longestPeriod_1_1_2);
  $j_0_longestIndex_0_2_2=($309?2:$longestIndex_1_1_2);
  $longestIndex_1_2_2=$j_0_longestIndex_0_2_2;$longestPeriod_1_2_2=$_longestPeriod_0_2_2;
 } else {
  $longestIndex_1_2_2=$longestIndex_1_1_2;$longestPeriod_1_2_2=$longestPeriod_1_1_2;
 }


 $311=(($usedFlag+($longestIndex_1_2_2<<2))|0);
 HEAP32[(($311)>>2)]=1;
 $312=(($sortedPeriods+8)|0);
 HEAP32[(($312)>>2)]=$longestPeriod_1_2_2;
 $313=(($sortedPeriods+4)|0);
 $314=((HEAP32[(($313)>>2)])|0);
 $315=(($sortedPeriods)|0);
 $316=((HEAP32[(($315)>>2)])|0);
 $317=((_TA_ULTOSC_Lookback($longestPeriod_1_2_2,$314,$316))|0);
 $318=($317|0)>($startIdx|0);
 $_startIdx=($318?$317:$startIdx);
 $319=($_startIdx|0)>($endIdx|0);
 if ($319) {
  $_0=0;

  STACKTOP=sp;return (($_0)|0);
 }
 $42=((($_startIdx)-($longestPeriod_1_2_2))|0);
 $43=((($42)+(1))|0);
 $44=($43|0)<($_startIdx|0);
 if ($44) {
  $a1Total_047=0.0;$b1Total_048=0.0;$i_149=$43;
  while(1) {



   $45=(($inLow+($i_149<<3))|0);
   $46=(+(HEAPF64[(($45)>>3)]));
   $47=(($inHigh+($i_149<<3))|0);
   $48=(+(HEAPF64[(($47)>>3)]));
   $49=((($i_149)-(1))|0);
   $50=(($inClose+($49<<3))|0);
   $51=(+(HEAPF64[(($50)>>3)]));
   $52=$46<$51;
   $53=($52?$46:$51);
   $54=(($inClose+($i_149<<3))|0);
   $55=(+(HEAPF64[(($54)>>3)]));
   $56=($55)-($53);
   $57=($48)-($46);
   $58=($51)-($48);
   $59=(+(Math_abs((+($58)))));
   $60=$59>$57;
   $trueRange_0=($60?$59:$57);
   $61=($51)-($46);
   $62=(+(Math_abs((+($61)))));
   $63=$62>$trueRange_0;
   $trueRange_1=($63?$62:$trueRange_0);
   $64=($a1Total_047)+($56);
   $65=($b1Total_048)+($trueRange_1);
   $66=((($i_149)+(1))|0);
   $67=($66|0)<($_startIdx|0);
   if ($67) {
    $a1Total_047=$64;$b1Total_048=$65;$i_149=$66;
   } else {
    $a1Total_0_lcssa=$64;$b1Total_0_lcssa=$65;
    break;
   }
  }
 } else {
  $a1Total_0_lcssa=0.0;$b1Total_0_lcssa=0.0;
 }


 $68=((($_startIdx)-($314))|0);
 $69=((($68)+(1))|0);
 $70=($69|0)<($_startIdx|0);
 if ($70) {
  $a2Total_039=0.0;$b2Total_040=0.0;$i_241=$69;
  while(1) {



   $71=(($inLow+($i_241<<3))|0);
   $72=(+(HEAPF64[(($71)>>3)]));
   $73=(($inHigh+($i_241<<3))|0);
   $74=(+(HEAPF64[(($73)>>3)]));
   $75=((($i_241)-(1))|0);
   $76=(($inClose+($75<<3))|0);
   $77=(+(HEAPF64[(($76)>>3)]));
   $78=$72<$77;
   $79=($78?$72:$77);
   $80=(($inClose+($i_241<<3))|0);
   $81=(+(HEAPF64[(($80)>>3)]));
   $82=($81)-($79);
   $83=($74)-($72);
   $84=($77)-($74);
   $85=(+(Math_abs((+($84)))));
   $86=$85>$83;
   $trueRange_2=($86?$85:$83);
   $87=($77)-($72);
   $88=(+(Math_abs((+($87)))));
   $89=$88>$trueRange_2;
   $trueRange_3=($89?$88:$trueRange_2);
   $90=($a2Total_039)+($82);
   $91=($b2Total_040)+($trueRange_3);
   $92=((($i_241)+(1))|0);
   $93=($92|0)<($_startIdx|0);
   if ($93) {
    $a2Total_039=$90;$b2Total_040=$91;$i_241=$92;
   } else {
    $a2Total_0_lcssa=$90;$b2Total_0_lcssa=$91;
    break;
   }
  }
 } else {
  $a2Total_0_lcssa=0.0;$b2Total_0_lcssa=0.0;
 }


 $94=((($_startIdx)-($316))|0);
 $95=((($94)+(1))|0);
 $96=($95|0)<($_startIdx|0);
 if ($96) {
  $a3Total_032=0.0;$b3Total_033=0.0;$i_334=$95;
  while(1) {



   $101=(($inLow+($i_334<<3))|0);
   $102=(+(HEAPF64[(($101)>>3)]));
   $103=(($inHigh+($i_334<<3))|0);
   $104=(+(HEAPF64[(($103)>>3)]));
   $105=((($i_334)-(1))|0);
   $106=(($inClose+($105<<3))|0);
   $107=(+(HEAPF64[(($106)>>3)]));
   $108=$102<$107;
   $109=($108?$102:$107);
   $110=(($inClose+($i_334<<3))|0);
   $111=(+(HEAPF64[(($110)>>3)]));
   $112=($111)-($109);
   $113=($104)-($102);
   $114=($107)-($104);
   $115=(+(Math_abs((+($114)))));
   $116=$115>$113;
   $trueRange_4=($116?$115:$113);
   $117=($107)-($102);
   $118=(+(Math_abs((+($117)))));
   $119=$118>$trueRange_4;
   $trueRange_5=($119?$118:$trueRange_4);
   $120=($a3Total_032)+($112);
   $121=($b3Total_033)+($trueRange_5);
   $122=((($i_334)+(1))|0);
   $123=($122|0)<($_startIdx|0);
   if ($123) {
    $a3Total_032=$120;$b3Total_033=$121;$i_334=$122;
   } else {
    $a3Total_0_lcssa=$120;$b3Total_0_lcssa=$121;
    break;
   }
  }
 } else {
  $a3Total_0_lcssa=0.0;$b3Total_0_lcssa=0.0;
 }


 $97=($_startIdx|0)>($endIdx|0);
 if ($97) {
  $outIdx_0_lcssa=0;
 } else {
  $98=($317|0)>($endIdx|0);
  $smax=($98?$317:$endIdx);
  $99=($smax|0)>($startIdx|0);
  $smax60=($99?$smax:$startIdx);
  $100=($317|0)>($startIdx|0);
  $smax61=($100?$317:$startIdx);
  $a1Total_121=$a1Total_0_lcssa;$a2Total_122=$a2Total_0_lcssa;$a3Total_123=$a3Total_0_lcssa;$b1Total_124=$b1Total_0_lcssa;$b2Total_125=$b2Total_0_lcssa;$b3Total_126=$b3Total_0_lcssa;$today_027=$_startIdx;$outIdx_028=0;$trailingIdx1_029=$43;$trailingIdx2_030=$69;$trailingIdx3_031=$95;
  while(1) {











   $125=(($inLow+($today_027<<3))|0);
   $126=(+(HEAPF64[(($125)>>3)]));
   $127=(($inHigh+($today_027<<3))|0);
   $128=(+(HEAPF64[(($127)>>3)]));
   $129=((($today_027)-(1))|0);
   $130=(($inClose+($129<<3))|0);
   $131=(+(HEAPF64[(($130)>>3)]));
   $132=$126<$131;
   $133=($132?$126:$131);
   $134=(($inClose+($today_027<<3))|0);
   $135=(+(HEAPF64[(($134)>>3)]));
   $136=($135)-($133);
   $137=($128)-($126);
   $138=($131)-($128);
   $139=(+(Math_abs((+($138)))));
   $140=$139>$137;
   $trueRange_6=($140?$139:$137);
   $141=($131)-($126);
   $142=(+(Math_abs((+($141)))));
   $143=$142>$trueRange_6;
   $trueRange_7=($143?$142:$trueRange_6);
   $144=($a1Total_121)+($136);
   $145=($a2Total_122)+($136);
   $146=($a3Total_123)+($136);
   $147=($b1Total_124)+($trueRange_7);
   $148=($b2Total_125)+($trueRange_7);
   $149=($b3Total_126)+($trueRange_7);
   $150=$147>(-1.0e-14);
   $151=$147<(1.0e-14);
   $or_cond11=$150&$151;
   if ($or_cond11) {
    $output_0=0.0;
   } else {
    $153=($144)/($147);
    $154=($153)*((4.0));
    $155=($154)+((0.0));
    $output_0=$155;
   }

   $157=$148>(-1.0e-14);
   $158=$148<(1.0e-14);
   $or_cond13=$157&$158;
   if ($or_cond13) {
    $output_1=$output_0;
   } else {
    $160=($145)/($148);
    $161=($160)*((2.0));
    $162=($output_0)+($161);
    $output_1=$162;
   }

   $164=$149>(-1.0e-14);
   $165=$149<(1.0e-14);
   $or_cond15=$164&$165;
   if ($or_cond15) {
    $output_2=$output_1;
   } else {
    $167=($146)/($149);
    $168=($output_1)+($167);
    $output_2=$168;
   }

   $170=(($inLow+($trailingIdx1_029<<3))|0);
   $171=(+(HEAPF64[(($170)>>3)]));
   $172=(($inHigh+($trailingIdx1_029<<3))|0);
   $173=(+(HEAPF64[(($172)>>3)]));
   $174=((($trailingIdx1_029)-(1))|0);
   $175=(($inClose+($174<<3))|0);
   $176=(+(HEAPF64[(($175)>>3)]));
   $177=$171<$176;
   $178=($177?$171:$176);
   $179=(($inClose+($trailingIdx1_029<<3))|0);
   $180=(+(HEAPF64[(($179)>>3)]));
   $181=($180)-($178);
   $182=($173)-($171);
   $183=($176)-($173);
   $184=(+(Math_abs((+($183)))));
   $185=$184>$182;
   $trueRange_8=($185?$184:$182);
   $186=($176)-($171);
   $187=(+(Math_abs((+($186)))));
   $188=$187>$trueRange_8;
   $trueRange_9=($188?$187:$trueRange_8);
   $189=($144)-($181);
   $190=($147)-($trueRange_9);
   $191=(($inLow+($trailingIdx2_030<<3))|0);
   $192=(+(HEAPF64[(($191)>>3)]));
   $193=(($inHigh+($trailingIdx2_030<<3))|0);
   $194=(+(HEAPF64[(($193)>>3)]));
   $195=((($trailingIdx2_030)-(1))|0);
   $196=(($inClose+($195<<3))|0);
   $197=(+(HEAPF64[(($196)>>3)]));
   $198=$192<$197;
   $199=($198?$192:$197);
   $200=(($inClose+($trailingIdx2_030<<3))|0);
   $201=(+(HEAPF64[(($200)>>3)]));
   $202=($201)-($199);
   $203=($194)-($192);
   $204=($197)-($194);
   $205=(+(Math_abs((+($204)))));
   $206=$205>$203;
   $trueRange_10=($206?$205:$203);
   $207=($197)-($192);
   $208=(+(Math_abs((+($207)))));
   $209=$208>$trueRange_10;
   $trueRange_11=($209?$208:$trueRange_10);
   $210=($145)-($202);
   $211=($148)-($trueRange_11);
   $212=(($inLow+($trailingIdx3_031<<3))|0);
   $213=(+(HEAPF64[(($212)>>3)]));
   $214=(($inHigh+($trailingIdx3_031<<3))|0);
   $215=(+(HEAPF64[(($214)>>3)]));
   $216=((($trailingIdx3_031)-(1))|0);
   $217=(($inClose+($216<<3))|0);
   $218=(+(HEAPF64[(($217)>>3)]));
   $219=$213<$218;
   $220=($219?$213:$218);
   $221=(($inClose+($trailingIdx3_031<<3))|0);
   $222=(+(HEAPF64[(($221)>>3)]));
   $223=($222)-($220);
   $224=($215)-($213);
   $225=($218)-($215);
   $226=(+(Math_abs((+($225)))));
   $227=$226>$224;
   $trueRange_12=($227?$226:$224);
   $228=($218)-($213);
   $229=(+(Math_abs((+($228)))));
   $230=$229>$trueRange_12;
   $trueRange_13=($230?$229:$trueRange_12);
   $231=($146)-($223);
   $232=($149)-($trueRange_13);
   $233=($output_2)/((7.0));
   $234=($233)*((100.0));
   $235=(($outReal+($outIdx_028<<3))|0);
   HEAPF64[(($235)>>3)]=$234;
   $236=((($outIdx_028)+(1))|0);
   $237=((($today_027)+(1))|0);
   $238=((($trailingIdx1_029)+(1))|0);
   $239=((($trailingIdx2_030)+(1))|0);
   $240=((($trailingIdx3_031)+(1))|0);
   $241=($today_027|0)<($endIdx|0);
   if ($241) {
    $a1Total_121=$189;$a2Total_122=$210;$a3Total_123=$231;$b1Total_124=$190;$b2Total_125=$211;$b3Total_126=$232;$today_027=$237;$outIdx_028=$236;$trailingIdx1_029=$238;$trailingIdx2_030=$239;$trailingIdx3_031=$240;
   } else {
    break;
   }
  }
  $242=((($smax60)+(1))|0);
  $243=((($242)-($smax61))|0);
  $outIdx_0_lcssa=$243;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 STACKTOP=sp;return (($_0)|0);
}


function _TA_VAR($startIdx,$endIdx,$inReal,$optInTimePeriod,$optInNbDev,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $optInNbDev=+($optInNbDev);
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_04=0,$12=0,$14=0,$15=0,$or_cond3=0,$16=0,$or_cond5=0,$_old=0,$19=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 do {
  if ($1) {
   $_0=12;
  } else {
   $3=($endIdx|0)<0;
   $4=($endIdx|0)<($startIdx|0);
   $or_cond=$3|$4;
   if ($or_cond) {
    $_0=13;
    break;
   }
   $6=($inReal|0)==0;
   if ($6) {
    $_0=2;
    break;
   }
   $8=($optInTimePeriod|0)==-2147483648;
   if ($8) {
    $_04=5;
   } else {
    $optInTimePeriod_off=((($optInTimePeriod)-(1))|0);
    $10=($optInTimePeriod_off>>>0)>((99999)>>>0);
    if ($10) {
     $_0=2;
     break;
    } else {
     $_04=$optInTimePeriod;
    }
   }

   $12=$optInNbDev==(-4.0e+37);
   if ($12) {
    $_old=($outReal|0)==0;
    if ($_old) {
     $_0=2;
     break;
    }
   } else {
    $14=$optInNbDev<(-3.0e+37);
    $15=$optInNbDev>(3.0e+37);
    $or_cond3=$14|$15;
    $16=($outReal|0)==0;
    $or_cond5=$or_cond3|$16;
    if ($or_cond5) {
     $_0=2;
     break;
    }
   }
   $19=((_TA_INT_VAR($startIdx,$endIdx,$inReal,$_04,$outBegIdx,$outNBElement,$outReal))|0);
   $_0=0;
  }
 } while(0);

 return (($_0)|0);
}


function _TA_INT_VAR($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$2=0,$_startIdx=0,$3=0,$6=0,$7=0,$8=0,$or_cond=0,$9=0,$10=0,$smax10=0,$11=0,$12=0,$13=0,$smax11=0,$14=0,$smax12=0,$periodTotal1_2_ph=.0,$periodTotal2_2_ph=.0,$i_2_ph=0;
 var $15=.0,$16=0,$smax=0,$17=0,$i_05=0,$periodTotal2_04=.0,$periodTotal1_03=.0,$19=0,$20=0,$21=.0,$22=.0,$23=.0,$24=.0,$25=0,$periodTotal1_2=.0,$periodTotal2_2=.0,$i_2=0,$outIdx_0=0,$trailingIdx_0=0,$27=0;
 var $28=0,$29=.0,$30=.0,$31=.0,$32=.0,$33=.0,$34=.0,$35=0,$36=0,$37=.0,$38=.0,$39=.0,$40=.0,$41=.0,$42=.0,$43=0,$44=0,$45=0,$47=0,label=0;

 $1=((($optInTimePeriod)-(1))|0);
 $2=($1|0)>($startIdx|0);
 $_startIdx=($2?$1:$startIdx);
 $3=($_startIdx|0)>($endIdx|0);
 if ($3) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  return ((0)|0);
 }
 $6=((($_startIdx)-($1))|0);
 $7=($optInTimePeriod|0)>1;
 $8=($1|0)>0;
 $or_cond=$7&$8;
 if ($or_cond) {
  $9=((($optInTimePeriod)-(1))|0);
  $10=($9|0)<($startIdx|0);
  $smax10=($10?$startIdx:$9);
  $11=((($smax10)+(2))|0);
  $12=((($11)-($optInTimePeriod))|0);
  $13=($12|0)<($startIdx|0);
  $smax11=($13?$startIdx:$12);
  $14=($smax11|0)>($9|0);
  $periodTotal1_03=0.0;$periodTotal2_04=0.0;$i_05=$6;
  while(1) {



   $19=((($i_05)+(1))|0);
   $20=(($inReal+($i_05<<3))|0);
   $21=(+(HEAPF64[(($20)>>3)]));
   $22=($periodTotal1_03)+($21);
   $23=($21)*($21);
   $24=($periodTotal2_04)+($23);
   $25=($19|0)<($_startIdx|0);
   if ($25) {
    $periodTotal1_03=$22;$periodTotal2_04=$24;$i_05=$19;
   } else {
    break;
   }
  }
  $smax12=($14?$smax11:$9);
  $i_2_ph=$smax12;$periodTotal2_2_ph=$24;$periodTotal1_2_ph=$22;
 } else {
  $i_2_ph=$6;$periodTotal2_2_ph=0.0;$periodTotal1_2_ph=0.0;
 }



 $15=(+((($optInTimePeriod|0))|0));
 $16=($i_2_ph|0)>($endIdx|0);
 $smax=($16?$i_2_ph:$endIdx);
 $17=((($smax)+(1))|0);
 $trailingIdx_0=$6;$outIdx_0=0;$i_2=$i_2_ph;$periodTotal2_2=$periodTotal2_2_ph;$periodTotal1_2=$periodTotal1_2_ph;
 while(1) {





  $27=((($i_2)+(1))|0);
  $28=(($inReal+($i_2<<3))|0);
  $29=(+(HEAPF64[(($28)>>3)]));
  $30=($periodTotal1_2)+($29);
  $31=($29)*($29);
  $32=($periodTotal2_2)+($31);
  $33=($30)/($15);
  $34=($32)/($15);
  $35=((($trailingIdx_0)+(1))|0);
  $36=(($inReal+($trailingIdx_0<<3))|0);
  $37=(+(HEAPF64[(($36)>>3)]));
  $38=($30)-($37);
  $39=($37)*($37);
  $40=($32)-($39);
  $41=($33)*($33);
  $42=($34)-($41);
  $43=((($outIdx_0)+(1))|0);
  $44=(($outReal+($outIdx_0<<3))|0);
  HEAPF64[(($44)>>3)]=$42;
  $45=($i_2|0)<($endIdx|0);
  if ($45) {
   $trailingIdx_0=$35;$outIdx_0=$43;$i_2=$27;$periodTotal2_2=$40;$periodTotal1_2=$38;
  } else {
   break;
  }
 }
 $47=((($17)-($i_2_ph))|0);
 HEAP32[(($outNBElement)>>2)]=$47;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 return ((0)|0);
}


function _TA_WCLPRICE($startIdx,$endIdx,$inHigh,$inLow,$inClose,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond4=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$or_cond3_not=0,$9=0,$or_cond5=0,$10=0,$11=0,$smax=0,$12=0,$i_07=0,$outIdx_06=0,$14=0,$15=.0;
 var $16=0,$17=.0,$18=.0,$19=0,$20=.0,$21=.0,$22=.0,$23=.0,$24=0,$25=0,$26=0,$27=0,$28=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond4=$3|$4;
 if ($or_cond4) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 $or_cond3_not=$or_cond3^1;
 $9=($outReal|0)==0;
 $or_cond5=$9|$or_cond3_not;
 if ($or_cond5) {
  $_0=2;

  return (($_0)|0);
 }
 $10=($startIdx|0)>($endIdx|0);
 if ($10) {
  $outIdx_0_lcssa=0;
 } else {
  $11=($endIdx|0)>($startIdx|0);
  $smax=($11?$endIdx:$startIdx);
  $12=((($smax)+(1))|0);
  $outIdx_06=0;$i_07=$startIdx;
  while(1) {


   $14=(($inHigh+($i_07<<3))|0);
   $15=(+(HEAPF64[(($14)>>3)]));
   $16=(($inLow+($i_07<<3))|0);
   $17=(+(HEAPF64[(($16)>>3)]));
   $18=($15)+($17);
   $19=(($inClose+($i_07<<3))|0);
   $20=(+(HEAPF64[(($19)>>3)]));
   $21=($20)*((2.0));
   $22=($18)+($21);
   $23=($22)*((0.25));
   $24=((($outIdx_06)+(1))|0);
   $25=(($outReal+($outIdx_06<<3))|0);
   HEAPF64[(($25)>>3)]=$23;
   $26=((($i_07)+(1))|0);
   $27=($i_07|0)<($endIdx|0);
   if ($27) {
    $outIdx_06=$24;$i_07=$26;
   } else {
    break;
   }
  }
  $28=((($12)-($startIdx))|0);
  $outIdx_0_lcssa=$28;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_WILLR($startIdx,$endIdx,$inHigh,$inLow,$inClose,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inHigh=($inHigh)|0;
 $inLow=($inLow)|0;
 $inClose=($inClose)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond8=0,$6=0,$7=0,$or_cond=0,$8=0,$or_cond3=0,$10=0,$optInTimePeriod_off=0,$12=0,$_07=0,$14=0,$16=0,$17=0,$_startIdx=0,$18=0,$21=0,$22=0;
 var $23=0,$smax=0,$24=0,$25=0,$smax28=0,$26=0,$smax29=0,$today_021=0,$highestIdx_020=0,$lowestIdx_019=0,$trailingIdx_018=0,$outIdx_017=0,$diff_016=.0,$highest_015=.0,$lowest_014=.0,$28=0,$29=.0,$30=0,$32=0,$33=.0;
 var $lowest_1_ph=.0,$lowestIdx_1_ph=0,$i_0=0,$35=0,$36=0,$38=0,$39=.0,$40=0,$42=.0,$43=.0,$45=0,$47=.0,$48=.0,$lowest_2=.0,$diff_1=.0,$lowestIdx_2=0,$50=0,$51=.0,$52=0,$54=0;
 var $55=.0,$highest_1_ph=.0,$highestIdx_1_ph=0,$i_1=0,$57=0,$58=0,$60=0,$61=.0,$62=0,$64=.0,$65=.0,$67=0,$69=.0,$70=.0,$highest_2=.0,$diff_2=.0,$highestIdx_2=0,$72=0,$74=0,$75=.0;
 var $76=.0,$77=.0,$78=0,$80=0,$outIdx_1=0,$82=0,$83=0,$84=0,$85=0,$86=0,$outIdx_0_lcssa=0,$_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond8=$3|$4;
 if ($or_cond8) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inHigh|0)!=0;
 $7=($inLow|0)!=0;
 $or_cond=$6&$7;
 $8=($inClose|0)!=0;
 $or_cond3=$or_cond&$8;
 if (!($or_cond3)) {
  $_0=2;

  return (($_0)|0);
 }
 $10=($optInTimePeriod|0)==-2147483648;
 do {
  if ($10) {
   $_07=14;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $12=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($12) {
    $_0=2;
   } else {
    $_07=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $14=($outReal|0)==0;
 if ($14) {
  $_0=2;

  return (($_0)|0);
 }
 $16=((($_07)-(1))|0);
 $17=($16|0)>($startIdx|0);
 $_startIdx=($17?$16:$startIdx);
 $18=($_startIdx|0)>($endIdx|0);
 if ($18) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $21=($_startIdx|0)>($endIdx|0);
 if ($21) {
  $outIdx_0_lcssa=0;
 } else {
  $22=((($_startIdx)-($16))|0);
  $23=($endIdx|0)>($startIdx|0);
  $smax=($23?$endIdx:$startIdx);
  $24=((($_07)-(1))|0);
  $25=($smax|0)>($24|0);
  $smax28=($25?$smax:$24);
  $26=($24|0)<($startIdx|0);
  $smax29=($26?$startIdx:$24);
  $lowest_014=0.0;$highest_015=0.0;$diff_016=0.0;$outIdx_017=0;$trailingIdx_018=$22;$lowestIdx_019=-1;$highestIdx_020=-1;$today_021=$_startIdx;
  while(1) {








   $28=(($inLow+($today_021<<3))|0);
   $29=(+(HEAPF64[(($28)>>3)]));
   $30=($lowestIdx_019|0)<($trailingIdx_018|0);
   do {
    if ($30) {
     $32=(($inLow+($trailingIdx_018<<3))|0);
     $33=(+(HEAPF64[(($32)>>3)]));
     $lowestIdx_1_ph=$trailingIdx_018;$lowest_1_ph=$33;
     L27: while(1) {


      $i_0=$lowestIdx_1_ph;
      while(1) {

       $35=((($i_0)+(1))|0);
       $36=($i_0|0)<($today_021|0);
       if (!($36)) {
        break L27;
       }
       $38=(($inLow+($35<<3))|0);
       $39=(+(HEAPF64[(($38)>>3)]));
       $40=$39<$lowest_1_ph;
       if ($40) {
        $lowestIdx_1_ph=$35;$lowest_1_ph=$39;
        continue L27;
       } else {
        $i_0=$35;
       }
      }
     }
     $42=($highest_015)-($lowest_1_ph);
     $43=($42)/((-100.0));
     $lowestIdx_2=$lowestIdx_1_ph;$diff_1=$43;$lowest_2=$lowest_1_ph;
    } else {
     $45=$29>$lowest_014;
     if ($45) {
      $lowestIdx_2=$lowestIdx_019;$diff_1=$diff_016;$lowest_2=$lowest_014;
      break;
     }
     $47=($highest_015)-($29);
     $48=($47)/((-100.0));
     $lowestIdx_2=$today_021;$diff_1=$48;$lowest_2=$29;
    }
   } while(0);



   $50=(($inHigh+($today_021<<3))|0);
   $51=(+(HEAPF64[(($50)>>3)]));
   $52=($highestIdx_020|0)<($trailingIdx_018|0);
   do {
    if ($52) {
     $54=(($inHigh+($trailingIdx_018<<3))|0);
     $55=(+(HEAPF64[(($54)>>3)]));
     $highestIdx_1_ph=$trailingIdx_018;$highest_1_ph=$55;
     L40: while(1) {


      $i_1=$highestIdx_1_ph;
      while(1) {

       $57=((($i_1)+(1))|0);
       $58=($i_1|0)<($today_021|0);
       if (!($58)) {
        break L40;
       }
       $60=(($inHigh+($57<<3))|0);
       $61=(+(HEAPF64[(($60)>>3)]));
       $62=$61>$highest_1_ph;
       if ($62) {
        $highestIdx_1_ph=$57;$highest_1_ph=$61;
        continue L40;
       } else {
        $i_1=$57;
       }
      }
     }
     $64=($highest_1_ph)-($lowest_2);
     $65=($64)/((-100.0));
     $highestIdx_2=$highestIdx_1_ph;$diff_2=$65;$highest_2=$highest_1_ph;
    } else {
     $67=$51<$highest_015;
     if ($67) {
      $highestIdx_2=$highestIdx_020;$diff_2=$diff_1;$highest_2=$highest_015;
      break;
     }
     $69=($51)-($lowest_2);
     $70=($69)/((-100.0));
     $highestIdx_2=$today_021;$diff_2=$70;$highest_2=$51;
    }
   } while(0);



   $72=$diff_2!=(0.0);
   if ($72) {
    $74=(($inClose+($today_021<<3))|0);
    $75=(+(HEAPF64[(($74)>>3)]));
    $76=($highest_2)-($75);
    $77=($76)/($diff_2);
    $78=(($outReal+($outIdx_017<<3))|0);
    HEAPF64[(($78)>>3)]=$77;
   } else {
    $80=(($outReal+($outIdx_017<<3))|0);
    HEAPF64[(($80)>>3)]=0.0;
   }
   $outIdx_1=((($outIdx_017)+(1))|0);
   $82=((($trailingIdx_018)+(1))|0);
   $83=((($today_021)+(1))|0);
   $84=($today_021|0)<($endIdx|0);
   if ($84) {
    $lowest_014=$lowest_2;$highest_015=$highest_2;$diff_016=$diff_2;$outIdx_017=$outIdx_1;$trailingIdx_018=$82;$lowestIdx_019=$lowestIdx_2;$highestIdx_020=$highestIdx_2;$today_021=$83;
   } else {
    break;
   }
  }
  $85=((($smax28)+(1))|0);
  $86=((($85)-($smax29))|0);
  $outIdx_0_lcssa=$86;
 }

 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 $_0=0;

 return (($_0)|0);
}


function _TA_WMA_Lookback($optInTimePeriod){
 $optInTimePeriod=($optInTimePeriod)|0;
 var $1=0,$optInTimePeriod_off=0,$3=0,$_0=0,$5=0,$_02=0,label=0;

 $1=($optInTimePeriod|0)==-2147483648;
 do {
  if ($1) {
   $_0=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $3=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($3) {
    $_02=-1;
   } else {
    $_0=$optInTimePeriod;
    break;
   }

   return (($_02)|0);
  }
 } while(0);

 $5=((($_0)-(1))|0);
 $_02=$5;

 return (($_02)|0);
}


function _TA_WMA($startIdx,$endIdx,$inReal,$optInTimePeriod,$outBegIdx,$outNBElement,$outReal){
 $startIdx=($startIdx)|0;
 $endIdx=($endIdx)|0;
 $inReal=($inReal)|0;
 $optInTimePeriod=($optInTimePeriod)|0;
 $outBegIdx=($outBegIdx)|0;
 $outNBElement=($outNBElement)|0;
 $outReal=($outReal)|0;
 var $1=0,$3=0,$4=0,$or_cond=0,$6=0,$8=0,$optInTimePeriod_off=0,$10=0,$_03=0,$12=0,$14=0,$15=0,$_startIdx=0,$16=0,$19=0,$21=0,$22=0,$23=0,$24=0,$25=0;
 var $26=0,$28=0,$29=0,$30=0,$31=0,$32=0,$33=0,$34=0,$smax21=0,$35=0,$36=0,$37=0,$smax22=0,$38=0,$smax23=0,$periodSub_0_lcssa=.0,$periodSum_0_lcssa=.0,$inIdx_0_lcssa=0,$39=0,$40=.0;
 var $41=.0,$42=0,$smax=0,$43=0,$periodSub_013=.0,$periodSum_012=.0,$i_011=0,$inIdx_010=0,$45=0,$46=0,$47=.0,$48=.0,$49=.0,$50=.0,$51=.0,$52=0,$53=0,$trailingValue_09=.0,$periodSub_18=.0,$periodSum_17=.0;
 var $trailingIdx_06=0,$outIdx_05=0,$inIdx_14=0,$55=0,$56=0,$57=.0,$58=.0,$59=.0,$60=.0,$61=.0,$62=0,$63=0,$64=.0,$65=.0,$66=0,$67=0,$68=.0,$69=0,$70=0,$outIdx_0_lcssa=0;
 var $_0=0,label=0;

 $1=($startIdx|0)<0;
 if ($1) {
  $_0=12;

  return (($_0)|0);
 }
 $3=($endIdx|0)<0;
 $4=($endIdx|0)<($startIdx|0);
 $or_cond=$3|$4;
 if ($or_cond) {
  $_0=13;

  return (($_0)|0);
 }
 $6=($inReal|0)==0;
 if ($6) {
  $_0=2;

  return (($_0)|0);
 }
 $8=($optInTimePeriod|0)==-2147483648;
 do {
  if ($8) {
   $_03=30;
  } else {
   $optInTimePeriod_off=((($optInTimePeriod)-(2))|0);
   $10=($optInTimePeriod_off>>>0)>((99998)>>>0);
   if ($10) {
    $_0=2;
   } else {
    $_03=$optInTimePeriod;
    break;
   }

   return (($_0)|0);
  }
 } while(0);

 $12=($outReal|0)==0;
 if ($12) {
  $_0=2;

  return (($_0)|0);
 }
 $14=((($_03)-(1))|0);
 $15=($14|0)>($startIdx|0);
 $_startIdx=($15?$14:$startIdx);
 $16=($_startIdx|0)>($endIdx|0);
 if ($16) {
  HEAP32[(($outBegIdx)>>2)]=0;
  HEAP32[(($outNBElement)>>2)]=0;
  $_0=0;

  return (($_0)|0);
 }
 $19=($_03|0)==1;
 if ($19) {
  HEAP32[(($outBegIdx)>>2)]=$_startIdx;
  $21=((($endIdx)-($_startIdx))|0);
  $22=((($21)+(1))|0);
  HEAP32[(($outNBElement)>>2)]=$22;
  $23=$outReal;
  $24=(($inReal+($_startIdx<<3))|0);
  $25=$24;
  $26=$22<<3;
  ((_memmove((($23)|0),(($25)|0),(($26)|0)))|0);
  $_0=0;

  return (($_0)|0);
 }
 $28=((($_03)+(1))|0);
 $29=(Math_imul($28,$_03)|0);
 $30=$29>>1;
 $31=((($_startIdx)-($14))|0);
 $32=($14|0)>0;
 if ($32) {
  $33=((($_03)-(1))|0);
  $34=($33|0)<($startIdx|0);
  $smax21=($34?$startIdx:$33);
  $35=((($smax21)+(2))|0);
  $36=((($35)-($_03))|0);
  $37=($36|0)<($startIdx|0);
  $smax22=($37?$startIdx:$36);
  $38=($smax22|0)>($33|0);
  $inIdx_010=$31;$i_011=1;$periodSum_012=0.0;$periodSub_013=0.0;
  while(1) {




   $45=((($inIdx_010)+(1))|0);
   $46=(($inReal+($inIdx_010<<3))|0);
   $47=(+(HEAPF64[(($46)>>3)]));
   $48=($periodSub_013)+($47);
   $49=(+((($i_011|0))|0));
   $50=($49)*($47);
   $51=($periodSum_012)+($50);
   $52=((($i_011)+(1))|0);
   $53=($45|0)<($_startIdx|0);
   if ($53) {
    $inIdx_010=$45;$i_011=$52;$periodSum_012=$51;$periodSub_013=$48;
   } else {
    break;
   }
  }
  $smax23=($38?$smax22:$33);
  $inIdx_0_lcssa=$smax23;$periodSum_0_lcssa=$51;$periodSub_0_lcssa=$48;
 } else {
  $inIdx_0_lcssa=$31;$periodSum_0_lcssa=0.0;$periodSub_0_lcssa=0.0;
 }



 $39=($inIdx_0_lcssa|0)>($endIdx|0);
 if ($39) {
  $outIdx_0_lcssa=0;
 } else {
  $40=(+((($_03|0))|0));
  $41=(+((($30|0))|0));
  $42=($inIdx_0_lcssa|0)>($endIdx|0);
  $smax=($42?$inIdx_0_lcssa:$endIdx);
  $43=((($smax)+(1))|0);
  $inIdx_14=$inIdx_0_lcssa;$outIdx_05=0;$trailingIdx_06=$31;$periodSum_17=$periodSum_0_lcssa;$periodSub_18=$periodSub_0_lcssa;$trailingValue_09=0.0;
  while(1) {






   $55=((($inIdx_14)+(1))|0);
   $56=(($inReal+($inIdx_14<<3))|0);
   $57=(+(HEAPF64[(($56)>>3)]));
   $58=($periodSub_18)+($57);
   $59=($58)-($trailingValue_09);
   $60=($40)*($57);
   $61=($periodSum_17)+($60);
   $62=((($trailingIdx_06)+(1))|0);
   $63=(($inReal+($trailingIdx_06<<3))|0);
   $64=(+(HEAPF64[(($63)>>3)]));
   $65=($61)/($41);
   $66=((($outIdx_05)+(1))|0);
   $67=(($outReal+($outIdx_05<<3))|0);
   HEAPF64[(($67)>>3)]=$65;
   $68=($61)-($59);
   $69=($inIdx_14|0)<($endIdx|0);
   if ($69) {
    $inIdx_14=$55;$outIdx_05=$66;$trailingIdx_06=$62;$periodSum_17=$68;$periodSub_18=$59;$trailingValue_09=$64;
   } else {
    break;
   }
  }
  $70=((($43)-($inIdx_0_lcssa))|0);
  $outIdx_0_lcssa=$70;
 }

 HEAP32[(($outNBElement)>>2)]=$outIdx_0_lcssa;
 HEAP32[(($outBegIdx)>>2)]=$_startIdx;
 $_0=0;

 return (($_0)|0);
}


function _TA_Initialize(){
 var $1=0,$2=0,$3=0,$4=0,$5=0,label=0;

 $1=((HEAP32[((272)>>2)])|0);
 $2=$1;
 _memset((((($2)|0))|0), ((((0)|0))|0), ((((424)|0))|0))|0;
 $3=((HEAP32[((272)>>2)])|0);
 $4=(($3)|0);
 HEAP32[(($4)>>2)]=-1576816125;
 $5=((_TA_RestoreCandleDefaultSettings(11))|0);
 return ((0)|0);
}


function _TA_RestoreCandleDefaultSettings($settingType){
 $settingType=($settingType)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$21=0;
 var $22=0,$23=0,$24=0,$25=0,$26=0,$28=0,$29=0,$30=0,$31=0,$_0=0,label=0;

 $1=($settingType>>>0)>((11)>>>0);
 if ($1) {
  $_0=2;

  return (($_0)|0);
 }
 $3=($settingType|0)==11;
 $4=((HEAP32[((272)>>2)])|0);
 if ($3) {
  $5=(($4+160)|0);
  $6=$5;
  HEAP32[(($6)>>2)]=((HEAP32[((8)>>2)])|0);HEAP32[((($6)+(4))>>2)]=((HEAP32[((12)>>2)])|0);HEAP32[((($6)+(8))>>2)]=((HEAP32[((16)>>2)])|0);HEAP32[((($6)+(12))>>2)]=((HEAP32[((20)>>2)])|0);HEAP32[((($6)+(16))>>2)]=((HEAP32[((24)>>2)])|0);HEAP32[((($6)+(20))>>2)]=((HEAP32[((28)>>2)])|0);
  $7=(($4+184)|0);
  $8=$7;
  HEAP32[(($8)>>2)]=((HEAP32[((32)>>2)])|0);HEAP32[((($8)+(4))>>2)]=((HEAP32[((36)>>2)])|0);HEAP32[((($8)+(8))>>2)]=((HEAP32[((40)>>2)])|0);HEAP32[((($8)+(12))>>2)]=((HEAP32[((44)>>2)])|0);HEAP32[((($8)+(16))>>2)]=((HEAP32[((48)>>2)])|0);HEAP32[((($8)+(20))>>2)]=((HEAP32[((52)>>2)])|0);
  $9=(($4+208)|0);
  $10=$9;
  HEAP32[(($10)>>2)]=((HEAP32[((56)>>2)])|0);HEAP32[((($10)+(4))>>2)]=((HEAP32[((60)>>2)])|0);HEAP32[((($10)+(8))>>2)]=((HEAP32[((64)>>2)])|0);HEAP32[((($10)+(12))>>2)]=((HEAP32[((68)>>2)])|0);HEAP32[((($10)+(16))>>2)]=((HEAP32[((72)>>2)])|0);HEAP32[((($10)+(20))>>2)]=((HEAP32[((76)>>2)])|0);
  $11=(($4+232)|0);
  $12=$11;
  HEAP32[(($12)>>2)]=((HEAP32[((80)>>2)])|0);HEAP32[((($12)+(4))>>2)]=((HEAP32[((84)>>2)])|0);HEAP32[((($12)+(8))>>2)]=((HEAP32[((88)>>2)])|0);HEAP32[((($12)+(12))>>2)]=((HEAP32[((92)>>2)])|0);HEAP32[((($12)+(16))>>2)]=((HEAP32[((96)>>2)])|0);HEAP32[((($12)+(20))>>2)]=((HEAP32[((100)>>2)])|0);
  $13=(($4+256)|0);
  $14=$13;
  HEAP32[(($14)>>2)]=((HEAP32[((104)>>2)])|0);HEAP32[((($14)+(4))>>2)]=((HEAP32[((108)>>2)])|0);HEAP32[((($14)+(8))>>2)]=((HEAP32[((112)>>2)])|0);HEAP32[((($14)+(12))>>2)]=((HEAP32[((116)>>2)])|0);HEAP32[((($14)+(16))>>2)]=((HEAP32[((120)>>2)])|0);HEAP32[((($14)+(20))>>2)]=((HEAP32[((124)>>2)])|0);
  $15=(($4+280)|0);
  $16=$15;
  HEAP32[(($16)>>2)]=((HEAP32[((128)>>2)])|0);HEAP32[((($16)+(4))>>2)]=((HEAP32[((132)>>2)])|0);HEAP32[((($16)+(8))>>2)]=((HEAP32[((136)>>2)])|0);HEAP32[((($16)+(12))>>2)]=((HEAP32[((140)>>2)])|0);HEAP32[((($16)+(16))>>2)]=((HEAP32[((144)>>2)])|0);HEAP32[((($16)+(20))>>2)]=((HEAP32[((148)>>2)])|0);
  $17=(($4+304)|0);
  $18=$17;
  HEAP32[(($18)>>2)]=((HEAP32[((152)>>2)])|0);HEAP32[((($18)+(4))>>2)]=((HEAP32[((156)>>2)])|0);HEAP32[((($18)+(8))>>2)]=((HEAP32[((160)>>2)])|0);HEAP32[((($18)+(12))>>2)]=((HEAP32[((164)>>2)])|0);HEAP32[((($18)+(16))>>2)]=((HEAP32[((168)>>2)])|0);HEAP32[((($18)+(20))>>2)]=((HEAP32[((172)>>2)])|0);
  $19=(($4+328)|0);
  $20=$19;
  HEAP32[(($20)>>2)]=((HEAP32[((176)>>2)])|0);HEAP32[((($20)+(4))>>2)]=((HEAP32[((180)>>2)])|0);HEAP32[((($20)+(8))>>2)]=((HEAP32[((184)>>2)])|0);HEAP32[((($20)+(12))>>2)]=((HEAP32[((188)>>2)])|0);HEAP32[((($20)+(16))>>2)]=((HEAP32[((192)>>2)])|0);HEAP32[((($20)+(20))>>2)]=((HEAP32[((196)>>2)])|0);
  $21=(($4+352)|0);
  $22=$21;
  HEAP32[(($22)>>2)]=((HEAP32[((200)>>2)])|0);HEAP32[((($22)+(4))>>2)]=((HEAP32[((204)>>2)])|0);HEAP32[((($22)+(8))>>2)]=((HEAP32[((208)>>2)])|0);HEAP32[((($22)+(12))>>2)]=((HEAP32[((212)>>2)])|0);HEAP32[((($22)+(16))>>2)]=((HEAP32[((216)>>2)])|0);HEAP32[((($22)+(20))>>2)]=((HEAP32[((220)>>2)])|0);
  $23=(($4+376)|0);
  $24=$23;
  HEAP32[(($24)>>2)]=((HEAP32[((224)>>2)])|0);HEAP32[((($24)+(4))>>2)]=((HEAP32[((228)>>2)])|0);HEAP32[((($24)+(8))>>2)]=((HEAP32[((232)>>2)])|0);HEAP32[((($24)+(12))>>2)]=((HEAP32[((236)>>2)])|0);HEAP32[((($24)+(16))>>2)]=((HEAP32[((240)>>2)])|0);HEAP32[((($24)+(20))>>2)]=((HEAP32[((244)>>2)])|0);
  $25=(($4+400)|0);
  $26=$25;
  HEAP32[(($26)>>2)]=((HEAP32[((248)>>2)])|0);HEAP32[((($26)+(4))>>2)]=((HEAP32[((252)>>2)])|0);HEAP32[((($26)+(8))>>2)]=((HEAP32[((256)>>2)])|0);HEAP32[((($26)+(12))>>2)]=((HEAP32[((260)>>2)])|0);HEAP32[((($26)+(16))>>2)]=((HEAP32[((264)>>2)])|0);HEAP32[((($26)+(20))>>2)]=((HEAP32[((268)>>2)])|0);
  $_0=0;

  return (($_0)|0);
 } else {
  $28=(($4+160+((($settingType)*(24))&-1))|0);
  $29=((8+((($settingType)*(24))&-1))|0);
  $30=$28;
  $31=$29;
  HEAP32[(($30)>>2)]=((HEAP32[(($31)>>2)])|0);HEAP32[((($30)+(4))>>2)]=((HEAP32[((($31)+(4))>>2)])|0);HEAP32[((($30)+(8))>>2)]=((HEAP32[((($31)+(8))>>2)])|0);HEAP32[((($30)+(12))>>2)]=((HEAP32[((($31)+(12))>>2)])|0);HEAP32[((($30)+(16))>>2)]=((HEAP32[((($31)+(16))>>2)])|0);HEAP32[((($30)+(20))>>2)]=((HEAP32[((($31)+(20))>>2)])|0);
  $_0=0;

  return (($_0)|0);
 }
  return 0;
}


function _malloc($bytes){
 $bytes=($bytes)|0;
 var $1=0,$3=0,$5=0,$6=0,$8=0,$9=0,$10=0,$11=0,$12=0,$13=0,$15=0,$16=0,$17=0,$18=0,$19=0,$20=0,$_sum11=0,$21=0,$22=0,$23=0;
 var $24=0,$25=0,$27=0,$28=0,$29=0,$31=0,$32=0,$33=0,$35=0,$36=0,$37=0,$40=0,$41=0,$42=0,$43=0,$_sum1314=0,$44=0,$45=0,$46=0,$47=0;
 var $48=0,$50=0,$51=0,$53=0,$55=0,$56=0,$57=0,$58=0,$59=0,$60=0,$61=0,$62=0,$63=0,$64=0,$65=0,$66=0,$67=0,$68=0,$69=0,$70=0;
 var $71=0,$72=0,$73=0,$74=0,$75=0,$76=0,$77=0,$78=0,$79=0,$80=0,$81=0,$82=0,$83=0,$84=0,$85=0,$_sum4=0,$86=0,$87=0,$88=0,$89=0;
 var $90=0,$92=0,$93=0,$94=0,$96=0,$97=0,$98=0,$100=0,$101=0,$102=0,$105=0,$106=0,$107=0,$108=0,$109=0,$110=0,$111=0,$112=0,$_sum67=0,$113=0;
 var $114=0,$115=0,$116=0,$117=0,$118=0,$120=0,$121=0,$122=0,$123=0,$124=0,$125=0,$126=0,$127=0,$128=0,$130=0,$_sum9_pre=0,$_pre=0,$_sum10=0,$132=0,$133=0;
 var $134=0,$135=0,$136=0,$_pre_phi=0,$F4_0=0,$139=0,$140=0,$141=0,$143=0,$145=0,$146=0,$148=0,$149=0,$150=0,$151=0,$152=0,$153=0,$154=0,$155=0,$156=0;
 var $157=0,$158=0,$159=0,$160=0,$161=0,$162=0,$163=0,$164=0,$165=0,$166=0,$167=0,$168=0,$169=0,$170=0,$171=0,$172=0,$173=0,$174=0,$175=0,$176=0;
 var $rsize_0_i=0,$v_0_i=0,$t_0_i=0,$178=0,$179=0,$180=0,$182=0,$183=0,$184=0,$185=0,$186=0,$187=0,$188=0,$189=0,$190=0,$_rsize_0_i=0,$_v_0_i=0,$192=0,$193=0,$194=0;
 var $196=0,$197=0,$198=0,$200=0,$201=0,$202=0,$203=0,$204=0,$206=0,$207=0,$208=0,$209=0,$211=0,$212=0,$213=0,$215=0,$216=0,$217=0,$220=0,$221=0;
 var $222=0,$224=0,$225=0,$226=0,$RP_0_i=0,$R_0_i=0,$227=0,$228=0,$229=0,$231=0,$232=0,$233=0,$235=0,$236=0,$R_1_i=0,$240=0,$242=0,$243=0,$244=0,$245=0;
 var $246=0,$cond_i=0,$248=0,$249=0,$250=0,$251=0,$252=0,$254=0,$255=0,$256=0,$258=0,$259=0,$260=0,$263=0,$266=0,$268=0,$269=0,$270=0,$272=0,$273=0;
 var $274=0,$275=0,$277=0,$278=0,$279=0,$281=0,$282=0,$285=0,$286=0,$287=0,$289=0,$290=0,$291=0,$293=0,$294=0,$298=0,$300=0,$301=0,$302=0,$_sum4_i=0;
 var $303=0,$304=0,$305=0,$306=0,$308=0,$309=0,$310=0,$_sum_i41=0,$311=0,$312=0,$_sum1_i=0,$313=0,$314=0,$315=0,$316=0,$318=0,$319=0,$320=0,$321=0,$322=0;
 var $323=0,$324=0,$325=0,$326=0,$328=0,$_sum2_pre_i=0,$_pre_i=0,$_sum3_i=0,$330=0,$331=0,$332=0,$333=0,$334=0,$_pre_phi_i=0,$F1_0_i=0,$337=0,$338=0,$339=0,$342=0,$343=0;
 var $345=0,$347=0,$348=0,$349=0,$350=0,$352=0,$353=0,$354=0,$356=0,$358=0,$359=0,$360=0,$361=0,$362=0,$363=0,$364=0,$365=0,$366=0,$367=0,$368=0;
 var $369=0,$370=0,$371=0,$372=0,$373=0,$374=0,$375=0,$376=0,$377=0,$378=0,$379=0,$idx_0_i=0,$381=0,$382=0,$383=0,$385=0,$387=0,$388=0,$390=0,$391=0;
 var $rst_0_i=0,$sizebits_0_i=0,$t_0_i16=0,$rsize_0_i17=0,$v_0_i18=0,$393=0,$394=0,$395=0,$396=0,$397=0,$399=0,$rsize_1_i=0,$v_1_i=0,$401=0,$402=0,$403=0,$404=0,$405=0,$406=0,$407=0;
 var $or_cond21_i=0,$rst_1_i=0,$408=0,$409=0,$t_1_i=0,$rsize_2_i=0,$v_2_i=0,$410=0,$411=0,$or_cond_i=0,$413=0,$414=0,$415=0,$416=0,$417=0,$419=0,$420=0,$421=0,$422=0,$423=0;
 var $424=0,$425=0,$426=0,$427=0,$428=0,$429=0,$430=0,$431=0,$432=0,$433=0,$434=0,$435=0,$436=0,$437=0,$438=0,$439=0,$440=0,$441=0,$442=0,$443=0;
 var $t_2_ph_i=0,$444=0,$v_334_i=0,$rsize_333_i=0,$t_232_i=0,$445=0,$446=0,$447=0,$448=0,$449=0,$_rsize_3_i=0,$t_2_v_3_i=0,$450=0,$451=0,$452=0,$453=0,$454=0,$455=0,$v_3_lcssa_i=0,$rsize_3_lcssa_i=0;
 var $456=0,$458=0,$459=0,$460=0,$462=0,$463=0,$464=0,$466=0,$467=0,$468=0,$470=0,$471=0,$472=0,$473=0,$474=0,$476=0,$477=0,$478=0,$479=0,$481=0;
 var $482=0,$483=0,$485=0,$486=0,$487=0,$490=0,$491=0,$492=0,$494=0,$495=0,$496=0,$RP_0_i19=0,$R_0_i20=0,$497=0,$498=0,$499=0,$501=0,$502=0,$503=0,$505=0;
 var $506=0,$R_1_i22=0,$510=0,$512=0,$513=0,$514=0,$515=0,$516=0,$cond_i23=0,$518=0,$519=0,$520=0,$521=0,$522=0,$524=0,$525=0,$526=0,$528=0,$529=0,$530=0;
 var $533=0,$536=0,$538=0,$539=0,$540=0,$542=0,$543=0,$544=0,$545=0,$547=0,$548=0,$549=0,$551=0,$552=0,$555=0,$556=0,$557=0,$559=0,$560=0,$561=0;
 var $563=0,$564=0,$568=0,$570=0,$571=0,$572=0,$_sum19_i=0,$573=0,$574=0,$575=0,$576=0,$578=0,$579=0,$580=0,$_sum_i2540=0,$581=0,$582=0,$_sum1_i26=0,$583=0,$584=0;
 var $585=0,$586=0,$588=0,$589=0,$590=0,$591=0,$592=0,$593=0,$594=0,$596=0,$_sum15_pre_i=0,$_pre_i27=0,$_sum18_i=0,$598=0,$599=0,$600=0,$601=0,$602=0,$_pre_phi_i28=0,$F5_0_i=0;
 var $605=0,$_sum16_i=0,$606=0,$607=0,$_sum17_i=0,$608=0,$609=0,$611=0,$612=0,$613=0,$615=0,$617=0,$618=0,$619=0,$620=0,$621=0,$622=0,$623=0,$624=0,$625=0;
 var $626=0,$627=0,$628=0,$629=0,$630=0,$631=0,$632=0,$633=0,$634=0,$635=0,$636=0,$637=0,$638=0,$I7_0_i=0,$640=0,$_sum2_i=0,$641=0,$642=0,$_sum3_i29=0,$643=0;
 var $_sum4_i30=0,$644=0,$645=0,$646=0,$647=0,$648=0,$649=0,$650=0,$652=0,$653=0,$_sum5_i=0,$654=0,$655=0,$_sum6_i=0,$656=0,$657=0,$_sum7_i=0,$658=0,$659=0,$661=0;
 var $662=0,$664=0,$665=0,$667=0,$668=0,$669=0,$670=0,$671=0,$672=0,$674=0,$675=0,$676=0,$677=0,$678=0,$K12_029_i=0,$T_028_i=0,$680=0,$681=0,$682=0,$683=0;
 var $685=0,$686=0,$687=0,$_sum12_i=0,$689=0,$690=0,$_sum13_i=0,$691=0,$692=0,$_sum14_i=0,$693=0,$694=0,$T_0_lcssa_i=0,$696=0,$697=0,$698=0,$699=0,$700=0,$701=0,$702=0;
 var $or_cond26_i=0,$704=0,$_sum9_i=0,$705=0,$706=0,$_sum10_i=0,$707=0,$708=0,$_sum11_i=0,$709=0,$710=0,$712=0,$713=0,$nb_0=0,$714=0,$715=0,$717=0,$718=0,$719=0,$721=0;
 var $722=0,$723=0,$724=0,$_sum2=0,$725=0,$726=0,$727=0,$728=0,$729=0,$730=0,$732=0,$733=0,$734=0,$_sum1=0,$735=0,$736=0,$737=0,$738=0,$740=0,$741=0;
 var $743=0,$744=0,$746=0,$747=0,$748=0,$749=0,$750=0,$751=0,$_sum=0,$752=0,$753=0,$754=0,$755=0,$756=0,$757=0,$759=0,$760=0,$762=0,$763=0,$764=0;
 var $765=0,$767=0,$768=0,$769=0,$771=0,$772=0,$773=0,$774=0,$775=0,$776=0,$777=0,$779=0,$780=0,$782=0,$783=0,$784=0,$785=0,$or_cond1_i=0,$787=0,$788=0;
 var $789=0,$791=0,$792=0,$794=0,$sp_0_i_i=0,$796=0,$797=0,$798=0,$800=0,$801=0,$802=0,$803=0,$805=0,$806=0,$807=0,$808=0,$809=0,$810=0,$812=0,$813=0;
 var $814=0,$815=0,$816=0,$818=0,$819=0,$820=0,$821=0,$822=0,$ssize_0_i=0,$824=0,$825=0,$826=0,$827=0,$or_cond_i31=0,$829=0,$830=0,$832=0,$833=0,$or_cond2_i=0,$835=0;
 var $836=0,$838=0,$839=0,$840=0,$841=0,$843=0,$844=0,$845=0,$846=0,$847=0,$ssize_1_i=0,$br_0_i=0,$849=0,$br_030_i=0,$ssize_129_i=0,$850=0,$851=0,$852=0,$or_cond5_i=0,$853=0;
 var $or_cond4_i=0,$855=0,$856=0,$857=0,$858=0,$859=0,$860=0,$862=0,$863=0,$865=0,$866=0,$ssize_2_i=0,$868=0,$tsize_03141_i=0,$869=0,$870=0,$tsize_1_i=0,$872=0,$874=0,$875=0;
 var $876=0,$877=0,$or_cond3_i=0,$878=0,$or_cond6_i=0,$880=0,$881=0,$882=0,$883=0,$884=0,$_tsize_1_i=0,$tbase_245_i=0,$tsize_244_i=0,$885=0,$886=0,$887=0,$888=0,$891=0,$892=0,$894=0;
 var $895=0,$896=0,$or_cond8_i=0,$899=0,$i_02_i_i=0,$901=0,$902=0,$903=0,$_sum_i_i=0,$904=0,$_sum1_i_i=0,$905=0,$906=0,$907=0,$908=0,$909=0,$910=0,$911=0,$912=0,$914=0;
 var $915=0,$916=0,$917=0,$918=0,$919=0,$920=0,$_sum_i12_i=0,$921=0,$922=0,$_sum2_i_i=0,$923=0,$924=0,$925=0,$sp_073_i=0,$926=0,$927=0,$928=0,$929=0,$930=0,$931=0;
 var $933=0,$934=0,$935=0,$936=0,$937=0,$938=0,$939=0,$941=0,$942=0,$943=0,$or_cond47_i=0,$945=0,$946=0,$947=0,$948=0,$949=0,$950=0,$951=0,$952=0,$953=0;
 var $955=0,$956=0,$957=0,$958=0,$959=0,$960=0,$961=0,$_sum_i16_i=0,$962=0,$963=0,$_sum2_i17_i=0,$964=0,$965=0,$966=0,$967=0,$968=0,$970=0,$sp_166_i=0,$972=0,$973=0;
 var $974=0,$976=0,$977=0,$978=0,$979=0,$980=0,$981=0,$982=0,$984=0,$985=0,$986=0,$987=0,$988=0,$989=0,$990=0,$992=0,$993=0,$995=0,$996=0,$_sum102_i=0;
 var $997=0,$998=0,$999=0,$1000=0,$1002=0,$1003=0,$1005=0,$_sum103_i=0,$1006=0,$1007=0,$1008=0,$1009=0,$1010=0,$_sum_i19_i=0,$1011=0,$1012=0,$1013=0,$1014=0,$_sum1_i20_i=0,$1015=0;
 var $1016=0,$1017=0,$1018=0,$1020=0,$1021=0,$1022=0,$_sum46_i_i=0,$1023=0,$1024=0,$1026=0,$1027=0,$1029=0,$1030=0,$1031=0,$_sum44_i_i=0,$1032=0,$1033=0,$_sum45_i_i=0,$1034=0,$1035=0;
 var $_sum2_i21_i=0,$_sum104_i=0,$1037=0,$1038=0,$1039=0,$1040=0,$1041=0,$1043=0,$1044=0,$1045=0,$_sum3940_i_i=0,$_sum114_i=0,$1047=0,$1048=0,$1049=0,$_sum41_i_i=0,$_sum115_i=0,$1050=0,$1051=0,$1052=0;
 var $1053=0,$1054=0,$1055=0,$1056=0,$1058=0,$1059=0,$1060=0,$1062=0,$1063=0,$1064=0,$1065=0,$1067=0,$1068=0,$1069=0,$1070=0,$1072=0,$_pre62_i_i=0,$1074=0,$1075=0,$1076=0;
 var $1078=0,$1079=0,$1080=0,$_pre_phi63_i_i=0,$1081=0,$1083=0,$_sum34_i_i=0,$_sum105_i=0,$1084=0,$1085=0,$1086=0,$_sum5_i_i=0,$_sum106_i=0,$1087=0,$1088=0,$1089=0,$1090=0,$_sum3637_i_i=0,$_sum107_i=0,$1092=0;
 var $1093=0,$1094=0,$1095=0,$1096=0,$1097=0,$1099=0,$1100=0,$1101=0,$1103=0,$1104=0,$1105=0,$_sum67_i_i=0,$_sum112_i=0,$1108=0,$1109=0,$1110=0,$1111=0,$_sum113_i=0,$1113=0,$1114=0;
 var $1115=0,$1116=0,$RP_0_i_i=0,$R_0_i_i=0,$1117=0,$1118=0,$1119=0,$1121=0,$1122=0,$1123=0,$1125=0,$1126=0,$1127=0,$R_1_i_i=0,$1131=0,$_sum31_i_i=0,$_sum108_i=0,$1133=0,$1134=0,$1135=0;
 var $1136=0,$1137=0,$1138=0,$cond_i_i=0,$1140=0,$1141=0,$1142=0,$1143=0,$1144=0,$1146=0,$1147=0,$1148=0,$1150=0,$1151=0,$1152=0,$1155=0,$1158=0,$1160=0,$1161=0,$1162=0;
 var $1164=0,$_sum3233_i_i=0,$_sum109_i=0,$1165=0,$1166=0,$1167=0,$1168=0,$1170=0,$1171=0,$1172=0,$1174=0,$1175=0,$_sum110_i=0,$1178=0,$1179=0,$1180=0,$1181=0,$1183=0,$1184=0,$1185=0;
 var $1187=0,$1188=0,$_sum9_i_i=0,$_sum111_i=0,$1192=0,$1193=0,$1194=0,$qsize_0_i_i=0,$oldfirst_0_i_i=0,$1196=0,$1197=0,$1198=0,$1199=0,$_sum10_i_i=0,$1200=0,$1201=0,$_sum11_i_i=0,$1202=0,$1203=0,$1204=0;
 var $1205=0,$1207=0,$1208=0,$1209=0,$1210=0,$1211=0,$1212=0,$1213=0,$1215=0,$_sum27_pre_i_i=0,$_pre_i22_i=0,$_sum30_i_i=0,$1217=0,$1218=0,$1219=0,$1220=0,$1221=0,$_pre_phi_i23_i=0,$F4_0_i_i=0,$1224=0;
 var $_sum28_i_i=0,$1225=0,$1226=0,$_sum29_i_i=0,$1227=0,$1228=0,$1230=0,$1231=0,$1232=0,$1234=0,$1236=0,$1237=0,$1238=0,$1239=0,$1240=0,$1241=0,$1242=0,$1243=0,$1244=0,$1245=0;
 var $1246=0,$1247=0,$1248=0,$1249=0,$1250=0,$1251=0,$1252=0,$1253=0,$1254=0,$1255=0,$1256=0,$1257=0,$I7_0_i_i=0,$1259=0,$_sum12_i24_i=0,$1260=0,$1261=0,$_sum13_i_i=0,$1262=0,$_sum14_i_i=0;
 var $1263=0,$1264=0,$1265=0,$1266=0,$1267=0,$1268=0,$1269=0,$1271=0,$1272=0,$_sum15_i_i=0,$1273=0,$1274=0,$_sum16_i_i=0,$1275=0,$1276=0,$_sum17_i_i=0,$1277=0,$1278=0,$1280=0,$1281=0;
 var $1283=0,$1284=0,$1286=0,$1287=0,$1288=0,$1289=0,$1290=0,$1291=0,$1293=0,$1294=0,$1295=0,$1296=0,$1297=0,$K8_057_i_i=0,$T_056_i_i=0,$1299=0,$1300=0,$1301=0,$1302=0,$1304=0;
 var $1305=0,$1306=0,$_sum24_i_i=0,$1308=0,$1309=0,$_sum25_i_i=0,$1310=0,$1311=0,$_sum26_i_i=0,$1312=0,$1313=0,$T_0_lcssa_i26_i=0,$1315=0,$1316=0,$1317=0,$1318=0,$1319=0,$1320=0,$1321=0,$or_cond_i27_i=0;
 var $1323=0,$_sum21_i_i=0,$1324=0,$1325=0,$_sum22_i_i=0,$1326=0,$1327=0,$_sum23_i_i=0,$1328=0,$1329=0,$_sum1819_i_i=0,$1330=0,$1331=0,$sp_0_i_i_i=0,$1333=0,$1334=0,$1335=0,$1337=0,$1338=0,$1339=0;
 var $1340=0,$1342=0,$1343=0,$_sum_i13_i=0,$_sum1_i14_i=0,$1344=0,$1345=0,$1346=0,$1347=0,$1349=0,$1350=0,$1352=0,$_sum2_i15_i=0,$1353=0,$1354=0,$1355=0,$1356=0,$1357=0,$1358=0,$1359=0;
 var $1360=0,$1361=0,$1362=0,$1363=0,$1364=0,$1366=0,$1367=0,$1368=0,$1369=0,$1370=0,$1371=0,$1372=0,$_sum_i_i_i=0,$1373=0,$1374=0,$_sum2_i_i_i=0,$1375=0,$1376=0,$1377=0,$1378=0;
 var $1379=0,$1380=0,$1381=0,$1382=0,$1383=0,$1384=0,$1385=0,$1386=0,$1387=0,$1388=0,$1389=0,$1391=0,$1392=0,$1393=0,$1394=0,$_sum3_i_i=0,$1395=0,$1396=0,$1397=0,$1398=0;
 var $1399=0,$1400=0,$1401=0,$1402=0,$1403=0,$1405=0,$1406=0,$1407=0,$1408=0,$1409=0,$1410=0,$1411=0,$1413=0,$_sum11_pre_i_i=0,$_pre_i_i=0,$_sum12_i_i=0,$1415=0,$1416=0,$1417=0,$1418=0;
 var $1419=0,$_pre_phi_i_i=0,$F_0_i_i=0,$1422=0,$1423=0,$1424=0,$1426=0,$1427=0,$1428=0,$1430=0,$1432=0,$1433=0,$1434=0,$1435=0,$1436=0,$1437=0,$1438=0,$1439=0,$1440=0,$1441=0;
 var $1442=0,$1443=0,$1444=0,$1445=0,$1446=0,$1447=0,$1448=0,$1449=0,$1450=0,$1451=0,$1452=0,$1453=0,$I1_0_i_i=0,$1455=0,$1456=0,$I1_0_c_i_i=0,$1457=0,$1458=0,$1459=0,$1460=0;
 var $1461=0,$1462=0,$1464=0,$1465=0,$_c_i_i=0,$1466=0,$1467=0,$1469=0,$1470=0,$1472=0,$1473=0,$1475=0,$1476=0,$1477=0,$1478=0,$1479=0,$1480=0,$1482=0,$1483=0,$1484=0;
 var $1485=0,$1486=0,$K2_016_i_i=0,$T_015_i_i=0,$1488=0,$1489=0,$1490=0,$1491=0,$1493=0,$1494=0,$1495=0,$1497=0,$T_0_c8_i_i=0,$1498=0,$1499=0,$T_0_lcssa_i_i=0,$1501=0,$1502=0,$1503=0,$1504=0;
 var $1505=0,$1506=0,$1507=0,$or_cond_i_i=0,$1509=0,$1510=0,$_c7_i_i=0,$1511=0,$T_0_c_i_i=0,$1512=0,$1513=0,$1514=0,$1516=0,$1517=0,$1518=0,$1519=0,$1520=0,$1521=0,$_sum_i34=0,$1522=0;
 var $1523=0,$1524=0,$1525=0,$1526=0,$1527=0,$1528=0,$mem_0=0,label=0;

 $1=($bytes>>>0)<((245)>>>0);
 do {
  if ($1) {
   $3=($bytes>>>0)<((11)>>>0);
   if ($3) {
    $8=16;
   } else {
    $5=((($bytes)+(11))|0);
    $6=$5&-8;
    $8=$6;
   }

   $9=$8>>>3;
   $10=((HEAP32[((728)>>2)])|0);
   $11=$10>>>($9>>>0);
   $12=$11&3;
   $13=($12|0)==0;
   if (!($13)) {
    $15=$11&1;
    $16=$15^1;
    $17=((($16)+($9))|0);
    $18=$17<<1;
    $19=((768+($18<<2))|0);
    $20=$19;
    $_sum11=((($18)+(2))|0);
    $21=((768+($_sum11<<2))|0);
    $22=((HEAP32[(($21)>>2)])|0);
    $23=(($22+8)|0);
    $24=((HEAP32[(($23)>>2)])|0);
    $25=($20|0)==($24|0);
    do {
     if ($25) {
      $27=1<<$17;
      $28=$27^-1;
      $29=$10&$28;
      HEAP32[((728)>>2)]=$29;
     } else {
      $31=$24;
      $32=((HEAP32[((744)>>2)])|0);
      $33=($31>>>0)<($32>>>0);
      if ($33) {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
      $35=(($24+12)|0);
      $36=((HEAP32[(($35)>>2)])|0);
      $37=($36|0)==($22|0);
      if ($37) {
       HEAP32[(($35)>>2)]=$20;
       HEAP32[(($21)>>2)]=$24;
       break;
      } else {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     }
    } while(0);
    $40=$17<<3;
    $41=$40|3;
    $42=(($22+4)|0);
    HEAP32[(($42)>>2)]=$41;
    $43=$22;
    $_sum1314=$40|4;
    $44=(($43+$_sum1314)|0);
    $45=$44;
    $46=((HEAP32[(($45)>>2)])|0);
    $47=$46|1;
    HEAP32[(($45)>>2)]=$47;
    $48=$23;
    $mem_0=$48;

    return (($mem_0)|0);
   }
   $50=((HEAP32[((736)>>2)])|0);
   $51=($8>>>0)>($50>>>0);
   if (!($51)) {
    $nb_0=$8;
    break;
   }
   $53=($11|0)==0;
   if (!($53)) {
    $55=$11<<$9;
    $56=2<<$9;
    $57=(((-$56))|0);
    $58=$56|$57;
    $59=$55&$58;
    $60=(((-$59))|0);
    $61=$59&$60;
    $62=((($61)-(1))|0);
    $63=$62>>>12;
    $64=$63&16;
    $65=$62>>>($64>>>0);
    $66=$65>>>5;
    $67=$66&8;
    $68=$67|$64;
    $69=$65>>>($67>>>0);
    $70=$69>>>2;
    $71=$70&4;
    $72=$68|$71;
    $73=$69>>>($71>>>0);
    $74=$73>>>1;
    $75=$74&2;
    $76=$72|$75;
    $77=$73>>>($75>>>0);
    $78=$77>>>1;
    $79=$78&1;
    $80=$76|$79;
    $81=$77>>>($79>>>0);
    $82=((($80)+($81))|0);
    $83=$82<<1;
    $84=((768+($83<<2))|0);
    $85=$84;
    $_sum4=((($83)+(2))|0);
    $86=((768+($_sum4<<2))|0);
    $87=((HEAP32[(($86)>>2)])|0);
    $88=(($87+8)|0);
    $89=((HEAP32[(($88)>>2)])|0);
    $90=($85|0)==($89|0);
    do {
     if ($90) {
      $92=1<<$82;
      $93=$92^-1;
      $94=$10&$93;
      HEAP32[((728)>>2)]=$94;
     } else {
      $96=$89;
      $97=((HEAP32[((744)>>2)])|0);
      $98=($96>>>0)<($97>>>0);
      if ($98) {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
      $100=(($89+12)|0);
      $101=((HEAP32[(($100)>>2)])|0);
      $102=($101|0)==($87|0);
      if ($102) {
       HEAP32[(($100)>>2)]=$85;
       HEAP32[(($86)>>2)]=$89;
       break;
      } else {
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     }
    } while(0);
    $105=$82<<3;
    $106=((($105)-($8))|0);
    $107=$8|3;
    $108=(($87+4)|0);
    HEAP32[(($108)>>2)]=$107;
    $109=$87;
    $110=(($109+$8)|0);
    $111=$110;
    $112=$106|1;
    $_sum67=$8|4;
    $113=(($109+$_sum67)|0);
    $114=$113;
    HEAP32[(($114)>>2)]=$112;
    $115=(($109+$105)|0);
    $116=$115;
    HEAP32[(($116)>>2)]=$106;
    $117=((HEAP32[((736)>>2)])|0);
    $118=($117|0)==0;
    if (!($118)) {
     $120=((HEAP32[((748)>>2)])|0);
     $121=$117>>>3;
     $122=$121<<1;
     $123=((768+($122<<2))|0);
     $124=$123;
     $125=((HEAP32[((728)>>2)])|0);
     $126=1<<$121;
     $127=$125&$126;
     $128=($127|0)==0;
     do {
      if ($128) {
       $130=$125|$126;
       HEAP32[((728)>>2)]=$130;
       $_sum9_pre=((($122)+(2))|0);
       $_pre=((768+($_sum9_pre<<2))|0);
       $F4_0=$124;$_pre_phi=$_pre;
      } else {
       $_sum10=((($122)+(2))|0);
       $132=((768+($_sum10<<2))|0);
       $133=((HEAP32[(($132)>>2)])|0);
       $134=$133;
       $135=((HEAP32[((744)>>2)])|0);
       $136=($134>>>0)<($135>>>0);
       if (!($136)) {
        $F4_0=$133;$_pre_phi=$132;
        break;
       }
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     } while(0);


     HEAP32[(($_pre_phi)>>2)]=$120;
     $139=(($F4_0+12)|0);
     HEAP32[(($139)>>2)]=$120;
     $140=(($120+8)|0);
     HEAP32[(($140)>>2)]=$F4_0;
     $141=(($120+12)|0);
     HEAP32[(($141)>>2)]=$124;
    }
    HEAP32[((736)>>2)]=$106;
    HEAP32[((748)>>2)]=$111;
    $143=$88;
    $mem_0=$143;

    return (($mem_0)|0);
   }
   $145=((HEAP32[((732)>>2)])|0);
   $146=($145|0)==0;
   if ($146) {
    $nb_0=$8;
    break;
   }
   $148=(((-$145))|0);
   $149=$145&$148;
   $150=((($149)-(1))|0);
   $151=$150>>>12;
   $152=$151&16;
   $153=$150>>>($152>>>0);
   $154=$153>>>5;
   $155=$154&8;
   $156=$155|$152;
   $157=$153>>>($155>>>0);
   $158=$157>>>2;
   $159=$158&4;
   $160=$156|$159;
   $161=$157>>>($159>>>0);
   $162=$161>>>1;
   $163=$162&2;
   $164=$160|$163;
   $165=$161>>>($163>>>0);
   $166=$165>>>1;
   $167=$166&1;
   $168=$164|$167;
   $169=$165>>>($167>>>0);
   $170=((($168)+($169))|0);
   $171=((1032+($170<<2))|0);
   $172=((HEAP32[(($171)>>2)])|0);
   $173=(($172+4)|0);
   $174=((HEAP32[(($173)>>2)])|0);
   $175=$174&-8;
   $176=((($175)-($8))|0);
   $t_0_i=$172;$v_0_i=$172;$rsize_0_i=$176;
   while(1) {



    $178=(($t_0_i+16)|0);
    $179=((HEAP32[(($178)>>2)])|0);
    $180=($179|0)==0;
    if ($180) {
     $182=(($t_0_i+20)|0);
     $183=((HEAP32[(($182)>>2)])|0);
     $184=($183|0)==0;
     if ($184) {
      break;
     } else {
      $185=$183;
     }
    } else {
     $185=$179;
    }

    $186=(($185+4)|0);
    $187=((HEAP32[(($186)>>2)])|0);
    $188=$187&-8;
    $189=((($188)-($8))|0);
    $190=($189>>>0)<($rsize_0_i>>>0);
    $_rsize_0_i=($190?$189:$rsize_0_i);
    $_v_0_i=($190?$185:$v_0_i);
    $t_0_i=$185;$v_0_i=$_v_0_i;$rsize_0_i=$_rsize_0_i;
   }
   $192=$v_0_i;
   $193=((HEAP32[((744)>>2)])|0);
   $194=($192>>>0)<($193>>>0);
   if ($194) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $196=(($192+$8)|0);
   $197=$196;
   $198=($192>>>0)<($196>>>0);
   if (!($198)) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $200=(($v_0_i+24)|0);
   $201=((HEAP32[(($200)>>2)])|0);
   $202=(($v_0_i+12)|0);
   $203=((HEAP32[(($202)>>2)])|0);
   $204=($203|0)==($v_0_i|0);
   do {
    if ($204) {
     $220=(($v_0_i+20)|0);
     $221=((HEAP32[(($220)>>2)])|0);
     $222=($221|0)==0;
     if ($222) {
      $224=(($v_0_i+16)|0);
      $225=((HEAP32[(($224)>>2)])|0);
      $226=($225|0)==0;
      if ($226) {
       $R_1_i=0;
       break;
      } else {
       $R_0_i=$225;$RP_0_i=$224;
      }
     } else {
      $R_0_i=$221;$RP_0_i=$220;
     }
     while(1) {


      $227=(($R_0_i+20)|0);
      $228=((HEAP32[(($227)>>2)])|0);
      $229=($228|0)==0;
      if (!($229)) {
       $R_0_i=$228;$RP_0_i=$227;
       continue;
      }
      $231=(($R_0_i+16)|0);
      $232=((HEAP32[(($231)>>2)])|0);
      $233=($232|0)==0;
      if ($233) {
       break;
      } else {
       $R_0_i=$232;$RP_0_i=$231;
      }
     }
     $235=$RP_0_i;
     $236=($235>>>0)<($193>>>0);
     if ($236) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      HEAP32[(($RP_0_i)>>2)]=0;
      $R_1_i=$R_0_i;
      break;
     }
    } else {
     $206=(($v_0_i+8)|0);
     $207=((HEAP32[(($206)>>2)])|0);
     $208=$207;
     $209=($208>>>0)<($193>>>0);
     if ($209) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $211=(($207+12)|0);
     $212=((HEAP32[(($211)>>2)])|0);
     $213=($212|0)==($v_0_i|0);
     if (!($213)) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $215=(($203+8)|0);
     $216=((HEAP32[(($215)>>2)])|0);
     $217=($216|0)==($v_0_i|0);
     if ($217) {
      HEAP32[(($211)>>2)]=$203;
      HEAP32[(($215)>>2)]=$207;
      $R_1_i=$203;
      break;
     } else {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
    }
   } while(0);

   $240=($201|0)==0;
   L78: do {
    if (!($240)) {
     $242=(($v_0_i+28)|0);
     $243=((HEAP32[(($242)>>2)])|0);
     $244=((1032+($243<<2))|0);
     $245=((HEAP32[(($244)>>2)])|0);
     $246=($v_0_i|0)==($245|0);
     do {
      if ($246) {
       HEAP32[(($244)>>2)]=$R_1_i;
       $cond_i=($R_1_i|0)==0;
       if (!($cond_i)) {
        break;
       }
       $248=((HEAP32[(($242)>>2)])|0);
       $249=1<<$248;
       $250=$249^-1;
       $251=((HEAP32[((732)>>2)])|0);
       $252=$251&$250;
       HEAP32[((732)>>2)]=$252;
       break L78;
      } else {
       $254=$201;
       $255=((HEAP32[((744)>>2)])|0);
       $256=($254>>>0)<($255>>>0);
       if ($256) {
        _abort(); return ((0)|0);
        return ((0)|0);
       }
       $258=(($201+16)|0);
       $259=((HEAP32[(($258)>>2)])|0);
       $260=($259|0)==($v_0_i|0);
       if ($260) {
        HEAP32[(($258)>>2)]=$R_1_i;
       } else {
        $263=(($201+20)|0);
        HEAP32[(($263)>>2)]=$R_1_i;
       }
       $266=($R_1_i|0)==0;
       if ($266) {
        break L78;
       }
      }
     } while(0);
     $268=$R_1_i;
     $269=((HEAP32[((744)>>2)])|0);
     $270=($268>>>0)<($269>>>0);
     if ($270) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $272=(($R_1_i+24)|0);
     HEAP32[(($272)>>2)]=$201;
     $273=(($v_0_i+16)|0);
     $274=((HEAP32[(($273)>>2)])|0);
     $275=($274|0)==0;
     do {
      if (!($275)) {
       $277=$274;
       $278=((HEAP32[((744)>>2)])|0);
       $279=($277>>>0)<($278>>>0);
       if ($279) {
        _abort(); return ((0)|0);
        return ((0)|0);
       } else {
        $281=(($R_1_i+16)|0);
        HEAP32[(($281)>>2)]=$274;
        $282=(($274+24)|0);
        HEAP32[(($282)>>2)]=$R_1_i;
        break;
       }
      }
     } while(0);
     $285=(($v_0_i+20)|0);
     $286=((HEAP32[(($285)>>2)])|0);
     $287=($286|0)==0;
     if ($287) {
      break;
     }
     $289=$286;
     $290=((HEAP32[((744)>>2)])|0);
     $291=($289>>>0)<($290>>>0);
     if ($291) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      $293=(($R_1_i+20)|0);
      HEAP32[(($293)>>2)]=$286;
      $294=(($286+24)|0);
      HEAP32[(($294)>>2)]=$R_1_i;
      break;
     }
    }
   } while(0);
   $298=($rsize_0_i>>>0)<((16)>>>0);
   if ($298) {
    $300=((($rsize_0_i)+($8))|0);
    $301=$300|3;
    $302=(($v_0_i+4)|0);
    HEAP32[(($302)>>2)]=$301;
    $_sum4_i=((($300)+(4))|0);
    $303=(($192+$_sum4_i)|0);
    $304=$303;
    $305=((HEAP32[(($304)>>2)])|0);
    $306=$305|1;
    HEAP32[(($304)>>2)]=$306;
   } else {
    $308=$8|3;
    $309=(($v_0_i+4)|0);
    HEAP32[(($309)>>2)]=$308;
    $310=$rsize_0_i|1;
    $_sum_i41=$8|4;
    $311=(($192+$_sum_i41)|0);
    $312=$311;
    HEAP32[(($312)>>2)]=$310;
    $_sum1_i=((($rsize_0_i)+($8))|0);
    $313=(($192+$_sum1_i)|0);
    $314=$313;
    HEAP32[(($314)>>2)]=$rsize_0_i;
    $315=((HEAP32[((736)>>2)])|0);
    $316=($315|0)==0;
    if (!($316)) {
     $318=((HEAP32[((748)>>2)])|0);
     $319=$315>>>3;
     $320=$319<<1;
     $321=((768+($320<<2))|0);
     $322=$321;
     $323=((HEAP32[((728)>>2)])|0);
     $324=1<<$319;
     $325=$323&$324;
     $326=($325|0)==0;
     do {
      if ($326) {
       $328=$323|$324;
       HEAP32[((728)>>2)]=$328;
       $_sum2_pre_i=((($320)+(2))|0);
       $_pre_i=((768+($_sum2_pre_i<<2))|0);
       $F1_0_i=$322;$_pre_phi_i=$_pre_i;
      } else {
       $_sum3_i=((($320)+(2))|0);
       $330=((768+($_sum3_i<<2))|0);
       $331=((HEAP32[(($330)>>2)])|0);
       $332=$331;
       $333=((HEAP32[((744)>>2)])|0);
       $334=($332>>>0)<($333>>>0);
       if (!($334)) {
        $F1_0_i=$331;$_pre_phi_i=$330;
        break;
       }
       _abort(); return ((0)|0);
       return ((0)|0);
      }
     } while(0);


     HEAP32[(($_pre_phi_i)>>2)]=$318;
     $337=(($F1_0_i+12)|0);
     HEAP32[(($337)>>2)]=$318;
     $338=(($318+8)|0);
     HEAP32[(($338)>>2)]=$F1_0_i;
     $339=(($318+12)|0);
     HEAP32[(($339)>>2)]=$322;
    }
    HEAP32[((736)>>2)]=$rsize_0_i;
    HEAP32[((748)>>2)]=$197;
   }
   $342=(($v_0_i+8)|0);
   $343=$342;
   $mem_0=$343;

   return (($mem_0)|0);
  } else {
   $345=($bytes>>>0)>((4294967231)>>>0);
   if ($345) {
    $nb_0=-1;
    break;
   }
   $347=((($bytes)+(11))|0);
   $348=$347&-8;
   $349=((HEAP32[((732)>>2)])|0);
   $350=($349|0)==0;
   if ($350) {
    $nb_0=$348;
    break;
   }
   $352=(((-$348))|0);
   $353=$347>>>8;
   $354=($353|0)==0;
   do {
    if ($354) {
     $idx_0_i=0;
    } else {
     $356=($348>>>0)>((16777215)>>>0);
     if ($356) {
      $idx_0_i=31;
      break;
     }
     $358=((($353)+(1048320))|0);
     $359=$358>>>16;
     $360=$359&8;
     $361=$353<<$360;
     $362=((($361)+(520192))|0);
     $363=$362>>>16;
     $364=$363&4;
     $365=$364|$360;
     $366=$361<<$364;
     $367=((($366)+(245760))|0);
     $368=$367>>>16;
     $369=$368&2;
     $370=$365|$369;
     $371=(((14)-($370))|0);
     $372=$366<<$369;
     $373=$372>>>15;
     $374=((($371)+($373))|0);
     $375=$374<<1;
     $376=((($374)+(7))|0);
     $377=$348>>>($376>>>0);
     $378=$377&1;
     $379=$378|$375;
     $idx_0_i=$379;
    }
   } while(0);

   $381=((1032+($idx_0_i<<2))|0);
   $382=((HEAP32[(($381)>>2)])|0);
   $383=($382|0)==0;
   L126: do {
    if ($383) {
     $v_2_i=0;$rsize_2_i=$352;$t_1_i=0;
    } else {
     $385=($idx_0_i|0)==31;
     if ($385) {
      $390=0;
     } else {
      $387=$idx_0_i>>>1;
      $388=(((25)-($387))|0);
      $390=$388;
     }

     $391=$348<<$390;
     $v_0_i18=0;$rsize_0_i17=$352;$t_0_i16=$382;$sizebits_0_i=$391;$rst_0_i=0;
     while(1) {





      $393=(($t_0_i16+4)|0);
      $394=((HEAP32[(($393)>>2)])|0);
      $395=$394&-8;
      $396=((($395)-($348))|0);
      $397=($396>>>0)<($rsize_0_i17>>>0);
      if ($397) {
       $399=($395|0)==($348|0);
       if ($399) {
        $v_2_i=$t_0_i16;$rsize_2_i=$396;$t_1_i=$t_0_i16;
        break L126;
       } else {
        $v_1_i=$t_0_i16;$rsize_1_i=$396;
       }
      } else {
       $v_1_i=$v_0_i18;$rsize_1_i=$rsize_0_i17;
      }


      $401=(($t_0_i16+20)|0);
      $402=((HEAP32[(($401)>>2)])|0);
      $403=$sizebits_0_i>>>31;
      $404=(($t_0_i16+16+($403<<2))|0);
      $405=((HEAP32[(($404)>>2)])|0);
      $406=($402|0)==0;
      $407=($402|0)==($405|0);
      $or_cond21_i=$406|$407;
      $rst_1_i=($or_cond21_i?$rst_0_i:$402);
      $408=($405|0)==0;
      $409=$sizebits_0_i<<1;
      if ($408) {
       $v_2_i=$v_1_i;$rsize_2_i=$rsize_1_i;$t_1_i=$rst_1_i;
       break;
      } else {
       $v_0_i18=$v_1_i;$rsize_0_i17=$rsize_1_i;$t_0_i16=$405;$sizebits_0_i=$409;$rst_0_i=$rst_1_i;
      }
     }
    }
   } while(0);



   $410=($t_1_i|0)==0;
   $411=($v_2_i|0)==0;
   $or_cond_i=$410&$411;
   if ($or_cond_i) {
    $413=2<<$idx_0_i;
    $414=(((-$413))|0);
    $415=$413|$414;
    $416=$349&$415;
    $417=($416|0)==0;
    if ($417) {
     $nb_0=$348;
     break;
    }
    $419=(((-$416))|0);
    $420=$416&$419;
    $421=((($420)-(1))|0);
    $422=$421>>>12;
    $423=$422&16;
    $424=$421>>>($423>>>0);
    $425=$424>>>5;
    $426=$425&8;
    $427=$426|$423;
    $428=$424>>>($426>>>0);
    $429=$428>>>2;
    $430=$429&4;
    $431=$427|$430;
    $432=$428>>>($430>>>0);
    $433=$432>>>1;
    $434=$433&2;
    $435=$431|$434;
    $436=$432>>>($434>>>0);
    $437=$436>>>1;
    $438=$437&1;
    $439=$435|$438;
    $440=$436>>>($438>>>0);
    $441=((($439)+($440))|0);
    $442=((1032+($441<<2))|0);
    $443=((HEAP32[(($442)>>2)])|0);
    $t_2_ph_i=$443;
   } else {
    $t_2_ph_i=$t_1_i;
   }

   $444=($t_2_ph_i|0)==0;
   if ($444) {
    $rsize_3_lcssa_i=$rsize_2_i;$v_3_lcssa_i=$v_2_i;
   } else {
    $t_232_i=$t_2_ph_i;$rsize_333_i=$rsize_2_i;$v_334_i=$v_2_i;
    while(1) {



     $445=(($t_232_i+4)|0);
     $446=((HEAP32[(($445)>>2)])|0);
     $447=$446&-8;
     $448=((($447)-($348))|0);
     $449=($448>>>0)<($rsize_333_i>>>0);
     $_rsize_3_i=($449?$448:$rsize_333_i);
     $t_2_v_3_i=($449?$t_232_i:$v_334_i);
     $450=(($t_232_i+16)|0);
     $451=((HEAP32[(($450)>>2)])|0);
     $452=($451|0)==0;
     if (!($452)) {
      $t_232_i=$451;$rsize_333_i=$_rsize_3_i;$v_334_i=$t_2_v_3_i;
      continue;
     }
     $453=(($t_232_i+20)|0);
     $454=((HEAP32[(($453)>>2)])|0);
     $455=($454|0)==0;
     if ($455) {
      $rsize_3_lcssa_i=$_rsize_3_i;$v_3_lcssa_i=$t_2_v_3_i;
      break;
     } else {
      $t_232_i=$454;$rsize_333_i=$_rsize_3_i;$v_334_i=$t_2_v_3_i;
     }
    }
   }


   $456=($v_3_lcssa_i|0)==0;
   if ($456) {
    $nb_0=$348;
    break;
   }
   $458=((HEAP32[((736)>>2)])|0);
   $459=((($458)-($348))|0);
   $460=($rsize_3_lcssa_i>>>0)<($459>>>0);
   if (!($460)) {
    $nb_0=$348;
    break;
   }
   $462=$v_3_lcssa_i;
   $463=((HEAP32[((744)>>2)])|0);
   $464=($462>>>0)<($463>>>0);
   if ($464) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $466=(($462+$348)|0);
   $467=$466;
   $468=($462>>>0)<($466>>>0);
   if (!($468)) {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
   $470=(($v_3_lcssa_i+24)|0);
   $471=((HEAP32[(($470)>>2)])|0);
   $472=(($v_3_lcssa_i+12)|0);
   $473=((HEAP32[(($472)>>2)])|0);
   $474=($473|0)==($v_3_lcssa_i|0);
   do {
    if ($474) {
     $490=(($v_3_lcssa_i+20)|0);
     $491=((HEAP32[(($490)>>2)])|0);
     $492=($491|0)==0;
     if ($492) {
      $494=(($v_3_lcssa_i+16)|0);
      $495=((HEAP32[(($494)>>2)])|0);
      $496=($495|0)==0;
      if ($496) {
       $R_1_i22=0;
       break;
      } else {
       $R_0_i20=$495;$RP_0_i19=$494;
      }
     } else {
      $R_0_i20=$491;$RP_0_i19=$490;
     }
     while(1) {


      $497=(($R_0_i20+20)|0);
      $498=((HEAP32[(($497)>>2)])|0);
      $499=($498|0)==0;
      if (!($499)) {
       $R_0_i20=$498;$RP_0_i19=$497;
       continue;
      }
      $501=(($R_0_i20+16)|0);
      $502=((HEAP32[(($501)>>2)])|0);
      $503=($502|0)==0;
      if ($503) {
       break;
      } else {
       $R_0_i20=$502;$RP_0_i19=$501;
      }
     }
     $505=$RP_0_i19;
     $506=($505>>>0)<($463>>>0);
     if ($506) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      HEAP32[(($RP_0_i19)>>2)]=0;
      $R_1_i22=$R_0_i20;
      break;
     }
    } else {
     $476=(($v_3_lcssa_i+8)|0);
     $477=((HEAP32[(($476)>>2)])|0);
     $478=$477;
     $479=($478>>>0)<($463>>>0);
     if ($479) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $481=(($477+12)|0);
     $482=((HEAP32[(($481)>>2)])|0);
     $483=($482|0)==($v_3_lcssa_i|0);
     if (!($483)) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $485=(($473+8)|0);
     $486=((HEAP32[(($485)>>2)])|0);
     $487=($486|0)==($v_3_lcssa_i|0);
     if ($487) {
      HEAP32[(($481)>>2)]=$473;
      HEAP32[(($485)>>2)]=$477;
      $R_1_i22=$473;
      break;
     } else {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
    }
   } while(0);

   $510=($471|0)==0;
   L176: do {
    if (!($510)) {
     $512=(($v_3_lcssa_i+28)|0);
     $513=((HEAP32[(($512)>>2)])|0);
     $514=((1032+($513<<2))|0);
     $515=((HEAP32[(($514)>>2)])|0);
     $516=($v_3_lcssa_i|0)==($515|0);
     do {
      if ($516) {
       HEAP32[(($514)>>2)]=$R_1_i22;
       $cond_i23=($R_1_i22|0)==0;
       if (!($cond_i23)) {
        break;
       }
       $518=((HEAP32[(($512)>>2)])|0);
       $519=1<<$518;
       $520=$519^-1;
       $521=((HEAP32[((732)>>2)])|0);
       $522=$521&$520;
       HEAP32[((732)>>2)]=$522;
       break L176;
      } else {
       $524=$471;
       $525=((HEAP32[((744)>>2)])|0);
       $526=($524>>>0)<($525>>>0);
       if ($526) {
        _abort(); return ((0)|0);
        return ((0)|0);
       }
       $528=(($471+16)|0);
       $529=((HEAP32[(($528)>>2)])|0);
       $530=($529|0)==($v_3_lcssa_i|0);
       if ($530) {
        HEAP32[(($528)>>2)]=$R_1_i22;
       } else {
        $533=(($471+20)|0);
        HEAP32[(($533)>>2)]=$R_1_i22;
       }
       $536=($R_1_i22|0)==0;
       if ($536) {
        break L176;
       }
      }
     } while(0);
     $538=$R_1_i22;
     $539=((HEAP32[((744)>>2)])|0);
     $540=($538>>>0)<($539>>>0);
     if ($540) {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
     $542=(($R_1_i22+24)|0);
     HEAP32[(($542)>>2)]=$471;
     $543=(($v_3_lcssa_i+16)|0);
     $544=((HEAP32[(($543)>>2)])|0);
     $545=($544|0)==0;
     do {
      if (!($545)) {
       $547=$544;
       $548=((HEAP32[((744)>>2)])|0);
       $549=($547>>>0)<($548>>>0);
       if ($549) {
        _abort(); return ((0)|0);
        return ((0)|0);
       } else {
        $551=(($R_1_i22+16)|0);
        HEAP32[(($551)>>2)]=$544;
        $552=(($544+24)|0);
        HEAP32[(($552)>>2)]=$R_1_i22;
        break;
       }
      }
     } while(0);
     $555=(($v_3_lcssa_i+20)|0);
     $556=((HEAP32[(($555)>>2)])|0);
     $557=($556|0)==0;
     if ($557) {
      break;
     }
     $559=$556;
     $560=((HEAP32[((744)>>2)])|0);
     $561=($559>>>0)<($560>>>0);
     if ($561) {
      _abort(); return ((0)|0);
      return ((0)|0);
     } else {
      $563=(($R_1_i22+20)|0);
      HEAP32[(($563)>>2)]=$556;
      $564=(($556+24)|0);
      HEAP32[(($564)>>2)]=$R_1_i22;
      break;
     }
    }
   } while(0);
   $568=($rsize_3_lcssa_i>>>0)<((16)>>>0);
   L204: do {
    if ($568) {
     $570=((($rsize_3_lcssa_i)+($348))|0);
     $571=$570|3;
     $572=(($v_3_lcssa_i+4)|0);
     HEAP32[(($572)>>2)]=$571;
     $_sum19_i=((($570)+(4))|0);
     $573=(($462+$_sum19_i)|0);
     $574=$573;
     $575=((HEAP32[(($574)>>2)])|0);
     $576=$575|1;
     HEAP32[(($574)>>2)]=$576;
    } else {
     $578=$348|3;
     $579=(($v_3_lcssa_i+4)|0);
     HEAP32[(($579)>>2)]=$578;
     $580=$rsize_3_lcssa_i|1;
     $_sum_i2540=$348|4;
     $581=(($462+$_sum_i2540)|0);
     $582=$581;
     HEAP32[(($582)>>2)]=$580;
     $_sum1_i26=((($rsize_3_lcssa_i)+($348))|0);
     $583=(($462+$_sum1_i26)|0);
     $584=$583;
     HEAP32[(($584)>>2)]=$rsize_3_lcssa_i;
     $585=$rsize_3_lcssa_i>>>3;
     $586=($rsize_3_lcssa_i>>>0)<((256)>>>0);
     if ($586) {
      $588=$585<<1;
      $589=((768+($588<<2))|0);
      $590=$589;
      $591=((HEAP32[((728)>>2)])|0);
      $592=1<<$585;
      $593=$591&$592;
      $594=($593|0)==0;
      do {
       if ($594) {
        $596=$591|$592;
        HEAP32[((728)>>2)]=$596;
        $_sum15_pre_i=((($588)+(2))|0);
        $_pre_i27=((768+($_sum15_pre_i<<2))|0);
        $F5_0_i=$590;$_pre_phi_i28=$_pre_i27;
       } else {
        $_sum18_i=((($588)+(2))|0);
        $598=((768+($_sum18_i<<2))|0);
        $599=((HEAP32[(($598)>>2)])|0);
        $600=$599;
        $601=((HEAP32[((744)>>2)])|0);
        $602=($600>>>0)<($601>>>0);
        if (!($602)) {
         $F5_0_i=$599;$_pre_phi_i28=$598;
         break;
        }
        _abort(); return ((0)|0);
        return ((0)|0);
       }
      } while(0);


      HEAP32[(($_pre_phi_i28)>>2)]=$467;
      $605=(($F5_0_i+12)|0);
      HEAP32[(($605)>>2)]=$467;
      $_sum16_i=((($348)+(8))|0);
      $606=(($462+$_sum16_i)|0);
      $607=$606;
      HEAP32[(($607)>>2)]=$F5_0_i;
      $_sum17_i=((($348)+(12))|0);
      $608=(($462+$_sum17_i)|0);
      $609=$608;
      HEAP32[(($609)>>2)]=$590;
      break;
     }
     $611=$466;
     $612=$rsize_3_lcssa_i>>>8;
     $613=($612|0)==0;
     do {
      if ($613) {
       $I7_0_i=0;
      } else {
       $615=($rsize_3_lcssa_i>>>0)>((16777215)>>>0);
       if ($615) {
        $I7_0_i=31;
        break;
       }
       $617=((($612)+(1048320))|0);
       $618=$617>>>16;
       $619=$618&8;
       $620=$612<<$619;
       $621=((($620)+(520192))|0);
       $622=$621>>>16;
       $623=$622&4;
       $624=$623|$619;
       $625=$620<<$623;
       $626=((($625)+(245760))|0);
       $627=$626>>>16;
       $628=$627&2;
       $629=$624|$628;
       $630=(((14)-($629))|0);
       $631=$625<<$628;
       $632=$631>>>15;
       $633=((($630)+($632))|0);
       $634=$633<<1;
       $635=((($633)+(7))|0);
       $636=$rsize_3_lcssa_i>>>($635>>>0);
       $637=$636&1;
       $638=$637|$634;
       $I7_0_i=$638;
      }
     } while(0);

     $640=((1032+($I7_0_i<<2))|0);
     $_sum2_i=((($348)+(28))|0);
     $641=(($462+$_sum2_i)|0);
     $642=$641;
     HEAP32[(($642)>>2)]=$I7_0_i;
     $_sum3_i29=((($348)+(16))|0);
     $643=(($462+$_sum3_i29)|0);
     $_sum4_i30=((($348)+(20))|0);
     $644=(($462+$_sum4_i30)|0);
     $645=$644;
     HEAP32[(($645)>>2)]=0;
     $646=$643;
     HEAP32[(($646)>>2)]=0;
     $647=((HEAP32[((732)>>2)])|0);
     $648=1<<$I7_0_i;
     $649=$647&$648;
     $650=($649|0)==0;
     if ($650) {
      $652=$647|$648;
      HEAP32[((732)>>2)]=$652;
      HEAP32[(($640)>>2)]=$611;
      $653=$640;
      $_sum5_i=((($348)+(24))|0);
      $654=(($462+$_sum5_i)|0);
      $655=$654;
      HEAP32[(($655)>>2)]=$653;
      $_sum6_i=((($348)+(12))|0);
      $656=(($462+$_sum6_i)|0);
      $657=$656;
      HEAP32[(($657)>>2)]=$611;
      $_sum7_i=((($348)+(8))|0);
      $658=(($462+$_sum7_i)|0);
      $659=$658;
      HEAP32[(($659)>>2)]=$611;
      break;
     }
     $661=((HEAP32[(($640)>>2)])|0);
     $662=($I7_0_i|0)==31;
     if ($662) {
      $667=0;
     } else {
      $664=$I7_0_i>>>1;
      $665=(((25)-($664))|0);
      $667=$665;
     }

     $668=(($661+4)|0);
     $669=((HEAP32[(($668)>>2)])|0);
     $670=$669&-8;
     $671=($670|0)==($rsize_3_lcssa_i|0);
     L225: do {
      if ($671) {
       $T_0_lcssa_i=$661;
      } else {
       $672=$rsize_3_lcssa_i<<$667;
       $T_028_i=$661;$K12_029_i=$672;
       while(1) {


        $680=$K12_029_i>>>31;
        $681=(($T_028_i+16+($680<<2))|0);
        $682=((HEAP32[(($681)>>2)])|0);
        $683=($682|0)==0;
        if ($683) {
         break;
        }
        $674=$K12_029_i<<1;
        $675=(($682+4)|0);
        $676=((HEAP32[(($675)>>2)])|0);
        $677=$676&-8;
        $678=($677|0)==($rsize_3_lcssa_i|0);
        if ($678) {
         $T_0_lcssa_i=$682;
         break L225;
        } else {
         $T_028_i=$682;$K12_029_i=$674;
        }
       }
       $685=$681;
       $686=((HEAP32[((744)>>2)])|0);
       $687=($685>>>0)<($686>>>0);
       if ($687) {
        _abort(); return ((0)|0);
        return ((0)|0);
       } else {
        HEAP32[(($681)>>2)]=$611;
        $_sum12_i=((($348)+(24))|0);
        $689=(($462+$_sum12_i)|0);
        $690=$689;
        HEAP32[(($690)>>2)]=$T_028_i;
        $_sum13_i=((($348)+(12))|0);
        $691=(($462+$_sum13_i)|0);
        $692=$691;
        HEAP32[(($692)>>2)]=$611;
        $_sum14_i=((($348)+(8))|0);
        $693=(($462+$_sum14_i)|0);
        $694=$693;
        HEAP32[(($694)>>2)]=$611;
        break L204;
       }
      }
     } while(0);

     $696=(($T_0_lcssa_i+8)|0);
     $697=((HEAP32[(($696)>>2)])|0);
     $698=$T_0_lcssa_i;
     $699=((HEAP32[((744)>>2)])|0);
     $700=($698>>>0)>=($699>>>0);
     $701=$697;
     $702=($701>>>0)>=($699>>>0);
     $or_cond26_i=$700&$702;
     if ($or_cond26_i) {
      $704=(($697+12)|0);
      HEAP32[(($704)>>2)]=$611;
      HEAP32[(($696)>>2)]=$611;
      $_sum9_i=((($348)+(8))|0);
      $705=(($462+$_sum9_i)|0);
      $706=$705;
      HEAP32[(($706)>>2)]=$697;
      $_sum10_i=((($348)+(12))|0);
      $707=(($462+$_sum10_i)|0);
      $708=$707;
      HEAP32[(($708)>>2)]=$T_0_lcssa_i;
      $_sum11_i=((($348)+(24))|0);
      $709=(($462+$_sum11_i)|0);
      $710=$709;
      HEAP32[(($710)>>2)]=0;
      break;
     } else {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
    }
   } while(0);
   $712=(($v_3_lcssa_i+8)|0);
   $713=$712;
   $mem_0=$713;

   return (($mem_0)|0);
  }
 } while(0);

 $714=((HEAP32[((736)>>2)])|0);
 $715=($714>>>0)<($nb_0>>>0);
 if (!($715)) {
  $717=((($714)-($nb_0))|0);
  $718=((HEAP32[((748)>>2)])|0);
  $719=($717>>>0)>((15)>>>0);
  if ($719) {
   $721=$718;
   $722=(($721+$nb_0)|0);
   $723=$722;
   HEAP32[((748)>>2)]=$723;
   HEAP32[((736)>>2)]=$717;
   $724=$717|1;
   $_sum2=((($nb_0)+(4))|0);
   $725=(($721+$_sum2)|0);
   $726=$725;
   HEAP32[(($726)>>2)]=$724;
   $727=(($721+$714)|0);
   $728=$727;
   HEAP32[(($728)>>2)]=$717;
   $729=$nb_0|3;
   $730=(($718+4)|0);
   HEAP32[(($730)>>2)]=$729;
  } else {
   HEAP32[((736)>>2)]=0;
   HEAP32[((748)>>2)]=0;
   $732=$714|3;
   $733=(($718+4)|0);
   HEAP32[(($733)>>2)]=$732;
   $734=$718;
   $_sum1=((($714)+(4))|0);
   $735=(($734+$_sum1)|0);
   $736=$735;
   $737=((HEAP32[(($736)>>2)])|0);
   $738=$737|1;
   HEAP32[(($736)>>2)]=$738;
  }
  $740=(($718+8)|0);
  $741=$740;
  $mem_0=$741;

  return (($mem_0)|0);
 }
 $743=((HEAP32[((740)>>2)])|0);
 $744=($743>>>0)>($nb_0>>>0);
 if ($744) {
  $746=((($743)-($nb_0))|0);
  HEAP32[((740)>>2)]=$746;
  $747=((HEAP32[((752)>>2)])|0);
  $748=$747;
  $749=(($748+$nb_0)|0);
  $750=$749;
  HEAP32[((752)>>2)]=$750;
  $751=$746|1;
  $_sum=((($nb_0)+(4))|0);
  $752=(($748+$_sum)|0);
  $753=$752;
  HEAP32[(($753)>>2)]=$751;
  $754=$nb_0|3;
  $755=(($747+4)|0);
  HEAP32[(($755)>>2)]=$754;
  $756=(($747+8)|0);
  $757=$756;
  $mem_0=$757;

  return (($mem_0)|0);
 }
 $759=((HEAP32[((704)>>2)])|0);
 $760=($759|0)==0;
 do {
  if ($760) {
   $762=((_sysconf(((30)|0)))|0);
   $763=((($762)-(1))|0);
   $764=$763&$762;
   $765=($764|0)==0;
   if ($765) {
    HEAP32[((712)>>2)]=$762;
    HEAP32[((708)>>2)]=$762;
    HEAP32[((716)>>2)]=-1;
    HEAP32[((720)>>2)]=-1;
    HEAP32[((724)>>2)]=0;
    HEAP32[((1172)>>2)]=0;
    $767=((_time(((0)|0)))|0);
    $768=$767&-16;
    $769=$768^1431655768;
    HEAP32[((704)>>2)]=$769;
    break;
   } else {
    _abort(); return ((0)|0);
    return ((0)|0);
   }
  }
 } while(0);
 $771=((($nb_0)+(48))|0);
 $772=((HEAP32[((712)>>2)])|0);
 $773=((($nb_0)+(47))|0);
 $774=((($772)+($773))|0);
 $775=(((-$772))|0);
 $776=$774&$775;
 $777=($776>>>0)>($nb_0>>>0);
 if (!($777)) {
  $mem_0=0;

  return (($mem_0)|0);
 }
 $779=((HEAP32[((1168)>>2)])|0);
 $780=($779|0)==0;
 do {
  if (!($780)) {
   $782=((HEAP32[((1160)>>2)])|0);
   $783=((($782)+($776))|0);
   $784=($783>>>0)<=($782>>>0);
   $785=($783>>>0)>($779>>>0);
   $or_cond1_i=$784|$785;
   if ($or_cond1_i) {
    $mem_0=0;
   } else {
    break;
   }

   return (($mem_0)|0);
  }
 } while(0);
 $787=((HEAP32[((1172)>>2)])|0);
 $788=$787&4;
 $789=($788|0)==0;
 L266: do {
  if ($789) {
   $791=((HEAP32[((752)>>2)])|0);
   $792=($791|0)==0;
   L268: do {
    if ($792) {
     label = 181;
    } else {
     $794=$791;
     $sp_0_i_i=1176;
     while(1) {

      $796=(($sp_0_i_i)|0);
      $797=((HEAP32[(($796)>>2)])|0);
      $798=($797>>>0)>($794>>>0);
      if (!($798)) {
       $800=(($sp_0_i_i+4)|0);
       $801=((HEAP32[(($800)>>2)])|0);
       $802=(($797+$801)|0);
       $803=($802>>>0)>($794>>>0);
       if ($803) {
        break;
       }
      }
      $805=(($sp_0_i_i+8)|0);
      $806=((HEAP32[(($805)>>2)])|0);
      $807=($806|0)==0;
      if ($807) {
       label = 181;
       break L268;
      } else {
       $sp_0_i_i=$806;
      }
     }
     $808=($sp_0_i_i|0)==0;
     if ($808) {
      label = 181;
      break;
     }
     $838=((HEAP32[((740)>>2)])|0);
     $839=((($774)-($838))|0);
     $840=$839&$775;
     $841=($840>>>0)<((2147483647)>>>0);
     if (!($841)) {
      $tsize_03141_i=0;
      break;
     }
     $843=((_sbrk((($840)|0)))|0);
     $844=((HEAP32[(($796)>>2)])|0);
     $845=((HEAP32[(($800)>>2)])|0);
     $846=(($844+$845)|0);
     $847=($843|0)==($846|0);
     if ($847) {
      $br_0_i=$843;$ssize_1_i=$840;
      label = 190;
     } else {
      $ssize_129_i=$840;$br_030_i=$843;
      label = 191;
     }
    }
   } while(0);
   do {
    if ((label|0) == 181) {
     $809=((_sbrk(((0)|0)))|0);
     $810=($809|0)==-1;
     if ($810) {
      $tsize_03141_i=0;
      break;
     }
     $812=$809;
     $813=((HEAP32[((708)>>2)])|0);
     $814=((($813)-(1))|0);
     $815=$814&$812;
     $816=($815|0)==0;
     if ($816) {
      $ssize_0_i=$776;
     } else {
      $818=((($814)+($812))|0);
      $819=(((-$813))|0);
      $820=$818&$819;
      $821=((($776)-($812))|0);
      $822=((($821)+($820))|0);
      $ssize_0_i=$822;
     }

     $824=((HEAP32[((1160)>>2)])|0);
     $825=((($824)+($ssize_0_i))|0);
     $826=($ssize_0_i>>>0)>($nb_0>>>0);
     $827=($ssize_0_i>>>0)<((2147483647)>>>0);
     $or_cond_i31=$826&$827;
     if (!($or_cond_i31)) {
      $tsize_03141_i=0;
      break;
     }
     $829=((HEAP32[((1168)>>2)])|0);
     $830=($829|0)==0;
     if (!($830)) {
      $832=($825>>>0)<=($824>>>0);
      $833=($825>>>0)>($829>>>0);
      $or_cond2_i=$832|$833;
      if ($or_cond2_i) {
       $tsize_03141_i=0;
       break;
      }
     }
     $835=((_sbrk((($ssize_0_i)|0)))|0);
     $836=($835|0)==($809|0);
     if ($836) {
      $br_0_i=$809;$ssize_1_i=$ssize_0_i;
      label = 190;
     } else {
      $ssize_129_i=$ssize_0_i;$br_030_i=$835;
      label = 191;
     }
    }
   } while(0);
   L288: do {
    if ((label|0) == 190) {


     $849=($br_0_i|0)==-1;
     if ($849) {
      $tsize_03141_i=$ssize_1_i;
     } else {
      $tsize_244_i=$ssize_1_i;$tbase_245_i=$br_0_i;
      label = 201;
      break L266;
     }
    }
    else if ((label|0) == 191) {


     $850=(((-$ssize_129_i))|0);
     $851=($br_030_i|0)!=-1;
     $852=($ssize_129_i>>>0)<((2147483647)>>>0);
     $or_cond5_i=$851&$852;
     $853=($771>>>0)>($ssize_129_i>>>0);
     $or_cond4_i=$or_cond5_i&$853;
     do {
      if ($or_cond4_i) {
       $855=((HEAP32[((712)>>2)])|0);
       $856=((($773)-($ssize_129_i))|0);
       $857=((($856)+($855))|0);
       $858=(((-$855))|0);
       $859=$857&$858;
       $860=($859>>>0)<((2147483647)>>>0);
       if (!($860)) {
        $ssize_2_i=$ssize_129_i;
        break;
       }
       $862=((_sbrk((($859)|0)))|0);
       $863=($862|0)==-1;
       if ($863) {
        $866=((_sbrk((($850)|0)))|0);
        $tsize_03141_i=0;
        break L288;
       } else {
        $865=((($859)+($ssize_129_i))|0);
        $ssize_2_i=$865;
        break;
       }
      } else {
       $ssize_2_i=$ssize_129_i;
      }
     } while(0);

     $868=($br_030_i|0)==-1;
     if ($868) {
      $tsize_03141_i=0;
     } else {
      $tsize_244_i=$ssize_2_i;$tbase_245_i=$br_030_i;
      label = 201;
      break L266;
     }
    }
   } while(0);

   $869=((HEAP32[((1172)>>2)])|0);
   $870=$869|4;
   HEAP32[((1172)>>2)]=$870;
   $tsize_1_i=$tsize_03141_i;
   label = 198;
  } else {
   $tsize_1_i=0;
   label = 198;
  }
 } while(0);
 do {
  if ((label|0) == 198) {

   $872=($776>>>0)<((2147483647)>>>0);
   if (!($872)) {
    break;
   }
   $874=((_sbrk((($776)|0)))|0);
   $875=((_sbrk(((0)|0)))|0);
   $876=($874|0)!=-1;
   $877=($875|0)!=-1;
   $or_cond3_i=$876&$877;
   $878=($874>>>0)<($875>>>0);
   $or_cond6_i=$or_cond3_i&$878;
   if (!($or_cond6_i)) {
    break;
   }
   $880=$875;
   $881=$874;
   $882=((($880)-($881))|0);
   $883=((($nb_0)+(40))|0);
   $884=($882>>>0)>($883>>>0);
   $_tsize_1_i=($884?$882:$tsize_1_i);
   if ($884) {
    $tsize_244_i=$_tsize_1_i;$tbase_245_i=$874;
    label = 201;
   }
  }
 } while(0);
 do {
  if ((label|0) == 201) {


   $885=((HEAP32[((1160)>>2)])|0);
   $886=((($885)+($tsize_244_i))|0);
   HEAP32[((1160)>>2)]=$886;
   $887=((HEAP32[((1164)>>2)])|0);
   $888=($886>>>0)>($887>>>0);
   if ($888) {
    HEAP32[((1164)>>2)]=$886;
   }
   $891=((HEAP32[((752)>>2)])|0);
   $892=($891|0)==0;
   L308: do {
    if ($892) {
     $894=((HEAP32[((744)>>2)])|0);
     $895=($894|0)==0;
     $896=($tbase_245_i>>>0)<($894>>>0);
     $or_cond8_i=$895|$896;
     if ($or_cond8_i) {
      HEAP32[((744)>>2)]=$tbase_245_i;
     }
     HEAP32[((1176)>>2)]=$tbase_245_i;
     HEAP32[((1180)>>2)]=$tsize_244_i;
     HEAP32[((1188)>>2)]=0;
     $899=((HEAP32[((704)>>2)])|0);
     HEAP32[((764)>>2)]=$899;
     HEAP32[((760)>>2)]=-1;
     $i_02_i_i=0;
     while(1) {

      $901=$i_02_i_i<<1;
      $902=((768+($901<<2))|0);
      $903=$902;
      $_sum_i_i=((($901)+(3))|0);
      $904=((768+($_sum_i_i<<2))|0);
      HEAP32[(($904)>>2)]=$903;
      $_sum1_i_i=((($901)+(2))|0);
      $905=((768+($_sum1_i_i<<2))|0);
      HEAP32[(($905)>>2)]=$903;
      $906=((($i_02_i_i)+(1))|0);
      $907=($906>>>0)<((32)>>>0);
      if ($907) {
       $i_02_i_i=$906;
      } else {
       break;
      }
     }
     $908=((($tsize_244_i)-(40))|0);
     $909=(($tbase_245_i+8)|0);
     $910=$909;
     $911=$910&7;
     $912=($911|0)==0;
     if ($912) {
      $916=0;
     } else {
      $914=(((-$910))|0);
      $915=$914&7;
      $916=$915;
     }

     $917=(($tbase_245_i+$916)|0);
     $918=$917;
     $919=((($908)-($916))|0);
     HEAP32[((752)>>2)]=$918;
     HEAP32[((740)>>2)]=$919;
     $920=$919|1;
     $_sum_i12_i=((($916)+(4))|0);
     $921=(($tbase_245_i+$_sum_i12_i)|0);
     $922=$921;
     HEAP32[(($922)>>2)]=$920;
     $_sum2_i_i=((($tsize_244_i)-(36))|0);
     $923=(($tbase_245_i+$_sum2_i_i)|0);
     $924=$923;
     HEAP32[(($924)>>2)]=40;
     $925=((HEAP32[((720)>>2)])|0);
     HEAP32[((756)>>2)]=$925;
    } else {
     $sp_073_i=1176;
     while(1) {

      $926=(($sp_073_i)|0);
      $927=((HEAP32[(($926)>>2)])|0);
      $928=(($sp_073_i+4)|0);
      $929=((HEAP32[(($928)>>2)])|0);
      $930=(($927+$929)|0);
      $931=($tbase_245_i|0)==($930|0);
      if ($931) {
       label = 213;
       break;
      }
      $933=(($sp_073_i+8)|0);
      $934=((HEAP32[(($933)>>2)])|0);
      $935=($934|0)==0;
      if ($935) {
       break;
      } else {
       $sp_073_i=$934;
      }
     }
     do {
      if ((label|0) == 213) {
       $936=(($sp_073_i+12)|0);
       $937=((HEAP32[(($936)>>2)])|0);
       $938=$937&8;
       $939=($938|0)==0;
       if (!($939)) {
        break;
       }
       $941=$891;
       $942=($941>>>0)>=($927>>>0);
       $943=($941>>>0)<($tbase_245_i>>>0);
       $or_cond47_i=$942&$943;
       if (!($or_cond47_i)) {
        break;
       }
       $945=((($929)+($tsize_244_i))|0);
       HEAP32[(($928)>>2)]=$945;
       $946=((HEAP32[((752)>>2)])|0);
       $947=((HEAP32[((740)>>2)])|0);
       $948=((($947)+($tsize_244_i))|0);
       $949=$946;
       $950=(($946+8)|0);
       $951=$950;
       $952=$951&7;
       $953=($952|0)==0;
       if ($953) {
        $957=0;
       } else {
        $955=(((-$951))|0);
        $956=$955&7;
        $957=$956;
       }

       $958=(($949+$957)|0);
       $959=$958;
       $960=((($948)-($957))|0);
       HEAP32[((752)>>2)]=$959;
       HEAP32[((740)>>2)]=$960;
       $961=$960|1;
       $_sum_i16_i=((($957)+(4))|0);
       $962=(($949+$_sum_i16_i)|0);
       $963=$962;
       HEAP32[(($963)>>2)]=$961;
       $_sum2_i17_i=((($948)+(4))|0);
       $964=(($949+$_sum2_i17_i)|0);
       $965=$964;
       HEAP32[(($965)>>2)]=40;
       $966=((HEAP32[((720)>>2)])|0);
       HEAP32[((756)>>2)]=$966;
       break L308;
      }
     } while(0);
     $967=((HEAP32[((744)>>2)])|0);
     $968=($tbase_245_i>>>0)<($967>>>0);
     if ($968) {
      HEAP32[((744)>>2)]=$tbase_245_i;
     }
     $970=(($tbase_245_i+$tsize_244_i)|0);
     $sp_166_i=1176;
     while(1) {

      $972=(($sp_166_i)|0);
      $973=((HEAP32[(($972)>>2)])|0);
      $974=($973|0)==($970|0);
      if ($974) {
       label = 223;
       break;
      }
      $976=(($sp_166_i+8)|0);
      $977=((HEAP32[(($976)>>2)])|0);
      $978=($977|0)==0;
      if ($978) {
       break;
      } else {
       $sp_166_i=$977;
      }
     }
     do {
      if ((label|0) == 223) {
       $979=(($sp_166_i+12)|0);
       $980=((HEAP32[(($979)>>2)])|0);
       $981=$980&8;
       $982=($981|0)==0;
       if (!($982)) {
        break;
       }
       HEAP32[(($972)>>2)]=$tbase_245_i;
       $984=(($sp_166_i+4)|0);
       $985=((HEAP32[(($984)>>2)])|0);
       $986=((($985)+($tsize_244_i))|0);
       HEAP32[(($984)>>2)]=$986;
       $987=(($tbase_245_i+8)|0);
       $988=$987;
       $989=$988&7;
       $990=($989|0)==0;
       if ($990) {
        $995=0;
       } else {
        $992=(((-$988))|0);
        $993=$992&7;
        $995=$993;
       }

       $996=(($tbase_245_i+$995)|0);
       $_sum102_i=((($tsize_244_i)+(8))|0);
       $997=(($tbase_245_i+$_sum102_i)|0);
       $998=$997;
       $999=$998&7;
       $1000=($999|0)==0;
       if ($1000) {
        $1005=0;
       } else {
        $1002=(((-$998))|0);
        $1003=$1002&7;
        $1005=$1003;
       }

       $_sum103_i=((($1005)+($tsize_244_i))|0);
       $1006=(($tbase_245_i+$_sum103_i)|0);
       $1007=$1006;
       $1008=$1006;
       $1009=$996;
       $1010=((($1008)-($1009))|0);
       $_sum_i19_i=((($995)+($nb_0))|0);
       $1011=(($tbase_245_i+$_sum_i19_i)|0);
       $1012=$1011;
       $1013=((($1010)-($nb_0))|0);
       $1014=$nb_0|3;
       $_sum1_i20_i=((($995)+(4))|0);
       $1015=(($tbase_245_i+$_sum1_i20_i)|0);
       $1016=$1015;
       HEAP32[(($1016)>>2)]=$1014;
       $1017=((HEAP32[((752)>>2)])|0);
       $1018=($1007|0)==($1017|0);
       L345: do {
        if ($1018) {
         $1020=((HEAP32[((740)>>2)])|0);
         $1021=((($1020)+($1013))|0);
         HEAP32[((740)>>2)]=$1021;
         HEAP32[((752)>>2)]=$1012;
         $1022=$1021|1;
         $_sum46_i_i=((($_sum_i19_i)+(4))|0);
         $1023=(($tbase_245_i+$_sum46_i_i)|0);
         $1024=$1023;
         HEAP32[(($1024)>>2)]=$1022;
        } else {
         $1026=((HEAP32[((748)>>2)])|0);
         $1027=($1007|0)==($1026|0);
         if ($1027) {
          $1029=((HEAP32[((736)>>2)])|0);
          $1030=((($1029)+($1013))|0);
          HEAP32[((736)>>2)]=$1030;
          HEAP32[((748)>>2)]=$1012;
          $1031=$1030|1;
          $_sum44_i_i=((($_sum_i19_i)+(4))|0);
          $1032=(($tbase_245_i+$_sum44_i_i)|0);
          $1033=$1032;
          HEAP32[(($1033)>>2)]=$1031;
          $_sum45_i_i=((($1030)+($_sum_i19_i))|0);
          $1034=(($tbase_245_i+$_sum45_i_i)|0);
          $1035=$1034;
          HEAP32[(($1035)>>2)]=$1030;
          break;
         }
         $_sum2_i21_i=((($tsize_244_i)+(4))|0);
         $_sum104_i=((($_sum2_i21_i)+($1005))|0);
         $1037=(($tbase_245_i+$_sum104_i)|0);
         $1038=$1037;
         $1039=((HEAP32[(($1038)>>2)])|0);
         $1040=$1039&3;
         $1041=($1040|0)==1;
         if ($1041) {
          $1043=$1039&-8;
          $1044=$1039>>>3;
          $1045=($1039>>>0)<((256)>>>0);
          L353: do {
           if ($1045) {
            $_sum3940_i_i=$1005|8;
            $_sum114_i=((($_sum3940_i_i)+($tsize_244_i))|0);
            $1047=(($tbase_245_i+$_sum114_i)|0);
            $1048=$1047;
            $1049=((HEAP32[(($1048)>>2)])|0);
            $_sum41_i_i=((($tsize_244_i)+(12))|0);
            $_sum115_i=((($_sum41_i_i)+($1005))|0);
            $1050=(($tbase_245_i+$_sum115_i)|0);
            $1051=$1050;
            $1052=((HEAP32[(($1051)>>2)])|0);
            $1053=$1044<<1;
            $1054=((768+($1053<<2))|0);
            $1055=$1054;
            $1056=($1049|0)==($1055|0);
            do {
             if (!($1056)) {
              $1058=$1049;
              $1059=((HEAP32[((744)>>2)])|0);
              $1060=($1058>>>0)<($1059>>>0);
              if ($1060) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1062=(($1049+12)|0);
              $1063=((HEAP32[(($1062)>>2)])|0);
              $1064=($1063|0)==($1007|0);
              if ($1064) {
               break;
              }
              _abort(); return ((0)|0);
              return ((0)|0);
             }
            } while(0);
            $1065=($1052|0)==($1049|0);
            if ($1065) {
             $1067=1<<$1044;
             $1068=$1067^-1;
             $1069=((HEAP32[((728)>>2)])|0);
             $1070=$1069&$1068;
             HEAP32[((728)>>2)]=$1070;
             break;
            }
            $1072=($1052|0)==($1055|0);
            do {
             if ($1072) {
              $_pre62_i_i=(($1052+8)|0);
              $_pre_phi63_i_i=$_pre62_i_i;
             } else {
              $1074=$1052;
              $1075=((HEAP32[((744)>>2)])|0);
              $1076=($1074>>>0)<($1075>>>0);
              if ($1076) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1078=(($1052+8)|0);
              $1079=((HEAP32[(($1078)>>2)])|0);
              $1080=($1079|0)==($1007|0);
              if ($1080) {
               $_pre_phi63_i_i=$1078;
               break;
              }
              _abort(); return ((0)|0);
              return ((0)|0);
             }
            } while(0);

            $1081=(($1049+12)|0);
            HEAP32[(($1081)>>2)]=$1052;
            HEAP32[(($_pre_phi63_i_i)>>2)]=$1049;
           } else {
            $1083=$1006;
            $_sum34_i_i=$1005|24;
            $_sum105_i=((($_sum34_i_i)+($tsize_244_i))|0);
            $1084=(($tbase_245_i+$_sum105_i)|0);
            $1085=$1084;
            $1086=((HEAP32[(($1085)>>2)])|0);
            $_sum5_i_i=((($tsize_244_i)+(12))|0);
            $_sum106_i=((($_sum5_i_i)+($1005))|0);
            $1087=(($tbase_245_i+$_sum106_i)|0);
            $1088=$1087;
            $1089=((HEAP32[(($1088)>>2)])|0);
            $1090=($1089|0)==($1083|0);
            do {
             if ($1090) {
              $_sum67_i_i=$1005|16;
              $_sum112_i=((($_sum2_i21_i)+($_sum67_i_i))|0);
              $1108=(($tbase_245_i+$_sum112_i)|0);
              $1109=$1108;
              $1110=((HEAP32[(($1109)>>2)])|0);
              $1111=($1110|0)==0;
              if ($1111) {
               $_sum113_i=((($_sum67_i_i)+($tsize_244_i))|0);
               $1113=(($tbase_245_i+$_sum113_i)|0);
               $1114=$1113;
               $1115=((HEAP32[(($1114)>>2)])|0);
               $1116=($1115|0)==0;
               if ($1116) {
                $R_1_i_i=0;
                break;
               } else {
                $R_0_i_i=$1115;$RP_0_i_i=$1114;
               }
              } else {
               $R_0_i_i=$1110;$RP_0_i_i=$1109;
              }
              while(1) {


               $1117=(($R_0_i_i+20)|0);
               $1118=((HEAP32[(($1117)>>2)])|0);
               $1119=($1118|0)==0;
               if (!($1119)) {
                $R_0_i_i=$1118;$RP_0_i_i=$1117;
                continue;
               }
               $1121=(($R_0_i_i+16)|0);
               $1122=((HEAP32[(($1121)>>2)])|0);
               $1123=($1122|0)==0;
               if ($1123) {
                break;
               } else {
                $R_0_i_i=$1122;$RP_0_i_i=$1121;
               }
              }
              $1125=$RP_0_i_i;
              $1126=((HEAP32[((744)>>2)])|0);
              $1127=($1125>>>0)<($1126>>>0);
              if ($1127) {
               _abort(); return ((0)|0);
               return ((0)|0);
              } else {
               HEAP32[(($RP_0_i_i)>>2)]=0;
               $R_1_i_i=$R_0_i_i;
               break;
              }
             } else {
              $_sum3637_i_i=$1005|8;
              $_sum107_i=((($_sum3637_i_i)+($tsize_244_i))|0);
              $1092=(($tbase_245_i+$_sum107_i)|0);
              $1093=$1092;
              $1094=((HEAP32[(($1093)>>2)])|0);
              $1095=$1094;
              $1096=((HEAP32[((744)>>2)])|0);
              $1097=($1095>>>0)<($1096>>>0);
              if ($1097) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1099=(($1094+12)|0);
              $1100=((HEAP32[(($1099)>>2)])|0);
              $1101=($1100|0)==($1083|0);
              if (!($1101)) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1103=(($1089+8)|0);
              $1104=((HEAP32[(($1103)>>2)])|0);
              $1105=($1104|0)==($1083|0);
              if ($1105) {
               HEAP32[(($1099)>>2)]=$1089;
               HEAP32[(($1103)>>2)]=$1094;
               $R_1_i_i=$1089;
               break;
              } else {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
             }
            } while(0);

            $1131=($1086|0)==0;
            if ($1131) {
             break;
            }
            $_sum31_i_i=((($tsize_244_i)+(28))|0);
            $_sum108_i=((($_sum31_i_i)+($1005))|0);
            $1133=(($tbase_245_i+$_sum108_i)|0);
            $1134=$1133;
            $1135=((HEAP32[(($1134)>>2)])|0);
            $1136=((1032+($1135<<2))|0);
            $1137=((HEAP32[(($1136)>>2)])|0);
            $1138=($1083|0)==($1137|0);
            do {
             if ($1138) {
              HEAP32[(($1136)>>2)]=$R_1_i_i;
              $cond_i_i=($R_1_i_i|0)==0;
              if (!($cond_i_i)) {
               break;
              }
              $1140=((HEAP32[(($1134)>>2)])|0);
              $1141=1<<$1140;
              $1142=$1141^-1;
              $1143=((HEAP32[((732)>>2)])|0);
              $1144=$1143&$1142;
              HEAP32[((732)>>2)]=$1144;
              break L353;
             } else {
              $1146=$1086;
              $1147=((HEAP32[((744)>>2)])|0);
              $1148=($1146>>>0)<($1147>>>0);
              if ($1148) {
               _abort(); return ((0)|0);
               return ((0)|0);
              }
              $1150=(($1086+16)|0);
              $1151=((HEAP32[(($1150)>>2)])|0);
              $1152=($1151|0)==($1083|0);
              if ($1152) {
               HEAP32[(($1150)>>2)]=$R_1_i_i;
              } else {
               $1155=(($1086+20)|0);
               HEAP32[(($1155)>>2)]=$R_1_i_i;
              }
              $1158=($R_1_i_i|0)==0;
              if ($1158) {
               break L353;
              }
             }
            } while(0);
            $1160=$R_1_i_i;
            $1161=((HEAP32[((744)>>2)])|0);
            $1162=($1160>>>0)<($1161>>>0);
            if ($1162) {
             _abort(); return ((0)|0);
             return ((0)|0);
            }
            $1164=(($R_1_i_i+24)|0);
            HEAP32[(($1164)>>2)]=$1086;
            $_sum3233_i_i=$1005|16;
            $_sum109_i=((($_sum3233_i_i)+($tsize_244_i))|0);
            $1165=(($tbase_245_i+$_sum109_i)|0);
            $1166=$1165;
            $1167=((HEAP32[(($1166)>>2)])|0);
            $1168=($1167|0)==0;
            do {
             if (!($1168)) {
              $1170=$1167;
              $1171=((HEAP32[((744)>>2)])|0);
              $1172=($1170>>>0)<($1171>>>0);
              if ($1172) {
               _abort(); return ((0)|0);
               return ((0)|0);
              } else {
               $1174=(($R_1_i_i+16)|0);
               HEAP32[(($1174)>>2)]=$1167;
               $1175=(($1167+24)|0);
               HEAP32[(($1175)>>2)]=$R_1_i_i;
               break;
              }
             }
            } while(0);
            $_sum110_i=((($_sum2_i21_i)+($_sum3233_i_i))|0);
            $1178=(($tbase_245_i+$_sum110_i)|0);
            $1179=$1178;
            $1180=((HEAP32[(($1179)>>2)])|0);
            $1181=($1180|0)==0;
            if ($1181) {
             break;
            }
            $1183=$1180;
            $1184=((HEAP32[((744)>>2)])|0);
            $1185=($1183>>>0)<($1184>>>0);
            if ($1185) {
             _abort(); return ((0)|0);
             return ((0)|0);
            } else {
             $1187=(($R_1_i_i+20)|0);
             HEAP32[(($1187)>>2)]=$1180;
             $1188=(($1180+24)|0);
             HEAP32[(($1188)>>2)]=$R_1_i_i;
             break;
            }
           }
          } while(0);
          $_sum9_i_i=$1043|$1005;
          $_sum111_i=((($_sum9_i_i)+($tsize_244_i))|0);
          $1192=(($tbase_245_i+$_sum111_i)|0);
          $1193=$1192;
          $1194=((($1043)+($1013))|0);
          $oldfirst_0_i_i=$1193;$qsize_0_i_i=$1194;
         } else {
          $oldfirst_0_i_i=$1007;$qsize_0_i_i=$1013;
         }


         $1196=(($oldfirst_0_i_i+4)|0);
         $1197=((HEAP32[(($1196)>>2)])|0);
         $1198=$1197&-2;
         HEAP32[(($1196)>>2)]=$1198;
         $1199=$qsize_0_i_i|1;
         $_sum10_i_i=((($_sum_i19_i)+(4))|0);
         $1200=(($tbase_245_i+$_sum10_i_i)|0);
         $1201=$1200;
         HEAP32[(($1201)>>2)]=$1199;
         $_sum11_i_i=((($qsize_0_i_i)+($_sum_i19_i))|0);
         $1202=(($tbase_245_i+$_sum11_i_i)|0);
         $1203=$1202;
         HEAP32[(($1203)>>2)]=$qsize_0_i_i;
         $1204=$qsize_0_i_i>>>3;
         $1205=($qsize_0_i_i>>>0)<((256)>>>0);
         if ($1205) {
          $1207=$1204<<1;
          $1208=((768+($1207<<2))|0);
          $1209=$1208;
          $1210=((HEAP32[((728)>>2)])|0);
          $1211=1<<$1204;
          $1212=$1210&$1211;
          $1213=($1212|0)==0;
          do {
           if ($1213) {
            $1215=$1210|$1211;
            HEAP32[((728)>>2)]=$1215;
            $_sum27_pre_i_i=((($1207)+(2))|0);
            $_pre_i22_i=((768+($_sum27_pre_i_i<<2))|0);
            $F4_0_i_i=$1209;$_pre_phi_i23_i=$_pre_i22_i;
           } else {
            $_sum30_i_i=((($1207)+(2))|0);
            $1217=((768+($_sum30_i_i<<2))|0);
            $1218=((HEAP32[(($1217)>>2)])|0);
            $1219=$1218;
            $1220=((HEAP32[((744)>>2)])|0);
            $1221=($1219>>>0)<($1220>>>0);
            if (!($1221)) {
             $F4_0_i_i=$1218;$_pre_phi_i23_i=$1217;
             break;
            }
            _abort(); return ((0)|0);
            return ((0)|0);
           }
          } while(0);


          HEAP32[(($_pre_phi_i23_i)>>2)]=$1012;
          $1224=(($F4_0_i_i+12)|0);
          HEAP32[(($1224)>>2)]=$1012;
          $_sum28_i_i=((($_sum_i19_i)+(8))|0);
          $1225=(($tbase_245_i+$_sum28_i_i)|0);
          $1226=$1225;
          HEAP32[(($1226)>>2)]=$F4_0_i_i;
          $_sum29_i_i=((($_sum_i19_i)+(12))|0);
          $1227=(($tbase_245_i+$_sum29_i_i)|0);
          $1228=$1227;
          HEAP32[(($1228)>>2)]=$1209;
          break;
         }
         $1230=$1011;
         $1231=$qsize_0_i_i>>>8;
         $1232=($1231|0)==0;
         do {
          if ($1232) {
           $I7_0_i_i=0;
          } else {
           $1234=($qsize_0_i_i>>>0)>((16777215)>>>0);
           if ($1234) {
            $I7_0_i_i=31;
            break;
           }
           $1236=((($1231)+(1048320))|0);
           $1237=$1236>>>16;
           $1238=$1237&8;
           $1239=$1231<<$1238;
           $1240=((($1239)+(520192))|0);
           $1241=$1240>>>16;
           $1242=$1241&4;
           $1243=$1242|$1238;
           $1244=$1239<<$1242;
           $1245=((($1244)+(245760))|0);
           $1246=$1245>>>16;
           $1247=$1246&2;
           $1248=$1243|$1247;
           $1249=(((14)-($1248))|0);
           $1250=$1244<<$1247;
           $1251=$1250>>>15;
           $1252=((($1249)+($1251))|0);
           $1253=$1252<<1;
           $1254=((($1252)+(7))|0);
           $1255=$qsize_0_i_i>>>($1254>>>0);
           $1256=$1255&1;
           $1257=$1256|$1253;
           $I7_0_i_i=$1257;
          }
         } while(0);

         $1259=((1032+($I7_0_i_i<<2))|0);
         $_sum12_i24_i=((($_sum_i19_i)+(28))|0);
         $1260=(($tbase_245_i+$_sum12_i24_i)|0);
         $1261=$1260;
         HEAP32[(($1261)>>2)]=$I7_0_i_i;
         $_sum13_i_i=((($_sum_i19_i)+(16))|0);
         $1262=(($tbase_245_i+$_sum13_i_i)|0);
         $_sum14_i_i=((($_sum_i19_i)+(20))|0);
         $1263=(($tbase_245_i+$_sum14_i_i)|0);
         $1264=$1263;
         HEAP32[(($1264)>>2)]=0;
         $1265=$1262;
         HEAP32[(($1265)>>2)]=0;
         $1266=((HEAP32[((732)>>2)])|0);
         $1267=1<<$I7_0_i_i;
         $1268=$1266&$1267;
         $1269=($1268|0)==0;
         if ($1269) {
          $1271=$1266|$1267;
          HEAP32[((732)>>2)]=$1271;
          HEAP32[(($1259)>>2)]=$1230;
          $1272=$1259;
          $_sum15_i_i=((($_sum_i19_i)+(24))|0);
          $1273=(($tbase_245_i+$_sum15_i_i)|0);
          $1274=$1273;
          HEAP32[(($1274)>>2)]=$1272;
          $_sum16_i_i=((($_sum_i19_i)+(12))|0);
          $1275=(($tbase_245_i+$_sum16_i_i)|0);
          $1276=$1275;
          HEAP32[(($1276)>>2)]=$1230;
          $_sum17_i_i=((($_sum_i19_i)+(8))|0);
          $1277=(($tbase_245_i+$_sum17_i_i)|0);
          $1278=$1277;
          HEAP32[(($1278)>>2)]=$1230;
          break;
         }
         $1280=((HEAP32[(($1259)>>2)])|0);
         $1281=($I7_0_i_i|0)==31;
         if ($1281) {
          $1286=0;
         } else {
          $1283=$I7_0_i_i>>>1;
          $1284=(((25)-($1283))|0);
          $1286=$1284;
         }

         $1287=(($1280+4)|0);
         $1288=((HEAP32[(($1287)>>2)])|0);
         $1289=$1288&-8;
         $1290=($1289|0)==($qsize_0_i_i|0);
         L442: do {
          if ($1290) {
           $T_0_lcssa_i26_i=$1280;
          } else {
           $1291=$qsize_0_i_i<<$1286;
           $T_056_i_i=$1280;$K8_057_i_i=$1291;
           while(1) {


            $1299=$K8_057_i_i>>>31;
            $1300=(($T_056_i_i+16+($1299<<2))|0);
            $1301=((HEAP32[(($1300)>>2)])|0);
            $1302=($1301|0)==0;
            if ($1302) {
             break;
            }
            $1293=$K8_057_i_i<<1;
            $1294=(($1301+4)|0);
            $1295=((HEAP32[(($1294)>>2)])|0);
            $1296=$1295&-8;
            $1297=($1296|0)==($qsize_0_i_i|0);
            if ($1297) {
             $T_0_lcssa_i26_i=$1301;
             break L442;
            } else {
             $T_056_i_i=$1301;$K8_057_i_i=$1293;
            }
           }
           $1304=$1300;
           $1305=((HEAP32[((744)>>2)])|0);
           $1306=($1304>>>0)<($1305>>>0);
           if ($1306) {
            _abort(); return ((0)|0);
            return ((0)|0);
           } else {
            HEAP32[(($1300)>>2)]=$1230;
            $_sum24_i_i=((($_sum_i19_i)+(24))|0);
            $1308=(($tbase_245_i+$_sum24_i_i)|0);
            $1309=$1308;
            HEAP32[(($1309)>>2)]=$T_056_i_i;
            $_sum25_i_i=((($_sum_i19_i)+(12))|0);
            $1310=(($tbase_245_i+$_sum25_i_i)|0);
            $1311=$1310;
            HEAP32[(($1311)>>2)]=$1230;
            $_sum26_i_i=((($_sum_i19_i)+(8))|0);
            $1312=(($tbase_245_i+$_sum26_i_i)|0);
            $1313=$1312;
            HEAP32[(($1313)>>2)]=$1230;
            break L345;
           }
          }
         } while(0);

         $1315=(($T_0_lcssa_i26_i+8)|0);
         $1316=((HEAP32[(($1315)>>2)])|0);
         $1317=$T_0_lcssa_i26_i;
         $1318=((HEAP32[((744)>>2)])|0);
         $1319=($1317>>>0)>=($1318>>>0);
         $1320=$1316;
         $1321=($1320>>>0)>=($1318>>>0);
         $or_cond_i27_i=$1319&$1321;
         if ($or_cond_i27_i) {
          $1323=(($1316+12)|0);
          HEAP32[(($1323)>>2)]=$1230;
          HEAP32[(($1315)>>2)]=$1230;
          $_sum21_i_i=((($_sum_i19_i)+(8))|0);
          $1324=(($tbase_245_i+$_sum21_i_i)|0);
          $1325=$1324;
          HEAP32[(($1325)>>2)]=$1316;
          $_sum22_i_i=((($_sum_i19_i)+(12))|0);
          $1326=(($tbase_245_i+$_sum22_i_i)|0);
          $1327=$1326;
          HEAP32[(($1327)>>2)]=$T_0_lcssa_i26_i;
          $_sum23_i_i=((($_sum_i19_i)+(24))|0);
          $1328=(($tbase_245_i+$_sum23_i_i)|0);
          $1329=$1328;
          HEAP32[(($1329)>>2)]=0;
          break;
         } else {
          _abort(); return ((0)|0);
          return ((0)|0);
         }
        }
       } while(0);
       $_sum1819_i_i=$995|8;
       $1330=(($tbase_245_i+$_sum1819_i_i)|0);
       $mem_0=$1330;

       return (($mem_0)|0);
      }
     } while(0);
     $1331=$891;
     $sp_0_i_i_i=1176;
     while(1) {

      $1333=(($sp_0_i_i_i)|0);
      $1334=((HEAP32[(($1333)>>2)])|0);
      $1335=($1334>>>0)>($1331>>>0);
      if (!($1335)) {
       $1337=(($sp_0_i_i_i+4)|0);
       $1338=((HEAP32[(($1337)>>2)])|0);
       $1339=(($1334+$1338)|0);
       $1340=($1339>>>0)>($1331>>>0);
       if ($1340) {
        break;
       }
      }
      $1342=(($sp_0_i_i_i+8)|0);
      $1343=((HEAP32[(($1342)>>2)])|0);
      $sp_0_i_i_i=$1343;
     }
     $_sum_i13_i=((($1338)-(47))|0);
     $_sum1_i14_i=((($1338)-(39))|0);
     $1344=(($1334+$_sum1_i14_i)|0);
     $1345=$1344;
     $1346=$1345&7;
     $1347=($1346|0)==0;
     if ($1347) {
      $1352=0;
     } else {
      $1349=(((-$1345))|0);
      $1350=$1349&7;
      $1352=$1350;
     }

     $_sum2_i15_i=((($_sum_i13_i)+($1352))|0);
     $1353=(($1334+$_sum2_i15_i)|0);
     $1354=(($891+16)|0);
     $1355=$1354;
     $1356=($1353>>>0)<($1355>>>0);
     $1357=($1356?$1331:$1353);
     $1358=(($1357+8)|0);
     $1359=$1358;
     $1360=((($tsize_244_i)-(40))|0);
     $1361=(($tbase_245_i+8)|0);
     $1362=$1361;
     $1363=$1362&7;
     $1364=($1363|0)==0;
     if ($1364) {
      $1368=0;
     } else {
      $1366=(((-$1362))|0);
      $1367=$1366&7;
      $1368=$1367;
     }

     $1369=(($tbase_245_i+$1368)|0);
     $1370=$1369;
     $1371=((($1360)-($1368))|0);
     HEAP32[((752)>>2)]=$1370;
     HEAP32[((740)>>2)]=$1371;
     $1372=$1371|1;
     $_sum_i_i_i=((($1368)+(4))|0);
     $1373=(($tbase_245_i+$_sum_i_i_i)|0);
     $1374=$1373;
     HEAP32[(($1374)>>2)]=$1372;
     $_sum2_i_i_i=((($tsize_244_i)-(36))|0);
     $1375=(($tbase_245_i+$_sum2_i_i_i)|0);
     $1376=$1375;
     HEAP32[(($1376)>>2)]=40;
     $1377=((HEAP32[((720)>>2)])|0);
     HEAP32[((756)>>2)]=$1377;
     $1378=(($1357+4)|0);
     $1379=$1378;
     HEAP32[(($1379)>>2)]=27;
     HEAP32[(($1358)>>2)]=((HEAP32[((1176)>>2)])|0);HEAP32[((($1358)+(4))>>2)]=((HEAP32[((1180)>>2)])|0);HEAP32[((($1358)+(8))>>2)]=((HEAP32[((1184)>>2)])|0);HEAP32[((($1358)+(12))>>2)]=((HEAP32[((1188)>>2)])|0);
     HEAP32[((1176)>>2)]=$tbase_245_i;
     HEAP32[((1180)>>2)]=$tsize_244_i;
     HEAP32[((1188)>>2)]=0;
     HEAP32[((1184)>>2)]=$1359;
     $1380=(($1357+28)|0);
     $1381=$1380;
     HEAP32[(($1381)>>2)]=7;
     $1382=(($1357+32)|0);
     $1383=($1382>>>0)<($1339>>>0);
     if ($1383) {
      $1384=$1381;
      while(1) {

       $1385=(($1384+4)|0);
       HEAP32[(($1385)>>2)]=7;
       $1386=(($1384+8)|0);
       $1387=$1386;
       $1388=($1387>>>0)<($1339>>>0);
       if ($1388) {
        $1384=$1385;
       } else {
        break;
       }
      }
     }
     $1389=($1357|0)==($1331|0);
     if ($1389) {
      break;
     }
     $1391=$1357;
     $1392=$891;
     $1393=((($1391)-($1392))|0);
     $1394=(($1331+$1393)|0);
     $_sum3_i_i=((($1393)+(4))|0);
     $1395=(($1331+$_sum3_i_i)|0);
     $1396=$1395;
     $1397=((HEAP32[(($1396)>>2)])|0);
     $1398=$1397&-2;
     HEAP32[(($1396)>>2)]=$1398;
     $1399=$1393|1;
     $1400=(($891+4)|0);
     HEAP32[(($1400)>>2)]=$1399;
     $1401=$1394;
     HEAP32[(($1401)>>2)]=$1393;
     $1402=$1393>>>3;
     $1403=($1393>>>0)<((256)>>>0);
     if ($1403) {
      $1405=$1402<<1;
      $1406=((768+($1405<<2))|0);
      $1407=$1406;
      $1408=((HEAP32[((728)>>2)])|0);
      $1409=1<<$1402;
      $1410=$1408&$1409;
      $1411=($1410|0)==0;
      do {
       if ($1411) {
        $1413=$1408|$1409;
        HEAP32[((728)>>2)]=$1413;
        $_sum11_pre_i_i=((($1405)+(2))|0);
        $_pre_i_i=((768+($_sum11_pre_i_i<<2))|0);
        $F_0_i_i=$1407;$_pre_phi_i_i=$_pre_i_i;
       } else {
        $_sum12_i_i=((($1405)+(2))|0);
        $1415=((768+($_sum12_i_i<<2))|0);
        $1416=((HEAP32[(($1415)>>2)])|0);
        $1417=$1416;
        $1418=((HEAP32[((744)>>2)])|0);
        $1419=($1417>>>0)<($1418>>>0);
        if (!($1419)) {
         $F_0_i_i=$1416;$_pre_phi_i_i=$1415;
         break;
        }
        _abort(); return ((0)|0);
        return ((0)|0);
       }
      } while(0);


      HEAP32[(($_pre_phi_i_i)>>2)]=$891;
      $1422=(($F_0_i_i+12)|0);
      HEAP32[(($1422)>>2)]=$891;
      $1423=(($891+8)|0);
      HEAP32[(($1423)>>2)]=$F_0_i_i;
      $1424=(($891+12)|0);
      HEAP32[(($1424)>>2)]=$1407;
      break;
     }
     $1426=$891;
     $1427=$1393>>>8;
     $1428=($1427|0)==0;
     do {
      if ($1428) {
       $I1_0_i_i=0;
      } else {
       $1430=($1393>>>0)>((16777215)>>>0);
       if ($1430) {
        $I1_0_i_i=31;
        break;
       }
       $1432=((($1427)+(1048320))|0);
       $1433=$1432>>>16;
       $1434=$1433&8;
       $1435=$1427<<$1434;
       $1436=((($1435)+(520192))|0);
       $1437=$1436>>>16;
       $1438=$1437&4;
       $1439=$1438|$1434;
       $1440=$1435<<$1438;
       $1441=((($1440)+(245760))|0);
       $1442=$1441>>>16;
       $1443=$1442&2;
       $1444=$1439|$1443;
       $1445=(((14)-($1444))|0);
       $1446=$1440<<$1443;
       $1447=$1446>>>15;
       $1448=((($1445)+($1447))|0);
       $1449=$1448<<1;
       $1450=((($1448)+(7))|0);
       $1451=$1393>>>($1450>>>0);
       $1452=$1451&1;
       $1453=$1452|$1449;
       $I1_0_i_i=$1453;
      }
     } while(0);

     $1455=((1032+($I1_0_i_i<<2))|0);
     $1456=(($891+28)|0);
     $I1_0_c_i_i=$I1_0_i_i;
     HEAP32[(($1456)>>2)]=$I1_0_c_i_i;
     $1457=(($891+20)|0);
     HEAP32[(($1457)>>2)]=0;
     $1458=(($891+16)|0);
     HEAP32[(($1458)>>2)]=0;
     $1459=((HEAP32[((732)>>2)])|0);
     $1460=1<<$I1_0_i_i;
     $1461=$1459&$1460;
     $1462=($1461|0)==0;
     if ($1462) {
      $1464=$1459|$1460;
      HEAP32[((732)>>2)]=$1464;
      HEAP32[(($1455)>>2)]=$1426;
      $1465=(($891+24)|0);
      $_c_i_i=$1455;
      HEAP32[(($1465)>>2)]=$_c_i_i;
      $1466=(($891+12)|0);
      HEAP32[(($1466)>>2)]=$891;
      $1467=(($891+8)|0);
      HEAP32[(($1467)>>2)]=$891;
      break;
     }
     $1469=((HEAP32[(($1455)>>2)])|0);
     $1470=($I1_0_i_i|0)==31;
     if ($1470) {
      $1475=0;
     } else {
      $1472=$I1_0_i_i>>>1;
      $1473=(((25)-($1472))|0);
      $1475=$1473;
     }

     $1476=(($1469+4)|0);
     $1477=((HEAP32[(($1476)>>2)])|0);
     $1478=$1477&-8;
     $1479=($1478|0)==($1393|0);
     L493: do {
      if ($1479) {
       $T_0_lcssa_i_i=$1469;
      } else {
       $1480=$1393<<$1475;
       $T_015_i_i=$1469;$K2_016_i_i=$1480;
       while(1) {


        $1488=$K2_016_i_i>>>31;
        $1489=(($T_015_i_i+16+($1488<<2))|0);
        $1490=((HEAP32[(($1489)>>2)])|0);
        $1491=($1490|0)==0;
        if ($1491) {
         break;
        }
        $1482=$K2_016_i_i<<1;
        $1483=(($1490+4)|0);
        $1484=((HEAP32[(($1483)>>2)])|0);
        $1485=$1484&-8;
        $1486=($1485|0)==($1393|0);
        if ($1486) {
         $T_0_lcssa_i_i=$1490;
         break L493;
        } else {
         $T_015_i_i=$1490;$K2_016_i_i=$1482;
        }
       }
       $1493=$1489;
       $1494=((HEAP32[((744)>>2)])|0);
       $1495=($1493>>>0)<($1494>>>0);
       if ($1495) {
        _abort(); return ((0)|0);
        return ((0)|0);
       } else {
        HEAP32[(($1489)>>2)]=$1426;
        $1497=(($891+24)|0);
        $T_0_c8_i_i=$T_015_i_i;
        HEAP32[(($1497)>>2)]=$T_0_c8_i_i;
        $1498=(($891+12)|0);
        HEAP32[(($1498)>>2)]=$891;
        $1499=(($891+8)|0);
        HEAP32[(($1499)>>2)]=$891;
        break L308;
       }
      }
     } while(0);

     $1501=(($T_0_lcssa_i_i+8)|0);
     $1502=((HEAP32[(($1501)>>2)])|0);
     $1503=$T_0_lcssa_i_i;
     $1504=((HEAP32[((744)>>2)])|0);
     $1505=($1503>>>0)>=($1504>>>0);
     $1506=$1502;
     $1507=($1506>>>0)>=($1504>>>0);
     $or_cond_i_i=$1505&$1507;
     if ($or_cond_i_i) {
      $1509=(($1502+12)|0);
      HEAP32[(($1509)>>2)]=$1426;
      HEAP32[(($1501)>>2)]=$1426;
      $1510=(($891+8)|0);
      $_c7_i_i=$1502;
      HEAP32[(($1510)>>2)]=$_c7_i_i;
      $1511=(($891+12)|0);
      $T_0_c_i_i=$T_0_lcssa_i_i;
      HEAP32[(($1511)>>2)]=$T_0_c_i_i;
      $1512=(($891+24)|0);
      HEAP32[(($1512)>>2)]=0;
      break;
     } else {
      _abort(); return ((0)|0);
      return ((0)|0);
     }
    }
   } while(0);
   $1513=((HEAP32[((740)>>2)])|0);
   $1514=($1513>>>0)>($nb_0>>>0);
   if (!($1514)) {
    break;
   }
   $1516=((($1513)-($nb_0))|0);
   HEAP32[((740)>>2)]=$1516;
   $1517=((HEAP32[((752)>>2)])|0);
   $1518=$1517;
   $1519=(($1518+$nb_0)|0);
   $1520=$1519;
   HEAP32[((752)>>2)]=$1520;
   $1521=$1516|1;
   $_sum_i34=((($nb_0)+(4))|0);
   $1522=(($1518+$_sum_i34)|0);
   $1523=$1522;
   HEAP32[(($1523)>>2)]=$1521;
   $1524=$nb_0|3;
   $1525=(($1517+4)|0);
   HEAP32[(($1525)>>2)]=$1524;
   $1526=(($1517+8)|0);
   $1527=$1526;
   $mem_0=$1527;

   return (($mem_0)|0);
  }
 } while(0);
 $1528=((___errno_location())|0);
 HEAP32[(($1528)>>2)]=12;
 $mem_0=0;

 return (($mem_0)|0);
}


function _free($mem){
 $mem=($mem)|0;
 var $1=0,$3=0,$4=0,$5=0,$6=0,$8=0,$9=0,$10=0,$11=0,$12=0,$14=0,$_sum=0,$15=0,$16=0,$17=0,$18=0,$20=0,$21=0,$22=0,$_sum3=0;
 var $24=0,$25=0,$26=0,$27=0,$29=0,$30=0,$32=0,$33=0,$_sum47=0,$35=0,$36=0,$37=0,$_sum48=0,$38=0,$39=0,$40=0,$41=0,$42=0,$43=0,$44=0;
 var $46=0,$47=0,$49=0,$50=0,$51=0,$52=0,$54=0,$55=0,$56=0,$57=0,$59=0,$_pre82=0,$61=0,$62=0,$64=0,$65=0,$66=0,$_pre_phi83=0,$67=0,$69=0;
 var $_sum37=0,$70=0,$71=0,$72=0,$_sum38=0,$73=0,$74=0,$75=0,$76=0,$_sum44=0,$78=0,$79=0,$80=0,$81=0,$82=0,$84=0,$85=0,$86=0,$88=0,$89=0;
 var $90=0,$_sum40=0,$93=0,$94=0,$95=0,$96=0,$_sum39=0,$98=0,$99=0,$100=0,$101=0,$RP_0=0,$R_0=0,$102=0,$103=0,$104=0,$106=0,$107=0,$108=0,$110=0;
 var $111=0,$R_1=0,$115=0,$_sum41=0,$117=0,$118=0,$119=0,$120=0,$121=0,$122=0,$cond=0,$124=0,$125=0,$126=0,$127=0,$128=0,$130=0,$131=0,$132=0,$134=0;
 var $135=0,$136=0,$139=0,$142=0,$144=0,$145=0,$146=0,$148=0,$_sum42=0,$149=0,$150=0,$151=0,$152=0,$154=0,$155=0,$156=0,$158=0,$159=0,$_sum43=0,$162=0;
 var $163=0,$164=0,$165=0,$167=0,$168=0,$169=0,$171=0,$172=0,$_sum4=0,$176=0,$177=0,$178=0,$179=0,$180=0,$182=0,$183=0,$184=0,$_sum35=0,$185=0,$186=0;
 var $187=0,$psize_0=0,$p_0=0,$189=0,$190=0,$_sum34=0,$192=0,$193=0,$194=0,$195=0,$phitmp=0,$197=0,$198=0,$200=0,$201=0,$203=0,$204=0,$205=0,$206=0,$207=0;
 var $208=0,$211=0,$212=0,$214=0,$215=0,$216=0,$217=0,$218=0,$219=0,$221=0,$222=0,$223=0,$224=0,$226=0,$227=0,$228=0,$_sum2829=0,$229=0,$230=0,$231=0;
 var $232=0,$233=0,$234=0,$235=0,$237=0,$238=0,$239=0,$241=0,$242=0,$243=0,$244=0,$246=0,$247=0,$248=0,$249=0,$251=0,$_pre80=0,$253=0,$254=0,$255=0;
 var $257=0,$258=0,$259=0,$_pre_phi81=0,$260=0,$262=0,$_sum6=0,$263=0,$264=0,$265=0,$_sum78=0,$266=0,$267=0,$268=0,$269=0,$271=0,$272=0,$273=0,$274=0,$275=0;
 var $276=0,$278=0,$279=0,$280=0,$282=0,$283=0,$284=0,$_sum10=0,$287=0,$288=0,$289=0,$290=0,$_sum9=0,$292=0,$293=0,$294=0,$295=0,$RP9_0=0,$R7_0=0,$296=0;
 var $297=0,$298=0,$300=0,$301=0,$302=0,$304=0,$305=0,$306=0,$R7_1=0,$310=0,$_sum21=0,$312=0,$313=0,$314=0,$315=0,$316=0,$317=0,$cond69=0,$319=0,$320=0;
 var $321=0,$322=0,$323=0,$325=0,$326=0,$327=0,$329=0,$330=0,$331=0,$334=0,$337=0,$339=0,$340=0,$341=0,$343=0,$_sum22=0,$344=0,$345=0,$346=0,$347=0;
 var $349=0,$350=0,$351=0,$353=0,$354=0,$_sum23=0,$357=0,$358=0,$359=0,$360=0,$362=0,$363=0,$364=0,$366=0,$367=0,$371=0,$372=0,$373=0,$374=0,$375=0;
 var $376=0,$379=0,$380=0,$381=0,$382=0,$383=0,$psize_1=0,$385=0,$386=0,$388=0,$389=0,$390=0,$391=0,$392=0,$393=0,$394=0,$396=0,$_sum19_pre=0,$_pre=0,$_sum20=0;
 var $398=0,$399=0,$400=0,$401=0,$402=0,$_pre_phi=0,$F16_0=0,$405=0,$406=0,$407=0,$409=0,$410=0,$411=0,$413=0,$415=0,$416=0,$417=0,$418=0,$419=0,$420=0;
 var $421=0,$422=0,$423=0,$424=0,$425=0,$426=0,$427=0,$428=0,$429=0,$430=0,$431=0,$432=0,$433=0,$434=0,$435=0,$436=0,$I18_0=0,$438=0,$439=0,$I18_0_c=0;
 var $440=0,$441=0,$442=0,$443=0,$444=0,$445=0,$447=0,$448=0,$_c=0,$449=0,$450=0,$452=0,$453=0,$455=0,$456=0,$458=0,$459=0,$460=0,$461=0,$462=0;
 var $463=0,$465=0,$466=0,$467=0,$468=0,$469=0,$K19_073=0,$T_072=0,$471=0,$472=0,$473=0,$474=0,$476=0,$477=0,$478=0,$480=0,$T_0_c16=0,$481=0,$482=0,$T_0_lcssa=0;
 var $484=0,$485=0,$486=0,$487=0,$488=0,$489=0,$490=0,$or_cond=0,$492=0,$493=0,$_c15=0,$494=0,$T_0_c=0,$495=0,$497=0,$498=0,$499=0,$sp_0_in_i=0,$sp_0_i=0,$500=0;
 var $501=0,label=0;

 $1=($mem|0)==0;
 if ($1) {
  return;
 }
 $3=((($mem)-(8))|0);
 $4=$3;
 $5=((HEAP32[((744)>>2)])|0);
 $6=($3>>>0)<($5>>>0);
 if ($6) {
  _abort();

 }
 $8=((($mem)-(4))|0);
 $9=$8;
 $10=((HEAP32[(($9)>>2)])|0);
 $11=$10&3;
 $12=($11|0)==1;
 if ($12) {
  _abort();

 }
 $14=$10&-8;
 $_sum=((($14)-(8))|0);
 $15=(($mem+$_sum)|0);
 $16=$15;
 $17=$10&1;
 $18=($17|0)==0;
 L10: do {
  if ($18) {
   $20=$3;
   $21=((HEAP32[(($20)>>2)])|0);
   $22=($11|0)==0;
   if ($22) {
    return;
   }
   $_sum3=(((-8)-($21))|0);
   $24=(($mem+$_sum3)|0);
   $25=$24;
   $26=((($21)+($14))|0);
   $27=($24>>>0)<($5>>>0);
   if ($27) {
    _abort();

   }
   $29=((HEAP32[((748)>>2)])|0);
   $30=($25|0)==($29|0);
   if ($30) {
    $_sum4=((($14)-(4))|0);
    $176=(($mem+$_sum4)|0);
    $177=$176;
    $178=((HEAP32[(($177)>>2)])|0);
    $179=$178&3;
    $180=($179|0)==3;
    if (!($180)) {
     $p_0=$25;$psize_0=$26;
     break;
    }
    HEAP32[((736)>>2)]=$26;
    $182=((HEAP32[(($177)>>2)])|0);
    $183=$182&-2;
    HEAP32[(($177)>>2)]=$183;
    $184=$26|1;
    $_sum35=((($_sum3)+(4))|0);
    $185=(($mem+$_sum35)|0);
    $186=$185;
    HEAP32[(($186)>>2)]=$184;
    $187=$15;
    HEAP32[(($187)>>2)]=$26;
    return;
   }
   $32=$21>>>3;
   $33=($21>>>0)<((256)>>>0);
   if ($33) {
    $_sum47=((($_sum3)+(8))|0);
    $35=(($mem+$_sum47)|0);
    $36=$35;
    $37=((HEAP32[(($36)>>2)])|0);
    $_sum48=((($_sum3)+(12))|0);
    $38=(($mem+$_sum48)|0);
    $39=$38;
    $40=((HEAP32[(($39)>>2)])|0);
    $41=$32<<1;
    $42=((768+($41<<2))|0);
    $43=$42;
    $44=($37|0)==($43|0);
    do {
     if (!($44)) {
      $46=$37;
      $47=($46>>>0)<($5>>>0);
      if ($47) {
       _abort();

      }
      $49=(($37+12)|0);
      $50=((HEAP32[(($49)>>2)])|0);
      $51=($50|0)==($25|0);
      if ($51) {
       break;
      }
      _abort();

     }
    } while(0);
    $52=($40|0)==($37|0);
    if ($52) {
     $54=1<<$32;
     $55=$54^-1;
     $56=((HEAP32[((728)>>2)])|0);
     $57=$56&$55;
     HEAP32[((728)>>2)]=$57;
     $p_0=$25;$psize_0=$26;
     break;
    }
    $59=($40|0)==($43|0);
    do {
     if ($59) {
      $_pre82=(($40+8)|0);
      $_pre_phi83=$_pre82;
     } else {
      $61=$40;
      $62=($61>>>0)<($5>>>0);
      if ($62) {
       _abort();

      }
      $64=(($40+8)|0);
      $65=((HEAP32[(($64)>>2)])|0);
      $66=($65|0)==($25|0);
      if ($66) {
       $_pre_phi83=$64;
       break;
      }
      _abort();

     }
    } while(0);

    $67=(($37+12)|0);
    HEAP32[(($67)>>2)]=$40;
    HEAP32[(($_pre_phi83)>>2)]=$37;
    $p_0=$25;$psize_0=$26;
    break;
   }
   $69=$24;
   $_sum37=((($_sum3)+(24))|0);
   $70=(($mem+$_sum37)|0);
   $71=$70;
   $72=((HEAP32[(($71)>>2)])|0);
   $_sum38=((($_sum3)+(12))|0);
   $73=(($mem+$_sum38)|0);
   $74=$73;
   $75=((HEAP32[(($74)>>2)])|0);
   $76=($75|0)==($69|0);
   do {
    if ($76) {
     $_sum40=((($_sum3)+(20))|0);
     $93=(($mem+$_sum40)|0);
     $94=$93;
     $95=((HEAP32[(($94)>>2)])|0);
     $96=($95|0)==0;
     if ($96) {
      $_sum39=((($_sum3)+(16))|0);
      $98=(($mem+$_sum39)|0);
      $99=$98;
      $100=((HEAP32[(($99)>>2)])|0);
      $101=($100|0)==0;
      if ($101) {
       $R_1=0;
       break;
      } else {
       $R_0=$100;$RP_0=$99;
      }
     } else {
      $R_0=$95;$RP_0=$94;
     }
     while(1) {


      $102=(($R_0+20)|0);
      $103=((HEAP32[(($102)>>2)])|0);
      $104=($103|0)==0;
      if (!($104)) {
       $R_0=$103;$RP_0=$102;
       continue;
      }
      $106=(($R_0+16)|0);
      $107=((HEAP32[(($106)>>2)])|0);
      $108=($107|0)==0;
      if ($108) {
       break;
      } else {
       $R_0=$107;$RP_0=$106;
      }
     }
     $110=$RP_0;
     $111=($110>>>0)<($5>>>0);
     if ($111) {
      _abort();

     } else {
      HEAP32[(($RP_0)>>2)]=0;
      $R_1=$R_0;
      break;
     }
    } else {
     $_sum44=((($_sum3)+(8))|0);
     $78=(($mem+$_sum44)|0);
     $79=$78;
     $80=((HEAP32[(($79)>>2)])|0);
     $81=$80;
     $82=($81>>>0)<($5>>>0);
     if ($82) {
      _abort();

     }
     $84=(($80+12)|0);
     $85=((HEAP32[(($84)>>2)])|0);
     $86=($85|0)==($69|0);
     if (!($86)) {
      _abort();

     }
     $88=(($75+8)|0);
     $89=((HEAP32[(($88)>>2)])|0);
     $90=($89|0)==($69|0);
     if ($90) {
      HEAP32[(($84)>>2)]=$75;
      HEAP32[(($88)>>2)]=$80;
      $R_1=$75;
      break;
     } else {
      _abort();

     }
    }
   } while(0);

   $115=($72|0)==0;
   if ($115) {
    $p_0=$25;$psize_0=$26;
    break;
   }
   $_sum41=((($_sum3)+(28))|0);
   $117=(($mem+$_sum41)|0);
   $118=$117;
   $119=((HEAP32[(($118)>>2)])|0);
   $120=((1032+($119<<2))|0);
   $121=((HEAP32[(($120)>>2)])|0);
   $122=($69|0)==($121|0);
   do {
    if ($122) {
     HEAP32[(($120)>>2)]=$R_1;
     $cond=($R_1|0)==0;
     if (!($cond)) {
      break;
     }
     $124=((HEAP32[(($118)>>2)])|0);
     $125=1<<$124;
     $126=$125^-1;
     $127=((HEAP32[((732)>>2)])|0);
     $128=$127&$126;
     HEAP32[((732)>>2)]=$128;
     $p_0=$25;$psize_0=$26;
     break L10;
    } else {
     $130=$72;
     $131=((HEAP32[((744)>>2)])|0);
     $132=($130>>>0)<($131>>>0);
     if ($132) {
      _abort();

     }
     $134=(($72+16)|0);
     $135=((HEAP32[(($134)>>2)])|0);
     $136=($135|0)==($69|0);
     if ($136) {
      HEAP32[(($134)>>2)]=$R_1;
     } else {
      $139=(($72+20)|0);
      HEAP32[(($139)>>2)]=$R_1;
     }
     $142=($R_1|0)==0;
     if ($142) {
      $p_0=$25;$psize_0=$26;
      break L10;
     }
    }
   } while(0);
   $144=$R_1;
   $145=((HEAP32[((744)>>2)])|0);
   $146=($144>>>0)<($145>>>0);
   if ($146) {
    _abort();

   }
   $148=(($R_1+24)|0);
   HEAP32[(($148)>>2)]=$72;
   $_sum42=((($_sum3)+(16))|0);
   $149=(($mem+$_sum42)|0);
   $150=$149;
   $151=((HEAP32[(($150)>>2)])|0);
   $152=($151|0)==0;
   do {
    if (!($152)) {
     $154=$151;
     $155=((HEAP32[((744)>>2)])|0);
     $156=($154>>>0)<($155>>>0);
     if ($156) {
      _abort();

     } else {
      $158=(($R_1+16)|0);
      HEAP32[(($158)>>2)]=$151;
      $159=(($151+24)|0);
      HEAP32[(($159)>>2)]=$R_1;
      break;
     }
    }
   } while(0);
   $_sum43=((($_sum3)+(20))|0);
   $162=(($mem+$_sum43)|0);
   $163=$162;
   $164=((HEAP32[(($163)>>2)])|0);
   $165=($164|0)==0;
   if ($165) {
    $p_0=$25;$psize_0=$26;
    break;
   }
   $167=$164;
   $168=((HEAP32[((744)>>2)])|0);
   $169=($167>>>0)<($168>>>0);
   if ($169) {
    _abort();

   } else {
    $171=(($R_1+20)|0);
    HEAP32[(($171)>>2)]=$164;
    $172=(($164+24)|0);
    HEAP32[(($172)>>2)]=$R_1;
    $p_0=$25;$psize_0=$26;
    break;
   }
  } else {
   $p_0=$4;$psize_0=$14;
  }
 } while(0);


 $189=$p_0;
 $190=($189>>>0)<($15>>>0);
 if (!($190)) {
  _abort();

 }
 $_sum34=((($14)-(4))|0);
 $192=(($mem+$_sum34)|0);
 $193=$192;
 $194=((HEAP32[(($193)>>2)])|0);
 $195=$194&1;
 $phitmp=($195|0)==0;
 if ($phitmp) {
  _abort();

 }
 $197=$194&2;
 $198=($197|0)==0;
 do {
  if ($198) {
   $200=((HEAP32[((752)>>2)])|0);
   $201=($16|0)==($200|0);
   if ($201) {
    $203=((HEAP32[((740)>>2)])|0);
    $204=((($203)+($psize_0))|0);
    HEAP32[((740)>>2)]=$204;
    HEAP32[((752)>>2)]=$p_0;
    $205=$204|1;
    $206=(($p_0+4)|0);
    HEAP32[(($206)>>2)]=$205;
    $207=((HEAP32[((748)>>2)])|0);
    $208=($p_0|0)==($207|0);
    if (!($208)) {
     return;
    }
    HEAP32[((748)>>2)]=0;
    HEAP32[((736)>>2)]=0;
    return;
   }
   $211=((HEAP32[((748)>>2)])|0);
   $212=($16|0)==($211|0);
   if ($212) {
    $214=((HEAP32[((736)>>2)])|0);
    $215=((($214)+($psize_0))|0);
    HEAP32[((736)>>2)]=$215;
    HEAP32[((748)>>2)]=$p_0;
    $216=$215|1;
    $217=(($p_0+4)|0);
    HEAP32[(($217)>>2)]=$216;
    $218=(($189+$215)|0);
    $219=$218;
    HEAP32[(($219)>>2)]=$215;
    return;
   }
   $221=$194&-8;
   $222=((($221)+($psize_0))|0);
   $223=$194>>>3;
   $224=($194>>>0)<((256)>>>0);
   L112: do {
    if ($224) {
     $226=(($mem+$14)|0);
     $227=$226;
     $228=((HEAP32[(($227)>>2)])|0);
     $_sum2829=$14|4;
     $229=(($mem+$_sum2829)|0);
     $230=$229;
     $231=((HEAP32[(($230)>>2)])|0);
     $232=$223<<1;
     $233=((768+($232<<2))|0);
     $234=$233;
     $235=($228|0)==($234|0);
     do {
      if (!($235)) {
       $237=$228;
       $238=((HEAP32[((744)>>2)])|0);
       $239=($237>>>0)<($238>>>0);
       if ($239) {
        _abort();

       }
       $241=(($228+12)|0);
       $242=((HEAP32[(($241)>>2)])|0);
       $243=($242|0)==($16|0);
       if ($243) {
        break;
       }
       _abort();

      }
     } while(0);
     $244=($231|0)==($228|0);
     if ($244) {
      $246=1<<$223;
      $247=$246^-1;
      $248=((HEAP32[((728)>>2)])|0);
      $249=$248&$247;
      HEAP32[((728)>>2)]=$249;
      break;
     }
     $251=($231|0)==($234|0);
     do {
      if ($251) {
       $_pre80=(($231+8)|0);
       $_pre_phi81=$_pre80;
      } else {
       $253=$231;
       $254=((HEAP32[((744)>>2)])|0);
       $255=($253>>>0)<($254>>>0);
       if ($255) {
        _abort();

       }
       $257=(($231+8)|0);
       $258=((HEAP32[(($257)>>2)])|0);
       $259=($258|0)==($16|0);
       if ($259) {
        $_pre_phi81=$257;
        break;
       }
       _abort();

      }
     } while(0);

     $260=(($228+12)|0);
     HEAP32[(($260)>>2)]=$231;
     HEAP32[(($_pre_phi81)>>2)]=$228;
    } else {
     $262=$15;
     $_sum6=((($14)+(16))|0);
     $263=(($mem+$_sum6)|0);
     $264=$263;
     $265=((HEAP32[(($264)>>2)])|0);
     $_sum78=$14|4;
     $266=(($mem+$_sum78)|0);
     $267=$266;
     $268=((HEAP32[(($267)>>2)])|0);
     $269=($268|0)==($262|0);
     do {
      if ($269) {
       $_sum10=((($14)+(12))|0);
       $287=(($mem+$_sum10)|0);
       $288=$287;
       $289=((HEAP32[(($288)>>2)])|0);
       $290=($289|0)==0;
       if ($290) {
        $_sum9=((($14)+(8))|0);
        $292=(($mem+$_sum9)|0);
        $293=$292;
        $294=((HEAP32[(($293)>>2)])|0);
        $295=($294|0)==0;
        if ($295) {
         $R7_1=0;
         break;
        } else {
         $R7_0=$294;$RP9_0=$293;
        }
       } else {
        $R7_0=$289;$RP9_0=$288;
       }
       while(1) {


        $296=(($R7_0+20)|0);
        $297=((HEAP32[(($296)>>2)])|0);
        $298=($297|0)==0;
        if (!($298)) {
         $R7_0=$297;$RP9_0=$296;
         continue;
        }
        $300=(($R7_0+16)|0);
        $301=((HEAP32[(($300)>>2)])|0);
        $302=($301|0)==0;
        if ($302) {
         break;
        } else {
         $R7_0=$301;$RP9_0=$300;
        }
       }
       $304=$RP9_0;
       $305=((HEAP32[((744)>>2)])|0);
       $306=($304>>>0)<($305>>>0);
       if ($306) {
        _abort();

       } else {
        HEAP32[(($RP9_0)>>2)]=0;
        $R7_1=$R7_0;
        break;
       }
      } else {
       $271=(($mem+$14)|0);
       $272=$271;
       $273=((HEAP32[(($272)>>2)])|0);
       $274=$273;
       $275=((HEAP32[((744)>>2)])|0);
       $276=($274>>>0)<($275>>>0);
       if ($276) {
        _abort();

       }
       $278=(($273+12)|0);
       $279=((HEAP32[(($278)>>2)])|0);
       $280=($279|0)==($262|0);
       if (!($280)) {
        _abort();

       }
       $282=(($268+8)|0);
       $283=((HEAP32[(($282)>>2)])|0);
       $284=($283|0)==($262|0);
       if ($284) {
        HEAP32[(($278)>>2)]=$268;
        HEAP32[(($282)>>2)]=$273;
        $R7_1=$268;
        break;
       } else {
        _abort();

       }
      }
     } while(0);

     $310=($265|0)==0;
     if ($310) {
      break;
     }
     $_sum21=((($14)+(20))|0);
     $312=(($mem+$_sum21)|0);
     $313=$312;
     $314=((HEAP32[(($313)>>2)])|0);
     $315=((1032+($314<<2))|0);
     $316=((HEAP32[(($315)>>2)])|0);
     $317=($262|0)==($316|0);
     do {
      if ($317) {
       HEAP32[(($315)>>2)]=$R7_1;
       $cond69=($R7_1|0)==0;
       if (!($cond69)) {
        break;
       }
       $319=((HEAP32[(($313)>>2)])|0);
       $320=1<<$319;
       $321=$320^-1;
       $322=((HEAP32[((732)>>2)])|0);
       $323=$322&$321;
       HEAP32[((732)>>2)]=$323;
       break L112;
      } else {
       $325=$265;
       $326=((HEAP32[((744)>>2)])|0);
       $327=($325>>>0)<($326>>>0);
       if ($327) {
        _abort();

       }
       $329=(($265+16)|0);
       $330=((HEAP32[(($329)>>2)])|0);
       $331=($330|0)==($262|0);
       if ($331) {
        HEAP32[(($329)>>2)]=$R7_1;
       } else {
        $334=(($265+20)|0);
        HEAP32[(($334)>>2)]=$R7_1;
       }
       $337=($R7_1|0)==0;
       if ($337) {
        break L112;
       }
      }
     } while(0);
     $339=$R7_1;
     $340=((HEAP32[((744)>>2)])|0);
     $341=($339>>>0)<($340>>>0);
     if ($341) {
      _abort();

     }
     $343=(($R7_1+24)|0);
     HEAP32[(($343)>>2)]=$265;
     $_sum22=((($14)+(8))|0);
     $344=(($mem+$_sum22)|0);
     $345=$344;
     $346=((HEAP32[(($345)>>2)])|0);
     $347=($346|0)==0;
     do {
      if (!($347)) {
       $349=$346;
       $350=((HEAP32[((744)>>2)])|0);
       $351=($349>>>0)<($350>>>0);
       if ($351) {
        _abort();

       } else {
        $353=(($R7_1+16)|0);
        HEAP32[(($353)>>2)]=$346;
        $354=(($346+24)|0);
        HEAP32[(($354)>>2)]=$R7_1;
        break;
       }
      }
     } while(0);
     $_sum23=((($14)+(12))|0);
     $357=(($mem+$_sum23)|0);
     $358=$357;
     $359=((HEAP32[(($358)>>2)])|0);
     $360=($359|0)==0;
     if ($360) {
      break;
     }
     $362=$359;
     $363=((HEAP32[((744)>>2)])|0);
     $364=($362>>>0)<($363>>>0);
     if ($364) {
      _abort();

     } else {
      $366=(($R7_1+20)|0);
      HEAP32[(($366)>>2)]=$359;
      $367=(($359+24)|0);
      HEAP32[(($367)>>2)]=$R7_1;
      break;
     }
    }
   } while(0);
   $371=$222|1;
   $372=(($p_0+4)|0);
   HEAP32[(($372)>>2)]=$371;
   $373=(($189+$222)|0);
   $374=$373;
   HEAP32[(($374)>>2)]=$222;
   $375=((HEAP32[((748)>>2)])|0);
   $376=($p_0|0)==($375|0);
   if (!($376)) {
    $psize_1=$222;
    break;
   }
   HEAP32[((736)>>2)]=$222;
   return;
  } else {
   $379=$194&-2;
   HEAP32[(($193)>>2)]=$379;
   $380=$psize_0|1;
   $381=(($p_0+4)|0);
   HEAP32[(($381)>>2)]=$380;
   $382=(($189+$psize_0)|0);
   $383=$382;
   HEAP32[(($383)>>2)]=$psize_0;
   $psize_1=$psize_0;
  }
 } while(0);

 $385=$psize_1>>>3;
 $386=($psize_1>>>0)<((256)>>>0);
 if ($386) {
  $388=$385<<1;
  $389=((768+($388<<2))|0);
  $390=$389;
  $391=((HEAP32[((728)>>2)])|0);
  $392=1<<$385;
  $393=$391&$392;
  $394=($393|0)==0;
  do {
   if ($394) {
    $396=$391|$392;
    HEAP32[((728)>>2)]=$396;
    $_sum19_pre=((($388)+(2))|0);
    $_pre=((768+($_sum19_pre<<2))|0);
    $F16_0=$390;$_pre_phi=$_pre;
   } else {
    $_sum20=((($388)+(2))|0);
    $398=((768+($_sum20<<2))|0);
    $399=((HEAP32[(($398)>>2)])|0);
    $400=$399;
    $401=((HEAP32[((744)>>2)])|0);
    $402=($400>>>0)<($401>>>0);
    if (!($402)) {
     $F16_0=$399;$_pre_phi=$398;
     break;
    }
    _abort();

   }
  } while(0);


  HEAP32[(($_pre_phi)>>2)]=$p_0;
  $405=(($F16_0+12)|0);
  HEAP32[(($405)>>2)]=$p_0;
  $406=(($p_0+8)|0);
  HEAP32[(($406)>>2)]=$F16_0;
  $407=(($p_0+12)|0);
  HEAP32[(($407)>>2)]=$390;
  return;
 }
 $409=$p_0;
 $410=$psize_1>>>8;
 $411=($410|0)==0;
 do {
  if ($411) {
   $I18_0=0;
  } else {
   $413=($psize_1>>>0)>((16777215)>>>0);
   if ($413) {
    $I18_0=31;
    break;
   }
   $415=((($410)+(1048320))|0);
   $416=$415>>>16;
   $417=$416&8;
   $418=$410<<$417;
   $419=((($418)+(520192))|0);
   $420=$419>>>16;
   $421=$420&4;
   $422=$421|$417;
   $423=$418<<$421;
   $424=((($423)+(245760))|0);
   $425=$424>>>16;
   $426=$425&2;
   $427=$422|$426;
   $428=(((14)-($427))|0);
   $429=$423<<$426;
   $430=$429>>>15;
   $431=((($428)+($430))|0);
   $432=$431<<1;
   $433=((($431)+(7))|0);
   $434=$psize_1>>>($433>>>0);
   $435=$434&1;
   $436=$435|$432;
   $I18_0=$436;
  }
 } while(0);

 $438=((1032+($I18_0<<2))|0);
 $439=(($p_0+28)|0);
 $I18_0_c=$I18_0;
 HEAP32[(($439)>>2)]=$I18_0_c;
 $440=(($p_0+20)|0);
 HEAP32[(($440)>>2)]=0;
 $441=(($p_0+16)|0);
 HEAP32[(($441)>>2)]=0;
 $442=((HEAP32[((732)>>2)])|0);
 $443=1<<$I18_0;
 $444=$442&$443;
 $445=($444|0)==0;
 L199: do {
  if ($445) {
   $447=$442|$443;
   HEAP32[((732)>>2)]=$447;
   HEAP32[(($438)>>2)]=$409;
   $448=(($p_0+24)|0);
   $_c=$438;
   HEAP32[(($448)>>2)]=$_c;
   $449=(($p_0+12)|0);
   HEAP32[(($449)>>2)]=$p_0;
   $450=(($p_0+8)|0);
   HEAP32[(($450)>>2)]=$p_0;
  } else {
   $452=((HEAP32[(($438)>>2)])|0);
   $453=($I18_0|0)==31;
   if ($453) {
    $458=0;
   } else {
    $455=$I18_0>>>1;
    $456=(((25)-($455))|0);
    $458=$456;
   }

   $459=(($452+4)|0);
   $460=((HEAP32[(($459)>>2)])|0);
   $461=$460&-8;
   $462=($461|0)==($psize_1|0);
   L205: do {
    if ($462) {
     $T_0_lcssa=$452;
    } else {
     $463=$psize_1<<$458;
     $T_072=$452;$K19_073=$463;
     while(1) {


      $471=$K19_073>>>31;
      $472=(($T_072+16+($471<<2))|0);
      $473=((HEAP32[(($472)>>2)])|0);
      $474=($473|0)==0;
      if ($474) {
       break;
      }
      $465=$K19_073<<1;
      $466=(($473+4)|0);
      $467=((HEAP32[(($466)>>2)])|0);
      $468=$467&-8;
      $469=($468|0)==($psize_1|0);
      if ($469) {
       $T_0_lcssa=$473;
       break L205;
      } else {
       $T_072=$473;$K19_073=$465;
      }
     }
     $476=$472;
     $477=((HEAP32[((744)>>2)])|0);
     $478=($476>>>0)<($477>>>0);
     if ($478) {
      _abort();

     } else {
      HEAP32[(($472)>>2)]=$409;
      $480=(($p_0+24)|0);
      $T_0_c16=$T_072;
      HEAP32[(($480)>>2)]=$T_0_c16;
      $481=(($p_0+12)|0);
      HEAP32[(($481)>>2)]=$p_0;
      $482=(($p_0+8)|0);
      HEAP32[(($482)>>2)]=$p_0;
      break L199;
     }
    }
   } while(0);

   $484=(($T_0_lcssa+8)|0);
   $485=((HEAP32[(($484)>>2)])|0);
   $486=$T_0_lcssa;
   $487=((HEAP32[((744)>>2)])|0);
   $488=($486>>>0)>=($487>>>0);
   $489=$485;
   $490=($489>>>0)>=($487>>>0);
   $or_cond=$488&$490;
   if ($or_cond) {
    $492=(($485+12)|0);
    HEAP32[(($492)>>2)]=$409;
    HEAP32[(($484)>>2)]=$409;
    $493=(($p_0+8)|0);
    $_c15=$485;
    HEAP32[(($493)>>2)]=$_c15;
    $494=(($p_0+12)|0);
    $T_0_c=$T_0_lcssa;
    HEAP32[(($494)>>2)]=$T_0_c;
    $495=(($p_0+24)|0);
    HEAP32[(($495)>>2)]=0;
    break;
   } else {
    _abort();

   }
  }
 } while(0);
 $497=((HEAP32[((760)>>2)])|0);
 $498=((($497)-(1))|0);
 HEAP32[((760)>>2)]=$498;
 $499=($498|0)==0;
 if ($499) {
  $sp_0_in_i=1184;
 } else {
  return;
 }
 while(1) {

  $sp_0_i=((HEAP32[(($sp_0_in_i)>>2)])|0);
  $500=($sp_0_i|0)==0;
  $501=(($sp_0_i+8)|0);
  if ($500) {
   break;
  } else {
   $sp_0_in_i=$501;
  }
 }
 HEAP32[((760)>>2)]=-1;
 return;
}


function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[(dest)]=((HEAP8[(src)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[(dest)]=((HEAP8[(src)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[(ptr)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[(ptr)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[(dest)]=((HEAP8[(src)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[(curr)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}


// EMSCRIPTEN_END_FUNCS

  
  function dynCall_ii(index,a1) {
    index = index|0;
    a1=a1|0;
    return FUNCTION_TABLE_ii[index&1](a1|0)|0;
  }


  function dynCall_v(index) {
    index = index|0;
    
    FUNCTION_TABLE_v[index&1]();
  }


  function dynCall_iii(index,a1,a2) {
    index = index|0;
    a1=a1|0; a2=a2|0;
    return FUNCTION_TABLE_iii[index&1](a1|0,a2|0)|0;
  }


  function dynCall_vi(index,a1) {
    index = index|0;
    a1=a1|0;
    FUNCTION_TABLE_vi[index&1](a1|0);
  }

function b0(p0) { p0 = p0|0; abort(0); return 0 }
  function b1() { ; abort(1);  }
  function b2(p0,p1) { p0 = p0|0;p1 = p1|0; abort(2); return 0 }
  function b3(p0) { p0 = p0|0; abort(3);  }
  // EMSCRIPTEN_END_FUNCS
  var FUNCTION_TABLE_ii = [b0,b0];
  
  var FUNCTION_TABLE_v = [b1,b1];
  
  var FUNCTION_TABLE_iii = [b2,b2];
  
  var FUNCTION_TABLE_vi = [b3,b3];
  

  return { _strlen: _strlen, _TA_BOP: _TA_BOP, _TA_CDL3STARSINSOUTH: _TA_CDL3STARSINSOUTH, _TA_CDLSTALLEDPATTERN: _TA_CDLSTALLEDPATTERN, _TA_DEMA: _TA_DEMA, _TA_ATAN: _TA_ATAN, _TA_MINMAX: _TA_MINMAX, _TA_MACD: _TA_MACD, _TA_CDLBELTHOLD: _TA_CDLBELTHOLD, _TA_CDLIDENTICAL3CROWS: _TA_CDLIDENTICAL3CROWS, _TA_RSI: _TA_RSI, _TA_SQRT: _TA_SQRT, _TA_IMI: _TA_IMI, _TA_CDLHANGINGMAN: _TA_CDLHANGINGMAN, _TA_CDLLONGLEGGEDDOJI: _TA_CDLLONGLEGGEDDOJI, _TA_CDLSPINNINGTOP: _TA_CDLSPINNINGTOP, _memcpy: _memcpy, _TA_CDLINVERTEDHAMMER: _TA_CDLINVERTEDHAMMER, _TA_CDLADVANCEBLOCK: _TA_CDLADVANCEBLOCK, _TA_LOG10: _TA_LOG10, _TA_CDLTHRUSTING: _TA_CDLTHRUSTING, _TA_AROONOSC: _TA_AROONOSC, _TA_TRIMA: _TA_TRIMA, _TA_MOM: _TA_MOM, _TA_MACDFIX: _TA_MACDFIX, _TA_CDLEVENINGSTAR: _TA_CDLEVENINGSTAR, _TA_PPO: _TA_PPO, _free: _free, _TA_HT_TRENDLINE: _TA_HT_TRENDLINE, _TA_COSH: _TA_COSH, _TA_KAMA: _TA_KAMA, _TA_ROCR100: _TA_ROCR100, _TA_SIN: _TA_SIN, _TA_TSF: _TA_TSF, _TA_WILLR: _TA_WILLR, _TA_SAR: _TA_SAR, _TA_CDLXSIDEGAP3METHODS: _TA_CDLXSIDEGAP3METHODS, _TA_SUM: _TA_SUM, _TA_T3: _TA_T3, _TA_CDLKICKINGBYLENGTH: _TA_CDLKICKINGBYLENGTH, _TA_MINMAXINDEX: _TA_MINMAXINDEX, _TA_ACOS: _TA_ACOS, _TA_ROCP: _TA_ROCP, _TA_ROCR: _TA_ROCR, _TA_MAX: _TA_MAX, _TA_APO: _TA_APO, _TA_CDLHIKKAKEMOD: _TA_CDLHIKKAKEMOD, _TA_ULTOSC: _TA_ULTOSC, _TA_VAR: _TA_VAR, _TA_CDL2CROWS: _TA_CDL2CROWS, _TA_CDLMARUBOZU: _TA_CDLMARUBOZU, _TA_OBV: _TA_OBV, _TA_LN: _TA_LN, _TA_LINEARREG_SLOPE: _TA_LINEARREG_SLOPE, _TA_NATR: _TA_NATR, _TA_LINEARREG: _TA_LINEARREG, _TA_DX: _TA_DX, _TA_MAMA: _TA_MAMA, _TA_STOCHF: _TA_STOCHF, _TA_CDLSHORTLINE: _TA_CDLSHORTLINE, _TA_HT_PHASOR: _TA_HT_PHASOR, _TA_EMA: _TA_EMA, _TA_ACCBANDS: _TA_ACCBANDS, _TA_SAREXT: _TA_SAREXT, _TA_CDLRICKSHAWMAN: _TA_CDLRICKSHAWMAN, _TA_CDLHARAMICROSS: _TA_CDLHARAMICROSS, _TA_CDLDRAGONFLYDOJI: _TA_CDLDRAGONFLYDOJI, _TA_MULT: _TA_MULT, _TA_ADXR: _TA_ADXR, _TA_CDLLADDERBOTTOM: _TA_CDLLADDERBOTTOM, _TA_CDLTAKURI: _TA_CDLTAKURI, _TA_NVI: _TA_NVI, _TA_CORREL: _TA_CORREL, _TA_CDLUPSIDEGAP2CROWS: _TA_CDLUPSIDEGAP2CROWS, _TA_CCI: _TA_CCI, _TA_CDLHIGHWAVE: _TA_CDLHIGHWAVE, _TA_CDLCOUNTERATTACK: _TA_CDLCOUNTERATTACK, _TA_MA: _TA_MA, _TA_AVGDEV: _TA_AVGDEV, _TA_ROC: _TA_ROC, _TA_SMA: _TA_SMA, _TA_BETA: _TA_BETA, _TA_MAVP: _TA_MAVP, _TA_CDLMATCHINGLOW: _TA_CDLMATCHINGLOW, _TA_CDLDARKCLOUDCOVER: _TA_CDLDARKCLOUDCOVER, _TA_CDLGRAVESTONEDOJI: _TA_CDLGRAVESTONEDOJI, _TA_CDLHOMINGPIGEON: _TA_CDLHOMINGPIGEON, _TA_SUB: _TA_SUB, _TA_STOCH: _TA_STOCH, _TA_TRANGE: _TA_TRANGE, _TA_CMO: _TA_CMO, _TA_CDLHIKKAKE: _TA_CDLHIKKAKE, _TA_CDLSEPARATINGLINES: _TA_CDLSEPARATINGLINES, _TA_CDLSHOOTINGSTAR: _TA_CDLSHOOTINGSTAR, _TA_CDLUNIQUE3RIVER: _TA_CDLUNIQUE3RIVER, _TA_TYPPRICE: _TA_TYPPRICE, _TA_LINEARREG_ANGLE: _TA_LINEARREG_ANGLE, _TA_PLUS_DM: _TA_PLUS_DM, _TA_PLUS_DI: _TA_PLUS_DI, _TA_CDLCLOSINGMARUBOZU: _TA_CDLCLOSINGMARUBOZU, _TA_EXP: _TA_EXP, _TA_CDLEVENINGDOJISTAR: _TA_CDLEVENINGDOJISTAR, _TA_CDLDOJI: _TA_CDLDOJI, _TA_CDLGAPSIDESIDEWHITE: _TA_CDLGAPSIDESIDEWHITE, _TA_MIDPOINT: _TA_MIDPOINT, _TA_CDLBREAKAWAY: _TA_CDLBREAKAWAY, _TA_CDLHARAMI: _TA_CDLHARAMI, _TA_HT_DCPHASE: _TA_HT_DCPHASE, _TA_AROON: _TA_AROON, _TA_CDLPIERCING: _TA_CDLPIERCING, _TA_FLOOR: _TA_FLOOR, _TA_CDLENGULFING: _TA_CDLENGULFING, _TA_TEMA: _TA_TEMA, _TA_HT_TRENDMODE: _TA_HT_TRENDMODE, _TA_WMA: _TA_WMA, _TA_CDLHAMMER: _TA_CDLHAMMER, _TA_CDLABANDONEDBABY: _TA_CDLABANDONEDBABY, _TA_CDLONNECK: _TA_CDLONNECK, _malloc: _malloc, _TA_MINUS_DM: _TA_MINUS_DM, _TA_MININDEX: _TA_MININDEX, _TA_TANH: _TA_TANH, _TA_MINUS_DI: _TA_MINUS_DI, _TA_ASIN: _TA_ASIN, _TA_CDL3BLACKCROWS: _TA_CDL3BLACKCROWS, _TA_STDDEV: _TA_STDDEV, _TA_CDLSTICKSANDWICH: _TA_CDLSTICKSANDWICH, _TA_AVGPRICE: _TA_AVGPRICE, _TA_CDLKICKING: _TA_CDLKICKING, _TA_COS: _TA_COS, _TA_CDLMORNINGSTAR: _TA_CDLMORNINGSTAR, _TA_Initialize: _TA_Initialize, _TA_ATR: _TA_ATR, _TA_LINEARREG_INTERCEPT: _TA_LINEARREG_INTERCEPT, _TA_TAN: _TA_TAN, _TA_WCLPRICE: _TA_WCLPRICE, _TA_STOCHRSI: _TA_STOCHRSI, _TA_CDLMORNINGDOJISTAR: _TA_CDLMORNINGDOJISTAR, _TA_CDLDOJISTAR: _TA_CDLDOJISTAR, _TA_CDLRISEFALL3METHODS: _TA_CDLRISEFALL3METHODS, _TA_CDLTRISTAR: _TA_CDLTRISTAR, _TA_HT_SINE: _TA_HT_SINE, _TA_CEIL: _TA_CEIL, _TA_ADX: _TA_ADX, _TA_ADD: _TA_ADD, _TA_MFI: _TA_MFI, _TA_HT_DCPERIOD: _TA_HT_DCPERIOD, _memset: _memset, _TA_CDLMATHOLD: _TA_CDLMATHOLD, _TA_MIDPRICE: _TA_MIDPRICE, _TA_CDL3INSIDE: _TA_CDL3INSIDE, _TA_CDLTASUKIGAP: _TA_CDLTASUKIGAP, _TA_MIN: _TA_MIN, _TA_CDL3LINESTRIKE: _TA_CDL3LINESTRIKE, _TA_CDL3WHITESOLDIERS: _TA_CDL3WHITESOLDIERS, _TA_AD: _TA_AD, _TA_CDLCONCEALBABYSWALL: _TA_CDLCONCEALBABYSWALL, _TA_MACDEXT: _TA_MACDEXT, _TA_MAXINDEX: _TA_MAXINDEX, _TA_MEDPRICE: _TA_MEDPRICE, _TA_ADOSC: _TA_ADOSC, _TA_CDLLONGLINE: _TA_CDLLONGLINE, _TA_TRIX: _TA_TRIX, _TA_CDL3OUTSIDE: _TA_CDL3OUTSIDE, _memmove: _memmove, _TA_SINH: _TA_SINH, _TA_BBANDS: _TA_BBANDS, _TA_PVI: _TA_PVI, _TA_CDLINNECK: _TA_CDLINNECK, _TA_DIV: _TA_DIV, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, setTempRet1: setTempRet1, setTempRet2: setTempRet2, setTempRet3: setTempRet3, setTempRet4: setTempRet4, setTempRet5: setTempRet5, setTempRet6: setTempRet6, setTempRet7: setTempRet7, setTempRet8: setTempRet8, setTempRet9: setTempRet9, dynCall_ii: dynCall_ii, dynCall_v: dynCall_v, dynCall_iii: dynCall_iii, dynCall_vi: dynCall_vi };
})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_ii": invoke_ii, "invoke_v": invoke_v, "invoke_iii": invoke_iii, "invoke_vi": invoke_vi, "_sysconf": _sysconf, "_cosh": _cosh, "_abort": _abort, "_tan": _tan, "_fflush": _fflush, "_asin": _asin, "_log": _log, "_fabs": _fabs, "_floor": _floor, "___setErrNo": ___setErrNo, "_sqrt": _sqrt, "_log10": _log10, "_sin": _sin, "_atan": _atan, "_ceil": _ceil, "_sinh": _sinh, "_cos": _cos, "_sbrk": _sbrk, "_tanh": _tanh, "___errno_location": ___errno_location, "_exp": _exp, "_time": _time, "_acos": _acos, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "NaN": NaN, "Infinity": Infinity }, buffer);
var _strlen = Module["_strlen"] = asm["_strlen"];
var _TA_BOP = Module["_TA_BOP"] = asm["_TA_BOP"];
var _TA_CDL3STARSINSOUTH = Module["_TA_CDL3STARSINSOUTH"] = asm["_TA_CDL3STARSINSOUTH"];
var _TA_CDLSTALLEDPATTERN = Module["_TA_CDLSTALLEDPATTERN"] = asm["_TA_CDLSTALLEDPATTERN"];
var _TA_DEMA = Module["_TA_DEMA"] = asm["_TA_DEMA"];
var _TA_ATAN = Module["_TA_ATAN"] = asm["_TA_ATAN"];
var _TA_MINMAX = Module["_TA_MINMAX"] = asm["_TA_MINMAX"];
var _TA_MACD = Module["_TA_MACD"] = asm["_TA_MACD"];
var _TA_CDLBELTHOLD = Module["_TA_CDLBELTHOLD"] = asm["_TA_CDLBELTHOLD"];
var _TA_CDLIDENTICAL3CROWS = Module["_TA_CDLIDENTICAL3CROWS"] = asm["_TA_CDLIDENTICAL3CROWS"];
var _TA_RSI = Module["_TA_RSI"] = asm["_TA_RSI"];
var _TA_SQRT = Module["_TA_SQRT"] = asm["_TA_SQRT"];
var _TA_IMI = Module["_TA_IMI"] = asm["_TA_IMI"];
var _TA_CDLHANGINGMAN = Module["_TA_CDLHANGINGMAN"] = asm["_TA_CDLHANGINGMAN"];
var _TA_CDLLONGLEGGEDDOJI = Module["_TA_CDLLONGLEGGEDDOJI"] = asm["_TA_CDLLONGLEGGEDDOJI"];
var _TA_CDLSPINNINGTOP = Module["_TA_CDLSPINNINGTOP"] = asm["_TA_CDLSPINNINGTOP"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _TA_CDLINVERTEDHAMMER = Module["_TA_CDLINVERTEDHAMMER"] = asm["_TA_CDLINVERTEDHAMMER"];
var _TA_CDLADVANCEBLOCK = Module["_TA_CDLADVANCEBLOCK"] = asm["_TA_CDLADVANCEBLOCK"];
var _TA_LOG10 = Module["_TA_LOG10"] = asm["_TA_LOG10"];
var _TA_CDLTHRUSTING = Module["_TA_CDLTHRUSTING"] = asm["_TA_CDLTHRUSTING"];
var _TA_AROONOSC = Module["_TA_AROONOSC"] = asm["_TA_AROONOSC"];
var _TA_TRIMA = Module["_TA_TRIMA"] = asm["_TA_TRIMA"];
var _TA_MOM = Module["_TA_MOM"] = asm["_TA_MOM"];
var _TA_MACDFIX = Module["_TA_MACDFIX"] = asm["_TA_MACDFIX"];
var _TA_CDLEVENINGSTAR = Module["_TA_CDLEVENINGSTAR"] = asm["_TA_CDLEVENINGSTAR"];
var _TA_PPO = Module["_TA_PPO"] = asm["_TA_PPO"];
var _free = Module["_free"] = asm["_free"];
var _TA_HT_TRENDLINE = Module["_TA_HT_TRENDLINE"] = asm["_TA_HT_TRENDLINE"];
var _TA_COSH = Module["_TA_COSH"] = asm["_TA_COSH"];
var _TA_KAMA = Module["_TA_KAMA"] = asm["_TA_KAMA"];
var _TA_ROCR100 = Module["_TA_ROCR100"] = asm["_TA_ROCR100"];
var _TA_SIN = Module["_TA_SIN"] = asm["_TA_SIN"];
var _TA_TSF = Module["_TA_TSF"] = asm["_TA_TSF"];
var _TA_WILLR = Module["_TA_WILLR"] = asm["_TA_WILLR"];
var _TA_SAR = Module["_TA_SAR"] = asm["_TA_SAR"];
var _TA_CDLXSIDEGAP3METHODS = Module["_TA_CDLXSIDEGAP3METHODS"] = asm["_TA_CDLXSIDEGAP3METHODS"];
var _TA_SUM = Module["_TA_SUM"] = asm["_TA_SUM"];
var _TA_T3 = Module["_TA_T3"] = asm["_TA_T3"];
var _TA_CDLKICKINGBYLENGTH = Module["_TA_CDLKICKINGBYLENGTH"] = asm["_TA_CDLKICKINGBYLENGTH"];
var _TA_MINMAXINDEX = Module["_TA_MINMAXINDEX"] = asm["_TA_MINMAXINDEX"];
var _TA_ACOS = Module["_TA_ACOS"] = asm["_TA_ACOS"];
var _TA_ROCP = Module["_TA_ROCP"] = asm["_TA_ROCP"];
var _TA_ROCR = Module["_TA_ROCR"] = asm["_TA_ROCR"];
var _TA_MAX = Module["_TA_MAX"] = asm["_TA_MAX"];
var _TA_APO = Module["_TA_APO"] = asm["_TA_APO"];
var _TA_CDLHIKKAKEMOD = Module["_TA_CDLHIKKAKEMOD"] = asm["_TA_CDLHIKKAKEMOD"];
var _TA_ULTOSC = Module["_TA_ULTOSC"] = asm["_TA_ULTOSC"];
var _TA_VAR = Module["_TA_VAR"] = asm["_TA_VAR"];
var _TA_CDL2CROWS = Module["_TA_CDL2CROWS"] = asm["_TA_CDL2CROWS"];
var _TA_CDLMARUBOZU = Module["_TA_CDLMARUBOZU"] = asm["_TA_CDLMARUBOZU"];
var _TA_OBV = Module["_TA_OBV"] = asm["_TA_OBV"];
var _TA_LN = Module["_TA_LN"] = asm["_TA_LN"];
var _TA_LINEARREG_SLOPE = Module["_TA_LINEARREG_SLOPE"] = asm["_TA_LINEARREG_SLOPE"];
var _TA_NATR = Module["_TA_NATR"] = asm["_TA_NATR"];
var _TA_LINEARREG = Module["_TA_LINEARREG"] = asm["_TA_LINEARREG"];
var _TA_DX = Module["_TA_DX"] = asm["_TA_DX"];
var _TA_MAMA = Module["_TA_MAMA"] = asm["_TA_MAMA"];
var _TA_STOCHF = Module["_TA_STOCHF"] = asm["_TA_STOCHF"];
var _TA_CDLSHORTLINE = Module["_TA_CDLSHORTLINE"] = asm["_TA_CDLSHORTLINE"];
var _TA_HT_PHASOR = Module["_TA_HT_PHASOR"] = asm["_TA_HT_PHASOR"];
var _TA_EMA = Module["_TA_EMA"] = asm["_TA_EMA"];
var _TA_ACCBANDS = Module["_TA_ACCBANDS"] = asm["_TA_ACCBANDS"];
var _TA_SAREXT = Module["_TA_SAREXT"] = asm["_TA_SAREXT"];
var _TA_CDLRICKSHAWMAN = Module["_TA_CDLRICKSHAWMAN"] = asm["_TA_CDLRICKSHAWMAN"];
var _TA_CDLHARAMICROSS = Module["_TA_CDLHARAMICROSS"] = asm["_TA_CDLHARAMICROSS"];
var _TA_CDLDRAGONFLYDOJI = Module["_TA_CDLDRAGONFLYDOJI"] = asm["_TA_CDLDRAGONFLYDOJI"];
var _TA_MULT = Module["_TA_MULT"] = asm["_TA_MULT"];
var _TA_ADXR = Module["_TA_ADXR"] = asm["_TA_ADXR"];
var _TA_CDLLADDERBOTTOM = Module["_TA_CDLLADDERBOTTOM"] = asm["_TA_CDLLADDERBOTTOM"];
var _TA_CDLTAKURI = Module["_TA_CDLTAKURI"] = asm["_TA_CDLTAKURI"];
var _TA_NVI = Module["_TA_NVI"] = asm["_TA_NVI"];
var _TA_CORREL = Module["_TA_CORREL"] = asm["_TA_CORREL"];
var _TA_CDLUPSIDEGAP2CROWS = Module["_TA_CDLUPSIDEGAP2CROWS"] = asm["_TA_CDLUPSIDEGAP2CROWS"];
var _TA_CCI = Module["_TA_CCI"] = asm["_TA_CCI"];
var _TA_CDLHIGHWAVE = Module["_TA_CDLHIGHWAVE"] = asm["_TA_CDLHIGHWAVE"];
var _TA_CDLCOUNTERATTACK = Module["_TA_CDLCOUNTERATTACK"] = asm["_TA_CDLCOUNTERATTACK"];
var _TA_MA = Module["_TA_MA"] = asm["_TA_MA"];
var _TA_AVGDEV = Module["_TA_AVGDEV"] = asm["_TA_AVGDEV"];
var _TA_ROC = Module["_TA_ROC"] = asm["_TA_ROC"];
var _TA_SMA = Module["_TA_SMA"] = asm["_TA_SMA"];
var _TA_BETA = Module["_TA_BETA"] = asm["_TA_BETA"];
var _TA_MAVP = Module["_TA_MAVP"] = asm["_TA_MAVP"];
var _TA_CDLMATCHINGLOW = Module["_TA_CDLMATCHINGLOW"] = asm["_TA_CDLMATCHINGLOW"];
var _TA_CDLDARKCLOUDCOVER = Module["_TA_CDLDARKCLOUDCOVER"] = asm["_TA_CDLDARKCLOUDCOVER"];
var _TA_CDLGRAVESTONEDOJI = Module["_TA_CDLGRAVESTONEDOJI"] = asm["_TA_CDLGRAVESTONEDOJI"];
var _TA_CDLHOMINGPIGEON = Module["_TA_CDLHOMINGPIGEON"] = asm["_TA_CDLHOMINGPIGEON"];
var _TA_SUB = Module["_TA_SUB"] = asm["_TA_SUB"];
var _TA_STOCH = Module["_TA_STOCH"] = asm["_TA_STOCH"];
var _TA_TRANGE = Module["_TA_TRANGE"] = asm["_TA_TRANGE"];
var _TA_CMO = Module["_TA_CMO"] = asm["_TA_CMO"];
var _TA_CDLHIKKAKE = Module["_TA_CDLHIKKAKE"] = asm["_TA_CDLHIKKAKE"];
var _TA_CDLSEPARATINGLINES = Module["_TA_CDLSEPARATINGLINES"] = asm["_TA_CDLSEPARATINGLINES"];
var _TA_CDLSHOOTINGSTAR = Module["_TA_CDLSHOOTINGSTAR"] = asm["_TA_CDLSHOOTINGSTAR"];
var _TA_CDLUNIQUE3RIVER = Module["_TA_CDLUNIQUE3RIVER"] = asm["_TA_CDLUNIQUE3RIVER"];
var _TA_TYPPRICE = Module["_TA_TYPPRICE"] = asm["_TA_TYPPRICE"];
var _TA_LINEARREG_ANGLE = Module["_TA_LINEARREG_ANGLE"] = asm["_TA_LINEARREG_ANGLE"];
var _TA_PLUS_DM = Module["_TA_PLUS_DM"] = asm["_TA_PLUS_DM"];
var _TA_PLUS_DI = Module["_TA_PLUS_DI"] = asm["_TA_PLUS_DI"];
var _TA_CDLCLOSINGMARUBOZU = Module["_TA_CDLCLOSINGMARUBOZU"] = asm["_TA_CDLCLOSINGMARUBOZU"];
var _TA_EXP = Module["_TA_EXP"] = asm["_TA_EXP"];
var _TA_CDLEVENINGDOJISTAR = Module["_TA_CDLEVENINGDOJISTAR"] = asm["_TA_CDLEVENINGDOJISTAR"];
var _TA_CDLDOJI = Module["_TA_CDLDOJI"] = asm["_TA_CDLDOJI"];
var _TA_CDLGAPSIDESIDEWHITE = Module["_TA_CDLGAPSIDESIDEWHITE"] = asm["_TA_CDLGAPSIDESIDEWHITE"];
var _TA_MIDPOINT = Module["_TA_MIDPOINT"] = asm["_TA_MIDPOINT"];
var _TA_CDLBREAKAWAY = Module["_TA_CDLBREAKAWAY"] = asm["_TA_CDLBREAKAWAY"];
var _TA_CDLHARAMI = Module["_TA_CDLHARAMI"] = asm["_TA_CDLHARAMI"];
var _TA_HT_DCPHASE = Module["_TA_HT_DCPHASE"] = asm["_TA_HT_DCPHASE"];
var _TA_AROON = Module["_TA_AROON"] = asm["_TA_AROON"];
var _TA_CDLPIERCING = Module["_TA_CDLPIERCING"] = asm["_TA_CDLPIERCING"];
var _TA_FLOOR = Module["_TA_FLOOR"] = asm["_TA_FLOOR"];
var _TA_CDLENGULFING = Module["_TA_CDLENGULFING"] = asm["_TA_CDLENGULFING"];
var _TA_TEMA = Module["_TA_TEMA"] = asm["_TA_TEMA"];
var _TA_HT_TRENDMODE = Module["_TA_HT_TRENDMODE"] = asm["_TA_HT_TRENDMODE"];
var _TA_WMA = Module["_TA_WMA"] = asm["_TA_WMA"];
var _TA_CDLHAMMER = Module["_TA_CDLHAMMER"] = asm["_TA_CDLHAMMER"];
var _TA_CDLABANDONEDBABY = Module["_TA_CDLABANDONEDBABY"] = asm["_TA_CDLABANDONEDBABY"];
var _TA_CDLONNECK = Module["_TA_CDLONNECK"] = asm["_TA_CDLONNECK"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _TA_MINUS_DM = Module["_TA_MINUS_DM"] = asm["_TA_MINUS_DM"];
var _TA_MININDEX = Module["_TA_MININDEX"] = asm["_TA_MININDEX"];
var _TA_TANH = Module["_TA_TANH"] = asm["_TA_TANH"];
var _TA_MINUS_DI = Module["_TA_MINUS_DI"] = asm["_TA_MINUS_DI"];
var _TA_ASIN = Module["_TA_ASIN"] = asm["_TA_ASIN"];
var _TA_CDL3BLACKCROWS = Module["_TA_CDL3BLACKCROWS"] = asm["_TA_CDL3BLACKCROWS"];
var _TA_STDDEV = Module["_TA_STDDEV"] = asm["_TA_STDDEV"];
var _TA_CDLSTICKSANDWICH = Module["_TA_CDLSTICKSANDWICH"] = asm["_TA_CDLSTICKSANDWICH"];
var _TA_AVGPRICE = Module["_TA_AVGPRICE"] = asm["_TA_AVGPRICE"];
var _TA_CDLKICKING = Module["_TA_CDLKICKING"] = asm["_TA_CDLKICKING"];
var _TA_COS = Module["_TA_COS"] = asm["_TA_COS"];
var _TA_CDLMORNINGSTAR = Module["_TA_CDLMORNINGSTAR"] = asm["_TA_CDLMORNINGSTAR"];
var _TA_Initialize = Module["_TA_Initialize"] = asm["_TA_Initialize"];
var _TA_ATR = Module["_TA_ATR"] = asm["_TA_ATR"];
var _TA_LINEARREG_INTERCEPT = Module["_TA_LINEARREG_INTERCEPT"] = asm["_TA_LINEARREG_INTERCEPT"];
var _TA_TAN = Module["_TA_TAN"] = asm["_TA_TAN"];
var _TA_WCLPRICE = Module["_TA_WCLPRICE"] = asm["_TA_WCLPRICE"];
var _TA_STOCHRSI = Module["_TA_STOCHRSI"] = asm["_TA_STOCHRSI"];
var _TA_CDLMORNINGDOJISTAR = Module["_TA_CDLMORNINGDOJISTAR"] = asm["_TA_CDLMORNINGDOJISTAR"];
var _TA_CDLDOJISTAR = Module["_TA_CDLDOJISTAR"] = asm["_TA_CDLDOJISTAR"];
var _TA_CDLRISEFALL3METHODS = Module["_TA_CDLRISEFALL3METHODS"] = asm["_TA_CDLRISEFALL3METHODS"];
var _TA_CDLTRISTAR = Module["_TA_CDLTRISTAR"] = asm["_TA_CDLTRISTAR"];
var _TA_HT_SINE = Module["_TA_HT_SINE"] = asm["_TA_HT_SINE"];
var _TA_CEIL = Module["_TA_CEIL"] = asm["_TA_CEIL"];
var _TA_ADX = Module["_TA_ADX"] = asm["_TA_ADX"];
var _TA_ADD = Module["_TA_ADD"] = asm["_TA_ADD"];
var _TA_MFI = Module["_TA_MFI"] = asm["_TA_MFI"];
var _TA_HT_DCPERIOD = Module["_TA_HT_DCPERIOD"] = asm["_TA_HT_DCPERIOD"];
var _memset = Module["_memset"] = asm["_memset"];
var _TA_CDLMATHOLD = Module["_TA_CDLMATHOLD"] = asm["_TA_CDLMATHOLD"];
var _TA_MIDPRICE = Module["_TA_MIDPRICE"] = asm["_TA_MIDPRICE"];
var _TA_CDL3INSIDE = Module["_TA_CDL3INSIDE"] = asm["_TA_CDL3INSIDE"];
var _TA_CDLTASUKIGAP = Module["_TA_CDLTASUKIGAP"] = asm["_TA_CDLTASUKIGAP"];
var _TA_MIN = Module["_TA_MIN"] = asm["_TA_MIN"];
var _TA_CDL3LINESTRIKE = Module["_TA_CDL3LINESTRIKE"] = asm["_TA_CDL3LINESTRIKE"];
var _TA_CDL3WHITESOLDIERS = Module["_TA_CDL3WHITESOLDIERS"] = asm["_TA_CDL3WHITESOLDIERS"];
var _TA_AD = Module["_TA_AD"] = asm["_TA_AD"];
var _TA_CDLCONCEALBABYSWALL = Module["_TA_CDLCONCEALBABYSWALL"] = asm["_TA_CDLCONCEALBABYSWALL"];
var _TA_MACDEXT = Module["_TA_MACDEXT"] = asm["_TA_MACDEXT"];
var _TA_MAXINDEX = Module["_TA_MAXINDEX"] = asm["_TA_MAXINDEX"];
var _TA_MEDPRICE = Module["_TA_MEDPRICE"] = asm["_TA_MEDPRICE"];
var _TA_ADOSC = Module["_TA_ADOSC"] = asm["_TA_ADOSC"];
var _TA_CDLLONGLINE = Module["_TA_CDLLONGLINE"] = asm["_TA_CDLLONGLINE"];
var _TA_TRIX = Module["_TA_TRIX"] = asm["_TA_TRIX"];
var _TA_CDL3OUTSIDE = Module["_TA_CDL3OUTSIDE"] = asm["_TA_CDL3OUTSIDE"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _TA_SINH = Module["_TA_SINH"] = asm["_TA_SINH"];
var _TA_BBANDS = Module["_TA_BBANDS"] = asm["_TA_BBANDS"];
var _TA_PVI = Module["_TA_PVI"] = asm["_TA_PVI"];
var _TA_CDLINNECK = Module["_TA_CDLINNECK"] = asm["_TA_CDLINNECK"];
var _TA_DIV = Module["_TA_DIV"] = asm["_TA_DIV"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];

Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };

// Warning: printing of i64 values may be slightly rounded! No deep i64 math used, so precise i64 code not included
var i64Math = null;

// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    applyData(Module['readBinary'](memoryInitializer));
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      applyData(data);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    ensureInitRuntime();

    preMain();

    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371

  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



